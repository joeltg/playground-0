/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/asn1.js/lib/asn1.js":
/*!******************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = exports;

asn1.bignum = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");

asn1.define = __webpack_require__(/*! ./asn1/api */ "./node_modules/asn1.js/lib/asn1/api.js").define;
asn1.base = __webpack_require__(/*! ./asn1/base */ "./node_modules/asn1.js/lib/asn1/base/index.js");
asn1.constants = __webpack_require__(/*! ./asn1/constants */ "./node_modules/asn1.js/lib/asn1/constants/index.js");
asn1.decoders = __webpack_require__(/*! ./asn1/decoders */ "./node_modules/asn1.js/lib/asn1/decoders/index.js");
asn1.encoders = __webpack_require__(/*! ./asn1/encoders */ "./node_modules/asn1.js/lib/asn1/encoders/index.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/api.js":
/*!**********************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/api.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = __webpack_require__(/*! ../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = __webpack_require__(/*! vm */ "./node_modules/vm-browserify/index.js").runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Reporter = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").Reporter;
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var base = exports;

base.Reporter = __webpack_require__(/*! ./reporter */ "./node_modules/asn1.js/lib/asn1/base/reporter.js").Reporter;
base.DecoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").DecoderBuffer;
base.EncoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").EncoderBuffer;
base.Node = __webpack_require__(/*! ./node */ "./node_modules/asn1.js/lib/asn1/base/node.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/node.js":
/*!****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/node.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Reporter = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").Reporter;
var EncoderBuffer = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").EncoderBuffer;
var DecoderBuffer = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").DecoderBuffer;
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/der.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constants = __webpack_require__(/*! ../constants */ "./node_modules/asn1.js/lib/asn1/constants/index.js");

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/constants/der.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var decoders = exports;

decoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");
decoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/decoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer;

var DERDecoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer;

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var encoders = exports;

encoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");
encoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/encoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var DEREncoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};


/***/ }),

/***/ "./node_modules/babel-runtime/core-js/get-iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/get-iterator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/get-iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/get-iterator.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/is-iterable.js":
/*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/is-iterable.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/is-iterable */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/is-iterable.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/create.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/create */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/create.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/define-property.js":
/*!**********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/define-property.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/define-property */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/define-property.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js":
/*!***********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/set-prototype-of.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/object/set-prototype-of */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/set-prototype-of.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/symbol.js":
/*!******************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/symbol/iterator.js":
/*!***************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol/iterator.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(/*! core-js/library/fn/symbol/iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js"), __esModule: true };

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/classCallCheck.js":
/*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/classCallCheck.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/createClass.js":
/*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/createClass.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/babel-runtime/core-js/object/define-property.js");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/defineProperty.js":
/*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/defineProperty.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(/*! ../core-js/object/define-property */ "./node_modules/babel-runtime/core-js/object/define-property.js");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/inherits.js":
/*!********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/inherits.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(/*! ../core-js/object/set-prototype-of */ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js");

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(/*! ../core-js/object/create */ "./node_modules/babel-runtime/core-js/object/create.js");

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js":
/*!*************************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/possibleConstructorReturn.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/slicedToArray.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/slicedToArray.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(/*! ../core-js/is-iterable */ "./node_modules/babel-runtime/core-js/is-iterable.js");

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(/*! ../core-js/get-iterator */ "./node_modules/babel-runtime/core-js/get-iterator.js");

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/typeof.js":
/*!******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/typeof.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(/*! ../core-js/symbol/iterator */ "./node_modules/babel-runtime/core-js/symbol/iterator.js");

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(/*! ../core-js/symbol */ "./node_modules/babel-runtime/core-js/symbol.js");

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/get-iterator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/get-iterator.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.get-iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator.js");


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/is-iterable.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/is-iterable.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../modules/web.dom.iterable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js");
module.exports = __webpack_require__(/*! ../modules/core.is-iterable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.is-iterable.js");


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/create.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/create.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/define-property.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/define-property.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.define-property */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js");
var $Object = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/object/set-prototype-of.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/object/set-prototype-of.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.object.set-prototype-of */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Object.setPrototypeOf;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.symbol */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js");
__webpack_require__(/*! ../../modules/es6.object.to-string */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js");
__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js");
__webpack_require__(/*! ../../modules/es7.symbol.observable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").Symbol;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/fn/symbol/iterator.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ../../modules/es6.string.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js");
__webpack_require__(/*! ../../modules/web.dom.iterable */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js");
module.exports = __webpack_require__(/*! ../../modules/_wks-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js").f('iterator');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.5.7' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dps.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(/*! ./_object-pie */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gpo.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared-key.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ./_shared */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js":
/*!************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-length.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-object.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js");


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ./_shared */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var get = __webpack_require__(/*! ./core.get-iterator-method */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.get-iterator-method.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/core.is-iterable.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/core.is-iterable.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./_classof */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_core.js").isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.create.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(/*! ./_object-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js") });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.define-property.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js").f });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(/*! ./_set-proto */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-proto.js").set });


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.symbol.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_is-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopd.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-pie.js").f = $propertyIsEnumerable;
  __webpack_require__(/*! ./_object-gops */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_object-gops.js").f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.async-iterator.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/es7.symbol.observable.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./_wks-define */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks-define.js")('observable');


/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./es6.array.iterator */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/es6.array.iterator.js");
var global = __webpack_require__(/*! ./_global */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_iterators.js");
var TO_STRING_TAG = __webpack_require__(/*! ./_wks */ "./node_modules/babel-runtime/node_modules/core-js/library/modules/_wks.js")('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),

/***/ "./node_modules/base-x/index.js":
/*!**************************************!*\
  !*** ./node_modules/base-x/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// base-x encoding
// Forked from https://github.com/cryptocoinjs/bs58
// Originally written by Mike Hearn for BitcoinJ
// Copyright (c) 2011 Google Inc
// Ported to JavaScript by Stefan Thomas
// Merged Buffer refactorings from base58-native by Stephen Pair
// Copyright (c) 2013 BitPay Inc

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

module.exports = function base (ALPHABET) {
  var ALPHABET_MAP = {}
  var BASE = ALPHABET.length
  var LEADER = ALPHABET.charAt(0)

  // pre-compute lookup table
  for (var z = 0; z < ALPHABET.length; z++) {
    var x = ALPHABET.charAt(z)

    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')
    ALPHABET_MAP[x] = z
  }

  function encode (source) {
    if (source.length === 0) return ''

    var digits = [0]
    for (var i = 0; i < source.length; ++i) {
      for (var j = 0, carry = source[i]; j < digits.length; ++j) {
        carry += digits[j] << 8
        digits[j] = carry % BASE
        carry = (carry / BASE) | 0
      }

      while (carry > 0) {
        digits.push(carry % BASE)
        carry = (carry / BASE) | 0
      }
    }

    var string = ''

    // deal with leading zeros
    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += LEADER
    // convert digits to a string
    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]

    return string
  }

  function decodeUnsafe (string) {
    if (typeof string !== 'string') throw new TypeError('Expected String')
    if (string.length === 0) return Buffer.allocUnsafe(0)

    var bytes = [0]
    for (var i = 0; i < string.length; i++) {
      var value = ALPHABET_MAP[string[i]]
      if (value === undefined) return

      for (var j = 0, carry = value; j < bytes.length; ++j) {
        carry += bytes[j] * BASE
        bytes[j] = carry & 0xff
        carry >>= 8
      }

      while (carry > 0) {
        bytes.push(carry & 0xff)
        carry >>= 8
      }
    }

    // deal with leading zeros
    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {
      bytes.push(0)
    }

    return Buffer.from(bytes.reverse())
  }

  function decode (string) {
    var buffer = decodeUnsafe(string)
    if (buffer) return buffer

    throw new Error('Non-base' + BASE + ' character')
  }

  return {
    encode: encode,
    decodeUnsafe: decodeUnsafe,
    decode: decode
  }
}


/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/binary-search/index.js":
/*!*********************************************!*\
  !*** ./node_modules/binary-search/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(haystack, needle, comparator, low, high) {
  var mid, cmp;

  if(low === undefined)
    low = 0;

  else {
    low = low|0;
    if(low < 0 || low >= haystack.length)
      throw new RangeError("invalid lower bound");
  }

  if(high === undefined)
    high = haystack.length - 1;

  else {
    high = high|0;
    if(high < low || high >= haystack.length)
      throw new RangeError("invalid upper bound");
  }

  while(low <= high) {
    /* Note that "(low + high) >>> 1" may overflow, and results in a typecast
     * to double (which gives the wrong results). */
    mid = low + (high - low >> 1);
    cmp = +comparator(haystack[mid], needle, mid, haystack);

    /* Too low. */
    if(cmp < 0.0)
      low  = mid + 1;

    /* Too high. */
    else if(cmp > 0.0)
      high = mid - 1;

    /* Key found. */
    else
      return mid;
  }

  /* Key not found. */
  return ~low;
}


/***/ }),

/***/ "./node_modules/blakejs/blake2b.js":
/*!*****************************************!*\
  !*** ./node_modules/blakejs/blake2b.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Blake2B in pure Javascript
// Adapted from the reference implementation in RFC7693
// Ported to Javascript by DC - https://github.com/dcposch

var util = __webpack_require__(/*! ./util */ "./node_modules/blakejs/util.js")

// 64-bit unsigned addition
// Sets v[a,a+1] += v[b,b+1]
// v should be a Uint32Array
function ADD64AA (v, a, b) {
  var o0 = v[a] + v[b]
  var o1 = v[a + 1] + v[b + 1]
  if (o0 >= 0x100000000) {
    o1++
  }
  v[a] = o0
  v[a + 1] = o1
}

// 64-bit unsigned addition
// Sets v[a,a+1] += b
// b0 is the low 32 bits of b, b1 represents the high 32 bits
function ADD64AC (v, a, b0, b1) {
  var o0 = v[a] + b0
  if (b0 < 0) {
    o0 += 0x100000000
  }
  var o1 = v[a + 1] + b1
  if (o0 >= 0x100000000) {
    o1++
  }
  v[a] = o0
  v[a + 1] = o1
}

// Little-endian byte access
function B2B_GET32 (arr, i) {
  return (arr[i] ^
  (arr[i + 1] << 8) ^
  (arr[i + 2] << 16) ^
  (arr[i + 3] << 24))
}

// G Mixing function
// The ROTRs are inlined for speed
function B2B_G (a, b, c, d, ix, iy) {
  var x0 = m[ix]
  var x1 = m[ix + 1]
  var y0 = m[iy]
  var y1 = m[iy + 1]

  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s
  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits

  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits
  var xor0 = v[d] ^ v[a]
  var xor1 = v[d + 1] ^ v[a + 1]
  v[d] = xor1
  v[d + 1] = xor0

  ADD64AA(v, c, d)

  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits
  xor0 = v[b] ^ v[c]
  xor1 = v[b + 1] ^ v[c + 1]
  v[b] = (xor0 >>> 24) ^ (xor1 << 8)
  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)

  ADD64AA(v, a, b)
  ADD64AC(v, a, y0, y1)

  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits
  xor0 = v[d] ^ v[a]
  xor1 = v[d + 1] ^ v[a + 1]
  v[d] = (xor0 >>> 16) ^ (xor1 << 16)
  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)

  ADD64AA(v, c, d)

  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits
  xor0 = v[b] ^ v[c]
  xor1 = v[b + 1] ^ v[c + 1]
  v[b] = (xor1 >>> 31) ^ (xor0 << 1)
  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)
}

// Initialization Vector
var BLAKE2B_IV32 = new Uint32Array([
  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,
  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,
  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,
  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19
])

var SIGMA8 = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,
  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,
  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,
  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,
  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,
  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,
  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,
  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3
]

// These are offsets into a uint64 buffer.
// Multiply them all by 2 to make them offsets into a uint32 buffer,
// because this is Javascript and we don't have uint64s
var SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))

// Compression function. 'last' flag indicates last block.
// Note we're representing 16 uint64s as 32 uint32s
var v = new Uint32Array(32)
var m = new Uint32Array(32)
function blake2bCompress (ctx, last) {
  var i = 0

  // init work variables
  for (i = 0; i < 16; i++) {
    v[i] = ctx.h[i]
    v[i + 16] = BLAKE2B_IV32[i]
  }

  // low 64 bits of offset
  v[24] = v[24] ^ ctx.t
  v[25] = v[25] ^ (ctx.t / 0x100000000)
  // high 64 bits not supported, offset may not be higher than 2**53-1

  // last block flag set ?
  if (last) {
    v[28] = ~v[28]
    v[29] = ~v[29]
  }

  // get little-endian words
  for (i = 0; i < 32; i++) {
    m[i] = B2B_GET32(ctx.b, 4 * i)
  }

  // twelve rounds of mixing
  // uncomment the DebugPrint calls to log the computation
  // and match the RFC sample documentation
  // util.debugPrint('          m[16]', m, 64)
  for (i = 0; i < 12; i++) {
    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)
    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])
    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])
    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])
    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])
    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])
    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])
    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])
    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])
  }
  // util.debugPrint('   (i=12) v[16]', v, 64)

  for (i = 0; i < 16; i++) {
    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]
  }
  // util.debugPrint('h[8]', ctx.h, 64)
}

// Creates a BLAKE2b hashing context
// Requires an output length between 1 and 64 bytes
// Takes an optional Uint8Array key
function blake2bInit (outlen, key) {
  if (outlen === 0 || outlen > 64) {
    throw new Error('Illegal output length, expected 0 < length <= 64')
  }
  if (key && key.length > 64) {
    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')
  }

  // state, 'param block'
  var ctx = {
    b: new Uint8Array(128),
    h: new Uint32Array(16),
    t: 0, // input count
    c: 0, // pointer within buffer
    outlen: outlen // output length in bytes
  }

  // initialize hash state
  for (var i = 0; i < 16; i++) {
    ctx.h[i] = BLAKE2B_IV32[i]
  }
  var keylen = key ? key.length : 0
  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen

  // key the hash, if applicable
  if (key) {
    blake2bUpdate(ctx, key)
    // at the end
    ctx.c = 128
  }

  return ctx
}

// Updates a BLAKE2b streaming hash
// Requires hash context and Uint8Array (byte array)
function blake2bUpdate (ctx, input) {
  for (var i = 0; i < input.length; i++) {
    if (ctx.c === 128) { // buffer full ?
      ctx.t += ctx.c // add counters
      blake2bCompress(ctx, false) // compress (not last)
      ctx.c = 0 // counter to zero
    }
    ctx.b[ctx.c++] = input[i]
  }
}

// Completes a BLAKE2b streaming hash
// Returns a Uint8Array containing the message digest
function blake2bFinal (ctx) {
  ctx.t += ctx.c // mark last block offset

  while (ctx.c < 128) { // fill up with zeros
    ctx.b[ctx.c++] = 0
  }
  blake2bCompress(ctx, true) // final block flag = 1

  // little endian convert and store
  var out = new Uint8Array(ctx.outlen)
  for (var i = 0; i < ctx.outlen; i++) {
    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))
  }
  return out
}

// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array
//
// Returns a n-byte Uint8Array
//
// Parameters:
// - input - the input bytes, as a string, Buffer or Uint8Array
// - key - optional key Uint8Array, up to 64 bytes
// - outlen - optional output length in bytes, default 64
function blake2b (input, key, outlen) {
  // preprocess inputs
  outlen = outlen || 64
  input = util.normalizeInput(input)

  // do the math
  var ctx = blake2bInit(outlen, key)
  blake2bUpdate(ctx, input)
  return blake2bFinal(ctx)
}

// Computes the BLAKE2B hash of a string or byte array
//
// Returns an n-byte hash in hex, all lowercase
//
// Parameters:
// - input - the input bytes, as a string, Buffer, or Uint8Array
// - key - optional key Uint8Array, up to 64 bytes
// - outlen - optional output length in bytes, default 64
function blake2bHex (input, key, outlen) {
  var output = blake2b(input, key, outlen)
  return util.toHex(output)
}

module.exports = {
  blake2b: blake2b,
  blake2bHex: blake2bHex,
  blake2bInit: blake2bInit,
  blake2bUpdate: blake2bUpdate,
  blake2bFinal: blake2bFinal
}


/***/ }),

/***/ "./node_modules/blakejs/blake2s.js":
/*!*****************************************!*\
  !*** ./node_modules/blakejs/blake2s.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// BLAKE2s hash function in pure Javascript
// Adapted from the reference implementation in RFC7693
// Ported to Javascript by DC - https://github.com/dcposch

var util = __webpack_require__(/*! ./util */ "./node_modules/blakejs/util.js")

// Little-endian byte access.
// Expects a Uint8Array and an index
// Returns the little-endian uint32 at v[i..i+3]
function B2S_GET32 (v, i) {
  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)
}

// Mixing function G.
function B2S_G (a, b, c, d, x, y) {
  v[a] = v[a] + v[b] + x
  v[d] = ROTR32(v[d] ^ v[a], 16)
  v[c] = v[c] + v[d]
  v[b] = ROTR32(v[b] ^ v[c], 12)
  v[a] = v[a] + v[b] + y
  v[d] = ROTR32(v[d] ^ v[a], 8)
  v[c] = v[c] + v[d]
  v[b] = ROTR32(v[b] ^ v[c], 7)
}

// 32-bit right rotation
// x should be a uint32
// y must be between 1 and 31, inclusive
function ROTR32 (x, y) {
  return (x >>> y) ^ (x << (32 - y))
}

// Initialization Vector.
var BLAKE2S_IV = new Uint32Array([
  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,
  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])

var SIGMA = new Uint8Array([
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,
  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,
  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,
  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,
  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,
  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,
  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,
  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])

// Compression function. "last" flag indicates last block
var v = new Uint32Array(16)
var m = new Uint32Array(16)
function blake2sCompress (ctx, last) {
  var i = 0
  for (i = 0; i < 8; i++) { // init work variables
    v[i] = ctx.h[i]
    v[i + 8] = BLAKE2S_IV[i]
  }

  v[12] ^= ctx.t // low 32 bits of offset
  v[13] ^= (ctx.t / 0x100000000) // high 32 bits
  if (last) { // last block flag set ?
    v[14] = ~v[14]
  }

  for (i = 0; i < 16; i++) { // get little-endian words
    m[i] = B2S_GET32(ctx.b, 4 * i)
  }

  // ten rounds of mixing
  // uncomment the DebugPrint calls to log the computation
  // and match the RFC sample documentation
  // util.debugPrint('          m[16]', m, 32)
  for (i = 0; i < 10; i++) {
    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)
    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])
    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])
    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])
    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])
    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])
    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])
    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])
    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])
  }
  // util.debugPrint('   (i=10) v[16]', v, 32)

  for (i = 0; i < 8; i++) {
    ctx.h[i] ^= v[i] ^ v[i + 8]
  }
  // util.debugPrint('h[8]', ctx.h, 32)
}

// Creates a BLAKE2s hashing context
// Requires an output length between 1 and 32 bytes
// Takes an optional Uint8Array key
function blake2sInit (outlen, key) {
  if (!(outlen > 0 && outlen <= 32)) {
    throw new Error('Incorrect output length, should be in [1, 32]')
  }
  var keylen = key ? key.length : 0
  if (key && !(keylen > 0 && keylen <= 32)) {
    throw new Error('Incorrect key length, should be in [1, 32]')
  }

  var ctx = {
    h: new Uint32Array(BLAKE2S_IV), // hash state
    b: new Uint32Array(64), // input block
    c: 0, // pointer within block
    t: 0, // input count
    outlen: outlen // output length in bytes
  }
  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen

  if (keylen > 0) {
    blake2sUpdate(ctx, key)
    ctx.c = 64 // at the end
  }

  return ctx
}

// Updates a BLAKE2s streaming hash
// Requires hash context and Uint8Array (byte array)
function blake2sUpdate (ctx, input) {
  for (var i = 0; i < input.length; i++) {
    if (ctx.c === 64) { // buffer full ?
      ctx.t += ctx.c // add counters
      blake2sCompress(ctx, false) // compress (not last)
      ctx.c = 0 // counter to zero
    }
    ctx.b[ctx.c++] = input[i]
  }
}

// Completes a BLAKE2s streaming hash
// Returns a Uint8Array containing the message digest
function blake2sFinal (ctx) {
  ctx.t += ctx.c // mark last block offset
  while (ctx.c < 64) { // fill up with zeros
    ctx.b[ctx.c++] = 0
  }
  blake2sCompress(ctx, true) // final block flag = 1

  // little endian convert and store
  var out = new Uint8Array(ctx.outlen)
  for (var i = 0; i < ctx.outlen; i++) {
    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF
  }
  return out
}

// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array
//
// Returns a n-byte Uint8Array
//
// Parameters:
// - input - the input bytes, as a string, Buffer, or Uint8Array
// - key - optional key Uint8Array, up to 32 bytes
// - outlen - optional output length in bytes, default 64
function blake2s (input, key, outlen) {
  // preprocess inputs
  outlen = outlen || 32
  input = util.normalizeInput(input)

  // do the math
  var ctx = blake2sInit(outlen, key)
  blake2sUpdate(ctx, input)
  return blake2sFinal(ctx)
}

// Computes the BLAKE2S hash of a string or byte array
//
// Returns an n-byte hash in hex, all lowercase
//
// Parameters:
// - input - the input bytes, as a string, Buffer, or Uint8Array
// - key - optional key Uint8Array, up to 32 bytes
// - outlen - optional output length in bytes, default 64
function blake2sHex (input, key, outlen) {
  var output = blake2s(input, key, outlen)
  return util.toHex(output)
}

module.exports = {
  blake2s: blake2s,
  blake2sHex: blake2sHex,
  blake2sInit: blake2sInit,
  blake2sUpdate: blake2sUpdate,
  blake2sFinal: blake2sFinal
}


/***/ }),

/***/ "./node_modules/blakejs/index.js":
/*!***************************************!*\
  !*** ./node_modules/blakejs/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var b2b = __webpack_require__(/*! ./blake2b */ "./node_modules/blakejs/blake2b.js")
var b2s = __webpack_require__(/*! ./blake2s */ "./node_modules/blakejs/blake2s.js")

module.exports = {
  blake2b: b2b.blake2b,
  blake2bHex: b2b.blake2bHex,
  blake2bInit: b2b.blake2bInit,
  blake2bUpdate: b2b.blake2bUpdate,
  blake2bFinal: b2b.blake2bFinal,
  blake2s: b2s.blake2s,
  blake2sHex: b2s.blake2sHex,
  blake2sInit: b2s.blake2sInit,
  blake2sUpdate: b2s.blake2sUpdate,
  blake2sFinal: b2s.blake2sFinal
}


/***/ }),

/***/ "./node_modules/blakejs/util.js":
/*!**************************************!*\
  !*** ./node_modules/blakejs/util.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'

// For convenience, let people hash a string, not just a Uint8Array
function normalizeInput (input) {
  var ret
  if (input instanceof Uint8Array) {
    ret = input
  } else if (input instanceof Buffer) {
    ret = new Uint8Array(input)
  } else if (typeof (input) === 'string') {
    ret = new Uint8Array(Buffer.from(input, 'utf8'))
  } else {
    throw new Error(ERROR_MSG_INPUT)
  }
  return ret
}

// Converts a Uint8Array to a hexadecimal string
// For example, toHex([255, 0, 255]) returns "ff00ff"
function toHex (bytes) {
  return Array.prototype.map.call(bytes, function (n) {
    return (n < 16 ? '0' : '') + n.toString(16)
  }).join('')
}

// Converts any value in [0...2^32-1] to an 8-character hex string
function uint32ToHex (val) {
  return (0x100000000 + val).toString(16).substring(1)
}

// For debugging: prints out hash state in the same format as the RFC
// sample computation exactly, so that you can diff
function debugPrint (label, arr, size) {
  var msg = '\n' + label + ' = '
  for (var i = 0; i < arr.length; i += 2) {
    if (size === 32) {
      msg += uint32ToHex(arr[i]).toUpperCase()
      msg += ' '
      msg += uint32ToHex(arr[i + 1]).toUpperCase()
    } else if (size === 64) {
      msg += uint32ToHex(arr[i + 1]).toUpperCase()
      msg += uint32ToHex(arr[i]).toUpperCase()
    } else throw new Error('Invalid size ' + size)
    if (i % 6 === 4) {
      msg += '\n' + new Array(label.length + 4).join(' ')
    } else if (i < arr.length - 2) {
      msg += ' '
    }
  }
  console.log(msg)
}

// For performance testing: generates N bytes of input, hashes M times
// Measures and prints MB/second hash performance each time
function testSpeed (hashFn, N, M) {
  var startMs = new Date().getTime()

  var input = new Uint8Array(N)
  for (var i = 0; i < N; i++) {
    input[i] = i % 256
  }
  var genMs = new Date().getTime()
  console.log('Generated random input in ' + (genMs - startMs) + 'ms')
  startMs = genMs

  for (i = 0; i < M; i++) {
    var hashHex = hashFn(input)
    var hashMs = new Date().getTime()
    var ms = hashMs - startMs
    startMs = hashMs
    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')
    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')
  }
}

module.exports = {
  normalizeInput: normalizeInput,
  toHex: toHex,
  debugPrint: debugPrint,
  testSpeed: testSpeed
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = __webpack_require__(/*! buffer */ 2).Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/brorand/index.js":
/*!***************************************!*\
  !*** ./node_modules/brorand/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(/*! crypto */ 3);
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),

/***/ "./node_modules/browserify-aes/aes.js":
/*!********************************************!*\
  !*** ./node_modules/browserify-aes/aes.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES


/***/ }),

/***/ "./node_modules/browserify-aes/authCipher.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/authCipher.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var GHASH = __webpack_require__(/*! ./ghash */ "./node_modules/browserify-aes/ghash.js")
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var incr32 = __webpack_require__(/*! ./incr32 */ "./node_modules/browserify-aes/incr32.js")

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-aes/browser.js":
/*!************************************************!*\
  !*** ./node_modules/browserify-aes/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ciphers = __webpack_require__(/*! ./encrypter */ "./node_modules/browserify-aes/encrypter.js")
var deciphers = __webpack_require__(/*! ./decrypter */ "./node_modules/browserify-aes/decrypter.js")
var modes = __webpack_require__(/*! ./modes/list.json */ "./node_modules/browserify-aes/modes/list.json")

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-aes/decrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/decrypter.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv


/***/ }),

/***/ "./node_modules/browserify-aes/encrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/encrypter.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher


/***/ }),

/***/ "./node_modules/browserify-aes/ghash.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-aes/ghash.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH


/***/ }),

/***/ "./node_modules/browserify-aes/incr32.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-aes/incr32.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cbc.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cbc.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb1.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb1.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb8.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb8.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ctr.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ctr.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var incr32 = __webpack_require__(/*! ../incr32 */ "./node_modules/browserify-aes/incr32.js")

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ecb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ecb.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var modeModules = {
  ECB: __webpack_require__(/*! ./ecb */ "./node_modules/browserify-aes/modes/ecb.js"),
  CBC: __webpack_require__(/*! ./cbc */ "./node_modules/browserify-aes/modes/cbc.js"),
  CFB: __webpack_require__(/*! ./cfb */ "./node_modules/browserify-aes/modes/cfb.js"),
  CFB8: __webpack_require__(/*! ./cfb8 */ "./node_modules/browserify-aes/modes/cfb8.js"),
  CFB1: __webpack_require__(/*! ./cfb1 */ "./node_modules/browserify-aes/modes/cfb1.js"),
  OFB: __webpack_require__(/*! ./ofb */ "./node_modules/browserify-aes/modes/ofb.js"),
  CTR: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js"),
  GCM: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js")
}

var modes = __webpack_require__(/*! ./list.json */ "./node_modules/browserify-aes/modes/list.json")

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes


/***/ }),

/***/ "./node_modules/browserify-aes/modes/list.json":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/list.json ***!
  \*****************************************************/
/*! exports provided: aes-128-ecb, aes-192-ecb, aes-256-ecb, aes-128-cbc, aes-192-cbc, aes-256-cbc, aes128, aes192, aes256, aes-128-cfb, aes-192-cfb, aes-256-cfb, aes-128-cfb8, aes-192-cfb8, aes-256-cfb8, aes-128-cfb1, aes-192-cfb1, aes-256-cfb1, aes-128-ofb, aes-192-ofb, aes-256-ofb, aes-128-ctr, aes-192-ctr, aes-256-ctr, aes-128-gcm, aes-192-gcm, aes-256-gcm, default */
/***/ (function(module) {

module.exports = {"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}};

/***/ }),

/***/ "./node_modules/browserify-aes/modes/ofb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ofb.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-aes/streamCipher.js":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/streamCipher.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-cipher/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-cipher/browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DES = __webpack_require__(/*! browserify-des */ "./node_modules/browserify-des/index.js")
var aes = __webpack_require__(/*! browserify-aes/browser */ "./node_modules/browserify-aes/browser.js")
var aesModes = __webpack_require__(/*! browserify-aes/modes */ "./node_modules/browserify-aes/modes/index.js")
var desModes = __webpack_require__(/*! browserify-des/modes */ "./node_modules/browserify-des/modes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-des/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var CipherBase = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var des = __webpack_require__(/*! des.js */ "./node_modules/des.js/lib/des.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-des/modes.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/modes.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}


/***/ }),

/***/ "./node_modules/browserify-rsa/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-rsa/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-sign/algos.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-sign/algos.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./browser/algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json")


/***/ }),

/***/ "./node_modules/browserify-sign/browser/algorithms.json":
/*!**************************************************************!*\
  !*** ./node_modules/browserify-sign/browser/algorithms.json ***!
  \**************************************************************/
/*! exports provided: sha224WithRSAEncryption, RSA-SHA224, sha256WithRSAEncryption, RSA-SHA256, sha384WithRSAEncryption, RSA-SHA384, sha512WithRSAEncryption, RSA-SHA512, RSA-SHA1, ecdsa-with-SHA1, sha256, sha224, sha384, sha512, DSA-SHA, DSA-SHA1, DSA, DSA-WITH-SHA224, DSA-SHA224, DSA-WITH-SHA256, DSA-SHA256, DSA-WITH-SHA384, DSA-SHA384, DSA-WITH-SHA512, DSA-SHA512, DSA-RIPEMD160, ripemd160WithRSA, RSA-RIPEMD160, md5WithRSAEncryption, RSA-MD5, default */
/***/ (function(module) {

module.exports = {"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}};

/***/ }),

/***/ "./node_modules/browserify-sign/browser/curves.json":
/*!**********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/curves.json ***!
  \**********************************************************/
/*! exports provided: 1.3.132.0.10, 1.3.132.0.33, 1.2.840.10045.3.1.1, 1.2.840.10045.3.1.7, 1.3.132.0.34, 1.3.132.0.35, default */
/***/ (function(module) {

module.exports = {"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"};

/***/ }),

/***/ "./node_modules/browserify-sign/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var stream = __webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var sign = __webpack_require__(/*! ./sign */ "./node_modules/browserify-sign/browser/sign.js")
var verify = __webpack_require__(/*! ./verify */ "./node_modules/browserify-sign/browser/verify.js")

var algorithms = __webpack_require__(/*! ./algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json")
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-sign/browser/sign.js":
/*!******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/sign.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json")

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-sign/browser/verify.js":
/*!********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/verify.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json")

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/bs58/index.js":
/*!************************************!*\
  !*** ./node_modules/bs58/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var basex = __webpack_require__(/*! base-x */ "./node_modules/base-x/index.js")
var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'

module.exports = basex(ALPHABET)


/***/ }),

/***/ "./node_modules/buffer-xor/index.js":
/*!******************************************!*\
  !*** ./node_modules/buffer-xor/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/cipher-base/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cipher-base/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js").Transform
var StringDecoder = __webpack_require__(/*! string_decoder */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase


/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/create-ecdh/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-ecdh/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var elliptic = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/create-hash/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hash/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}


/***/ }),

/***/ "./node_modules/create-hash/md5.js":
/*!*****************************************!*\
  !*** ./node_modules/create-hash/md5.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}


/***/ }),

/***/ "./node_modules/create-hmac/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hmac/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Legacy = __webpack_require__(/*! ./legacy */ "./node_modules/create-hmac/legacy.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")

var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}


/***/ }),

/***/ "./node_modules/create-hmac/legacy.js":
/*!********************************************!*\
  !*** ./node_modules/create-hmac/legacy.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac


/***/ }),

/***/ "./node_modules/crypto-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
exports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
exports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js")

var algos = __webpack_require__(/*! browserify-sign/algos */ "./node_modules/browserify-sign/algos.js")
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js")
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = __webpack_require__(/*! browserify-cipher */ "./node_modules/browserify-cipher/browser.js")

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = __webpack_require__(/*! diffie-hellman */ "./node_modules/diffie-hellman/browser.js")

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = __webpack_require__(/*! browserify-sign */ "./node_modules/browserify-sign/browser/index.js")

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = __webpack_require__(/*! create-ecdh */ "./node_modules/create-ecdh/browser.js")

var publicEncrypt = __webpack_require__(/*! public-encrypt */ "./node_modules/public-encrypt/browser.js")

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = __webpack_require__(/*! randomfill */ "./node_modules/randomfill/browser.js")

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}


/***/ }),

/***/ "./node_modules/des.js/lib/des.js":
/*!****************************************!*\
  !*** ./node_modules/des.js/lib/des.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.utils = __webpack_require__(/*! ./des/utils */ "./node_modules/des.js/lib/des/utils.js");
exports.Cipher = __webpack_require__(/*! ./des/cipher */ "./node_modules/des.js/lib/des/cipher.js");
exports.DES = __webpack_require__(/*! ./des/des */ "./node_modules/des.js/lib/des/des.js");
exports.CBC = __webpack_require__(/*! ./des/cbc */ "./node_modules/des.js/lib/des/cbc.js");
exports.EDE = __webpack_require__(/*! ./des/ede */ "./node_modules/des.js/lib/des/ede.js");


/***/ }),

/***/ "./node_modules/des.js/lib/des/cbc.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/cbc.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/cipher.js":
/*!***********************************************!*\
  !*** ./node_modules/des.js/lib/des/cipher.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/des.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/des.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var des = __webpack_require__(/*! ../des */ "./node_modules/des.js/lib/des.js");
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/ede.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/ede.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var des = __webpack_require__(/*! ../des */ "./node_modules/des.js/lib/des.js");
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;


/***/ }),

/***/ "./node_modules/des.js/lib/des/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/des.js/lib/des/utils.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};


/***/ }),

/***/ "./node_modules/detect-node/index.js":
/*!*******************************************!*\
  !*** ./node_modules/detect-node/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {module.exports = false;

// Only Node.JS has a process variable that is of [[Class]] process
try {
 module.exports = Object.prototype.toString.call(global.process) === '[object process]' 
} catch(e) {}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/diffie-hellman/browser.js":
/*!************************************************!*\
  !*** ./node_modules/diffie-hellman/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js")
var primes = __webpack_require__(/*! ./lib/primes.json */ "./node_modules/diffie-hellman/lib/primes.json")

var DH = __webpack_require__(/*! ./lib/dh */ "./node_modules/diffie-hellman/lib/dh.js")

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/dh.js":
/*!***********************************************!*\
  !*** ./node_modules/diffie-hellman/lib/dh.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = __webpack_require__(/*! ./generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/generatePrime.js":
/*!**********************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/generatePrime.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var TWENTYFOUR = new BN(24);
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}


/***/ }),

/***/ "./node_modules/diffie-hellman/lib/primes.json":
/*!*****************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/primes.json ***!
  \*****************************************************/
/*! exports provided: modp1, modp2, modp5, modp14, modp15, modp16, modp17, modp18, default */
/***/ (function(module) {

module.exports = {"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}};

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic.js":
/*!***********************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = exports;

elliptic.version = __webpack_require__(/*! ../package.json */ "./node_modules/elliptic/package.json").version;
elliptic.utils = __webpack_require__(/*! ./elliptic/utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
elliptic.rand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");
elliptic.curve = __webpack_require__(/*! ./elliptic/curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
elliptic.curves = __webpack_require__(/*! ./elliptic/curves */ "./node_modules/elliptic/lib/elliptic/curves.js");

// Protocols
elliptic.ec = __webpack_require__(/*! ./elliptic/ec */ "./node_modules/elliptic/lib/elliptic/ec/index.js");
elliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ "./node_modules/elliptic/lib/elliptic/eddsa/index.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!*************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = exports;

curve.base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");
curve.short = __webpack_require__(/*! ./short */ "./node_modules/elliptic/lib/elliptic/curve/short.js");
curve.mont = __webpack_require__(/*! ./mont */ "./node_modules/elliptic/lib/elliptic/curve/mont.js");
curve.edwards = __webpack_require__(/*! ./edwards */ "./node_modules/elliptic/lib/elliptic/curve/edwards.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = curve.base;

var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/short.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curves.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curves.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curves = exports;

var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var elliptic = __webpack_require__(/*! ../elliptic */ "./node_modules/elliptic/lib/elliptic.js");

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js");
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/index.js":
/*!********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var HmacDRBG = __webpack_require__(/*! hmac-drbg */ "./node_modules/hmac-drbg/lib/hmac-drbg.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/ec/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/ec/signature.js");

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/key.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");

var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/eddsa/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js");

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!*********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!***************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!*********************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/utils.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var minAssert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),

/***/ "./node_modules/elliptic/package.json":
/*!********************************************!*\
  !*** ./node_modules/elliptic/package.json ***!
  \********************************************/
/*! exports provided: _args, _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, author, bugs, dependencies, description, devDependencies, files, homepage, keywords, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

module.exports = {"_args":[["elliptic@6.4.0","/Users/joel/Documents/Projects/playground-0"]],"_from":"elliptic@6.4.0","_id":"elliptic@6.4.0","_inBundle":false,"_integrity":"sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"elliptic@6.4.0","name":"elliptic","escapedName":"elliptic","rawSpec":"6.4.0","saveSpec":null,"fetchSpec":"6.4.0"},"_requiredBy":["/browserify-sign","/create-ecdh"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz","_spec":"6.4.0","_where":"/Users/joel/Documents/Projects/playground-0","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},"description":"EC cryptography","devDependencies":{"brfs":"^1.4.3","coveralls":"^2.11.3","grunt":"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2","istanbul":"^0.4.2","jscs":"^2.9.0","jshint":"^2.6.0","mocha":"^2.1.0"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.4.0"};

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),

/***/ "./node_modules/evp_bytestokey/index.js":
/*!**********************************************!*\
  !*** ./node_modules/evp_bytestokey/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey


/***/ }),

/***/ "./node_modules/fbjs/lib/ExecutionEnvironment.js":
/*!*******************************************************!*\
  !*** ./node_modules/fbjs/lib/ExecutionEnvironment.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),

/***/ "./node_modules/fbjs/lib/camelize.js":
/*!*******************************************!*\
  !*** ./node_modules/fbjs/lib/camelize.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),

/***/ "./node_modules/fbjs/lib/camelizeStyleName.js":
/*!****************************************************!*\
  !*** ./node_modules/fbjs/lib/camelizeStyleName.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var camelize = __webpack_require__(/*! ./camelize */ "./node_modules/fbjs/lib/camelize.js");

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),

/***/ "./node_modules/fbjs/lib/containsNode.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/containsNode.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = __webpack_require__(/*! ./isTextNode */ "./node_modules/fbjs/lib/isTextNode.js");

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),

/***/ "./node_modules/fbjs/lib/emptyFunction.js":
/*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),

/***/ "./node_modules/fbjs/lib/emptyObject.js":
/*!**********************************************!*\
  !*** ./node_modules/fbjs/lib/emptyObject.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyObject = {};

if (true) {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

/***/ }),

/***/ "./node_modules/fbjs/lib/getActiveElement.js":
/*!***************************************************!*\
  !*** ./node_modules/fbjs/lib/getActiveElement.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),

/***/ "./node_modules/fbjs/lib/hyphenate.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenate.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),

/***/ "./node_modules/fbjs/lib/hyphenateStyleName.js":
/*!*****************************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenateStyleName.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(/*! ./hyphenate */ "./node_modules/fbjs/lib/hyphenate.js");

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),

/***/ "./node_modules/fbjs/lib/invariant.js":
/*!********************************************!*\
  !*** ./node_modules/fbjs/lib/invariant.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (true) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),

/***/ "./node_modules/fbjs/lib/isNode.js":
/*!*****************************************!*\
  !*** ./node_modules/fbjs/lib/isNode.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),

/***/ "./node_modules/fbjs/lib/isTextNode.js":
/*!*********************************************!*\
  !*** ./node_modules/fbjs/lib/isTextNode.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = __webpack_require__(/*! ./isNode */ "./node_modules/fbjs/lib/isNode.js");

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),

/***/ "./node_modules/fbjs/lib/shallowEqual.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/shallowEqual.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),

/***/ "./node_modules/fbjs/lib/warning.js":
/*!******************************************!*\
  !*** ./node_modules/fbjs/lib/warning.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyFunction = __webpack_require__(/*! ./emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js");

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (true) {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;

/***/ }),

/***/ "./node_modules/fuse.js/dist/fuse.js":
/*!*******************************************!*\
  !*** ./node_modules/fuse.js/dist/fuse.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * Fuse.js v3.2.1 - Lightweight fuzzy-search (http://fusejs.io)
 * 
 * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)
 * All Rights Reserved. Apache Software License 2.0
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (obj) {
  return !Array.isArray ? Object.prototype.toString.call(obj) === '[object Array]' : Array.isArray(obj);
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var bitapRegexSearch = __webpack_require__(5);
var bitapSearch = __webpack_require__(7);
var patternAlphabet = __webpack_require__(4);

var Bitap = function () {
  function Bitap(pattern, _ref) {
    var _ref$location = _ref.location,
        location = _ref$location === undefined ? 0 : _ref$location,
        _ref$distance = _ref.distance,
        distance = _ref$distance === undefined ? 100 : _ref$distance,
        _ref$threshold = _ref.threshold,
        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,
        _ref$maxPatternLength = _ref.maxPatternLength,
        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,
        _ref$isCaseSensitive = _ref.isCaseSensitive,
        isCaseSensitive = _ref$isCaseSensitive === undefined ? false : _ref$isCaseSensitive,
        _ref$tokenSeparator = _ref.tokenSeparator,
        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,
        _ref$findAllMatches = _ref.findAllMatches,
        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,
        _ref$minMatchCharLeng = _ref.minMatchCharLength,
        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;

    _classCallCheck(this, Bitap);

    this.options = {
      location: location,
      distance: distance,
      threshold: threshold,
      maxPatternLength: maxPatternLength,
      isCaseSensitive: isCaseSensitive,
      tokenSeparator: tokenSeparator,
      findAllMatches: findAllMatches,
      minMatchCharLength: minMatchCharLength
    };

    this.pattern = this.options.isCaseSensitive ? pattern : pattern.toLowerCase();

    if (this.pattern.length <= maxPatternLength) {
      this.patternAlphabet = patternAlphabet(this.pattern);
    }
  }

  _createClass(Bitap, [{
    key: 'search',
    value: function search(text) {
      if (!this.options.isCaseSensitive) {
        text = text.toLowerCase();
      }

      // Exact match
      if (this.pattern === text) {
        return {
          isMatch: true,
          score: 0,
          matchedIndices: [[0, text.length - 1]]
        };
      }

      // When pattern length is greater than the machine word length, just do a a regex comparison
      var _options = this.options,
          maxPatternLength = _options.maxPatternLength,
          tokenSeparator = _options.tokenSeparator;

      if (this.pattern.length > maxPatternLength) {
        return bitapRegexSearch(text, this.pattern, tokenSeparator);
      }

      // Otherwise, use Bitap algorithm
      var _options2 = this.options,
          location = _options2.location,
          distance = _options2.distance,
          threshold = _options2.threshold,
          findAllMatches = _options2.findAllMatches,
          minMatchCharLength = _options2.minMatchCharLength;

      return bitapSearch(text, this.pattern, this.patternAlphabet, {
        location: location,
        distance: distance,
        threshold: threshold,
        findAllMatches: findAllMatches,
        minMatchCharLength: minMatchCharLength
      });
    }
  }]);

  return Bitap;
}();

// let x = new Bitap("od mn war", {})
// let result = x.search("Old Man's War")
// console.log(result)

module.exports = Bitap;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isArray = __webpack_require__(0);

var deepValue = function deepValue(obj, path, list) {
  if (!path) {
    // If there's no path left, we've gotten to the object we care about.
    list.push(obj);
  } else {
    var dotIndex = path.indexOf('.');
    var firstSegment = path;
    var remaining = null;

    if (dotIndex !== -1) {
      firstSegment = path.slice(0, dotIndex);
      remaining = path.slice(dotIndex + 1);
    }

    var value = obj[firstSegment];

    if (value !== null && value !== undefined) {
      if (!remaining && (typeof value === 'string' || typeof value === 'number')) {
        list.push(value.toString());
      } else if (isArray(value)) {
        // Search each item in the array.
        for (var i = 0, len = value.length; i < len; i += 1) {
          deepValue(value[i], remaining, list);
        }
      } else if (remaining) {
        // An object. Recurse further.
        deepValue(value, remaining, list);
      }
    }
  }

  return list;
};

module.exports = function (obj, path) {
  return deepValue(obj, path, []);
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function () {
  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

  var matchedIndices = [];
  var start = -1;
  var end = -1;
  var i = 0;

  for (var len = matchmask.length; i < len; i += 1) {
    var match = matchmask[i];
    if (match && start === -1) {
      start = i;
    } else if (!match && start !== -1) {
      end = i - 1;
      if (end - start + 1 >= minMatchCharLength) {
        matchedIndices.push([start, end]);
      }
      start = -1;
    }
  }

  // (i-1 - start) + 1 => i - start
  if (matchmask[i - 1] && i - start >= minMatchCharLength) {
    matchedIndices.push([start, i - 1]);
  }

  return matchedIndices;
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (pattern) {
  var mask = {};
  var len = pattern.length;

  for (var i = 0; i < len; i += 1) {
    mask[pattern.charAt(i)] = 0;
  }

  for (var _i = 0; _i < len; _i += 1) {
    mask[pattern.charAt(_i)] |= 1 << len - _i - 1;
  }

  return mask;
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var SPECIAL_CHARS_REGEX = /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g;

module.exports = function (text, pattern) {
  var tokenSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : / +/g;

  var regex = new RegExp(pattern.replace(SPECIAL_CHARS_REGEX, '\\$&').replace(tokenSeparator, '|'));
  var matches = text.match(regex);
  var isMatch = !!matches;
  var matchedIndices = [];

  if (isMatch) {
    for (var i = 0, matchesLen = matches.length; i < matchesLen; i += 1) {
      var match = matches[i];
      matchedIndices.push([text.indexOf(match), match.length - 1]);
    }
  }

  return {
    // TODO: revisit this score
    score: isMatch ? 0.5 : 1,
    isMatch: isMatch,
    matchedIndices: matchedIndices
  };
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (pattern, _ref) {
  var _ref$errors = _ref.errors,
      errors = _ref$errors === undefined ? 0 : _ref$errors,
      _ref$currentLocation = _ref.currentLocation,
      currentLocation = _ref$currentLocation === undefined ? 0 : _ref$currentLocation,
      _ref$expectedLocation = _ref.expectedLocation,
      expectedLocation = _ref$expectedLocation === undefined ? 0 : _ref$expectedLocation,
      _ref$distance = _ref.distance,
      distance = _ref$distance === undefined ? 100 : _ref$distance;

  var accuracy = errors / pattern.length;
  var proximity = Math.abs(expectedLocation - currentLocation);

  if (!distance) {
    // Dodge divide by zero error.
    return proximity ? 1.0 : accuracy;
  }

  return accuracy + proximity / distance;
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bitapScore = __webpack_require__(6);
var matchedIndices = __webpack_require__(3);

module.exports = function (text, pattern, patternAlphabet, _ref) {
  var _ref$location = _ref.location,
      location = _ref$location === undefined ? 0 : _ref$location,
      _ref$distance = _ref.distance,
      distance = _ref$distance === undefined ? 100 : _ref$distance,
      _ref$threshold = _ref.threshold,
      threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,
      _ref$findAllMatches = _ref.findAllMatches,
      findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,
      _ref$minMatchCharLeng = _ref.minMatchCharLength,
      minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;

  var expectedLocation = location;
  // Set starting location at beginning text and initialize the alphabet.
  var textLen = text.length;
  // Highest score beyond which we give up.
  var currentThreshold = threshold;
  // Is there a nearby exact match? (speedup)
  var bestLocation = text.indexOf(pattern, expectedLocation);

  var patternLen = pattern.length;

  // a mask of the matches
  var matchMask = [];
  for (var i = 0; i < textLen; i += 1) {
    matchMask[i] = 0;
  }

  if (bestLocation !== -1) {
    var score = bitapScore(pattern, {
      errors: 0,
      currentLocation: bestLocation,
      expectedLocation: expectedLocation,
      distance: distance
    });
    currentThreshold = Math.min(score, currentThreshold);

    // What about in the other direction? (speed up)
    bestLocation = text.lastIndexOf(pattern, expectedLocation + patternLen);

    if (bestLocation !== -1) {
      var _score = bitapScore(pattern, {
        errors: 0,
        currentLocation: bestLocation,
        expectedLocation: expectedLocation,
        distance: distance
      });
      currentThreshold = Math.min(_score, currentThreshold);
    }
  }

  // Reset the best location
  bestLocation = -1;

  var lastBitArr = [];
  var finalScore = 1;
  var binMax = patternLen + textLen;

  var mask = 1 << patternLen - 1;

  for (var _i = 0; _i < patternLen; _i += 1) {
    // Scan for the best match; each iteration allows for one more error.
    // Run a binary search to determine how far from the match location we can stray
    // at this error level.
    var binMin = 0;
    var binMid = binMax;

    while (binMin < binMid) {
      var _score3 = bitapScore(pattern, {
        errors: _i,
        currentLocation: expectedLocation + binMid,
        expectedLocation: expectedLocation,
        distance: distance
      });

      if (_score3 <= currentThreshold) {
        binMin = binMid;
      } else {
        binMax = binMid;
      }

      binMid = Math.floor((binMax - binMin) / 2 + binMin);
    }

    // Use the result from this iteration as the maximum for the next.
    binMax = binMid;

    var start = Math.max(1, expectedLocation - binMid + 1);
    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;

    // Initialize the bit array
    var bitArr = Array(finish + 2);

    bitArr[finish + 1] = (1 << _i) - 1;

    for (var j = finish; j >= start; j -= 1) {
      var currentLocation = j - 1;
      var charMatch = patternAlphabet[text.charAt(currentLocation)];

      if (charMatch) {
        matchMask[currentLocation] = 1;
      }

      // First pass: exact match
      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;

      // Subsequent passes: fuzzy match
      if (_i !== 0) {
        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];
      }

      if (bitArr[j] & mask) {
        finalScore = bitapScore(pattern, {
          errors: _i,
          currentLocation: currentLocation,
          expectedLocation: expectedLocation,
          distance: distance
        });

        // This match will almost certainly be better than any existing match.
        // But check anyway.
        if (finalScore <= currentThreshold) {
          // Indeed it is
          currentThreshold = finalScore;
          bestLocation = currentLocation;

          // Already passed `loc`, downhill from here on in.
          if (bestLocation <= expectedLocation) {
            break;
          }

          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.
          start = Math.max(1, 2 * expectedLocation - bestLocation);
        }
      }
    }

    // No hope for a (better) match at greater error levels.
    var _score2 = bitapScore(pattern, {
      errors: _i + 1,
      currentLocation: expectedLocation,
      expectedLocation: expectedLocation,
      distance: distance
    });

    // console.log('score', score, finalScore)

    if (_score2 > currentThreshold) {
      break;
    }

    lastBitArr = bitArr;
  }

  // console.log('FINAL SCORE', finalScore)

  // Count exact matches (those with a score of 0) to be "almost" exact
  return {
    isMatch: bestLocation >= 0,
    score: finalScore === 0 ? 0.001 : finalScore,
    matchedIndices: matchedIndices(matchMask, minMatchCharLength)
  };
};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Bitap = __webpack_require__(1);
var deepValue = __webpack_require__(2);
var isArray = __webpack_require__(0);

var Fuse = function () {
  function Fuse(list, _ref) {
    var _ref$location = _ref.location,
        location = _ref$location === undefined ? 0 : _ref$location,
        _ref$distance = _ref.distance,
        distance = _ref$distance === undefined ? 100 : _ref$distance,
        _ref$threshold = _ref.threshold,
        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,
        _ref$maxPatternLength = _ref.maxPatternLength,
        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,
        _ref$caseSensitive = _ref.caseSensitive,
        caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,
        _ref$tokenSeparator = _ref.tokenSeparator,
        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,
        _ref$findAllMatches = _ref.findAllMatches,
        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,
        _ref$minMatchCharLeng = _ref.minMatchCharLength,
        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng,
        _ref$id = _ref.id,
        id = _ref$id === undefined ? null : _ref$id,
        _ref$keys = _ref.keys,
        keys = _ref$keys === undefined ? [] : _ref$keys,
        _ref$shouldSort = _ref.shouldSort,
        shouldSort = _ref$shouldSort === undefined ? true : _ref$shouldSort,
        _ref$getFn = _ref.getFn,
        getFn = _ref$getFn === undefined ? deepValue : _ref$getFn,
        _ref$sortFn = _ref.sortFn,
        sortFn = _ref$sortFn === undefined ? function (a, b) {
      return a.score - b.score;
    } : _ref$sortFn,
        _ref$tokenize = _ref.tokenize,
        tokenize = _ref$tokenize === undefined ? false : _ref$tokenize,
        _ref$matchAllTokens = _ref.matchAllTokens,
        matchAllTokens = _ref$matchAllTokens === undefined ? false : _ref$matchAllTokens,
        _ref$includeMatches = _ref.includeMatches,
        includeMatches = _ref$includeMatches === undefined ? false : _ref$includeMatches,
        _ref$includeScore = _ref.includeScore,
        includeScore = _ref$includeScore === undefined ? false : _ref$includeScore,
        _ref$verbose = _ref.verbose,
        verbose = _ref$verbose === undefined ? false : _ref$verbose;

    _classCallCheck(this, Fuse);

    this.options = {
      location: location,
      distance: distance,
      threshold: threshold,
      maxPatternLength: maxPatternLength,
      isCaseSensitive: caseSensitive,
      tokenSeparator: tokenSeparator,
      findAllMatches: findAllMatches,
      minMatchCharLength: minMatchCharLength,
      id: id,
      keys: keys,
      includeMatches: includeMatches,
      includeScore: includeScore,
      shouldSort: shouldSort,
      getFn: getFn,
      sortFn: sortFn,
      verbose: verbose,
      tokenize: tokenize,
      matchAllTokens: matchAllTokens
    };

    this.setCollection(list);
  }

  _createClass(Fuse, [{
    key: 'setCollection',
    value: function setCollection(list) {
      this.list = list;
      return list;
    }
  }, {
    key: 'search',
    value: function search(pattern) {
      this._log('---------\nSearch pattern: "' + pattern + '"');

      var _prepareSearchers2 = this._prepareSearchers(pattern),
          tokenSearchers = _prepareSearchers2.tokenSearchers,
          fullSearcher = _prepareSearchers2.fullSearcher;

      var _search2 = this._search(tokenSearchers, fullSearcher),
          weights = _search2.weights,
          results = _search2.results;

      this._computeScore(weights, results);

      if (this.options.shouldSort) {
        this._sort(results);
      }

      return this._format(results);
    }
  }, {
    key: '_prepareSearchers',
    value: function _prepareSearchers() {
      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      var tokenSearchers = [];

      if (this.options.tokenize) {
        // Tokenize on the separator
        var tokens = pattern.split(this.options.tokenSeparator);
        for (var i = 0, len = tokens.length; i < len; i += 1) {
          tokenSearchers.push(new Bitap(tokens[i], this.options));
        }
      }

      var fullSearcher = new Bitap(pattern, this.options);

      return { tokenSearchers: tokenSearchers, fullSearcher: fullSearcher };
    }
  }, {
    key: '_search',
    value: function _search() {
      var tokenSearchers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var fullSearcher = arguments[1];

      var list = this.list;
      var resultMap = {};
      var results = [];

      // Check the first item in the list, if it's a string, then we assume
      // that every item in the list is also a string, and thus it's a flattened array.
      if (typeof list[0] === 'string') {
        // Iterate over every item
        for (var i = 0, len = list.length; i < len; i += 1) {
          this._analyze({
            key: '',
            value: list[i],
            record: i,
            index: i
          }, {
            resultMap: resultMap,
            results: results,
            tokenSearchers: tokenSearchers,
            fullSearcher: fullSearcher
          });
        }

        return { weights: null, results: results };
      }

      // Otherwise, the first item is an Object (hopefully), and thus the searching
      // is done on the values of the keys of each item.
      var weights = {};
      for (var _i = 0, _len = list.length; _i < _len; _i += 1) {
        var item = list[_i];
        // Iterate over every key
        for (var j = 0, keysLen = this.options.keys.length; j < keysLen; j += 1) {
          var key = this.options.keys[j];
          if (typeof key !== 'string') {
            weights[key.name] = {
              weight: 1 - key.weight || 1
            };
            if (key.weight <= 0 || key.weight > 1) {
              throw new Error('Key weight has to be > 0 and <= 1');
            }
            key = key.name;
          } else {
            weights[key] = {
              weight: 1
            };
          }

          this._analyze({
            key: key,
            value: this.options.getFn(item, key),
            record: item,
            index: _i
          }, {
            resultMap: resultMap,
            results: results,
            tokenSearchers: tokenSearchers,
            fullSearcher: fullSearcher
          });
        }
      }

      return { weights: weights, results: results };
    }
  }, {
    key: '_analyze',
    value: function _analyze(_ref2, _ref3) {
      var key = _ref2.key,
          _ref2$arrayIndex = _ref2.arrayIndex,
          arrayIndex = _ref2$arrayIndex === undefined ? -1 : _ref2$arrayIndex,
          value = _ref2.value,
          record = _ref2.record,
          index = _ref2.index;
      var _ref3$tokenSearchers = _ref3.tokenSearchers,
          tokenSearchers = _ref3$tokenSearchers === undefined ? [] : _ref3$tokenSearchers,
          _ref3$fullSearcher = _ref3.fullSearcher,
          fullSearcher = _ref3$fullSearcher === undefined ? [] : _ref3$fullSearcher,
          _ref3$resultMap = _ref3.resultMap,
          resultMap = _ref3$resultMap === undefined ? {} : _ref3$resultMap,
          _ref3$results = _ref3.results,
          results = _ref3$results === undefined ? [] : _ref3$results;

      // Check if the texvaluet can be searched
      if (value === undefined || value === null) {
        return;
      }

      var exists = false;
      var averageScore = -1;
      var numTextMatches = 0;

      if (typeof value === 'string') {
        this._log('\nKey: ' + (key === '' ? '-' : key));

        var mainSearchResult = fullSearcher.search(value);
        this._log('Full text: "' + value + '", score: ' + mainSearchResult.score);

        if (this.options.tokenize) {
          var words = value.split(this.options.tokenSeparator);
          var scores = [];

          for (var i = 0; i < tokenSearchers.length; i += 1) {
            var tokenSearcher = tokenSearchers[i];

            this._log('\nPattern: "' + tokenSearcher.pattern + '"');

            // let tokenScores = []
            var hasMatchInText = false;

            for (var j = 0; j < words.length; j += 1) {
              var word = words[j];
              var tokenSearchResult = tokenSearcher.search(word);
              var obj = {};
              if (tokenSearchResult.isMatch) {
                obj[word] = tokenSearchResult.score;
                exists = true;
                hasMatchInText = true;
                scores.push(tokenSearchResult.score);
              } else {
                obj[word] = 1;
                if (!this.options.matchAllTokens) {
                  scores.push(1);
                }
              }
              this._log('Token: "' + word + '", score: ' + obj[word]);
              // tokenScores.push(obj)
            }

            if (hasMatchInText) {
              numTextMatches += 1;
            }
          }

          averageScore = scores[0];
          var scoresLen = scores.length;
          for (var _i2 = 1; _i2 < scoresLen; _i2 += 1) {
            averageScore += scores[_i2];
          }
          averageScore = averageScore / scoresLen;

          this._log('Token score average:', averageScore);
        }

        var finalScore = mainSearchResult.score;
        if (averageScore > -1) {
          finalScore = (finalScore + averageScore) / 2;
        }

        this._log('Score average:', finalScore);

        var checkTextMatches = this.options.tokenize && this.options.matchAllTokens ? numTextMatches >= tokenSearchers.length : true;

        this._log('\nCheck Matches: ' + checkTextMatches);

        // If a match is found, add the item to <rawResults>, including its score
        if ((exists || mainSearchResult.isMatch) && checkTextMatches) {
          // Check if the item already exists in our results
          var existingResult = resultMap[index];
          if (existingResult) {
            // Use the lowest score
            // existingResult.score, bitapResult.score
            existingResult.output.push({
              key: key,
              arrayIndex: arrayIndex,
              value: value,
              score: finalScore,
              matchedIndices: mainSearchResult.matchedIndices
            });
          } else {
            // Add it to the raw result list
            resultMap[index] = {
              item: record,
              output: [{
                key: key,
                arrayIndex: arrayIndex,
                value: value,
                score: finalScore,
                matchedIndices: mainSearchResult.matchedIndices
              }]
            };

            results.push(resultMap[index]);
          }
        }
      } else if (isArray(value)) {
        for (var _i3 = 0, len = value.length; _i3 < len; _i3 += 1) {
          this._analyze({
            key: key,
            arrayIndex: _i3,
            value: value[_i3],
            record: record,
            index: index
          }, {
            resultMap: resultMap,
            results: results,
            tokenSearchers: tokenSearchers,
            fullSearcher: fullSearcher
          });
        }
      }
    }
  }, {
    key: '_computeScore',
    value: function _computeScore(weights, results) {
      this._log('\n\nComputing score:\n');

      for (var i = 0, len = results.length; i < len; i += 1) {
        var output = results[i].output;
        var scoreLen = output.length;

        var currScore = 1;
        var bestScore = 1;

        for (var j = 0; j < scoreLen; j += 1) {
          var weight = weights ? weights[output[j].key].weight : 1;
          var score = weight === 1 ? output[j].score : output[j].score || 0.001;
          var nScore = score * weight;

          if (weight !== 1) {
            bestScore = Math.min(bestScore, nScore);
          } else {
            output[j].nScore = nScore;
            currScore *= nScore;
          }
        }

        results[i].score = bestScore === 1 ? currScore : bestScore;

        this._log(results[i]);
      }
    }
  }, {
    key: '_sort',
    value: function _sort(results) {
      this._log('\n\nSorting....');
      results.sort(this.options.sortFn);
    }
  }, {
    key: '_format',
    value: function _format(results) {
      var finalOutput = [];

      if (this.options.verbose) {
        this._log('\n\nOutput:\n\n', JSON.stringify(results));
      }

      var transformers = [];

      if (this.options.includeMatches) {
        transformers.push(function (result, data) {
          var output = result.output;
          data.matches = [];

          for (var i = 0, len = output.length; i < len; i += 1) {
            var item = output[i];

            if (item.matchedIndices.length === 0) {
              continue;
            }

            var obj = {
              indices: item.matchedIndices,
              value: item.value
            };
            if (item.key) {
              obj.key = item.key;
            }
            if (item.hasOwnProperty('arrayIndex') && item.arrayIndex > -1) {
              obj.arrayIndex = item.arrayIndex;
            }
            data.matches.push(obj);
          }
        });
      }

      if (this.options.includeScore) {
        transformers.push(function (result, data) {
          data.score = result.score;
        });
      }

      for (var i = 0, len = results.length; i < len; i += 1) {
        var result = results[i];

        if (this.options.id) {
          result.item = this.options.getFn(result.item, this.options.id)[0];
        }

        if (!transformers.length) {
          finalOutput.push(result.item);
          continue;
        }

        var data = {
          item: result.item
        };

        for (var j = 0, _len2 = transformers.length; j < _len2; j += 1) {
          transformers[j](result, data);
        }

        finalOutput.push(data);
      }

      return finalOutput;
    }
  }, {
    key: '_log',
    value: function _log() {
      if (this.options.verbose) {
        var _console;

        (_console = console).log.apply(_console, arguments);
      }
    }
  }]);

  return Fuse;
}();

module.exports = Fuse;

/***/ })
/******/ ]);
});
//# sourceMappingURL=fuse.js.map

/***/ }),

/***/ "./node_modules/hash-base/index.js":
/*!*****************************************!*\
  !*** ./node_modules/hash-base/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js").Transform
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase


/***/ }),

/***/ "./node_modules/hash.js/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/hash.js/lib/hash.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hash = exports;

hash.utils = __webpack_require__(/*! ./hash/utils */ "./node_modules/hash.js/lib/hash/utils.js");
hash.common = __webpack_require__(/*! ./hash/common */ "./node_modules/hash.js/lib/hash/common.js");
hash.sha = __webpack_require__(/*! ./hash/sha */ "./node_modules/hash.js/lib/hash/sha.js");
hash.ripemd = __webpack_require__(/*! ./hash/ripemd */ "./node_modules/hash.js/lib/hash/ripemd.js");
hash.hmac = __webpack_require__(/*! ./hash/hmac */ "./node_modules/hash.js/lib/hash/hmac.js");

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/common.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/common.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/hmac.js":
/*!***********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/hmac.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/ripemd.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/ripemd.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha.js":
/*!**********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.sha1 = __webpack_require__(/*! ./sha/1 */ "./node_modules/hash.js/lib/hash/sha/1.js");
exports.sha224 = __webpack_require__(/*! ./sha/224 */ "./node_modules/hash.js/lib/hash/sha/224.js");
exports.sha256 = __webpack_require__(/*! ./sha/256 */ "./node_modules/hash.js/lib/hash/sha/256.js");
exports.sha384 = __webpack_require__(/*! ./sha/384 */ "./node_modules/hash.js/lib/hash/sha/384.js");
exports.sha512 = __webpack_require__(/*! ./sha/512 */ "./node_modules/hash.js/lib/hash/sha/512.js");


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/1.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/1.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/224.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/224.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var SHA256 = __webpack_require__(/*! ./256 */ "./node_modules/hash.js/lib/hash/sha/256.js");

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/256.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/256.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/384.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/384.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");

var SHA512 = __webpack_require__(/*! ./512 */ "./node_modules/hash.js/lib/hash/sha/512.js");

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/512.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/512.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/common.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/utils.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/utils.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),

/***/ "./node_modules/hmac-drbg/lib/hmac-drbg.js":
/*!*************************************************!*\
  !*** ./node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var utils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/immutable/dist/immutable.js":
/*!**************************************************!*\
  !*** ./node_modules/immutable/dist/immutable.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;

  function createClass(ctor, superClass) {
    if (superClass) {
      ctor.prototype = Object.create(superClass.prototype);
    }
    ctor.prototype.constructor = ctor;
  }

  function Iterable(value) {
      return isIterable(value) ? value : Seq(value);
    }


  createClass(KeyedIterable, Iterable);
    function KeyedIterable(value) {
      return isKeyed(value) ? value : KeyedSeq(value);
    }


  createClass(IndexedIterable, Iterable);
    function IndexedIterable(value) {
      return isIndexed(value) ? value : IndexedSeq(value);
    }


  createClass(SetIterable, Iterable);
    function SetIterable(value) {
      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
    }



  function isIterable(maybeIterable) {
    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
  }

  function isKeyed(maybeKeyed) {
    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
  }

  function isIndexed(maybeIndexed) {
    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
  }

  function isAssociative(maybeAssociative) {
    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
  }

  function isOrdered(maybeOrdered) {
    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
  }

  Iterable.isIterable = isIterable;
  Iterable.isKeyed = isKeyed;
  Iterable.isIndexed = isIndexed;
  Iterable.isAssociative = isAssociative;
  Iterable.isOrdered = isOrdered;

  Iterable.Keyed = KeyedIterable;
  Iterable.Indexed = IndexedIterable;
  Iterable.Set = SetIterable;


  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  // Used for setting prototype methods that IE8 chokes on.
  var DELETE = 'delete';

  // Constants describing the size of trie nodes.
  var SHIFT = 5; // Resulted in best performance after ______?
  var SIZE = 1 << SHIFT;
  var MASK = SIZE - 1;

  // A consistent shared value representing "not set" which equals nothing other
  // than itself, and nothing that could be provided externally.
  var NOT_SET = {};

  // Boolean references, Rough equivalent of `bool &`.
  var CHANGE_LENGTH = { value: false };
  var DID_ALTER = { value: false };

  function MakeRef(ref) {
    ref.value = false;
    return ref;
  }

  function SetRef(ref) {
    ref && (ref.value = true);
  }

  // A function which returns a value representing an "owner" for transient writes
  // to tries. The return value will only ever equal itself, and will not equal
  // the return of any subsequent call of this function.
  function OwnerID() {}

  // http://jsperf.com/copy-array-inline
  function arrCopy(arr, offset) {
    offset = offset || 0;
    var len = Math.max(0, arr.length - offset);
    var newArr = new Array(len);
    for (var ii = 0; ii < len; ii++) {
      newArr[ii] = arr[ii + offset];
    }
    return newArr;
  }

  function ensureSize(iter) {
    if (iter.size === undefined) {
      iter.size = iter.__iterate(returnTrue);
    }
    return iter.size;
  }

  function wrapIndex(iter, index) {
    // This implements "is array index" which the ECMAString spec defines as:
    //
    //     A String property name P is an array index if and only if
    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
    //     to 2^32−1.
    //
    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
    if (typeof index !== 'number') {
      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
      if ('' + uint32Index !== index || uint32Index === 4294967295) {
        return NaN;
      }
      index = uint32Index;
    }
    return index < 0 ? ensureSize(iter) + index : index;
  }

  function returnTrue() {
    return true;
  }

  function wholeSlice(begin, end, size) {
    return (begin === 0 || (size !== undefined && begin <= -size)) &&
      (end === undefined || (size !== undefined && end >= size));
  }

  function resolveBegin(begin, size) {
    return resolveIndex(begin, size, 0);
  }

  function resolveEnd(end, size) {
    return resolveIndex(end, size, size);
  }

  function resolveIndex(index, size, defaultIndex) {
    return index === undefined ?
      defaultIndex :
      index < 0 ?
        Math.max(0, size + index) :
        size === undefined ?
          index :
          Math.min(size, index);
  }

  /* global Symbol */

  var ITERATE_KEYS = 0;
  var ITERATE_VALUES = 1;
  var ITERATE_ENTRIES = 2;

  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;


  function Iterator(next) {
      this.next = next;
    }

    Iterator.prototype.toString = function() {
      return '[Iterator]';
    };


  Iterator.KEYS = ITERATE_KEYS;
  Iterator.VALUES = ITERATE_VALUES;
  Iterator.ENTRIES = ITERATE_ENTRIES;

  Iterator.prototype.inspect =
  Iterator.prototype.toSource = function () { return this.toString(); }
  Iterator.prototype[ITERATOR_SYMBOL] = function () {
    return this;
  };


  function iteratorValue(type, k, v, iteratorResult) {
    var value = type === 0 ? k : type === 1 ? v : [k, v];
    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
      value: value, done: false
    });
    return iteratorResult;
  }

  function iteratorDone() {
    return { value: undefined, done: true };
  }

  function hasIterator(maybeIterable) {
    return !!getIteratorFn(maybeIterable);
  }

  function isIterator(maybeIterator) {
    return maybeIterator && typeof maybeIterator.next === 'function';
  }

  function getIterator(iterable) {
    var iteratorFn = getIteratorFn(iterable);
    return iteratorFn && iteratorFn.call(iterable);
  }

  function getIteratorFn(iterable) {
    var iteratorFn = iterable && (
      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
      iterable[FAUX_ITERATOR_SYMBOL]
    );
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  function isArrayLike(value) {
    return value && typeof value.length === 'number';
  }

  createClass(Seq, Iterable);
    function Seq(value) {
      return value === null || value === undefined ? emptySequence() :
        isIterable(value) ? value.toSeq() : seqFromValue(value);
    }

    Seq.of = function(/*...values*/) {
      return Seq(arguments);
    };

    Seq.prototype.toSeq = function() {
      return this;
    };

    Seq.prototype.toString = function() {
      return this.__toString('Seq {', '}');
    };

    Seq.prototype.cacheResult = function() {
      if (!this._cache && this.__iterateUncached) {
        this._cache = this.entrySeq().toArray();
        this.size = this._cache.length;
      }
      return this;
    };

    // abstract __iterateUncached(fn, reverse)

    Seq.prototype.__iterate = function(fn, reverse) {
      return seqIterate(this, fn, reverse, true);
    };

    // abstract __iteratorUncached(type, reverse)

    Seq.prototype.__iterator = function(type, reverse) {
      return seqIterator(this, type, reverse, true);
    };



  createClass(KeyedSeq, Seq);
    function KeyedSeq(value) {
      return value === null || value === undefined ?
        emptySequence().toKeyedSeq() :
        isIterable(value) ?
          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
          keyedSeqFromValue(value);
    }

    KeyedSeq.prototype.toKeyedSeq = function() {
      return this;
    };



  createClass(IndexedSeq, Seq);
    function IndexedSeq(value) {
      return value === null || value === undefined ? emptySequence() :
        !isIterable(value) ? indexedSeqFromValue(value) :
        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
    }

    IndexedSeq.of = function(/*...values*/) {
      return IndexedSeq(arguments);
    };

    IndexedSeq.prototype.toIndexedSeq = function() {
      return this;
    };

    IndexedSeq.prototype.toString = function() {
      return this.__toString('Seq [', ']');
    };

    IndexedSeq.prototype.__iterate = function(fn, reverse) {
      return seqIterate(this, fn, reverse, false);
    };

    IndexedSeq.prototype.__iterator = function(type, reverse) {
      return seqIterator(this, type, reverse, false);
    };



  createClass(SetSeq, Seq);
    function SetSeq(value) {
      return (
        value === null || value === undefined ? emptySequence() :
        !isIterable(value) ? indexedSeqFromValue(value) :
        isKeyed(value) ? value.entrySeq() : value
      ).toSetSeq();
    }

    SetSeq.of = function(/*...values*/) {
      return SetSeq(arguments);
    };

    SetSeq.prototype.toSetSeq = function() {
      return this;
    };



  Seq.isSeq = isSeq;
  Seq.Keyed = KeyedSeq;
  Seq.Set = SetSeq;
  Seq.Indexed = IndexedSeq;

  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';

  Seq.prototype[IS_SEQ_SENTINEL] = true;



  createClass(ArraySeq, IndexedSeq);
    function ArraySeq(array) {
      this._array = array;
      this.size = array.length;
    }

    ArraySeq.prototype.get = function(index, notSetValue) {
      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
    };

    ArraySeq.prototype.__iterate = function(fn, reverse) {
      var array = this._array;
      var maxIndex = array.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    ArraySeq.prototype.__iterator = function(type, reverse) {
      var array = this._array;
      var maxIndex = array.length - 1;
      var ii = 0;
      return new Iterator(function() 
        {return ii > maxIndex ?
          iteratorDone() :
          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
      );
    };



  createClass(ObjectSeq, KeyedSeq);
    function ObjectSeq(object) {
      var keys = Object.keys(object);
      this._object = object;
      this._keys = keys;
      this.size = keys.length;
    }

    ObjectSeq.prototype.get = function(key, notSetValue) {
      if (notSetValue !== undefined && !this.has(key)) {
        return notSetValue;
      }
      return this._object[key];
    };

    ObjectSeq.prototype.has = function(key) {
      return this._object.hasOwnProperty(key);
    };

    ObjectSeq.prototype.__iterate = function(fn, reverse) {
      var object = this._object;
      var keys = this._keys;
      var maxIndex = keys.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var key = keys[reverse ? maxIndex - ii : ii];
        if (fn(object[key], key, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    ObjectSeq.prototype.__iterator = function(type, reverse) {
      var object = this._object;
      var keys = this._keys;
      var maxIndex = keys.length - 1;
      var ii = 0;
      return new Iterator(function()  {
        var key = keys[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ?
          iteratorDone() :
          iteratorValue(type, key, object[key]);
      });
    };

  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;


  createClass(IterableSeq, IndexedSeq);
    function IterableSeq(iterable) {
      this._iterable = iterable;
      this.size = iterable.length || iterable.size;
    }

    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterable = this._iterable;
      var iterator = getIterator(iterable);
      var iterations = 0;
      if (isIterator(iterator)) {
        var step;
        while (!(step = iterator.next()).done) {
          if (fn(step.value, iterations++, this) === false) {
            break;
          }
        }
      }
      return iterations;
    };

    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterable = this._iterable;
      var iterator = getIterator(iterable);
      if (!isIterator(iterator)) {
        return new Iterator(iteratorDone);
      }
      var iterations = 0;
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step : iteratorValue(type, iterations++, step.value);
      });
    };



  createClass(IteratorSeq, IndexedSeq);
    function IteratorSeq(iterator) {
      this._iterator = iterator;
      this._iteratorCache = [];
    }

    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterator = this._iterator;
      var cache = this._iteratorCache;
      var iterations = 0;
      while (iterations < cache.length) {
        if (fn(cache[iterations], iterations++, this) === false) {
          return iterations;
        }
      }
      var step;
      while (!(step = iterator.next()).done) {
        var val = step.value;
        cache[iterations] = val;
        if (fn(val, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };

    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = this._iterator;
      var cache = this._iteratorCache;
      var iterations = 0;
      return new Iterator(function()  {
        if (iterations >= cache.length) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          cache[iterations] = step.value;
        }
        return iteratorValue(type, iterations, cache[iterations++]);
      });
    };




  // # pragma Helper functions

  function isSeq(maybeSeq) {
    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
  }

  var EMPTY_SEQ;

  function emptySequence() {
    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
  }

  function keyedSeqFromValue(value) {
    var seq =
      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
      typeof value === 'object' ? new ObjectSeq(value) :
      undefined;
    if (!seq) {
      throw new TypeError(
        'Expected Array or iterable object of [k, v] entries, '+
        'or keyed object: ' + value
      );
    }
    return seq;
  }

  function indexedSeqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value);
    if (!seq) {
      throw new TypeError(
        'Expected Array or iterable object of values: ' + value
      );
    }
    return seq;
  }

  function seqFromValue(value) {
    var seq = maybeIndexedSeqFromValue(value) ||
      (typeof value === 'object' && new ObjectSeq(value));
    if (!seq) {
      throw new TypeError(
        'Expected Array or iterable object of values, or keyed object: ' + value
      );
    }
    return seq;
  }

  function maybeIndexedSeqFromValue(value) {
    return (
      isArrayLike(value) ? new ArraySeq(value) :
      isIterator(value) ? new IteratorSeq(value) :
      hasIterator(value) ? new IterableSeq(value) :
      undefined
    );
  }

  function seqIterate(seq, fn, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      for (var ii = 0; ii <= maxIndex; ii++) {
        var entry = cache[reverse ? maxIndex - ii : ii];
        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
          return ii + 1;
        }
      }
      return ii;
    }
    return seq.__iterateUncached(fn, reverse);
  }

  function seqIterator(seq, type, reverse, useKeys) {
    var cache = seq._cache;
    if (cache) {
      var maxIndex = cache.length - 1;
      var ii = 0;
      return new Iterator(function()  {
        var entry = cache[reverse ? maxIndex - ii : ii];
        return ii++ > maxIndex ?
          iteratorDone() :
          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
      });
    }
    return seq.__iteratorUncached(type, reverse);
  }

  function fromJS(json, converter) {
    return converter ?
      fromJSWith(converter, json, '', {'': json}) :
      fromJSDefault(json);
  }

  function fromJSWith(converter, json, key, parentJSON) {
    if (Array.isArray(json)) {
      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
    }
    if (isPlainObj(json)) {
      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
    }
    return json;
  }

  function fromJSDefault(json) {
    if (Array.isArray(json)) {
      return IndexedSeq(json).map(fromJSDefault).toList();
    }
    if (isPlainObj(json)) {
      return KeyedSeq(json).map(fromJSDefault).toMap();
    }
    return json;
  }

  function isPlainObj(value) {
    return value && (value.constructor === Object || value.constructor === undefined);
  }

  /**
   * An extension of the "same-value" algorithm as [described for use by ES6 Map
   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
   *
   * NaN is considered the same as NaN, however -0 and 0 are considered the same
   * value, which is different from the algorithm described by
   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
   *
   * This is extended further to allow Objects to describe the values they
   * represent, by way of `valueOf` or `equals` (and `hashCode`).
   *
   * Note: because of this extension, the key equality of Immutable.Map and the
   * value equality of Immutable.Set will differ from ES6 Map and Set.
   *
   * ### Defining custom values
   *
   * The easiest way to describe the value an object represents is by implementing
   * `valueOf`. For example, `Date` represents a value by returning a unix
   * timestamp for `valueOf`:
   *
   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
   *     var date2 = new Date(1234567890000);
   *     date1.valueOf(); // 1234567890000
   *     assert( date1 !== date2 );
   *     assert( Immutable.is( date1, date2 ) );
   *
   * Note: overriding `valueOf` may have other implications if you use this object
   * where JavaScript expects a primitive, such as implicit string coercion.
   *
   * For more complex types, especially collections, implementing `valueOf` may
   * not be performant. An alternative is to implement `equals` and `hashCode`.
   *
   * `equals` takes another object, presumably of similar type, and returns true
   * if the it is equal. Equality is symmetrical, so the same result should be
   * returned if this and the argument are flipped.
   *
   *     assert( a.equals(b) === b.equals(a) );
   *
   * `hashCode` returns a 32bit integer number representing the object which will
   * be used to determine how to store the value object in a Map or Set. You must
   * provide both or neither methods, one must not exist without the other.
   *
   * Also, an important relationship between these methods must be upheld: if two
   * values are equal, they *must* return the same hashCode. If the values are not
   * equal, they might have the same hashCode; this is called a hash collision,
   * and while undesirable for performance reasons, it is acceptable.
   *
   *     if (a.equals(b)) {
   *       assert( a.hashCode() === b.hashCode() );
   *     }
   *
   * All Immutable collections implement `equals` and `hashCode`.
   *
   */
  function is(valueA, valueB) {
    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
      return true;
    }
    if (!valueA || !valueB) {
      return false;
    }
    if (typeof valueA.valueOf === 'function' &&
        typeof valueB.valueOf === 'function') {
      valueA = valueA.valueOf();
      valueB = valueB.valueOf();
      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
        return true;
      }
      if (!valueA || !valueB) {
        return false;
      }
    }
    if (typeof valueA.equals === 'function' &&
        typeof valueB.equals === 'function' &&
        valueA.equals(valueB)) {
      return true;
    }
    return false;
  }

  function deepEqual(a, b) {
    if (a === b) {
      return true;
    }

    if (
      !isIterable(b) ||
      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
      isKeyed(a) !== isKeyed(b) ||
      isIndexed(a) !== isIndexed(b) ||
      isOrdered(a) !== isOrdered(b)
    ) {
      return false;
    }

    if (a.size === 0 && b.size === 0) {
      return true;
    }

    var notAssociative = !isAssociative(a);

    if (isOrdered(a)) {
      var entries = a.entries();
      return b.every(function(v, k)  {
        var entry = entries.next().value;
        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
      }) && entries.next().done;
    }

    var flipped = false;

    if (a.size === undefined) {
      if (b.size === undefined) {
        if (typeof a.cacheResult === 'function') {
          a.cacheResult();
        }
      } else {
        flipped = true;
        var _ = a;
        a = b;
        b = _;
      }
    }

    var allEqual = true;
    var bSize = b.__iterate(function(v, k)  {
      if (notAssociative ? !a.has(v) :
          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
        allEqual = false;
        return false;
      }
    });

    return allEqual && a.size === bSize;
  }

  createClass(Repeat, IndexedSeq);

    function Repeat(value, times) {
      if (!(this instanceof Repeat)) {
        return new Repeat(value, times);
      }
      this._value = value;
      this.size = times === undefined ? Infinity : Math.max(0, times);
      if (this.size === 0) {
        if (EMPTY_REPEAT) {
          return EMPTY_REPEAT;
        }
        EMPTY_REPEAT = this;
      }
    }

    Repeat.prototype.toString = function() {
      if (this.size === 0) {
        return 'Repeat []';
      }
      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
    };

    Repeat.prototype.get = function(index, notSetValue) {
      return this.has(index) ? this._value : notSetValue;
    };

    Repeat.prototype.includes = function(searchValue) {
      return is(this._value, searchValue);
    };

    Repeat.prototype.slice = function(begin, end) {
      var size = this.size;
      return wholeSlice(begin, end, size) ? this :
        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
    };

    Repeat.prototype.reverse = function() {
      return this;
    };

    Repeat.prototype.indexOf = function(searchValue) {
      if (is(this._value, searchValue)) {
        return 0;
      }
      return -1;
    };

    Repeat.prototype.lastIndexOf = function(searchValue) {
      if (is(this._value, searchValue)) {
        return this.size;
      }
      return -1;
    };

    Repeat.prototype.__iterate = function(fn, reverse) {
      for (var ii = 0; ii < this.size; ii++) {
        if (fn(this._value, ii, this) === false) {
          return ii + 1;
        }
      }
      return ii;
    };

    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
      var ii = 0;
      return new Iterator(function() 
        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
      );
    };

    Repeat.prototype.equals = function(other) {
      return other instanceof Repeat ?
        is(this._value, other._value) :
        deepEqual(other);
    };


  var EMPTY_REPEAT;

  function invariant(condition, error) {
    if (!condition) throw new Error(error);
  }

  createClass(Range, IndexedSeq);

    function Range(start, end, step) {
      if (!(this instanceof Range)) {
        return new Range(start, end, step);
      }
      invariant(step !== 0, 'Cannot step a Range by 0');
      start = start || 0;
      if (end === undefined) {
        end = Infinity;
      }
      step = step === undefined ? 1 : Math.abs(step);
      if (end < start) {
        step = -step;
      }
      this._start = start;
      this._end = end;
      this._step = step;
      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
      if (this.size === 0) {
        if (EMPTY_RANGE) {
          return EMPTY_RANGE;
        }
        EMPTY_RANGE = this;
      }
    }

    Range.prototype.toString = function() {
      if (this.size === 0) {
        return 'Range []';
      }
      return 'Range [ ' +
        this._start + '...' + this._end +
        (this._step !== 1 ? ' by ' + this._step : '') +
      ' ]';
    };

    Range.prototype.get = function(index, notSetValue) {
      return this.has(index) ?
        this._start + wrapIndex(this, index) * this._step :
        notSetValue;
    };

    Range.prototype.includes = function(searchValue) {
      var possibleIndex = (searchValue - this._start) / this._step;
      return possibleIndex >= 0 &&
        possibleIndex < this.size &&
        possibleIndex === Math.floor(possibleIndex);
    };

    Range.prototype.slice = function(begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      begin = resolveBegin(begin, this.size);
      end = resolveEnd(end, this.size);
      if (end <= begin) {
        return new Range(0, 0);
      }
      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
    };

    Range.prototype.indexOf = function(searchValue) {
      var offsetValue = searchValue - this._start;
      if (offsetValue % this._step === 0) {
        var index = offsetValue / this._step;
        if (index >= 0 && index < this.size) {
          return index
        }
      }
      return -1;
    };

    Range.prototype.lastIndexOf = function(searchValue) {
      return this.indexOf(searchValue);
    };

    Range.prototype.__iterate = function(fn, reverse) {
      var maxIndex = this.size - 1;
      var step = this._step;
      var value = reverse ? this._start + maxIndex * step : this._start;
      for (var ii = 0; ii <= maxIndex; ii++) {
        if (fn(value, ii, this) === false) {
          return ii + 1;
        }
        value += reverse ? -step : step;
      }
      return ii;
    };

    Range.prototype.__iterator = function(type, reverse) {
      var maxIndex = this.size - 1;
      var step = this._step;
      var value = reverse ? this._start + maxIndex * step : this._start;
      var ii = 0;
      return new Iterator(function()  {
        var v = value;
        value += reverse ? -step : step;
        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
      });
    };

    Range.prototype.equals = function(other) {
      return other instanceof Range ?
        this._start === other._start &&
        this._end === other._end &&
        this._step === other._step :
        deepEqual(this, other);
    };


  var EMPTY_RANGE;

  createClass(Collection, Iterable);
    function Collection() {
      throw TypeError('Abstract');
    }


  createClass(KeyedCollection, Collection);function KeyedCollection() {}

  createClass(IndexedCollection, Collection);function IndexedCollection() {}

  createClass(SetCollection, Collection);function SetCollection() {}


  Collection.Keyed = KeyedCollection;
  Collection.Indexed = IndexedCollection;
  Collection.Set = SetCollection;

  var imul =
    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
    Math.imul :
    function imul(a, b) {
      a = a | 0; // int
      b = b | 0; // int
      var c = a & 0xffff;
      var d = b & 0xffff;
      // Shift by 0 fixes the sign on the high part.
      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
    };

  // v8 has an optimization for storing 31-bit signed numbers.
  // Values which have either 00 or 11 as the high order bits qualify.
  // This function drops the highest order bit in a signed number, maintaining
  // the sign bit.
  function smi(i32) {
    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
  }

  function hash(o) {
    if (o === false || o === null || o === undefined) {
      return 0;
    }
    if (typeof o.valueOf === 'function') {
      o = o.valueOf();
      if (o === false || o === null || o === undefined) {
        return 0;
      }
    }
    if (o === true) {
      return 1;
    }
    var type = typeof o;
    if (type === 'number') {
      if (o !== o || o === Infinity) {
        return 0;
      }
      var h = o | 0;
      if (h !== o) {
        h ^= o * 0xFFFFFFFF;
      }
      while (o > 0xFFFFFFFF) {
        o /= 0xFFFFFFFF;
        h ^= o;
      }
      return smi(h);
    }
    if (type === 'string') {
      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
    }
    if (typeof o.hashCode === 'function') {
      return o.hashCode();
    }
    if (type === 'object') {
      return hashJSObj(o);
    }
    if (typeof o.toString === 'function') {
      return hashString(o.toString());
    }
    throw new Error('Value type ' + type + ' cannot be hashed.');
  }

  function cachedHashString(string) {
    var hash = stringHashCache[string];
    if (hash === undefined) {
      hash = hashString(string);
      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
        STRING_HASH_CACHE_SIZE = 0;
        stringHashCache = {};
      }
      STRING_HASH_CACHE_SIZE++;
      stringHashCache[string] = hash;
    }
    return hash;
  }

  // http://jsperf.com/hashing-strings
  function hashString(string) {
    // This is the hash from JVM
    // The hash code for a string is computed as
    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
    // where s[i] is the ith character of the string and n is the length of
    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
    // (exclusive) by dropping high bits.
    var hash = 0;
    for (var ii = 0; ii < string.length; ii++) {
      hash = 31 * hash + string.charCodeAt(ii) | 0;
    }
    return smi(hash);
  }

  function hashJSObj(obj) {
    var hash;
    if (usingWeakMap) {
      hash = weakMap.get(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = obj[UID_HASH_KEY];
    if (hash !== undefined) {
      return hash;
    }

    if (!canDefineProperty) {
      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
      if (hash !== undefined) {
        return hash;
      }

      hash = getIENodeHash(obj);
      if (hash !== undefined) {
        return hash;
      }
    }

    hash = ++objHashUID;
    if (objHashUID & 0x40000000) {
      objHashUID = 0;
    }

    if (usingWeakMap) {
      weakMap.set(obj, hash);
    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
      throw new Error('Non-extensible objects are not allowed as keys.');
    } else if (canDefineProperty) {
      Object.defineProperty(obj, UID_HASH_KEY, {
        'enumerable': false,
        'configurable': false,
        'writable': false,
        'value': hash
      });
    } else if (obj.propertyIsEnumerable !== undefined &&
               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
      // Since we can't define a non-enumerable property on the object
      // we'll hijack one of the less-used non-enumerable properties to
      // save our hash on it. Since this is a function it will not show up in
      // `JSON.stringify` which is what we want.
      obj.propertyIsEnumerable = function() {
        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
      };
      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
    } else if (obj.nodeType !== undefined) {
      // At this point we couldn't get the IE `uniqueID` to use as a hash
      // and we couldn't use a non-enumerable property to exploit the
      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
      // itself.
      obj[UID_HASH_KEY] = hash;
    } else {
      throw new Error('Unable to set a non-enumerable property on object.');
    }

    return hash;
  }

  // Get references to ES5 object methods.
  var isExtensible = Object.isExtensible;

  // True if Object.defineProperty works as expected. IE8 fails this test.
  var canDefineProperty = (function() {
    try {
      Object.defineProperty({}, '@', {});
      return true;
    } catch (e) {
      return false;
    }
  }());

  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
  // and avoid memory leaks from the IE cloneNode bug.
  function getIENodeHash(node) {
    if (node && node.nodeType > 0) {
      switch (node.nodeType) {
        case 1: // Element
          return node.uniqueID;
        case 9: // Document
          return node.documentElement && node.documentElement.uniqueID;
      }
    }
  }

  // If possible, use a WeakMap.
  var usingWeakMap = typeof WeakMap === 'function';
  var weakMap;
  if (usingWeakMap) {
    weakMap = new WeakMap();
  }

  var objHashUID = 0;

  var UID_HASH_KEY = '__immutablehash__';
  if (typeof Symbol === 'function') {
    UID_HASH_KEY = Symbol(UID_HASH_KEY);
  }

  var STRING_HASH_CACHE_MIN_STRLEN = 16;
  var STRING_HASH_CACHE_MAX_SIZE = 255;
  var STRING_HASH_CACHE_SIZE = 0;
  var stringHashCache = {};

  function assertNotInfinite(size) {
    invariant(
      size !== Infinity,
      'Cannot perform this action with an infinite size.'
    );
  }

  createClass(Map, KeyedCollection);

    // @pragma Construction

    function Map(value) {
      return value === null || value === undefined ? emptyMap() :
        isMap(value) && !isOrdered(value) ? value :
        emptyMap().withMutations(function(map ) {
          var iter = KeyedIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v, k)  {return map.set(k, v)});
        });
    }

    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
      return emptyMap().withMutations(function(map ) {
        for (var i = 0; i < keyValues.length; i += 2) {
          if (i + 1 >= keyValues.length) {
            throw new Error('Missing value for key: ' + keyValues[i]);
          }
          map.set(keyValues[i], keyValues[i + 1]);
        }
      });
    };

    Map.prototype.toString = function() {
      return this.__toString('Map {', '}');
    };

    // @pragma Access

    Map.prototype.get = function(k, notSetValue) {
      return this._root ?
        this._root.get(0, undefined, k, notSetValue) :
        notSetValue;
    };

    // @pragma Modification

    Map.prototype.set = function(k, v) {
      return updateMap(this, k, v);
    };

    Map.prototype.setIn = function(keyPath, v) {
      return this.updateIn(keyPath, NOT_SET, function()  {return v});
    };

    Map.prototype.remove = function(k) {
      return updateMap(this, k, NOT_SET);
    };

    Map.prototype.deleteIn = function(keyPath) {
      return this.updateIn(keyPath, function()  {return NOT_SET});
    };

    Map.prototype.update = function(k, notSetValue, updater) {
      return arguments.length === 1 ?
        k(this) :
        this.updateIn([k], notSetValue, updater);
    };

    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
      if (!updater) {
        updater = notSetValue;
        notSetValue = undefined;
      }
      var updatedValue = updateInDeepMap(
        this,
        forceIterator(keyPath),
        notSetValue,
        updater
      );
      return updatedValue === NOT_SET ? undefined : updatedValue;
    };

    Map.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._root = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyMap();
    };

    // @pragma Composition

    Map.prototype.merge = function(/*...iters*/) {
      return mergeIntoMapWith(this, undefined, arguments);
    };

    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoMapWith(this, merger, iters);
    };

    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
      return this.updateIn(
        keyPath,
        emptyMap(),
        function(m ) {return typeof m.merge === 'function' ?
          m.merge.apply(m, iters) :
          iters[iters.length - 1]}
      );
    };

    Map.prototype.mergeDeep = function(/*...iters*/) {
      return mergeIntoMapWith(this, deepMerger, arguments);
    };

    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
    };

    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
      return this.updateIn(
        keyPath,
        emptyMap(),
        function(m ) {return typeof m.mergeDeep === 'function' ?
          m.mergeDeep.apply(m, iters) :
          iters[iters.length - 1]}
      );
    };

    Map.prototype.sort = function(comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator));
    };

    Map.prototype.sortBy = function(mapper, comparator) {
      // Late binding
      return OrderedMap(sortFactory(this, comparator, mapper));
    };

    // @pragma Mutability

    Map.prototype.withMutations = function(fn) {
      var mutable = this.asMutable();
      fn(mutable);
      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
    };

    Map.prototype.asMutable = function() {
      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
    };

    Map.prototype.asImmutable = function() {
      return this.__ensureOwner();
    };

    Map.prototype.wasAltered = function() {
      return this.__altered;
    };

    Map.prototype.__iterator = function(type, reverse) {
      return new MapIterator(this, type, reverse);
    };

    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      var iterations = 0;
      this._root && this._root.iterate(function(entry ) {
        iterations++;
        return fn(entry[1], entry[0], this$0);
      }, reverse);
      return iterations;
    };

    Map.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeMap(this.size, this._root, ownerID, this.__hash);
    };


  function isMap(maybeMap) {
    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
  }

  Map.isMap = isMap;

  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';

  var MapPrototype = Map.prototype;
  MapPrototype[IS_MAP_SENTINEL] = true;
  MapPrototype[DELETE] = MapPrototype.remove;
  MapPrototype.removeIn = MapPrototype.deleteIn;


  // #pragma Trie Nodes



    function ArrayMapNode(ownerID, entries) {
      this.ownerID = ownerID;
      this.entries = entries;
    }

    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      var entries = this.entries;
      for (var ii = 0, len = entries.length; ii < len; ii++) {
        if (is(key, entries[ii][0])) {
          return entries[ii][1];
        }
      }
      return notSetValue;
    };

    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      var removed = value === NOT_SET;

      var entries = this.entries;
      var idx = 0;
      for (var len = entries.length; idx < len; idx++) {
        if (is(key, entries[idx][0])) {
          break;
        }
      }
      var exists = idx < len;

      if (exists ? entries[idx][1] === value : removed) {
        return this;
      }

      SetRef(didAlter);
      (removed || !exists) && SetRef(didChangeSize);

      if (removed && entries.length === 1) {
        return; // undefined
      }

      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
        return createNodes(ownerID, entries, key, value);
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newEntries = isEditable ? entries : arrCopy(entries);

      if (exists) {
        if (removed) {
          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
        } else {
          newEntries[idx] = [key, value];
        }
      } else {
        newEntries.push([key, value]);
      }

      if (isEditable) {
        this.entries = newEntries;
        return this;
      }

      return new ArrayMapNode(ownerID, newEntries);
    };




    function BitmapIndexedNode(ownerID, bitmap, nodes) {
      this.ownerID = ownerID;
      this.bitmap = bitmap;
      this.nodes = nodes;
    }

    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
      var bitmap = this.bitmap;
      return (bitmap & bit) === 0 ? notSetValue :
        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
    };

    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var bit = 1 << keyHashFrag;
      var bitmap = this.bitmap;
      var exists = (bitmap & bit) !== 0;

      if (!exists && value === NOT_SET) {
        return this;
      }

      var idx = popCount(bitmap & (bit - 1));
      var nodes = this.nodes;
      var node = exists ? nodes[idx] : undefined;
      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);

      if (newNode === node) {
        return this;
      }

      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
      }

      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
        return nodes[idx ^ 1];
      }

      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
        return newNode;
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
      var newNodes = exists ? newNode ?
        setIn(nodes, idx, newNode, isEditable) :
        spliceOut(nodes, idx, isEditable) :
        spliceIn(nodes, idx, newNode, isEditable);

      if (isEditable) {
        this.bitmap = newBitmap;
        this.nodes = newNodes;
        return this;
      }

      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
    };




    function HashArrayMapNode(ownerID, count, nodes) {
      this.ownerID = ownerID;
      this.count = count;
      this.nodes = nodes;
    }

    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var node = this.nodes[idx];
      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
    };

    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }
      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
      var removed = value === NOT_SET;
      var nodes = this.nodes;
      var node = nodes[idx];

      if (removed && !node) {
        return this;
      }

      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
      if (newNode === node) {
        return this;
      }

      var newCount = this.count;
      if (!node) {
        newCount++;
      } else if (!newNode) {
        newCount--;
        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
          return packNodes(ownerID, nodes, newCount, idx);
        }
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newNodes = setIn(nodes, idx, newNode, isEditable);

      if (isEditable) {
        this.count = newCount;
        this.nodes = newNodes;
        return this;
      }

      return new HashArrayMapNode(ownerID, newCount, newNodes);
    };




    function HashCollisionNode(ownerID, keyHash, entries) {
      this.ownerID = ownerID;
      this.keyHash = keyHash;
      this.entries = entries;
    }

    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      var entries = this.entries;
      for (var ii = 0, len = entries.length; ii < len; ii++) {
        if (is(key, entries[ii][0])) {
          return entries[ii][1];
        }
      }
      return notSetValue;
    };

    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      if (keyHash === undefined) {
        keyHash = hash(key);
      }

      var removed = value === NOT_SET;

      if (keyHash !== this.keyHash) {
        if (removed) {
          return this;
        }
        SetRef(didAlter);
        SetRef(didChangeSize);
        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
      }

      var entries = this.entries;
      var idx = 0;
      for (var len = entries.length; idx < len; idx++) {
        if (is(key, entries[idx][0])) {
          break;
        }
      }
      var exists = idx < len;

      if (exists ? entries[idx][1] === value : removed) {
        return this;
      }

      SetRef(didAlter);
      (removed || !exists) && SetRef(didChangeSize);

      if (removed && len === 2) {
        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
      }

      var isEditable = ownerID && ownerID === this.ownerID;
      var newEntries = isEditable ? entries : arrCopy(entries);

      if (exists) {
        if (removed) {
          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
        } else {
          newEntries[idx] = [key, value];
        }
      } else {
        newEntries.push([key, value]);
      }

      if (isEditable) {
        this.entries = newEntries;
        return this;
      }

      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
    };




    function ValueNode(ownerID, keyHash, entry) {
      this.ownerID = ownerID;
      this.keyHash = keyHash;
      this.entry = entry;
    }

    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
    };

    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
      var removed = value === NOT_SET;
      var keyMatch = is(key, this.entry[0]);
      if (keyMatch ? value === this.entry[1] : removed) {
        return this;
      }

      SetRef(didAlter);

      if (removed) {
        SetRef(didChangeSize);
        return; // undefined
      }

      if (keyMatch) {
        if (ownerID && ownerID === this.ownerID) {
          this.entry[1] = value;
          return this;
        }
        return new ValueNode(ownerID, this.keyHash, [key, value]);
      }

      SetRef(didChangeSize);
      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
    };



  // #pragma Iterators

  ArrayMapNode.prototype.iterate =
  HashCollisionNode.prototype.iterate = function (fn, reverse) {
    var entries = this.entries;
    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
        return false;
      }
    }
  }

  BitmapIndexedNode.prototype.iterate =
  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
    var nodes = this.nodes;
    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
      var node = nodes[reverse ? maxIndex - ii : ii];
      if (node && node.iterate(fn, reverse) === false) {
        return false;
      }
    }
  }

  ValueNode.prototype.iterate = function (fn, reverse) {
    return fn(this.entry);
  }

  createClass(MapIterator, Iterator);

    function MapIterator(map, type, reverse) {
      this._type = type;
      this._reverse = reverse;
      this._stack = map._root && mapIteratorFrame(map._root);
    }

    MapIterator.prototype.next = function() {
      var type = this._type;
      var stack = this._stack;
      while (stack) {
        var node = stack.node;
        var index = stack.index++;
        var maxIndex;
        if (node.entry) {
          if (index === 0) {
            return mapIteratorValue(type, node.entry);
          }
        } else if (node.entries) {
          maxIndex = node.entries.length - 1;
          if (index <= maxIndex) {
            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
          }
        } else {
          maxIndex = node.nodes.length - 1;
          if (index <= maxIndex) {
            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
            if (subNode) {
              if (subNode.entry) {
                return mapIteratorValue(type, subNode.entry);
              }
              stack = this._stack = mapIteratorFrame(subNode, stack);
            }
            continue;
          }
        }
        stack = this._stack = this._stack.__prev;
      }
      return iteratorDone();
    };


  function mapIteratorValue(type, entry) {
    return iteratorValue(type, entry[0], entry[1]);
  }

  function mapIteratorFrame(node, prev) {
    return {
      node: node,
      index: 0,
      __prev: prev
    };
  }

  function makeMap(size, root, ownerID, hash) {
    var map = Object.create(MapPrototype);
    map.size = size;
    map._root = root;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_MAP;
  function emptyMap() {
    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
  }

  function updateMap(map, k, v) {
    var newRoot;
    var newSize;
    if (!map._root) {
      if (v === NOT_SET) {
        return map;
      }
      newSize = 1;
      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
    } else {
      var didChangeSize = MakeRef(CHANGE_LENGTH);
      var didAlter = MakeRef(DID_ALTER);
      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
      if (!didAlter.value) {
        return map;
      }
      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
    }
    if (map.__ownerID) {
      map.size = newSize;
      map._root = newRoot;
      map.__hash = undefined;
      map.__altered = true;
      return map;
    }
    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
  }

  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
    if (!node) {
      if (value === NOT_SET) {
        return node;
      }
      SetRef(didAlter);
      SetRef(didChangeSize);
      return new ValueNode(ownerID, keyHash, [key, value]);
    }
    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
  }

  function isLeafNode(node) {
    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
  }

  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
    if (node.keyHash === keyHash) {
      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
    }

    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;

    var newNode;
    var nodes = idx1 === idx2 ?
      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);

    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
  }

  function createNodes(ownerID, entries, key, value) {
    if (!ownerID) {
      ownerID = new OwnerID();
    }
    var node = new ValueNode(ownerID, hash(key), [key, value]);
    for (var ii = 0; ii < entries.length; ii++) {
      var entry = entries[ii];
      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
    }
    return node;
  }

  function packNodes(ownerID, nodes, count, excluding) {
    var bitmap = 0;
    var packedII = 0;
    var packedNodes = new Array(count);
    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
      var node = nodes[ii];
      if (node !== undefined && ii !== excluding) {
        bitmap |= bit;
        packedNodes[packedII++] = node;
      }
    }
    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
  }

  function expandNodes(ownerID, nodes, bitmap, including, node) {
    var count = 0;
    var expandedNodes = new Array(SIZE);
    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
    }
    expandedNodes[including] = node;
    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
  }

  function mergeIntoMapWith(map, merger, iterables) {
    var iters = [];
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = KeyedIterable(value);
      if (!isIterable(value)) {
        iter = iter.map(function(v ) {return fromJS(v)});
      }
      iters.push(iter);
    }
    return mergeIntoCollectionWith(map, merger, iters);
  }

  function deepMerger(existing, value, key) {
    return existing && existing.mergeDeep && isIterable(value) ?
      existing.mergeDeep(value) :
      is(existing, value) ? existing : value;
  }

  function deepMergerWith(merger) {
    return function(existing, value, key)  {
      if (existing && existing.mergeDeepWith && isIterable(value)) {
        return existing.mergeDeepWith(merger, value);
      }
      var nextValue = merger(existing, value, key);
      return is(existing, nextValue) ? existing : nextValue;
    };
  }

  function mergeIntoCollectionWith(collection, merger, iters) {
    iters = iters.filter(function(x ) {return x.size !== 0});
    if (iters.length === 0) {
      return collection;
    }
    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
      return collection.constructor(iters[0]);
    }
    return collection.withMutations(function(collection ) {
      var mergeIntoMap = merger ?
        function(value, key)  {
          collection.update(key, NOT_SET, function(existing )
            {return existing === NOT_SET ? value : merger(existing, value, key)}
          );
        } :
        function(value, key)  {
          collection.set(key, value);
        }
      for (var ii = 0; ii < iters.length; ii++) {
        iters[ii].forEach(mergeIntoMap);
      }
    });
  }

  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
    var isNotSet = existing === NOT_SET;
    var step = keyPathIter.next();
    if (step.done) {
      var existingValue = isNotSet ? notSetValue : existing;
      var newValue = updater(existingValue);
      return newValue === existingValue ? existing : newValue;
    }
    invariant(
      isNotSet || (existing && existing.set),
      'invalid keyPath'
    );
    var key = step.value;
    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
    var nextUpdated = updateInDeepMap(
      nextExisting,
      keyPathIter,
      notSetValue,
      updater
    );
    return nextUpdated === nextExisting ? existing :
      nextUpdated === NOT_SET ? existing.remove(key) :
      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
  }

  function popCount(x) {
    x = x - ((x >> 1) & 0x55555555);
    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
    x = (x + (x >> 4)) & 0x0f0f0f0f;
    x = x + (x >> 8);
    x = x + (x >> 16);
    return x & 0x7f;
  }

  function setIn(array, idx, val, canEdit) {
    var newArray = canEdit ? array : arrCopy(array);
    newArray[idx] = val;
    return newArray;
  }

  function spliceIn(array, idx, val, canEdit) {
    var newLen = array.length + 1;
    if (canEdit && idx + 1 === newLen) {
      array[idx] = val;
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        newArray[ii] = val;
        after = -1;
      } else {
        newArray[ii] = array[ii + after];
      }
    }
    return newArray;
  }

  function spliceOut(array, idx, canEdit) {
    var newLen = array.length - 1;
    if (canEdit && idx === newLen) {
      array.pop();
      return array;
    }
    var newArray = new Array(newLen);
    var after = 0;
    for (var ii = 0; ii < newLen; ii++) {
      if (ii === idx) {
        after = 1;
      }
      newArray[ii] = array[ii + after];
    }
    return newArray;
  }

  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;

  createClass(List, IndexedCollection);

    // @pragma Construction

    function List(value) {
      var empty = emptyList();
      if (value === null || value === undefined) {
        return empty;
      }
      if (isList(value)) {
        return value;
      }
      var iter = IndexedIterable(value);
      var size = iter.size;
      if (size === 0) {
        return empty;
      }
      assertNotInfinite(size);
      if (size > 0 && size < SIZE) {
        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
      }
      return empty.withMutations(function(list ) {
        list.setSize(size);
        iter.forEach(function(v, i)  {return list.set(i, v)});
      });
    }

    List.of = function(/*...values*/) {
      return this(arguments);
    };

    List.prototype.toString = function() {
      return this.__toString('List [', ']');
    };

    // @pragma Access

    List.prototype.get = function(index, notSetValue) {
      index = wrapIndex(this, index);
      if (index >= 0 && index < this.size) {
        index += this._origin;
        var node = listNodeFor(this, index);
        return node && node.array[index & MASK];
      }
      return notSetValue;
    };

    // @pragma Modification

    List.prototype.set = function(index, value) {
      return updateList(this, index, value);
    };

    List.prototype.remove = function(index) {
      return !this.has(index) ? this :
        index === 0 ? this.shift() :
        index === this.size - 1 ? this.pop() :
        this.splice(index, 1);
    };

    List.prototype.insert = function(index, value) {
      return this.splice(index, 0, value);
    };

    List.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = this._origin = this._capacity = 0;
        this._level = SHIFT;
        this._root = this._tail = null;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyList();
    };

    List.prototype.push = function(/*...values*/) {
      var values = arguments;
      var oldSize = this.size;
      return this.withMutations(function(list ) {
        setListBounds(list, 0, oldSize + values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(oldSize + ii, values[ii]);
        }
      });
    };

    List.prototype.pop = function() {
      return setListBounds(this, 0, -1);
    };

    List.prototype.unshift = function(/*...values*/) {
      var values = arguments;
      return this.withMutations(function(list ) {
        setListBounds(list, -values.length);
        for (var ii = 0; ii < values.length; ii++) {
          list.set(ii, values[ii]);
        }
      });
    };

    List.prototype.shift = function() {
      return setListBounds(this, 1);
    };

    // @pragma Composition

    List.prototype.merge = function(/*...iters*/) {
      return mergeIntoListWith(this, undefined, arguments);
    };

    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoListWith(this, merger, iters);
    };

    List.prototype.mergeDeep = function(/*...iters*/) {
      return mergeIntoListWith(this, deepMerger, arguments);
    };

    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return mergeIntoListWith(this, deepMergerWith(merger), iters);
    };

    List.prototype.setSize = function(size) {
      return setListBounds(this, 0, size);
    };

    // @pragma Iteration

    List.prototype.slice = function(begin, end) {
      var size = this.size;
      if (wholeSlice(begin, end, size)) {
        return this;
      }
      return setListBounds(
        this,
        resolveBegin(begin, size),
        resolveEnd(end, size)
      );
    };

    List.prototype.__iterator = function(type, reverse) {
      var index = 0;
      var values = iterateList(this, reverse);
      return new Iterator(function()  {
        var value = values();
        return value === DONE ?
          iteratorDone() :
          iteratorValue(type, index++, value);
      });
    };

    List.prototype.__iterate = function(fn, reverse) {
      var index = 0;
      var values = iterateList(this, reverse);
      var value;
      while ((value = values()) !== DONE) {
        if (fn(value, index++, this) === false) {
          break;
        }
      }
      return index;
    };

    List.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        return this;
      }
      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
    };


  function isList(maybeList) {
    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
  }

  List.isList = isList;

  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';

  var ListPrototype = List.prototype;
  ListPrototype[IS_LIST_SENTINEL] = true;
  ListPrototype[DELETE] = ListPrototype.remove;
  ListPrototype.setIn = MapPrototype.setIn;
  ListPrototype.deleteIn =
  ListPrototype.removeIn = MapPrototype.removeIn;
  ListPrototype.update = MapPrototype.update;
  ListPrototype.updateIn = MapPrototype.updateIn;
  ListPrototype.mergeIn = MapPrototype.mergeIn;
  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  ListPrototype.withMutations = MapPrototype.withMutations;
  ListPrototype.asMutable = MapPrototype.asMutable;
  ListPrototype.asImmutable = MapPrototype.asImmutable;
  ListPrototype.wasAltered = MapPrototype.wasAltered;



    function VNode(array, ownerID) {
      this.array = array;
      this.ownerID = ownerID;
    }

    // TODO: seems like these methods are very similar

    VNode.prototype.removeBefore = function(ownerID, level, index) {
      if (index === level ? 1 << level : 0 || this.array.length === 0) {
        return this;
      }
      var originIndex = (index >>> level) & MASK;
      if (originIndex >= this.array.length) {
        return new VNode([], ownerID);
      }
      var removingFirst = originIndex === 0;
      var newChild;
      if (level > 0) {
        var oldChild = this.array[originIndex];
        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
        if (newChild === oldChild && removingFirst) {
          return this;
        }
      }
      if (removingFirst && !newChild) {
        return this;
      }
      var editable = editableVNode(this, ownerID);
      if (!removingFirst) {
        for (var ii = 0; ii < originIndex; ii++) {
          editable.array[ii] = undefined;
        }
      }
      if (newChild) {
        editable.array[originIndex] = newChild;
      }
      return editable;
    };

    VNode.prototype.removeAfter = function(ownerID, level, index) {
      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
        return this;
      }
      var sizeIndex = ((index - 1) >>> level) & MASK;
      if (sizeIndex >= this.array.length) {
        return this;
      }

      var newChild;
      if (level > 0) {
        var oldChild = this.array[sizeIndex];
        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
          return this;
        }
      }

      var editable = editableVNode(this, ownerID);
      editable.array.splice(sizeIndex + 1);
      if (newChild) {
        editable.array[sizeIndex] = newChild;
      }
      return editable;
    };



  var DONE = {};

  function iterateList(list, reverse) {
    var left = list._origin;
    var right = list._capacity;
    var tailPos = getTailOffset(right);
    var tail = list._tail;

    return iterateNodeOrLeaf(list._root, list._level, 0);

    function iterateNodeOrLeaf(node, level, offset) {
      return level === 0 ?
        iterateLeaf(node, offset) :
        iterateNode(node, level, offset);
    }

    function iterateLeaf(node, offset) {
      var array = offset === tailPos ? tail && tail.array : node && node.array;
      var from = offset > left ? 0 : left - offset;
      var to = right - offset;
      if (to > SIZE) {
        to = SIZE;
      }
      return function()  {
        if (from === to) {
          return DONE;
        }
        var idx = reverse ? --to : from++;
        return array && array[idx];
      };
    }

    function iterateNode(node, level, offset) {
      var values;
      var array = node && node.array;
      var from = offset > left ? 0 : (left - offset) >> level;
      var to = ((right - offset) >> level) + 1;
      if (to > SIZE) {
        to = SIZE;
      }
      return function()  {
        do {
          if (values) {
            var value = values();
            if (value !== DONE) {
              return value;
            }
            values = null;
          }
          if (from === to) {
            return DONE;
          }
          var idx = reverse ? --to : from++;
          values = iterateNodeOrLeaf(
            array && array[idx], level - SHIFT, offset + (idx << level)
          );
        } while (true);
      };
    }
  }

  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
    var list = Object.create(ListPrototype);
    list.size = capacity - origin;
    list._origin = origin;
    list._capacity = capacity;
    list._level = level;
    list._root = root;
    list._tail = tail;
    list.__ownerID = ownerID;
    list.__hash = hash;
    list.__altered = false;
    return list;
  }

  var EMPTY_LIST;
  function emptyList() {
    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
  }

  function updateList(list, index, value) {
    index = wrapIndex(list, index);

    if (index !== index) {
      return list;
    }

    if (index >= list.size || index < 0) {
      return list.withMutations(function(list ) {
        index < 0 ?
          setListBounds(list, index).set(0, value) :
          setListBounds(list, 0, index + 1).set(index, value)
      });
    }

    index += list._origin;

    var newTail = list._tail;
    var newRoot = list._root;
    var didAlter = MakeRef(DID_ALTER);
    if (index >= getTailOffset(list._capacity)) {
      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
    } else {
      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
    }

    if (!didAlter.value) {
      return list;
    }

    if (list.__ownerID) {
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
  }

  function updateVNode(node, ownerID, level, index, value, didAlter) {
    var idx = (index >>> level) & MASK;
    var nodeHas = node && idx < node.array.length;
    if (!nodeHas && value === undefined) {
      return node;
    }

    var newNode;

    if (level > 0) {
      var lowerNode = node && node.array[idx];
      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
      if (newLowerNode === lowerNode) {
        return node;
      }
      newNode = editableVNode(node, ownerID);
      newNode.array[idx] = newLowerNode;
      return newNode;
    }

    if (nodeHas && node.array[idx] === value) {
      return node;
    }

    SetRef(didAlter);

    newNode = editableVNode(node, ownerID);
    if (value === undefined && idx === newNode.array.length - 1) {
      newNode.array.pop();
    } else {
      newNode.array[idx] = value;
    }
    return newNode;
  }

  function editableVNode(node, ownerID) {
    if (ownerID && node && ownerID === node.ownerID) {
      return node;
    }
    return new VNode(node ? node.array.slice() : [], ownerID);
  }

  function listNodeFor(list, rawIndex) {
    if (rawIndex >= getTailOffset(list._capacity)) {
      return list._tail;
    }
    if (rawIndex < 1 << (list._level + SHIFT)) {
      var node = list._root;
      var level = list._level;
      while (node && level > 0) {
        node = node.array[(rawIndex >>> level) & MASK];
        level -= SHIFT;
      }
      return node;
    }
  }

  function setListBounds(list, begin, end) {
    // Sanitize begin & end using this shorthand for ToInt32(argument)
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      end = end | 0;
    }
    var owner = list.__ownerID || new OwnerID();
    var oldOrigin = list._origin;
    var oldCapacity = list._capacity;
    var newOrigin = oldOrigin + begin;
    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
      return list;
    }

    // If it's going to end after it starts, it's empty.
    if (newOrigin >= newCapacity) {
      return list.clear();
    }

    var newLevel = list._level;
    var newRoot = list._root;

    // New origin might need creating a higher root.
    var offsetShift = 0;
    while (newOrigin + offsetShift < 0) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
      newLevel += SHIFT;
      offsetShift += 1 << newLevel;
    }
    if (offsetShift) {
      newOrigin += offsetShift;
      oldOrigin += offsetShift;
      newCapacity += offsetShift;
      oldCapacity += offsetShift;
    }

    var oldTailOffset = getTailOffset(oldCapacity);
    var newTailOffset = getTailOffset(newCapacity);

    // New size might need creating a higher root.
    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
      newLevel += SHIFT;
    }

    // Locate or create the new tail.
    var oldTail = list._tail;
    var newTail = newTailOffset < oldTailOffset ?
      listNodeFor(list, newCapacity - 1) :
      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;

    // Merge Tail into tree.
    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
      newRoot = editableVNode(newRoot, owner);
      var node = newRoot;
      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
        var idx = (oldTailOffset >>> level) & MASK;
        node = node.array[idx] = editableVNode(node.array[idx], owner);
      }
      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
    }

    // If the size has been reduced, there's a chance the tail needs to be trimmed.
    if (newCapacity < oldCapacity) {
      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
    }

    // If the new origin is within the tail, then we do not need a root.
    if (newOrigin >= newTailOffset) {
      newOrigin -= newTailOffset;
      newCapacity -= newTailOffset;
      newLevel = SHIFT;
      newRoot = null;
      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);

    // Otherwise, if the root has been trimmed, garbage collect.
    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
      offsetShift = 0;

      // Identify the new top root node of the subtree of the old root.
      while (newRoot) {
        var beginIndex = (newOrigin >>> newLevel) & MASK;
        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
          break;
        }
        if (beginIndex) {
          offsetShift += (1 << newLevel) * beginIndex;
        }
        newLevel -= SHIFT;
        newRoot = newRoot.array[beginIndex];
      }

      // Trim the new sides of the new root.
      if (newRoot && newOrigin > oldOrigin) {
        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
      }
      if (newRoot && newTailOffset < oldTailOffset) {
        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
      }
      if (offsetShift) {
        newOrigin -= offsetShift;
        newCapacity -= offsetShift;
      }
    }

    if (list.__ownerID) {
      list.size = newCapacity - newOrigin;
      list._origin = newOrigin;
      list._capacity = newCapacity;
      list._level = newLevel;
      list._root = newRoot;
      list._tail = newTail;
      list.__hash = undefined;
      list.__altered = true;
      return list;
    }
    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
  }

  function mergeIntoListWith(list, merger, iterables) {
    var iters = [];
    var maxSize = 0;
    for (var ii = 0; ii < iterables.length; ii++) {
      var value = iterables[ii];
      var iter = IndexedIterable(value);
      if (iter.size > maxSize) {
        maxSize = iter.size;
      }
      if (!isIterable(value)) {
        iter = iter.map(function(v ) {return fromJS(v)});
      }
      iters.push(iter);
    }
    if (maxSize > list.size) {
      list = list.setSize(maxSize);
    }
    return mergeIntoCollectionWith(list, merger, iters);
  }

  function getTailOffset(size) {
    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
  }

  createClass(OrderedMap, Map);

    // @pragma Construction

    function OrderedMap(value) {
      return value === null || value === undefined ? emptyOrderedMap() :
        isOrderedMap(value) ? value :
        emptyOrderedMap().withMutations(function(map ) {
          var iter = KeyedIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v, k)  {return map.set(k, v)});
        });
    }

    OrderedMap.of = function(/*...values*/) {
      return this(arguments);
    };

    OrderedMap.prototype.toString = function() {
      return this.__toString('OrderedMap {', '}');
    };

    // @pragma Access

    OrderedMap.prototype.get = function(k, notSetValue) {
      var index = this._map.get(k);
      return index !== undefined ? this._list.get(index)[1] : notSetValue;
    };

    // @pragma Modification

    OrderedMap.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._map.clear();
        this._list.clear();
        return this;
      }
      return emptyOrderedMap();
    };

    OrderedMap.prototype.set = function(k, v) {
      return updateOrderedMap(this, k, v);
    };

    OrderedMap.prototype.remove = function(k) {
      return updateOrderedMap(this, k, NOT_SET);
    };

    OrderedMap.prototype.wasAltered = function() {
      return this._map.wasAltered() || this._list.wasAltered();
    };

    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._list.__iterate(
        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
        reverse
      );
    };

    OrderedMap.prototype.__iterator = function(type, reverse) {
      return this._list.fromEntrySeq().__iterator(type, reverse);
    };

    OrderedMap.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      var newList = this._list.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        this._list = newList;
        return this;
      }
      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
    };


  function isOrderedMap(maybeOrderedMap) {
    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
  }

  OrderedMap.isOrderedMap = isOrderedMap;

  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;



  function makeOrderedMap(map, list, ownerID, hash) {
    var omap = Object.create(OrderedMap.prototype);
    omap.size = map ? map.size : 0;
    omap._map = map;
    omap._list = list;
    omap.__ownerID = ownerID;
    omap.__hash = hash;
    return omap;
  }

  var EMPTY_ORDERED_MAP;
  function emptyOrderedMap() {
    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
  }

  function updateOrderedMap(omap, k, v) {
    var map = omap._map;
    var list = omap._list;
    var i = map.get(k);
    var has = i !== undefined;
    var newMap;
    var newList;
    if (v === NOT_SET) { // removed
      if (!has) {
        return omap;
      }
      if (list.size >= SIZE && list.size >= map.size * 2) {
        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
        if (omap.__ownerID) {
          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
        }
      } else {
        newMap = map.remove(k);
        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
      }
    } else {
      if (has) {
        if (v === list.get(i)[1]) {
          return omap;
        }
        newMap = map;
        newList = list.set(i, [k, v]);
      } else {
        newMap = map.set(k, list.size);
        newList = list.set(list.size, [k, v]);
      }
    }
    if (omap.__ownerID) {
      omap.size = newMap.size;
      omap._map = newMap;
      omap._list = newList;
      omap.__hash = undefined;
      return omap;
    }
    return makeOrderedMap(newMap, newList);
  }

  createClass(ToKeyedSequence, KeyedSeq);
    function ToKeyedSequence(indexed, useKeys) {
      this._iter = indexed;
      this._useKeys = useKeys;
      this.size = indexed.size;
    }

    ToKeyedSequence.prototype.get = function(key, notSetValue) {
      return this._iter.get(key, notSetValue);
    };

    ToKeyedSequence.prototype.has = function(key) {
      return this._iter.has(key);
    };

    ToKeyedSequence.prototype.valueSeq = function() {
      return this._iter.valueSeq();
    };

    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
      var reversedSequence = reverseFactory(this, true);
      if (!this._useKeys) {
        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
      }
      return reversedSequence;
    };

    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
      var mappedSequence = mapFactory(this, mapper, context);
      if (!this._useKeys) {
        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
      }
      return mappedSequence;
    };

    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      var ii;
      return this._iter.__iterate(
        this._useKeys ?
          function(v, k)  {return fn(v, k, this$0)} :
          ((ii = reverse ? resolveSize(this) : 0),
            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
        reverse
      );
    };

    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
      if (this._useKeys) {
        return this._iter.__iterator(type, reverse);
      }
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      var ii = reverse ? resolveSize(this) : 0;
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step :
          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
      });
    };

  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;


  createClass(ToIndexedSequence, IndexedSeq);
    function ToIndexedSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    ToIndexedSequence.prototype.includes = function(value) {
      return this._iter.includes(value);
    };

    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      var iterations = 0;
      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
    };

    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step :
          iteratorValue(type, iterations++, step.value, step)
      });
    };



  createClass(ToSetSequence, SetSeq);
    function ToSetSequence(iter) {
      this._iter = iter;
      this.size = iter.size;
    }

    ToSetSequence.prototype.has = function(key) {
      return this._iter.includes(key);
    };

    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
    };

    ToSetSequence.prototype.__iterator = function(type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function()  {
        var step = iterator.next();
        return step.done ? step :
          iteratorValue(type, step.value, step.value, step);
      });
    };



  createClass(FromEntriesSequence, KeyedSeq);
    function FromEntriesSequence(entries) {
      this._iter = entries;
      this.size = entries.size;
    }

    FromEntriesSequence.prototype.entrySeq = function() {
      return this._iter.toSeq();
    };

    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._iter.__iterate(function(entry ) {
        // Check if entry exists first so array access doesn't throw for holes
        // in the parent iteration.
        if (entry) {
          validateEntry(entry);
          var indexedIterable = isIterable(entry);
          return fn(
            indexedIterable ? entry.get(1) : entry[1],
            indexedIterable ? entry.get(0) : entry[0],
            this$0
          );
        }
      }, reverse);
    };

    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
      return new Iterator(function()  {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          // Check if entry exists first so array access doesn't throw for holes
          // in the parent iteration.
          if (entry) {
            validateEntry(entry);
            var indexedIterable = isIterable(entry);
            return iteratorValue(
              type,
              indexedIterable ? entry.get(0) : entry[0],
              indexedIterable ? entry.get(1) : entry[1],
              step
            );
          }
        }
      });
    };


  ToIndexedSequence.prototype.cacheResult =
  ToKeyedSequence.prototype.cacheResult =
  ToSetSequence.prototype.cacheResult =
  FromEntriesSequence.prototype.cacheResult =
    cacheResultThrough;


  function flipFactory(iterable) {
    var flipSequence = makeSequence(iterable);
    flipSequence._iter = iterable;
    flipSequence.size = iterable.size;
    flipSequence.flip = function()  {return iterable};
    flipSequence.reverse = function () {
      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
      reversedSequence.flip = function()  {return iterable.reverse()};
      return reversedSequence;
    };
    flipSequence.has = function(key ) {return iterable.includes(key)};
    flipSequence.includes = function(key ) {return iterable.has(key)};
    flipSequence.cacheResult = cacheResultThrough;
    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
    }
    flipSequence.__iteratorUncached = function(type, reverse) {
      if (type === ITERATE_ENTRIES) {
        var iterator = iterable.__iterator(type, reverse);
        return new Iterator(function()  {
          var step = iterator.next();
          if (!step.done) {
            var k = step.value[0];
            step.value[0] = step.value[1];
            step.value[1] = k;
          }
          return step;
        });
      }
      return iterable.__iterator(
        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
        reverse
      );
    }
    return flipSequence;
  }


  function mapFactory(iterable, mapper, context) {
    var mappedSequence = makeSequence(iterable);
    mappedSequence.size = iterable.size;
    mappedSequence.has = function(key ) {return iterable.has(key)};
    mappedSequence.get = function(key, notSetValue)  {
      var v = iterable.get(key, NOT_SET);
      return v === NOT_SET ?
        notSetValue :
        mapper.call(context, v, key, iterable);
    };
    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      return iterable.__iterate(
        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
        reverse
      );
    }
    mappedSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      return new Iterator(function()  {
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var key = entry[0];
        return iteratorValue(
          type,
          key,
          mapper.call(context, entry[1], key, iterable),
          step
        );
      });
    }
    return mappedSequence;
  }


  function reverseFactory(iterable, useKeys) {
    var reversedSequence = makeSequence(iterable);
    reversedSequence._iter = iterable;
    reversedSequence.size = iterable.size;
    reversedSequence.reverse = function()  {return iterable};
    if (iterable.flip) {
      reversedSequence.flip = function () {
        var flipSequence = flipFactory(iterable);
        flipSequence.reverse = function()  {return iterable.flip()};
        return flipSequence;
      };
    }
    reversedSequence.get = function(key, notSetValue) 
      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
    reversedSequence.has = function(key )
      {return iterable.has(useKeys ? key : -1 - key)};
    reversedSequence.includes = function(value ) {return iterable.includes(value)};
    reversedSequence.cacheResult = cacheResultThrough;
    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
    };
    reversedSequence.__iterator =
      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
    return reversedSequence;
  }


  function filterFactory(iterable, predicate, context, useKeys) {
    var filterSequence = makeSequence(iterable);
    if (useKeys) {
      filterSequence.has = function(key ) {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
      };
      filterSequence.get = function(key, notSetValue)  {
        var v = iterable.get(key, NOT_SET);
        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
          v : notSetValue;
      };
    }
    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function(v, k, c)  {
        if (predicate.call(context, v, k, c)) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      }, reverse);
      return iterations;
    };
    filterSequence.__iteratorUncached = function (type, reverse) {
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterations = 0;
      return new Iterator(function()  {
        while (true) {
          var step = iterator.next();
          if (step.done) {
            return step;
          }
          var entry = step.value;
          var key = entry[0];
          var value = entry[1];
          if (predicate.call(context, value, key, iterable)) {
            return iteratorValue(type, useKeys ? key : iterations++, value, step);
          }
        }
      });
    }
    return filterSequence;
  }


  function countByFactory(iterable, grouper, context) {
    var groups = Map().asMutable();
    iterable.__iterate(function(v, k)  {
      groups.update(
        grouper.call(context, v, k, iterable),
        0,
        function(a ) {return a + 1}
      );
    });
    return groups.asImmutable();
  }


  function groupByFactory(iterable, grouper, context) {
    var isKeyedIter = isKeyed(iterable);
    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
    iterable.__iterate(function(v, k)  {
      groups.update(
        grouper.call(context, v, k, iterable),
        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
      );
    });
    var coerce = iterableClass(iterable);
    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
  }


  function sliceFactory(iterable, begin, end, useKeys) {
    var originalSize = iterable.size;

    // Sanitize begin & end using this shorthand for ToInt32(argument)
    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
    if (begin !== undefined) {
      begin = begin | 0;
    }
    if (end !== undefined) {
      if (end === Infinity) {
        end = originalSize;
      } else {
        end = end | 0;
      }
    }

    if (wholeSlice(begin, end, originalSize)) {
      return iterable;
    }

    var resolvedBegin = resolveBegin(begin, originalSize);
    var resolvedEnd = resolveEnd(end, originalSize);

    // begin or end will be NaN if they were provided as negative numbers and
    // this iterable's size is unknown. In that case, cache first so there is
    // a known size and these do not resolve to NaN.
    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
    }

    // Note: resolvedEnd is undefined when the original sequence's length is
    // unknown and this slice did not supply an end and should contain all
    // elements after resolvedBegin.
    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
    var resolvedSize = resolvedEnd - resolvedBegin;
    var sliceSize;
    if (resolvedSize === resolvedSize) {
      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
    }

    var sliceSeq = makeSequence(iterable);

    // If iterable.size is undefined, the size of the realized sliceSeq is
    // unknown at this point unless the number of items to slice is 0
    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;

    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
      sliceSeq.get = function (index, notSetValue) {
        index = wrapIndex(this, index);
        return index >= 0 && index < sliceSize ?
          iterable.get(index + resolvedBegin, notSetValue) :
          notSetValue;
      }
    }

    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
      if (sliceSize === 0) {
        return 0;
      }
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var skipped = 0;
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function(v, k)  {
        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
                 iterations !== sliceSize;
        }
      });
      return iterations;
    };

    sliceSeq.__iteratorUncached = function(type, reverse) {
      if (sliceSize !== 0 && reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      // Don't bother instantiating parent iterator if taking 0.
      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
      var skipped = 0;
      var iterations = 0;
      return new Iterator(function()  {
        while (skipped++ < resolvedBegin) {
          iterator.next();
        }
        if (++iterations > sliceSize) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (useKeys || type === ITERATE_VALUES) {
          return step;
        } else if (type === ITERATE_KEYS) {
          return iteratorValue(type, iterations - 1, undefined, step);
        } else {
          return iteratorValue(type, iterations - 1, step.value[1], step);
        }
      });
    }

    return sliceSeq;
  }


  function takeWhileFactory(iterable, predicate, context) {
    var takeSequence = makeSequence(iterable);
    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var iterations = 0;
      iterable.__iterate(function(v, k, c) 
        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
      );
      return iterations;
    };
    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var iterating = true;
      return new Iterator(function()  {
        if (!iterating) {
          return iteratorDone();
        }
        var step = iterator.next();
        if (step.done) {
          return step;
        }
        var entry = step.value;
        var k = entry[0];
        var v = entry[1];
        if (!predicate.call(context, v, k, this$0)) {
          iterating = false;
          return iteratorDone();
        }
        return type === ITERATE_ENTRIES ? step :
          iteratorValue(type, k, v, step);
      });
    };
    return takeSequence;
  }


  function skipWhileFactory(iterable, predicate, context, useKeys) {
    var skipSequence = makeSequence(iterable);
    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterate(fn, reverse);
      }
      var isSkipping = true;
      var iterations = 0;
      iterable.__iterate(function(v, k, c)  {
        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
          iterations++;
          return fn(v, useKeys ? k : iterations - 1, this$0);
        }
      });
      return iterations;
    };
    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
      if (reverse) {
        return this.cacheResult().__iterator(type, reverse);
      }
      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
      var skipping = true;
      var iterations = 0;
      return new Iterator(function()  {
        var step, k, v;
        do {
          step = iterator.next();
          if (step.done) {
            if (useKeys || type === ITERATE_VALUES) {
              return step;
            } else if (type === ITERATE_KEYS) {
              return iteratorValue(type, iterations++, undefined, step);
            } else {
              return iteratorValue(type, iterations++, step.value[1], step);
            }
          }
          var entry = step.value;
          k = entry[0];
          v = entry[1];
          skipping && (skipping = predicate.call(context, v, k, this$0));
        } while (skipping);
        return type === ITERATE_ENTRIES ? step :
          iteratorValue(type, k, v, step);
      });
    };
    return skipSequence;
  }


  function concatFactory(iterable, values) {
    var isKeyedIterable = isKeyed(iterable);
    var iters = [iterable].concat(values).map(function(v ) {
      if (!isIterable(v)) {
        v = isKeyedIterable ?
          keyedSeqFromValue(v) :
          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
      } else if (isKeyedIterable) {
        v = KeyedIterable(v);
      }
      return v;
    }).filter(function(v ) {return v.size !== 0});

    if (iters.length === 0) {
      return iterable;
    }

    if (iters.length === 1) {
      var singleton = iters[0];
      if (singleton === iterable ||
          isKeyedIterable && isKeyed(singleton) ||
          isIndexed(iterable) && isIndexed(singleton)) {
        return singleton;
      }
    }

    var concatSeq = new ArraySeq(iters);
    if (isKeyedIterable) {
      concatSeq = concatSeq.toKeyedSeq();
    } else if (!isIndexed(iterable)) {
      concatSeq = concatSeq.toSetSeq();
    }
    concatSeq = concatSeq.flatten(true);
    concatSeq.size = iters.reduce(
      function(sum, seq)  {
        if (sum !== undefined) {
          var size = seq.size;
          if (size !== undefined) {
            return sum + size;
          }
        }
      },
      0
    );
    return concatSeq;
  }


  function flattenFactory(iterable, depth, useKeys) {
    var flatSequence = makeSequence(iterable);
    flatSequence.__iterateUncached = function(fn, reverse) {
      var iterations = 0;
      var stopped = false;
      function flatDeep(iter, currentDepth) {var this$0 = this;
        iter.__iterate(function(v, k)  {
          if ((!depth || currentDepth < depth) && isIterable(v)) {
            flatDeep(v, currentDepth + 1);
          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
            stopped = true;
          }
          return !stopped;
        }, reverse);
      }
      flatDeep(iterable, 0);
      return iterations;
    }
    flatSequence.__iteratorUncached = function(type, reverse) {
      var iterator = iterable.__iterator(type, reverse);
      var stack = [];
      var iterations = 0;
      return new Iterator(function()  {
        while (iterator) {
          var step = iterator.next();
          if (step.done !== false) {
            iterator = stack.pop();
            continue;
          }
          var v = step.value;
          if (type === ITERATE_ENTRIES) {
            v = v[1];
          }
          if ((!depth || stack.length < depth) && isIterable(v)) {
            stack.push(iterator);
            iterator = v.__iterator(type, reverse);
          } else {
            return useKeys ? step : iteratorValue(type, iterations++, v, step);
          }
        }
        return iteratorDone();
      });
    }
    return flatSequence;
  }


  function flatMapFactory(iterable, mapper, context) {
    var coerce = iterableClass(iterable);
    return iterable.toSeq().map(
      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
    ).flatten(true);
  }


  function interposeFactory(iterable, separator) {
    var interposedSequence = makeSequence(iterable);
    interposedSequence.size = iterable.size && iterable.size * 2 -1;
    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
      var iterations = 0;
      iterable.__iterate(function(v, k) 
        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
        fn(v, iterations++, this$0) !== false},
        reverse
      );
      return iterations;
    };
    interposedSequence.__iteratorUncached = function(type, reverse) {
      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
      var iterations = 0;
      var step;
      return new Iterator(function()  {
        if (!step || iterations % 2) {
          step = iterator.next();
          if (step.done) {
            return step;
          }
        }
        return iterations % 2 ?
          iteratorValue(type, iterations++, separator) :
          iteratorValue(type, iterations++, step.value, step);
      });
    };
    return interposedSequence;
  }


  function sortFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    var isKeyedIterable = isKeyed(iterable);
    var index = 0;
    var entries = iterable.toSeq().map(
      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
    ).toArray();
    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
      isKeyedIterable ?
      function(v, i)  { entries[i].length = 2; } :
      function(v, i)  { entries[i] = v[1]; }
    );
    return isKeyedIterable ? KeyedSeq(entries) :
      isIndexed(iterable) ? IndexedSeq(entries) :
      SetSeq(entries);
  }


  function maxFactory(iterable, comparator, mapper) {
    if (!comparator) {
      comparator = defaultComparator;
    }
    if (mapper) {
      var entry = iterable.toSeq()
        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
      return entry && entry[0];
    } else {
      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
    }
  }

  function maxCompare(comparator, a, b) {
    var comp = comparator(b, a);
    // b is considered the new max if the comparator declares them equal, but
    // they are not equal and b is in fact a nullish value.
    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
  }


  function zipWithFactory(keyIter, zipper, iters) {
    var zipSequence = makeSequence(keyIter);
    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
    // Note: this a generic base implementation of __iterate in terms of
    // __iterator which may be more generically useful in the future.
    zipSequence.__iterate = function(fn, reverse) {
      /* generic:
      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        iterations++;
        if (fn(step.value[1], step.value[0], this) === false) {
          break;
        }
      }
      return iterations;
      */
      // indexed:
      var iterator = this.__iterator(ITERATE_VALUES, reverse);
      var step;
      var iterations = 0;
      while (!(step = iterator.next()).done) {
        if (fn(step.value, iterations++, this) === false) {
          break;
        }
      }
      return iterations;
    };
    zipSequence.__iteratorUncached = function(type, reverse) {
      var iterators = iters.map(function(i )
        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
      );
      var iterations = 0;
      var isDone = false;
      return new Iterator(function()  {
        var steps;
        if (!isDone) {
          steps = iterators.map(function(i ) {return i.next()});
          isDone = steps.some(function(s ) {return s.done});
        }
        if (isDone) {
          return iteratorDone();
        }
        return iteratorValue(
          type,
          iterations++,
          zipper.apply(null, steps.map(function(s ) {return s.value}))
        );
      });
    };
    return zipSequence
  }


  // #pragma Helper Functions

  function reify(iter, seq) {
    return isSeq(iter) ? seq : iter.constructor(seq);
  }

  function validateEntry(entry) {
    if (entry !== Object(entry)) {
      throw new TypeError('Expected [K, V] tuple: ' + entry);
    }
  }

  function resolveSize(iter) {
    assertNotInfinite(iter.size);
    return ensureSize(iter);
  }

  function iterableClass(iterable) {
    return isKeyed(iterable) ? KeyedIterable :
      isIndexed(iterable) ? IndexedIterable :
      SetIterable;
  }

  function makeSequence(iterable) {
    return Object.create(
      (
        isKeyed(iterable) ? KeyedSeq :
        isIndexed(iterable) ? IndexedSeq :
        SetSeq
      ).prototype
    );
  }

  function cacheResultThrough() {
    if (this._iter.cacheResult) {
      this._iter.cacheResult();
      this.size = this._iter.size;
      return this;
    } else {
      return Seq.prototype.cacheResult.call(this);
    }
  }

  function defaultComparator(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }

  function forceIterator(keyPath) {
    var iter = getIterator(keyPath);
    if (!iter) {
      // Array might not be iterable in this environment, so we need a fallback
      // to our wrapped type.
      if (!isArrayLike(keyPath)) {
        throw new TypeError('Expected iterable or array-like: ' + keyPath);
      }
      iter = getIterator(Iterable(keyPath));
    }
    return iter;
  }

  createClass(Record, KeyedCollection);

    function Record(defaultValues, name) {
      var hasInitialized;

      var RecordType = function Record(values) {
        if (values instanceof RecordType) {
          return values;
        }
        if (!(this instanceof RecordType)) {
          return new RecordType(values);
        }
        if (!hasInitialized) {
          hasInitialized = true;
          var keys = Object.keys(defaultValues);
          setProps(RecordTypePrototype, keys);
          RecordTypePrototype.size = keys.length;
          RecordTypePrototype._name = name;
          RecordTypePrototype._keys = keys;
          RecordTypePrototype._defaultValues = defaultValues;
        }
        this._map = Map(values);
      };

      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
      RecordTypePrototype.constructor = RecordType;

      return RecordType;
    }

    Record.prototype.toString = function() {
      return this.__toString(recordName(this) + ' {', '}');
    };

    // @pragma Access

    Record.prototype.has = function(k) {
      return this._defaultValues.hasOwnProperty(k);
    };

    Record.prototype.get = function(k, notSetValue) {
      if (!this.has(k)) {
        return notSetValue;
      }
      var defaultVal = this._defaultValues[k];
      return this._map ? this._map.get(k, defaultVal) : defaultVal;
    };

    // @pragma Modification

    Record.prototype.clear = function() {
      if (this.__ownerID) {
        this._map && this._map.clear();
        return this;
      }
      var RecordType = this.constructor;
      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
    };

    Record.prototype.set = function(k, v) {
      if (!this.has(k)) {
        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
      }
      if (this._map && !this._map.has(k)) {
        var defaultVal = this._defaultValues[k];
        if (v === defaultVal) {
          return this;
        }
      }
      var newMap = this._map && this._map.set(k, v);
      if (this.__ownerID || newMap === this._map) {
        return this;
      }
      return makeRecord(this, newMap);
    };

    Record.prototype.remove = function(k) {
      if (!this.has(k)) {
        return this;
      }
      var newMap = this._map && this._map.remove(k);
      if (this.__ownerID || newMap === this._map) {
        return this;
      }
      return makeRecord(this, newMap);
    };

    Record.prototype.wasAltered = function() {
      return this._map.wasAltered();
    };

    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
    };

    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
    };

    Record.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map && this._map.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        return this;
      }
      return makeRecord(this, newMap, ownerID);
    };


  var RecordPrototype = Record.prototype;
  RecordPrototype[DELETE] = RecordPrototype.remove;
  RecordPrototype.deleteIn =
  RecordPrototype.removeIn = MapPrototype.removeIn;
  RecordPrototype.merge = MapPrototype.merge;
  RecordPrototype.mergeWith = MapPrototype.mergeWith;
  RecordPrototype.mergeIn = MapPrototype.mergeIn;
  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
  RecordPrototype.setIn = MapPrototype.setIn;
  RecordPrototype.update = MapPrototype.update;
  RecordPrototype.updateIn = MapPrototype.updateIn;
  RecordPrototype.withMutations = MapPrototype.withMutations;
  RecordPrototype.asMutable = MapPrototype.asMutable;
  RecordPrototype.asImmutable = MapPrototype.asImmutable;


  function makeRecord(likeRecord, map, ownerID) {
    var record = Object.create(Object.getPrototypeOf(likeRecord));
    record._map = map;
    record.__ownerID = ownerID;
    return record;
  }

  function recordName(record) {
    return record._name || record.constructor.name || 'Record';
  }

  function setProps(prototype, names) {
    try {
      names.forEach(setProp.bind(undefined, prototype));
    } catch (error) {
      // Object.defineProperty failed. Probably IE8.
    }
  }

  function setProp(prototype, name) {
    Object.defineProperty(prototype, name, {
      get: function() {
        return this.get(name);
      },
      set: function(value) {
        invariant(this.__ownerID, 'Cannot set on an immutable record.');
        this.set(name, value);
      }
    });
  }

  createClass(Set, SetCollection);

    // @pragma Construction

    function Set(value) {
      return value === null || value === undefined ? emptySet() :
        isSet(value) && !isOrdered(value) ? value :
        emptySet().withMutations(function(set ) {
          var iter = SetIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v ) {return set.add(v)});
        });
    }

    Set.of = function(/*...values*/) {
      return this(arguments);
    };

    Set.fromKeys = function(value) {
      return this(KeyedIterable(value).keySeq());
    };

    Set.prototype.toString = function() {
      return this.__toString('Set {', '}');
    };

    // @pragma Access

    Set.prototype.has = function(value) {
      return this._map.has(value);
    };

    // @pragma Modification

    Set.prototype.add = function(value) {
      return updateSet(this, this._map.set(value, true));
    };

    Set.prototype.remove = function(value) {
      return updateSet(this, this._map.remove(value));
    };

    Set.prototype.clear = function() {
      return updateSet(this, this._map.clear());
    };

    // @pragma Composition

    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
      iters = iters.filter(function(x ) {return x.size !== 0});
      if (iters.length === 0) {
        return this;
      }
      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
        return this.constructor(iters[0]);
      }
      return this.withMutations(function(set ) {
        for (var ii = 0; ii < iters.length; ii++) {
          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
        }
      });
    };

    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function(iter ) {return SetIterable(iter)});
      var originalSet = this;
      return this.withMutations(function(set ) {
        originalSet.forEach(function(value ) {
          if (!iters.every(function(iter ) {return iter.includes(value)})) {
            set.remove(value);
          }
        });
      });
    };

    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
      if (iters.length === 0) {
        return this;
      }
      iters = iters.map(function(iter ) {return SetIterable(iter)});
      var originalSet = this;
      return this.withMutations(function(set ) {
        originalSet.forEach(function(value ) {
          if (iters.some(function(iter ) {return iter.includes(value)})) {
            set.remove(value);
          }
        });
      });
    };

    Set.prototype.merge = function() {
      return this.union.apply(this, arguments);
    };

    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
      return this.union.apply(this, iters);
    };

    Set.prototype.sort = function(comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator));
    };

    Set.prototype.sortBy = function(mapper, comparator) {
      // Late binding
      return OrderedSet(sortFactory(this, comparator, mapper));
    };

    Set.prototype.wasAltered = function() {
      return this._map.wasAltered();
    };

    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
    };

    Set.prototype.__iterator = function(type, reverse) {
      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
    };

    Set.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      var newMap = this._map.__ensureOwner(ownerID);
      if (!ownerID) {
        this.__ownerID = ownerID;
        this._map = newMap;
        return this;
      }
      return this.__make(newMap, ownerID);
    };


  function isSet(maybeSet) {
    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
  }

  Set.isSet = isSet;

  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';

  var SetPrototype = Set.prototype;
  SetPrototype[IS_SET_SENTINEL] = true;
  SetPrototype[DELETE] = SetPrototype.remove;
  SetPrototype.mergeDeep = SetPrototype.merge;
  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
  SetPrototype.withMutations = MapPrototype.withMutations;
  SetPrototype.asMutable = MapPrototype.asMutable;
  SetPrototype.asImmutable = MapPrototype.asImmutable;

  SetPrototype.__empty = emptySet;
  SetPrototype.__make = makeSet;

  function updateSet(set, newMap) {
    if (set.__ownerID) {
      set.size = newMap.size;
      set._map = newMap;
      return set;
    }
    return newMap === set._map ? set :
      newMap.size === 0 ? set.__empty() :
      set.__make(newMap);
  }

  function makeSet(map, ownerID) {
    var set = Object.create(SetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_SET;
  function emptySet() {
    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
  }

  createClass(OrderedSet, Set);

    // @pragma Construction

    function OrderedSet(value) {
      return value === null || value === undefined ? emptyOrderedSet() :
        isOrderedSet(value) ? value :
        emptyOrderedSet().withMutations(function(set ) {
          var iter = SetIterable(value);
          assertNotInfinite(iter.size);
          iter.forEach(function(v ) {return set.add(v)});
        });
    }

    OrderedSet.of = function(/*...values*/) {
      return this(arguments);
    };

    OrderedSet.fromKeys = function(value) {
      return this(KeyedIterable(value).keySeq());
    };

    OrderedSet.prototype.toString = function() {
      return this.__toString('OrderedSet {', '}');
    };


  function isOrderedSet(maybeOrderedSet) {
    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
  }

  OrderedSet.isOrderedSet = isOrderedSet;

  var OrderedSetPrototype = OrderedSet.prototype;
  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;

  OrderedSetPrototype.__empty = emptyOrderedSet;
  OrderedSetPrototype.__make = makeOrderedSet;

  function makeOrderedSet(map, ownerID) {
    var set = Object.create(OrderedSetPrototype);
    set.size = map ? map.size : 0;
    set._map = map;
    set.__ownerID = ownerID;
    return set;
  }

  var EMPTY_ORDERED_SET;
  function emptyOrderedSet() {
    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
  }

  createClass(Stack, IndexedCollection);

    // @pragma Construction

    function Stack(value) {
      return value === null || value === undefined ? emptyStack() :
        isStack(value) ? value :
        emptyStack().unshiftAll(value);
    }

    Stack.of = function(/*...values*/) {
      return this(arguments);
    };

    Stack.prototype.toString = function() {
      return this.__toString('Stack [', ']');
    };

    // @pragma Access

    Stack.prototype.get = function(index, notSetValue) {
      var head = this._head;
      index = wrapIndex(this, index);
      while (head && index--) {
        head = head.next;
      }
      return head ? head.value : notSetValue;
    };

    Stack.prototype.peek = function() {
      return this._head && this._head.value;
    };

    // @pragma Modification

    Stack.prototype.push = function(/*...values*/) {
      if (arguments.length === 0) {
        return this;
      }
      var newSize = this.size + arguments.length;
      var head = this._head;
      for (var ii = arguments.length - 1; ii >= 0; ii--) {
        head = {
          value: arguments[ii],
          next: head
        };
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pushAll = function(iter) {
      iter = IndexedIterable(iter);
      if (iter.size === 0) {
        return this;
      }
      assertNotInfinite(iter.size);
      var newSize = this.size;
      var head = this._head;
      iter.reverse().forEach(function(value ) {
        newSize++;
        head = {
          value: value,
          next: head
        };
      });
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    Stack.prototype.pop = function() {
      return this.slice(1);
    };

    Stack.prototype.unshift = function(/*...values*/) {
      return this.push.apply(this, arguments);
    };

    Stack.prototype.unshiftAll = function(iter) {
      return this.pushAll(iter);
    };

    Stack.prototype.shift = function() {
      return this.pop.apply(this, arguments);
    };

    Stack.prototype.clear = function() {
      if (this.size === 0) {
        return this;
      }
      if (this.__ownerID) {
        this.size = 0;
        this._head = undefined;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return emptyStack();
    };

    Stack.prototype.slice = function(begin, end) {
      if (wholeSlice(begin, end, this.size)) {
        return this;
      }
      var resolvedBegin = resolveBegin(begin, this.size);
      var resolvedEnd = resolveEnd(end, this.size);
      if (resolvedEnd !== this.size) {
        // super.slice(begin, end);
        return IndexedCollection.prototype.slice.call(this, begin, end);
      }
      var newSize = this.size - resolvedBegin;
      var head = this._head;
      while (resolvedBegin--) {
        head = head.next;
      }
      if (this.__ownerID) {
        this.size = newSize;
        this._head = head;
        this.__hash = undefined;
        this.__altered = true;
        return this;
      }
      return makeStack(newSize, head);
    };

    // @pragma Mutability

    Stack.prototype.__ensureOwner = function(ownerID) {
      if (ownerID === this.__ownerID) {
        return this;
      }
      if (!ownerID) {
        this.__ownerID = ownerID;
        this.__altered = false;
        return this;
      }
      return makeStack(this.size, this._head, ownerID, this.__hash);
    };

    // @pragma Iteration

    Stack.prototype.__iterate = function(fn, reverse) {
      if (reverse) {
        return this.reverse().__iterate(fn);
      }
      var iterations = 0;
      var node = this._head;
      while (node) {
        if (fn(node.value, iterations++, this) === false) {
          break;
        }
        node = node.next;
      }
      return iterations;
    };

    Stack.prototype.__iterator = function(type, reverse) {
      if (reverse) {
        return this.reverse().__iterator(type);
      }
      var iterations = 0;
      var node = this._head;
      return new Iterator(function()  {
        if (node) {
          var value = node.value;
          node = node.next;
          return iteratorValue(type, iterations++, value);
        }
        return iteratorDone();
      });
    };


  function isStack(maybeStack) {
    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
  }

  Stack.isStack = isStack;

  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';

  var StackPrototype = Stack.prototype;
  StackPrototype[IS_STACK_SENTINEL] = true;
  StackPrototype.withMutations = MapPrototype.withMutations;
  StackPrototype.asMutable = MapPrototype.asMutable;
  StackPrototype.asImmutable = MapPrototype.asImmutable;
  StackPrototype.wasAltered = MapPrototype.wasAltered;


  function makeStack(size, head, ownerID, hash) {
    var map = Object.create(StackPrototype);
    map.size = size;
    map._head = head;
    map.__ownerID = ownerID;
    map.__hash = hash;
    map.__altered = false;
    return map;
  }

  var EMPTY_STACK;
  function emptyStack() {
    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
  }

  /**
   * Contributes additional methods to a constructor
   */
  function mixin(ctor, methods) {
    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
    Object.keys(methods).forEach(keyCopier);
    Object.getOwnPropertySymbols &&
      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
    return ctor;
  }

  Iterable.Iterator = Iterator;

  mixin(Iterable, {

    // ### Conversion to other types

    toArray: function() {
      assertNotInfinite(this.size);
      var array = new Array(this.size || 0);
      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
      return array;
    },

    toIndexedSeq: function() {
      return new ToIndexedSequence(this);
    },

    toJS: function() {
      return this.toSeq().map(
        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
      ).__toJS();
    },

    toJSON: function() {
      return this.toSeq().map(
        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
      ).__toJS();
    },

    toKeyedSeq: function() {
      return new ToKeyedSequence(this, true);
    },

    toMap: function() {
      // Use Late Binding here to solve the circular dependency.
      return Map(this.toKeyedSeq());
    },

    toObject: function() {
      assertNotInfinite(this.size);
      var object = {};
      this.__iterate(function(v, k)  { object[k] = v; });
      return object;
    },

    toOrderedMap: function() {
      // Use Late Binding here to solve the circular dependency.
      return OrderedMap(this.toKeyedSeq());
    },

    toOrderedSet: function() {
      // Use Late Binding here to solve the circular dependency.
      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
    },

    toSet: function() {
      // Use Late Binding here to solve the circular dependency.
      return Set(isKeyed(this) ? this.valueSeq() : this);
    },

    toSetSeq: function() {
      return new ToSetSequence(this);
    },

    toSeq: function() {
      return isIndexed(this) ? this.toIndexedSeq() :
        isKeyed(this) ? this.toKeyedSeq() :
        this.toSetSeq();
    },

    toStack: function() {
      // Use Late Binding here to solve the circular dependency.
      return Stack(isKeyed(this) ? this.valueSeq() : this);
    },

    toList: function() {
      // Use Late Binding here to solve the circular dependency.
      return List(isKeyed(this) ? this.valueSeq() : this);
    },


    // ### Common JavaScript methods and properties

    toString: function() {
      return '[Iterable]';
    },

    __toString: function(head, tail) {
      if (this.size === 0) {
        return head + tail;
      }
      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
    },


    // ### ES6 Collection methods (ES6 Array and Map)

    concat: function() {var values = SLICE$0.call(arguments, 0);
      return reify(this, concatFactory(this, values));
    },

    includes: function(searchValue) {
      return this.some(function(value ) {return is(value, searchValue)});
    },

    entries: function() {
      return this.__iterator(ITERATE_ENTRIES);
    },

    every: function(predicate, context) {
      assertNotInfinite(this.size);
      var returnValue = true;
      this.__iterate(function(v, k, c)  {
        if (!predicate.call(context, v, k, c)) {
          returnValue = false;
          return false;
        }
      });
      return returnValue;
    },

    filter: function(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, true));
    },

    find: function(predicate, context, notSetValue) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[1] : notSetValue;
    },

    forEach: function(sideEffect, context) {
      assertNotInfinite(this.size);
      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
    },

    join: function(separator) {
      assertNotInfinite(this.size);
      separator = separator !== undefined ? '' + separator : ',';
      var joined = '';
      var isFirst = true;
      this.__iterate(function(v ) {
        isFirst ? (isFirst = false) : (joined += separator);
        joined += v !== null && v !== undefined ? v.toString() : '';
      });
      return joined;
    },

    keys: function() {
      return this.__iterator(ITERATE_KEYS);
    },

    map: function(mapper, context) {
      return reify(this, mapFactory(this, mapper, context));
    },

    reduce: function(reducer, initialReduction, context) {
      assertNotInfinite(this.size);
      var reduction;
      var useFirst;
      if (arguments.length < 2) {
        useFirst = true;
      } else {
        reduction = initialReduction;
      }
      this.__iterate(function(v, k, c)  {
        if (useFirst) {
          useFirst = false;
          reduction = v;
        } else {
          reduction = reducer.call(context, reduction, v, k, c);
        }
      });
      return reduction;
    },

    reduceRight: function(reducer, initialReduction, context) {
      var reversed = this.toKeyedSeq().reverse();
      return reversed.reduce.apply(reversed, arguments);
    },

    reverse: function() {
      return reify(this, reverseFactory(this, true));
    },

    slice: function(begin, end) {
      return reify(this, sliceFactory(this, begin, end, true));
    },

    some: function(predicate, context) {
      return !this.every(not(predicate), context);
    },

    sort: function(comparator) {
      return reify(this, sortFactory(this, comparator));
    },

    values: function() {
      return this.__iterator(ITERATE_VALUES);
    },


    // ### More sequential methods

    butLast: function() {
      return this.slice(0, -1);
    },

    isEmpty: function() {
      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
    },

    count: function(predicate, context) {
      return ensureSize(
        predicate ? this.toSeq().filter(predicate, context) : this
      );
    },

    countBy: function(grouper, context) {
      return countByFactory(this, grouper, context);
    },

    equals: function(other) {
      return deepEqual(this, other);
    },

    entrySeq: function() {
      var iterable = this;
      if (iterable._cache) {
        // We cache as an entries array, so we can just return the cache!
        return new ArraySeq(iterable._cache);
      }
      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
      return entriesSequence;
    },

    filterNot: function(predicate, context) {
      return this.filter(not(predicate), context);
    },

    findEntry: function(predicate, context, notSetValue) {
      var found = notSetValue;
      this.__iterate(function(v, k, c)  {
        if (predicate.call(context, v, k, c)) {
          found = [k, v];
          return false;
        }
      });
      return found;
    },

    findKey: function(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry && entry[0];
    },

    findLast: function(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
    },

    findLastEntry: function(predicate, context, notSetValue) {
      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
    },

    findLastKey: function(predicate, context) {
      return this.toKeyedSeq().reverse().findKey(predicate, context);
    },

    first: function() {
      return this.find(returnTrue);
    },

    flatMap: function(mapper, context) {
      return reify(this, flatMapFactory(this, mapper, context));
    },

    flatten: function(depth) {
      return reify(this, flattenFactory(this, depth, true));
    },

    fromEntrySeq: function() {
      return new FromEntriesSequence(this);
    },

    get: function(searchKey, notSetValue) {
      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
    },

    getIn: function(searchKeyPath, notSetValue) {
      var nested = this;
      // Note: in an ES6 environment, we would prefer:
      // for (var key of searchKeyPath) {
      var iter = forceIterator(searchKeyPath);
      var step;
      while (!(step = iter.next()).done) {
        var key = step.value;
        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
        if (nested === NOT_SET) {
          return notSetValue;
        }
      }
      return nested;
    },

    groupBy: function(grouper, context) {
      return groupByFactory(this, grouper, context);
    },

    has: function(searchKey) {
      return this.get(searchKey, NOT_SET) !== NOT_SET;
    },

    hasIn: function(searchKeyPath) {
      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
    },

    isSubset: function(iter) {
      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
      return this.every(function(value ) {return iter.includes(value)});
    },

    isSuperset: function(iter) {
      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
      return iter.isSubset(this);
    },

    keyOf: function(searchValue) {
      return this.findKey(function(value ) {return is(value, searchValue)});
    },

    keySeq: function() {
      return this.toSeq().map(keyMapper).toIndexedSeq();
    },

    last: function() {
      return this.toSeq().reverse().first();
    },

    lastKeyOf: function(searchValue) {
      return this.toKeyedSeq().reverse().keyOf(searchValue);
    },

    max: function(comparator) {
      return maxFactory(this, comparator);
    },

    maxBy: function(mapper, comparator) {
      return maxFactory(this, comparator, mapper);
    },

    min: function(comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
    },

    minBy: function(mapper, comparator) {
      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
    },

    rest: function() {
      return this.slice(1);
    },

    skip: function(amount) {
      return this.slice(Math.max(0, amount));
    },

    skipLast: function(amount) {
      return reify(this, this.toSeq().reverse().skip(amount).reverse());
    },

    skipWhile: function(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, true));
    },

    skipUntil: function(predicate, context) {
      return this.skipWhile(not(predicate), context);
    },

    sortBy: function(mapper, comparator) {
      return reify(this, sortFactory(this, comparator, mapper));
    },

    take: function(amount) {
      return this.slice(0, Math.max(0, amount));
    },

    takeLast: function(amount) {
      return reify(this, this.toSeq().reverse().take(amount).reverse());
    },

    takeWhile: function(predicate, context) {
      return reify(this, takeWhileFactory(this, predicate, context));
    },

    takeUntil: function(predicate, context) {
      return this.takeWhile(not(predicate), context);
    },

    valueSeq: function() {
      return this.toIndexedSeq();
    },


    // ### Hashable Object

    hashCode: function() {
      return this.__hash || (this.__hash = hashIterable(this));
    }


    // ### Internal

    // abstract __iterate(fn, reverse)

    // abstract __iterator(type, reverse)
  });

  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';

  var IterablePrototype = Iterable.prototype;
  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
  IterablePrototype.__toJS = IterablePrototype.toArray;
  IterablePrototype.__toStringMapper = quoteString;
  IterablePrototype.inspect =
  IterablePrototype.toSource = function() { return this.toString(); };
  IterablePrototype.chain = IterablePrototype.flatMap;
  IterablePrototype.contains = IterablePrototype.includes;

  mixin(KeyedIterable, {

    // ### More sequential methods

    flip: function() {
      return reify(this, flipFactory(this));
    },

    mapEntries: function(mapper, context) {var this$0 = this;
      var iterations = 0;
      return reify(this,
        this.toSeq().map(
          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
        ).fromEntrySeq()
      );
    },

    mapKeys: function(mapper, context) {var this$0 = this;
      return reify(this,
        this.toSeq().flip().map(
          function(k, v)  {return mapper.call(context, k, v, this$0)}
        ).flip()
      );
    }

  });

  var KeyedIterablePrototype = KeyedIterable.prototype;
  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};



  mixin(IndexedIterable, {

    // ### Conversion to other types

    toKeyedSeq: function() {
      return new ToKeyedSequence(this, false);
    },


    // ### ES6 Collection methods (ES6 Array and Map)

    filter: function(predicate, context) {
      return reify(this, filterFactory(this, predicate, context, false));
    },

    findIndex: function(predicate, context) {
      var entry = this.findEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    indexOf: function(searchValue) {
      var key = this.keyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    lastIndexOf: function(searchValue) {
      var key = this.lastKeyOf(searchValue);
      return key === undefined ? -1 : key;
    },

    reverse: function() {
      return reify(this, reverseFactory(this, false));
    },

    slice: function(begin, end) {
      return reify(this, sliceFactory(this, begin, end, false));
    },

    splice: function(index, removeNum /*, ...values*/) {
      var numArgs = arguments.length;
      removeNum = Math.max(removeNum | 0, 0);
      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
        return this;
      }
      // If index is negative, it should resolve relative to the size of the
      // collection. However size may be expensive to compute if not cached, so
      // only call count() if the number is in fact negative.
      index = resolveBegin(index, index < 0 ? this.count() : this.size);
      var spliced = this.slice(0, index);
      return reify(
        this,
        numArgs === 1 ?
          spliced :
          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
      );
    },


    // ### More collection methods

    findLastIndex: function(predicate, context) {
      var entry = this.findLastEntry(predicate, context);
      return entry ? entry[0] : -1;
    },

    first: function() {
      return this.get(0);
    },

    flatten: function(depth) {
      return reify(this, flattenFactory(this, depth, false));
    },

    get: function(index, notSetValue) {
      index = wrapIndex(this, index);
      return (index < 0 || (this.size === Infinity ||
          (this.size !== undefined && index > this.size))) ?
        notSetValue :
        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
    },

    has: function(index) {
      index = wrapIndex(this, index);
      return index >= 0 && (this.size !== undefined ?
        this.size === Infinity || index < this.size :
        this.indexOf(index) !== -1
      );
    },

    interpose: function(separator) {
      return reify(this, interposeFactory(this, separator));
    },

    interleave: function(/*...iterables*/) {
      var iterables = [this].concat(arrCopy(arguments));
      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
      var interleaved = zipped.flatten(true);
      if (zipped.size) {
        interleaved.size = zipped.size * iterables.length;
      }
      return reify(this, interleaved);
    },

    keySeq: function() {
      return Range(0, this.size);
    },

    last: function() {
      return this.get(-1);
    },

    skipWhile: function(predicate, context) {
      return reify(this, skipWhileFactory(this, predicate, context, false));
    },

    zip: function(/*, ...iterables */) {
      var iterables = [this].concat(arrCopy(arguments));
      return reify(this, zipWithFactory(this, defaultZipper, iterables));
    },

    zipWith: function(zipper/*, ...iterables */) {
      var iterables = arrCopy(arguments);
      iterables[0] = this;
      return reify(this, zipWithFactory(this, zipper, iterables));
    }

  });

  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;



  mixin(SetIterable, {

    // ### ES6 Collection methods (ES6 Array and Map)

    get: function(value, notSetValue) {
      return this.has(value) ? value : notSetValue;
    },

    includes: function(value) {
      return this.has(value);
    },


    // ### More sequential methods

    keySeq: function() {
      return this.valueSeq();
    }

  });

  SetIterable.prototype.has = IterablePrototype.includes;
  SetIterable.prototype.contains = SetIterable.prototype.includes;


  // Mixin subclasses

  mixin(KeyedSeq, KeyedIterable.prototype);
  mixin(IndexedSeq, IndexedIterable.prototype);
  mixin(SetSeq, SetIterable.prototype);

  mixin(KeyedCollection, KeyedIterable.prototype);
  mixin(IndexedCollection, IndexedIterable.prototype);
  mixin(SetCollection, SetIterable.prototype);


  // #pragma Helper functions

  function keyMapper(v, k) {
    return k;
  }

  function entryMapper(v, k) {
    return [k, v];
  }

  function not(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    }
  }

  function neg(predicate) {
    return function() {
      return -predicate.apply(this, arguments);
    }
  }

  function quoteString(value) {
    return typeof value === 'string' ? JSON.stringify(value) : String(value);
  }

  function defaultZipper() {
    return arrCopy(arguments);
  }

  function defaultNegComparator(a, b) {
    return a < b ? 1 : a > b ? -1 : 0;
  }

  function hashIterable(iterable) {
    if (iterable.size === Infinity) {
      return 0;
    }
    var ordered = isOrdered(iterable);
    var keyed = isKeyed(iterable);
    var h = ordered ? 1 : 0;
    var size = iterable.__iterate(
      keyed ?
        ordered ?
          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
        ordered ?
          function(v ) { h = 31 * h + hash(v) | 0; } :
          function(v ) { h = h + hash(v) | 0; }
    );
    return murmurHashOfSize(size, h);
  }

  function murmurHashOfSize(size, h) {
    h = imul(h, 0xCC9E2D51);
    h = imul(h << 15 | h >>> -15, 0x1B873593);
    h = imul(h << 13 | h >>> -13, 5);
    h = (h + 0xE6546B64 | 0) ^ size;
    h = imul(h ^ h >>> 16, 0x85EBCA6B);
    h = imul(h ^ h >>> 13, 0xC2B2AE35);
    h = smi(h ^ h >>> 16);
    return h;
  }

  function hashMerge(a, b) {
    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
  }

  var Immutable = {

    Iterable: Iterable,

    Seq: Seq,
    Collection: Collection,
    Map: Map,
    OrderedMap: OrderedMap,
    List: List,
    Stack: Stack,
    Set: Set,
    OrderedSet: OrderedSet,

    Record: Record,
    Range: Range,
    Repeat: Repeat,

    is: is,
    fromJS: fromJS

  };

  return Immutable;

}));

/***/ }),

/***/ "./node_modules/indexof/index.js":
/*!***************************************!*\
  !*** ./node_modules/indexof/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {


var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/md5.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/md5.js/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/miller-rabin/lib/mr.js":
/*!*********************************************!*\
  !*** ./node_modules/miller-rabin/lib/mr.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var brorand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};


/***/ }),

/***/ "./node_modules/minimalistic-assert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/minimalistic-assert/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),

/***/ "./node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),

/***/ "./node_modules/multihashes/src/constants.js":
/*!***************************************************!*\
  !*** ./node_modules/multihashes/src/constants.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint quote-props: off */
/* eslint key-spacing: off */


exports.names = Object.freeze({
  'sha1':       0x11,
  'sha2-256':   0x12,
  'sha2-512':   0x13,
  'dbl-sha2-256': 0x56,
  'sha3-224':   0x17,
  'sha3-256':   0x16,
  'sha3-384':   0x15,
  'sha3-512':   0x14,
  'shake-128':  0x18,
  'shake-256':  0x19,
  'keccak-224': 0x1A,
  'keccak-256': 0x1B,
  'keccak-384': 0x1C,
  'keccak-512': 0x1D,
  'murmur3-128': 0x22,
  'murmur3-32':  0x23,
  'blake2b-8':   0xb201,
  'blake2b-16':  0xb202,
  'blake2b-24':  0xb203,
  'blake2b-32':  0xb204,
  'blake2b-40':  0xb205,
  'blake2b-48':  0xb206,
  'blake2b-56':  0xb207,
  'blake2b-64':  0xb208,
  'blake2b-72':  0xb209,
  'blake2b-80':  0xb20a,
  'blake2b-88':  0xb20b,
  'blake2b-96':  0xb20c,
  'blake2b-104': 0xb20d,
  'blake2b-112': 0xb20e,
  'blake2b-120': 0xb20f,
  'blake2b-128': 0xb210,
  'blake2b-136': 0xb211,
  'blake2b-144': 0xb212,
  'blake2b-152': 0xb213,
  'blake2b-160': 0xb214,
  'blake2b-168': 0xb215,
  'blake2b-176': 0xb216,
  'blake2b-184': 0xb217,
  'blake2b-192': 0xb218,
  'blake2b-200': 0xb219,
  'blake2b-208': 0xb21a,
  'blake2b-216': 0xb21b,
  'blake2b-224': 0xb21c,
  'blake2b-232': 0xb21d,
  'blake2b-240': 0xb21e,
  'blake2b-248': 0xb21f,
  'blake2b-256': 0xb220,
  'blake2b-264': 0xb221,
  'blake2b-272': 0xb222,
  'blake2b-280': 0xb223,
  'blake2b-288': 0xb224,
  'blake2b-296': 0xb225,
  'blake2b-304': 0xb226,
  'blake2b-312': 0xb227,
  'blake2b-320': 0xb228,
  'blake2b-328': 0xb229,
  'blake2b-336': 0xb22a,
  'blake2b-344': 0xb22b,
  'blake2b-352': 0xb22c,
  'blake2b-360': 0xb22d,
  'blake2b-368': 0xb22e,
  'blake2b-376': 0xb22f,
  'blake2b-384': 0xb230,
  'blake2b-392': 0xb231,
  'blake2b-400': 0xb232,
  'blake2b-408': 0xb233,
  'blake2b-416': 0xb234,
  'blake2b-424': 0xb235,
  'blake2b-432': 0xb236,
  'blake2b-440': 0xb237,
  'blake2b-448': 0xb238,
  'blake2b-456': 0xb239,
  'blake2b-464': 0xb23a,
  'blake2b-472': 0xb23b,
  'blake2b-480': 0xb23c,
  'blake2b-488': 0xb23d,
  'blake2b-496': 0xb23e,
  'blake2b-504': 0xb23f,
  'blake2b-512': 0xb240,
  'blake2s-8':   0xb241,
  'blake2s-16':  0xb242,
  'blake2s-24':  0xb243,
  'blake2s-32':  0xb244,
  'blake2s-40':  0xb245,
  'blake2s-48':  0xb246,
  'blake2s-56':  0xb247,
  'blake2s-64':  0xb248,
  'blake2s-72':  0xb249,
  'blake2s-80':  0xb24a,
  'blake2s-88':  0xb24b,
  'blake2s-96':  0xb24c,
  'blake2s-104': 0xb24d,
  'blake2s-112': 0xb24e,
  'blake2s-120': 0xb24f,
  'blake2s-128': 0xb250,
  'blake2s-136': 0xb251,
  'blake2s-144': 0xb252,
  'blake2s-152': 0xb253,
  'blake2s-160': 0xb254,
  'blake2s-168': 0xb255,
  'blake2s-176': 0xb256,
  'blake2s-184': 0xb257,
  'blake2s-192': 0xb258,
  'blake2s-200': 0xb259,
  'blake2s-208': 0xb25a,
  'blake2s-216': 0xb25b,
  'blake2s-224': 0xb25c,
  'blake2s-232': 0xb25d,
  'blake2s-240': 0xb25e,
  'blake2s-248': 0xb25f,
  'blake2s-256': 0xb260,
  'Skein256-8': 0xb301,
  'Skein256-16': 0xb302,
  'Skein256-24': 0xb303,
  'Skein256-32': 0xb304,
  'Skein256-40': 0xb305,
  'Skein256-48': 0xb306,
  'Skein256-56': 0xb307,
  'Skein256-64': 0xb308,
  'Skein256-72': 0xb309,
  'Skein256-80': 0xb30a,
  'Skein256-88': 0xb30b,
  'Skein256-96': 0xb30c,
  'Skein256-104': 0xb30d,
  'Skein256-112': 0xb30e,
  'Skein256-120': 0xb30f,
  'Skein256-128': 0xb310,
  'Skein256-136': 0xb311,
  'Skein256-144': 0xb312,
  'Skein256-152': 0xb313,
  'Skein256-160': 0xb314,
  'Skein256-168': 0xb315,
  'Skein256-176': 0xb316,
  'Skein256-184': 0xb317,
  'Skein256-192': 0xb318,
  'Skein256-200': 0xb319,
  'Skein256-208': 0xb31a,
  'Skein256-216': 0xb31b,
  'Skein256-224': 0xb31c,
  'Skein256-232': 0xb31d,
  'Skein256-240': 0xb31e,
  'Skein256-248': 0xb31f,
  'Skein256-256': 0xb320,
  'Skein512-8': 0xb321,
  'Skein512-16': 0xb322,
  'Skein512-24': 0xb323,
  'Skein512-32': 0xb324,
  'Skein512-40': 0xb325,
  'Skein512-48': 0xb326,
  'Skein512-56': 0xb327,
  'Skein512-64': 0xb328,
  'Skein512-72': 0xb329,
  'Skein512-80': 0xb32a,
  'Skein512-88': 0xb32b,
  'Skein512-96': 0xb32c,
  'Skein512-104': 0xb32d,
  'Skein512-112': 0xb32e,
  'Skein512-120': 0xb32f,
  'Skein512-128': 0xb330,
  'Skein512-136': 0xb331,
  'Skein512-144': 0xb332,
  'Skein512-152': 0xb333,
  'Skein512-160': 0xb334,
  'Skein512-168': 0xb335,
  'Skein512-176': 0xb336,
  'Skein512-184': 0xb337,
  'Skein512-192': 0xb338,
  'Skein512-200': 0xb339,
  'Skein512-208': 0xb33a,
  'Skein512-216': 0xb33b,
  'Skein512-224': 0xb33c,
  'Skein512-232': 0xb33d,
  'Skein512-240': 0xb33e,
  'Skein512-248': 0xb33f,
  'Skein512-256': 0xb340,
  'Skein512-264': 0xb341,
  'Skein512-272': 0xb342,
  'Skein512-280': 0xb343,
  'Skein512-288': 0xb344,
  'Skein512-296': 0xb345,
  'Skein512-304': 0xb346,
  'Skein512-312': 0xb347,
  'Skein512-320': 0xb348,
  'Skein512-328': 0xb349,
  'Skein512-336': 0xb34a,
  'Skein512-344': 0xb34b,
  'Skein512-352': 0xb34c,
  'Skein512-360': 0xb34d,
  'Skein512-368': 0xb34e,
  'Skein512-376': 0xb34f,
  'Skein512-384': 0xb350,
  'Skein512-392': 0xb351,
  'Skein512-400': 0xb352,
  'Skein512-408': 0xb353,
  'Skein512-416': 0xb354,
  'Skein512-424': 0xb355,
  'Skein512-432': 0xb356,
  'Skein512-440': 0xb357,
  'Skein512-448': 0xb358,
  'Skein512-456': 0xb359,
  'Skein512-464': 0xb35a,
  'Skein512-472': 0xb35b,
  'Skein512-480': 0xb35c,
  'Skein512-488': 0xb35d,
  'Skein512-496': 0xb35e,
  'Skein512-504': 0xb35f,
  'Skein512-512': 0xb360,
  'Skein1024-8': 0xb361,
  'Skein1024-16': 0xb362,
  'Skein1024-24': 0xb363,
  'Skein1024-32': 0xb364,
  'Skein1024-40': 0xb365,
  'Skein1024-48': 0xb366,
  'Skein1024-56': 0xb367,
  'Skein1024-64': 0xb368,
  'Skein1024-72': 0xb369,
  'Skein1024-80': 0xb36a,
  'Skein1024-88': 0xb36b,
  'Skein1024-96': 0xb36c,
  'Skein1024-104': 0xb36d,
  'Skein1024-112': 0xb36e,
  'Skein1024-120': 0xb36f,
  'Skein1024-128': 0xb370,
  'Skein1024-136': 0xb371,
  'Skein1024-144': 0xb372,
  'Skein1024-152': 0xb373,
  'Skein1024-160': 0xb374,
  'Skein1024-168': 0xb375,
  'Skein1024-176': 0xb376,
  'Skein1024-184': 0xb377,
  'Skein1024-192': 0xb378,
  'Skein1024-200': 0xb379,
  'Skein1024-208': 0xb37a,
  'Skein1024-216': 0xb37b,
  'Skein1024-224': 0xb37c,
  'Skein1024-232': 0xb37d,
  'Skein1024-240': 0xb37e,
  'Skein1024-248': 0xb37f,
  'Skein1024-256': 0xb380,
  'Skein1024-264': 0xb381,
  'Skein1024-272': 0xb382,
  'Skein1024-280': 0xb383,
  'Skein1024-288': 0xb384,
  'Skein1024-296': 0xb385,
  'Skein1024-304': 0xb386,
  'Skein1024-312': 0xb387,
  'Skein1024-320': 0xb388,
  'Skein1024-328': 0xb389,
  'Skein1024-336': 0xb38a,
  'Skein1024-344': 0xb38b,
  'Skein1024-352': 0xb38c,
  'Skein1024-360': 0xb38d,
  'Skein1024-368': 0xb38e,
  'Skein1024-376': 0xb38f,
  'Skein1024-384': 0xb390,
  'Skein1024-392': 0xb391,
  'Skein1024-400': 0xb392,
  'Skein1024-408': 0xb393,
  'Skein1024-416': 0xb394,
  'Skein1024-424': 0xb395,
  'Skein1024-432': 0xb396,
  'Skein1024-440': 0xb397,
  'Skein1024-448': 0xb398,
  'Skein1024-456': 0xb399,
  'Skein1024-464': 0xb39a,
  'Skein1024-472': 0xb39b,
  'Skein1024-480': 0xb39c,
  'Skein1024-488': 0xb39d,
  'Skein1024-496': 0xb39e,
  'Skein1024-504': 0xb39f,
  'Skein1024-512': 0xb3a0,
  'Skein1024-520': 0xb3a1,
  'Skein1024-528': 0xb3a2,
  'Skein1024-536': 0xb3a3,
  'Skein1024-544': 0xb3a4,
  'Skein1024-552': 0xb3a5,
  'Skein1024-560': 0xb3a6,
  'Skein1024-568': 0xb3a7,
  'Skein1024-576': 0xb3a8,
  'Skein1024-584': 0xb3a9,
  'Skein1024-592': 0xb3aa,
  'Skein1024-600': 0xb3ab,
  'Skein1024-608': 0xb3ac,
  'Skein1024-616': 0xb3ad,
  'Skein1024-624': 0xb3ae,
  'Skein1024-632': 0xb3af,
  'Skein1024-640': 0xb3b0,
  'Skein1024-648': 0xb3b1,
  'Skein1024-656': 0xb3b2,
  'Skein1024-664': 0xb3b3,
  'Skein1024-672': 0xb3b4,
  'Skein1024-680': 0xb3b5,
  'Skein1024-688': 0xb3b6,
  'Skein1024-696': 0xb3b7,
  'Skein1024-704': 0xb3b8,
  'Skein1024-712': 0xb3b9,
  'Skein1024-720': 0xb3ba,
  'Skein1024-728': 0xb3bb,
  'Skein1024-736': 0xb3bc,
  'Skein1024-744': 0xb3bd,
  'Skein1024-752': 0xb3be,
  'Skein1024-760': 0xb3bf,
  'Skein1024-768': 0xb3c0,
  'Skein1024-776': 0xb3c1,
  'Skein1024-784': 0xb3c2,
  'Skein1024-792': 0xb3c3,
  'Skein1024-800': 0xb3c4,
  'Skein1024-808': 0xb3c5,
  'Skein1024-816': 0xb3c6,
  'Skein1024-824': 0xb3c7,
  'Skein1024-832': 0xb3c8,
  'Skein1024-840': 0xb3c9,
  'Skein1024-848': 0xb3ca,
  'Skein1024-856': 0xb3cb,
  'Skein1024-864': 0xb3cc,
  'Skein1024-872': 0xb3cd,
  'Skein1024-880': 0xb3ce,
  'Skein1024-888': 0xb3cf,
  'Skein1024-896': 0xb3d0,
  'Skein1024-904': 0xb3d1,
  'Skein1024-912': 0xb3d2,
  'Skein1024-920': 0xb3d3,
  'Skein1024-928': 0xb3d4,
  'Skein1024-936': 0xb3d5,
  'Skein1024-944': 0xb3d6,
  'Skein1024-952': 0xb3d7,
  'Skein1024-960': 0xb3d8,
  'Skein1024-968': 0xb3d9,
  'Skein1024-976': 0xb3da,
  'Skein1024-984': 0xb3db,
  'Skein1024-992': 0xb3dc,
  'Skein1024-1000': 0xb3dd,
  'Skein1024-1008': 0xb3de,
  'Skein1024-1016': 0xb3df,
  'Skein1024-1024': 0xb3e0
})

exports.codes = Object.freeze({
  0x11: 'sha1',
  0x12: 'sha2-256',
  0x13: 'sha2-512',
  0x56: 'dbl-sha2-256',
  0x17: 'sha3-224',
  0x16: 'sha3-256',
  0x15: 'sha3-384',
  0x14: 'sha3-512',
  0x18: 'shake-128',
  0x19: 'shake-256',
  0x1A: 'keccak-224',
  0x1B: 'keccak-256',
  0x1C: 'keccak-384',
  0x1D: 'keccak-512',
  0x22: 'murmur3-128',
  0x23: 'murmur3-32',

  // blake2
  0xb201: 'blake2b-8',
  0xb202: 'blake2b-16',
  0xb203: 'blake2b-24',
  0xb204: 'blake2b-32',
  0xb205: 'blake2b-40',
  0xb206: 'blake2b-48',
  0xb207: 'blake2b-56',
  0xb208: 'blake2b-64',
  0xb209: 'blake2b-72',
  0xb20a: 'blake2b-80',
  0xb20b: 'blake2b-88',
  0xb20c: 'blake2b-96',
  0xb20d: 'blake2b-104',
  0xb20e: 'blake2b-112',
  0xb20f: 'blake2b-120',
  0xb210: 'blake2b-128',
  0xb211: 'blake2b-136',
  0xb212: 'blake2b-144',
  0xb213: 'blake2b-152',
  0xb214: 'blake2b-160',
  0xb215: 'blake2b-168',
  0xb216: 'blake2b-176',
  0xb217: 'blake2b-184',
  0xb218: 'blake2b-192',
  0xb219: 'blake2b-200',
  0xb21a: 'blake2b-208',
  0xb21b: 'blake2b-216',
  0xb21c: 'blake2b-224',
  0xb21d: 'blake2b-232',
  0xb21e: 'blake2b-240',
  0xb21f: 'blake2b-248',
  0xb220: 'blake2b-256',
  0xb221: 'blake2b-264',
  0xb222: 'blake2b-272',
  0xb223: 'blake2b-280',
  0xb224: 'blake2b-288',
  0xb225: 'blake2b-296',
  0xb226: 'blake2b-304',
  0xb227: 'blake2b-312',
  0xb228: 'blake2b-320',
  0xb229: 'blake2b-328',
  0xb22a: 'blake2b-336',
  0xb22b: 'blake2b-344',
  0xb22c: 'blake2b-352',
  0xb22d: 'blake2b-360',
  0xb22e: 'blake2b-368',
  0xb22f: 'blake2b-376',
  0xb230: 'blake2b-384',
  0xb231: 'blake2b-392',
  0xb232: 'blake2b-400',
  0xb233: 'blake2b-408',
  0xb234: 'blake2b-416',
  0xb235: 'blake2b-424',
  0xb236: 'blake2b-432',
  0xb237: 'blake2b-440',
  0xb238: 'blake2b-448',
  0xb239: 'blake2b-456',
  0xb23a: 'blake2b-464',
  0xb23b: 'blake2b-472',
  0xb23c: 'blake2b-480',
  0xb23d: 'blake2b-488',
  0xb23e: 'blake2b-496',
  0xb23f: 'blake2b-504',
  0xb240: 'blake2b-512',
  0xb241: 'blake2s-8',
  0xb242: 'blake2s-16',
  0xb243: 'blake2s-24',
  0xb244: 'blake2s-32',
  0xb245: 'blake2s-40',
  0xb246: 'blake2s-48',
  0xb247: 'blake2s-56',
  0xb248: 'blake2s-64',
  0xb249: 'blake2s-72',
  0xb24a: 'blake2s-80',
  0xb24b: 'blake2s-88',
  0xb24c: 'blake2s-96',
  0xb24d: 'blake2s-104',
  0xb24e: 'blake2s-112',
  0xb24f: 'blake2s-120',
  0xb250: 'blake2s-128',
  0xb251: 'blake2s-136',
  0xb252: 'blake2s-144',
  0xb253: 'blake2s-152',
  0xb254: 'blake2s-160',
  0xb255: 'blake2s-168',
  0xb256: 'blake2s-176',
  0xb257: 'blake2s-184',
  0xb258: 'blake2s-192',
  0xb259: 'blake2s-200',
  0xb25a: 'blake2s-208',
  0xb25b: 'blake2s-216',
  0xb25c: 'blake2s-224',
  0xb25d: 'blake2s-232',
  0xb25e: 'blake2s-240',
  0xb25f: 'blake2s-248',
  0xb260: 'blake2s-256',

  // skein
  0xb301: 'Skein256-8',
  0xb302: 'Skein256-16',
  0xb303: 'Skein256-24',
  0xb304: 'Skein256-32',
  0xb305: 'Skein256-40',
  0xb306: 'Skein256-48',
  0xb307: 'Skein256-56',
  0xb308: 'Skein256-64',
  0xb309: 'Skein256-72',
  0xb30a: 'Skein256-80',
  0xb30b: 'Skein256-88',
  0xb30c: 'Skein256-96',
  0xb30d: 'Skein256-104',
  0xb30e: 'Skein256-112',
  0xb30f: 'Skein256-120',
  0xb310: 'Skein256-128',
  0xb311: 'Skein256-136',
  0xb312: 'Skein256-144',
  0xb313: 'Skein256-152',
  0xb314: 'Skein256-160',
  0xb315: 'Skein256-168',
  0xb316: 'Skein256-176',
  0xb317: 'Skein256-184',
  0xb318: 'Skein256-192',
  0xb319: 'Skein256-200',
  0xb31a: 'Skein256-208',
  0xb31b: 'Skein256-216',
  0xb31c: 'Skein256-224',
  0xb31d: 'Skein256-232',
  0xb31e: 'Skein256-240',
  0xb31f: 'Skein256-248',
  0xb320: 'Skein256-256',
  0xb321: 'Skein512-8',
  0xb322: 'Skein512-16',
  0xb323: 'Skein512-24',
  0xb324: 'Skein512-32',
  0xb325: 'Skein512-40',
  0xb326: 'Skein512-48',
  0xb327: 'Skein512-56',
  0xb328: 'Skein512-64',
  0xb329: 'Skein512-72',
  0xb32a: 'Skein512-80',
  0xb32b: 'Skein512-88',
  0xb32c: 'Skein512-96',
  0xb32d: 'Skein512-104',
  0xb32e: 'Skein512-112',
  0xb32f: 'Skein512-120',
  0xb330: 'Skein512-128',
  0xb331: 'Skein512-136',
  0xb332: 'Skein512-144',
  0xb333: 'Skein512-152',
  0xb334: 'Skein512-160',
  0xb335: 'Skein512-168',
  0xb336: 'Skein512-176',
  0xb337: 'Skein512-184',
  0xb338: 'Skein512-192',
  0xb339: 'Skein512-200',
  0xb33a: 'Skein512-208',
  0xb33b: 'Skein512-216',
  0xb33c: 'Skein512-224',
  0xb33d: 'Skein512-232',
  0xb33e: 'Skein512-240',
  0xb33f: 'Skein512-248',
  0xb340: 'Skein512-256',
  0xb341: 'Skein512-264',
  0xb342: 'Skein512-272',
  0xb343: 'Skein512-280',
  0xb344: 'Skein512-288',
  0xb345: 'Skein512-296',
  0xb346: 'Skein512-304',
  0xb347: 'Skein512-312',
  0xb348: 'Skein512-320',
  0xb349: 'Skein512-328',
  0xb34a: 'Skein512-336',
  0xb34b: 'Skein512-344',
  0xb34c: 'Skein512-352',
  0xb34d: 'Skein512-360',
  0xb34e: 'Skein512-368',
  0xb34f: 'Skein512-376',
  0xb350: 'Skein512-384',
  0xb351: 'Skein512-392',
  0xb352: 'Skein512-400',
  0xb353: 'Skein512-408',
  0xb354: 'Skein512-416',
  0xb355: 'Skein512-424',
  0xb356: 'Skein512-432',
  0xb357: 'Skein512-440',
  0xb358: 'Skein512-448',
  0xb359: 'Skein512-456',
  0xb35a: 'Skein512-464',
  0xb35b: 'Skein512-472',
  0xb35c: 'Skein512-480',
  0xb35d: 'Skein512-488',
  0xb35e: 'Skein512-496',
  0xb35f: 'Skein512-504',
  0xb360: 'Skein512-512',
  0xb361: 'Skein1024-8',
  0xb362: 'Skein1024-16',
  0xb363: 'Skein1024-24',
  0xb364: 'Skein1024-32',
  0xb365: 'Skein1024-40',
  0xb366: 'Skein1024-48',
  0xb367: 'Skein1024-56',
  0xb368: 'Skein1024-64',
  0xb369: 'Skein1024-72',
  0xb36a: 'Skein1024-80',
  0xb36b: 'Skein1024-88',
  0xb36c: 'Skein1024-96',
  0xb36d: 'Skein1024-104',
  0xb36e: 'Skein1024-112',
  0xb36f: 'Skein1024-120',
  0xb370: 'Skein1024-128',
  0xb371: 'Skein1024-136',
  0xb372: 'Skein1024-144',
  0xb373: 'Skein1024-152',
  0xb374: 'Skein1024-160',
  0xb375: 'Skein1024-168',
  0xb376: 'Skein1024-176',
  0xb377: 'Skein1024-184',
  0xb378: 'Skein1024-192',
  0xb379: 'Skein1024-200',
  0xb37a: 'Skein1024-208',
  0xb37b: 'Skein1024-216',
  0xb37c: 'Skein1024-224',
  0xb37d: 'Skein1024-232',
  0xb37e: 'Skein1024-240',
  0xb37f: 'Skein1024-248',
  0xb380: 'Skein1024-256',
  0xb381: 'Skein1024-264',
  0xb382: 'Skein1024-272',
  0xb383: 'Skein1024-280',
  0xb384: 'Skein1024-288',
  0xb385: 'Skein1024-296',
  0xb386: 'Skein1024-304',
  0xb387: 'Skein1024-312',
  0xb388: 'Skein1024-320',
  0xb389: 'Skein1024-328',
  0xb38a: 'Skein1024-336',
  0xb38b: 'Skein1024-344',
  0xb38c: 'Skein1024-352',
  0xb38d: 'Skein1024-360',
  0xb38e: 'Skein1024-368',
  0xb38f: 'Skein1024-376',
  0xb390: 'Skein1024-384',
  0xb391: 'Skein1024-392',
  0xb392: 'Skein1024-400',
  0xb393: 'Skein1024-408',
  0xb394: 'Skein1024-416',
  0xb395: 'Skein1024-424',
  0xb396: 'Skein1024-432',
  0xb397: 'Skein1024-440',
  0xb398: 'Skein1024-448',
  0xb399: 'Skein1024-456',
  0xb39a: 'Skein1024-464',
  0xb39b: 'Skein1024-472',
  0xb39c: 'Skein1024-480',
  0xb39d: 'Skein1024-488',
  0xb39e: 'Skein1024-496',
  0xb39f: 'Skein1024-504',
  0xb3a0: 'Skein1024-512',
  0xb3a1: 'Skein1024-520',
  0xb3a2: 'Skein1024-528',
  0xb3a3: 'Skein1024-536',
  0xb3a4: 'Skein1024-544',
  0xb3a5: 'Skein1024-552',
  0xb3a6: 'Skein1024-560',
  0xb3a7: 'Skein1024-568',
  0xb3a8: 'Skein1024-576',
  0xb3a9: 'Skein1024-584',
  0xb3aa: 'Skein1024-592',
  0xb3ab: 'Skein1024-600',
  0xb3ac: 'Skein1024-608',
  0xb3ad: 'Skein1024-616',
  0xb3ae: 'Skein1024-624',
  0xb3af: 'Skein1024-632',
  0xb3b0: 'Skein1024-640',
  0xb3b1: 'Skein1024-648',
  0xb3b2: 'Skein1024-656',
  0xb3b3: 'Skein1024-664',
  0xb3b4: 'Skein1024-672',
  0xb3b5: 'Skein1024-680',
  0xb3b6: 'Skein1024-688',
  0xb3b7: 'Skein1024-696',
  0xb3b8: 'Skein1024-704',
  0xb3b9: 'Skein1024-712',
  0xb3ba: 'Skein1024-720',
  0xb3bb: 'Skein1024-728',
  0xb3bc: 'Skein1024-736',
  0xb3bd: 'Skein1024-744',
  0xb3be: 'Skein1024-752',
  0xb3bf: 'Skein1024-760',
  0xb3c0: 'Skein1024-768',
  0xb3c1: 'Skein1024-776',
  0xb3c2: 'Skein1024-784',
  0xb3c3: 'Skein1024-792',
  0xb3c4: 'Skein1024-800',
  0xb3c5: 'Skein1024-808',
  0xb3c6: 'Skein1024-816',
  0xb3c7: 'Skein1024-824',
  0xb3c8: 'Skein1024-832',
  0xb3c9: 'Skein1024-840',
  0xb3ca: 'Skein1024-848',
  0xb3cb: 'Skein1024-856',
  0xb3cc: 'Skein1024-864',
  0xb3cd: 'Skein1024-872',
  0xb3ce: 'Skein1024-880',
  0xb3cf: 'Skein1024-888',
  0xb3d0: 'Skein1024-896',
  0xb3d1: 'Skein1024-904',
  0xb3d2: 'Skein1024-912',
  0xb3d3: 'Skein1024-920',
  0xb3d4: 'Skein1024-928',
  0xb3d5: 'Skein1024-936',
  0xb3d6: 'Skein1024-944',
  0xb3d7: 'Skein1024-952',
  0xb3d8: 'Skein1024-960',
  0xb3d9: 'Skein1024-968',
  0xb3da: 'Skein1024-976',
  0xb3db: 'Skein1024-984',
  0xb3dc: 'Skein1024-992',
  0xb3dd: 'Skein1024-1000',
  0xb3de: 'Skein1024-1008',
  0xb3df: 'Skein1024-1016',
  0xb3e0: 'Skein1024-1024'
})

exports.defaultLengths = Object.freeze({
  0x11: 20,
  0x12: 32,
  0x13: 64,
  0x56: 32,
  0x17: 28,
  0x16: 32,
  0x15: 48,
  0x14: 64,
  0x18: 32,
  0x19: 64,
  0x1A: 28,
  0x1B: 32,
  0x1C: 48,
  0x1D: 64,
  0x22: 32,

  0xb201: 0x01,
  0xb202: 0x02,
  0xb203: 0x03,
  0xb204: 0x04,
  0xb205: 0x05,
  0xb206: 0x06,
  0xb207: 0x07,
  0xb208: 0x08,
  0xb209: 0x09,
  0xb20a: 0x0a,
  0xb20b: 0x0b,
  0xb20c: 0x0c,
  0xb20d: 0x0d,
  0xb20e: 0x0e,
  0xb20f: 0x0f,
  0xb210: 0x10,
  0xb211: 0x11,
  0xb212: 0x12,
  0xb213: 0x13,
  0xb214: 0x14,
  0xb215: 0x15,
  0xb216: 0x16,
  0xb217: 0x17,
  0xb218: 0x18,
  0xb219: 0x19,
  0xb21a: 0x1a,
  0xb21b: 0x1b,
  0xb21c: 0x1c,
  0xb21d: 0x1d,
  0xb21e: 0x1e,
  0xb21f: 0x1f,
  0xb220: 0x20,
  0xb221: 0x21,
  0xb222: 0x22,
  0xb223: 0x23,
  0xb224: 0x24,
  0xb225: 0x25,
  0xb226: 0x26,
  0xb227: 0x27,
  0xb228: 0x28,
  0xb229: 0x29,
  0xb22a: 0x2a,
  0xb22b: 0x2b,
  0xb22c: 0x2c,
  0xb22d: 0x2d,
  0xb22e: 0x2e,
  0xb22f: 0x2f,
  0xb230: 0x30,
  0xb231: 0x31,
  0xb232: 0x32,
  0xb233: 0x33,
  0xb234: 0x34,
  0xb235: 0x35,
  0xb236: 0x36,
  0xb237: 0x37,
  0xb238: 0x38,
  0xb239: 0x39,
  0xb23a: 0x3a,
  0xb23b: 0x3b,
  0xb23c: 0x3c,
  0xb23d: 0x3d,
  0xb23e: 0x3e,
  0xb23f: 0x3f,
  0xb240: 0x40,
  0xb241: 0x01,
  0xb242: 0x02,
  0xb243: 0x03,
  0xb244: 0x04,
  0xb245: 0x05,
  0xb246: 0x06,
  0xb247: 0x07,
  0xb248: 0x08,
  0xb249: 0x09,
  0xb24a: 0x0a,
  0xb24b: 0x0b,
  0xb24c: 0x0c,
  0xb24d: 0x0d,
  0xb24e: 0x0e,
  0xb24f: 0x0f,
  0xb250: 0x10,
  0xb251: 0x11,
  0xb252: 0x12,
  0xb253: 0x13,
  0xb254: 0x14,
  0xb255: 0x15,
  0xb256: 0x16,
  0xb257: 0x17,
  0xb258: 0x18,
  0xb259: 0x19,
  0xb25a: 0x1a,
  0xb25b: 0x1b,
  0xb25c: 0x1c,
  0xb25d: 0x1d,
  0xb25e: 0x1e,
  0xb25f: 0x1f,
  0xb260: 0x20,
  0xb301: 0x01,
  0xb302: 0x02,
  0xb303: 0x03,
  0xb304: 0x04,
  0xb305: 0x05,
  0xb306: 0x06,
  0xb307: 0x07,
  0xb308: 0x08,
  0xb309: 0x09,
  0xb30a: 0x0a,
  0xb30b: 0x0b,
  0xb30c: 0x0c,
  0xb30d: 0x0d,
  0xb30e: 0x0e,
  0xb30f: 0x0f,
  0xb310: 0x10,
  0xb311: 0x11,
  0xb312: 0x12,
  0xb313: 0x13,
  0xb314: 0x14,
  0xb315: 0x15,
  0xb316: 0x16,
  0xb317: 0x17,
  0xb318: 0x18,
  0xb319: 0x19,
  0xb31a: 0x1a,
  0xb31b: 0x1b,
  0xb31c: 0x1c,
  0xb31d: 0x1d,
  0xb31e: 0x1e,
  0xb31f: 0x1f,
  0xb320: 0x20,
  0xb321: 0x01,
  0xb322: 0x02,
  0xb323: 0x03,
  0xb324: 0x04,
  0xb325: 0x05,
  0xb326: 0x06,
  0xb327: 0x07,
  0xb328: 0x08,
  0xb329: 0x09,
  0xb32a: 0x0a,
  0xb32b: 0x0b,
  0xb32c: 0x0c,
  0xb32d: 0x0d,
  0xb32e: 0x0e,
  0xb32f: 0x0f,
  0xb330: 0x10,
  0xb331: 0x11,
  0xb332: 0x12,
  0xb333: 0x13,
  0xb334: 0x14,
  0xb335: 0x15,
  0xb336: 0x16,
  0xb337: 0x17,
  0xb338: 0x18,
  0xb339: 0x19,
  0xb33a: 0x1a,
  0xb33b: 0x1b,
  0xb33c: 0x1c,
  0xb33d: 0x1d,
  0xb33e: 0x1e,
  0xb33f: 0x1f,
  0xb340: 0x20,
  0xb341: 0x21,
  0xb342: 0x22,
  0xb343: 0x23,
  0xb344: 0x24,
  0xb345: 0x25,
  0xb346: 0x26,
  0xb347: 0x27,
  0xb348: 0x28,
  0xb349: 0x29,
  0xb34a: 0x2a,
  0xb34b: 0x2b,
  0xb34c: 0x2c,
  0xb34d: 0x2d,
  0xb34e: 0x2e,
  0xb34f: 0x2f,
  0xb350: 0x30,
  0xb351: 0x31,
  0xb352: 0x32,
  0xb353: 0x33,
  0xb354: 0x34,
  0xb355: 0x35,
  0xb356: 0x36,
  0xb357: 0x37,
  0xb358: 0x38,
  0xb359: 0x39,
  0xb35a: 0x3a,
  0xb35b: 0x3b,
  0xb35c: 0x3c,
  0xb35d: 0x3d,
  0xb35e: 0x3e,
  0xb35f: 0x3f,
  0xb360: 0x40,
  0xb361: 0x01,
  0xb362: 0x02,
  0xb363: 0x03,
  0xb364: 0x04,
  0xb365: 0x05,
  0xb366: 0x06,
  0xb367: 0x07,
  0xb368: 0x08,
  0xb369: 0x09,
  0xb36a: 0x0a,
  0xb36b: 0x0b,
  0xb36c: 0x0c,
  0xb36d: 0x0d,
  0xb36e: 0x0e,
  0xb36f: 0x0f,
  0xb370: 0x10,
  0xb371: 0x11,
  0xb372: 0x12,
  0xb373: 0x13,
  0xb374: 0x14,
  0xb375: 0x15,
  0xb376: 0x16,
  0xb377: 0x17,
  0xb378: 0x18,
  0xb379: 0x19,
  0xb37a: 0x1a,
  0xb37b: 0x1b,
  0xb37c: 0x1c,
  0xb37d: 0x1d,
  0xb37e: 0x1e,
  0xb37f: 0x1f,
  0xb380: 0x20,
  0xb381: 0x21,
  0xb382: 0x22,
  0xb383: 0x23,
  0xb384: 0x24,
  0xb385: 0x25,
  0xb386: 0x26,
  0xb387: 0x27,
  0xb388: 0x28,
  0xb389: 0x29,
  0xb38a: 0x2a,
  0xb38b: 0x2b,
  0xb38c: 0x2c,
  0xb38d: 0x2d,
  0xb38e: 0x2e,
  0xb38f: 0x2f,
  0xb390: 0x30,
  0xb391: 0x31,
  0xb392: 0x32,
  0xb393: 0x33,
  0xb394: 0x34,
  0xb395: 0x35,
  0xb396: 0x36,
  0xb397: 0x37,
  0xb398: 0x38,
  0xb399: 0x39,
  0xb39a: 0x3a,
  0xb39b: 0x3b,
  0xb39c: 0x3c,
  0xb39d: 0x3d,
  0xb39e: 0x3e,
  0xb39f: 0x3f,
  0xb3a0: 0x40,
  0xb3a1: 0x41,
  0xb3a2: 0x42,
  0xb3a3: 0x43,
  0xb3a4: 0x44,
  0xb3a5: 0x45,
  0xb3a6: 0x46,
  0xb3a7: 0x47,
  0xb3a8: 0x48,
  0xb3a9: 0x49,
  0xb3aa: 0x4a,
  0xb3ab: 0x4b,
  0xb3ac: 0x4c,
  0xb3ad: 0x4d,
  0xb3ae: 0x4e,
  0xb3af: 0x4f,
  0xb3b0: 0x50,
  0xb3b1: 0x51,
  0xb3b2: 0x52,
  0xb3b3: 0x53,
  0xb3b4: 0x54,
  0xb3b5: 0x55,
  0xb3b6: 0x56,
  0xb3b7: 0x57,
  0xb3b8: 0x58,
  0xb3b9: 0x59,
  0xb3ba: 0x5a,
  0xb3bb: 0x5b,
  0xb3bc: 0x5c,
  0xb3bd: 0x5d,
  0xb3be: 0x5e,
  0xb3bf: 0x5f,
  0xb3c0: 0x60,
  0xb3c1: 0x61,
  0xb3c2: 0x62,
  0xb3c3: 0x63,
  0xb3c4: 0x64,
  0xb3c5: 0x65,
  0xb3c6: 0x66,
  0xb3c7: 0x67,
  0xb3c8: 0x68,
  0xb3c9: 0x69,
  0xb3ca: 0x6a,
  0xb3cb: 0x6b,
  0xb3cc: 0x6c,
  0xb3cd: 0x6d,
  0xb3ce: 0x6e,
  0xb3cf: 0x6f,
  0xb3d0: 0x70,
  0xb3d1: 0x71,
  0xb3d2: 0x72,
  0xb3d3: 0x73,
  0xb3d4: 0x74,
  0xb3d5: 0x75,
  0xb3d6: 0x76,
  0xb3d7: 0x77,
  0xb3d8: 0x78,
  0xb3d9: 0x79,
  0xb3da: 0x7a,
  0xb3db: 0x7b,
  0xb3dc: 0x7c,
  0xb3dd: 0x7d,
  0xb3de: 0x7e,
  0xb3df: 0x7f,
  0xb3e0: 0x80
})


/***/ }),

/***/ "./node_modules/multihashes/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/multihashes/src/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {/**
 * Multihash implementation in JavaScript.
 *
 * @module multihash
 */


const bs58 = __webpack_require__(/*! bs58 */ "./node_modules/bs58/index.js")

const cs = __webpack_require__(/*! ./constants */ "./node_modules/multihashes/src/constants.js")

exports.names = cs.names
exports.codes = cs.codes
exports.defaultLengths = cs.defaultLengths

const varint = __webpack_require__(/*! varint */ "./node_modules/varint/index.js")

/**
 * Convert the given multihash to a hex encoded string.
 *
 * @param {Buffer} hash
 * @returns {string}
 */
exports.toHexString = function toHexString (hash) {
  if (!Buffer.isBuffer(hash)) {
    throw new Error('must be passed a buffer')
  }

  return hash.toString('hex')
}

/**
 * Convert the given hex encoded string to a multihash.
 *
 * @param {string} hash
 * @returns {Buffer}
 */
exports.fromHexString = function fromHexString (hash) {
  return Buffer.from(hash, 'hex')
}

/**
 * Convert the given multihash to a base58 encoded string.
 *
 * @param {Buffer} hash
 * @returns {string}
 */
exports.toB58String = function toB58String (hash) {
  if (!Buffer.isBuffer(hash)) {
    throw new Error('must be passed a buffer')
  }

  return bs58.encode(hash)
}

/**
 * Convert the given base58 encoded string to a multihash.
 *
 * @param {string|Buffer} hash
 * @returns {Buffer}
 */
exports.fromB58String = function fromB58String (hash) {
  let encoded = hash
  if (Buffer.isBuffer(hash)) {
    encoded = hash.toString()
  }

  return Buffer.from(bs58.decode(encoded))
}

/**
 * Decode a hash from the given multihash.
 *
 * @param {Buffer} buf
 * @returns {{code: number, name: string, length: number, digest: Buffer}} result
 */
exports.decode = function decode (buf) {
  if (!(Buffer.isBuffer(buf))) {
    throw new Error('multihash must be a Buffer')
  }

  if (buf.length < 3) {
    throw new Error('multihash too short. must be > 3 bytes.')
  }

  let code = varint.decode(buf)
  if (!exports.isValidCode(code)) {
    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)
  }
  buf = buf.slice(varint.decode.bytes)

  let len = varint.decode(buf)
  if (len < 1) {
    throw new Error(`multihash invalid length: 0x${len.toString(16)}`)
  }
  buf = buf.slice(varint.decode.bytes)

  if (buf.length !== len) {
    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)
  }

  return {
    code: code,
    name: cs.codes[code],
    length: len,
    digest: buf
  }
}

/**
 *  Encode a hash digest along with the specified function code.
 *
 * > **Note:** the length is derived from the length of the digest itself.
 *
 * @param {Buffer} digest
 * @param {string|number} code
 * @param {number} [length]
 * @returns {Buffer}
 */
exports.encode = function encode (digest, code, length) {
  if (!digest || !code) {
    throw new Error('multihash encode requires at least two args: digest, code')
  }

  // ensure it's a hashfunction code.
  const hashfn = exports.coerceCode(code)

  if (!(Buffer.isBuffer(digest))) {
    throw new Error('digest should be a Buffer')
  }

  if (length == null) {
    length = digest.length
  }

  if (length && digest.length !== length) {
    throw new Error('digest length should be equal to specified length.')
  }

  return Buffer.concat([
    Buffer.from(varint.encode(hashfn)),
    Buffer.from(varint.encode(length)),
    digest
  ])
}

/**
 * Converts a hash function name into the matching code.
 * If passed a number it will return the number if it's a valid code.
 * @param {string|number} name
 * @returns {number}
 */
exports.coerceCode = function coerceCode (name) {
  let code = name

  if (typeof name === 'string') {
    if (!cs.names[name]) {
      throw new Error(`Unrecognized hash function named: ${name}`)
    }
    code = cs.names[name]
  }

  if (typeof code !== 'number') {
    throw new Error(`Hash function code should be a number. Got: ${code}`)
  }

  if (!cs.codes[code] && !exports.isAppCode(code)) {
    throw new Error(`Unrecognized function code: ${code}`)
  }

  return code
}

/**
 * Checks wether a code is part of the app range
 *
 * @param {number} code
 * @returns {boolean}
 */
exports.isAppCode = function appCode (code) {
  return code > 0 && code < 0x10
}

/**
 * Checks whether a multihash code is valid.
 *
 * @param {number} code
 * @returns {boolean}
 */
exports.isValidCode = function validCode (code) {
  if (exports.isAppCode(code)) {
    return true
  }

  if (cs.codes[code]) {
    return true
  }

  return false
}

/**
 * Check if the given buffer is a valid multihash. Throws an error if it is not valid.
 *
 * @param {Buffer} multihash
 * @returns {undefined}
 * @throws {Error}
 */
function validate (multihash) {
  exports.decode(multihash) // throws if bad.
}
exports.validate = validate

/**
 * Returns a prefix from a valid multihash. Throws an error if it is not valid.
 *
 * @param {Buffer} multihash
 * @returns {undefined}
 * @throws {Error}
 */
exports.prefix = function prefix (multihash) {
  validate(multihash)

  return multihash.slice(0, 2)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/multihashing/src/blake.js":
/*!************************************************!*\
  !*** ./node_modules/multihashing/src/blake.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {

const blake = __webpack_require__(/*! blakejs */ "./node_modules/blakejs/index.js")
const minB = 0xb201
const minS = 0xb241

var blake2b = {
  init: blake.blake2bInit,
  update: blake.blake2bUpdate,
  digest: blake.blake2bFinal
}

var blake2s = {
  init: blake.blake2sInit,
  update: blake.blake2sUpdate,
  digest: blake.blake2sFinal
}

class B2Hash {
  constructor (size, hashFunc) {
    this.hf = hashFunc
    this.ctx = this.hf.init(size, null)
  }

  update (buf) {
    if (this.ctx === null) {
      throw new Error('blake2 context is null. (already called digest?)')
    }
    this.hf.update(this.ctx, buf)
    return this
  }

  digest () {
    const ctx = this.ctx
    this.ctx = null
    return new Buffer(this.hf.digest(ctx))
  }
}

function addFuncs (table) {
  function mkFunc (size, hashFunc) {
    return () => new B2Hash(size, hashFunc)
  }

  var i
  for (i = 0; i < 64; i++) {
    table[minB + i] = mkFunc(i + 1, blake2b)
  }
  for (i = 0; i < 32; i++) {
    table[minS + i] = mkFunc(i + 1, blake2s)
  }
}

module.exports = {
  addFuncs: addFuncs
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/multihashing/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/multihashing/src/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {

const multihash = __webpack_require__(/*! multihashes */ "./node_modules/multihashes/src/index.js")
const crypto = __webpack_require__(/*! webcrypto */ "./node_modules/webcrypto/src/index.js")
const blake = __webpack_require__(/*! ./blake */ "./node_modules/multihashing/src/blake.js")

const mh = module.exports = Multihashing

mh.Buffer = Buffer // for browser things

function Multihashing (buf, func, length) {
  return multihash.encode(mh.digest(buf, func, length), func, length)
}

// expose multihash itself, to avoid silly double requires.
mh.multihash = multihash

mh.digest = function (buf, func, length) {
  let digest = mh.createHash(func).update(buf).digest()

  if (length) {
    digest = digest.slice(0, length)
  }

  return digest
}

mh.createHash = function (func, length) {
  func = multihash.coerceCode(func)
  if (!mh.functions[func]) {
    throw new Error('multihash function ' + func + ' not yet supported')
  }

  return mh.functions[func]()
}

mh.functions = {
  0x11: gsha1,
  0x12: gsha2256,
  0x13: gsha2512
  // 0x14: gsha3 // not implemented yet
}

blake.addFuncs(mh.functions)

function gsha1 () {
  return crypto.createHash('sha1')
}

function gsha2256 () {
  return crypto.createHash('sha256')
}

function gsha2512 () {
  return crypto.createHash('sha512')
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/niceware/lib/main.js":
/*!*******************************************!*\
  !*** ./node_modules/niceware/lib/main.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
// @flow
/**
 * A module for converting cryptographic keys into human-readable phrases.
 * @module niceware
 */

const bs = __webpack_require__(/*! binary-search */ "./node_modules/binary-search/index.js")
const wordlist = __webpack_require__(/*! ./wordlist */ "./node_modules/niceware/lib/wordlist.js")
const randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")

const MAX_PASSPHRASE_SIZE = 1024 // Max size of passphrase in bytes

/**
 * @alias module:niceware
 */
const niceware = {}

/**
 * Converts a byte array into a passphrase.
 * @param {Buffer} bytes The bytes to convert
 * @returns {Array.<string>}
 */
niceware.bytesToPassphrase = function (bytes) {
  // XXX: Uint8Array should only be used when this is called in the browser
  // context.
  if (!Buffer.isBuffer(bytes) &&
    !(typeof window === 'object' && bytes instanceof window.Uint8Array)) {
    throw new Error('Input must be a Buffer or Uint8Array.')
  }
  if (bytes.length % 2 === 1) {
    throw new Error('Only even-sized byte arrays are supported.')
  }
  const words = []
  for (var entry of bytes.entries()) {
    let index = entry[0]
    let byte = entry[1]
    let next = bytes[index + 1]
    if (index % 2 === 0) {
      let wordIndex = byte * 256 + next
      let word = wordlist[wordIndex]
      if (!word) {
        throw new Error('Invalid byte encountered')
      } else {
        words.push(word)
      }
    }
  }
  return words
}

/**
 * Converts a phrase back into the original byte array.
 * @param {Array.<string>} words The words to convert
 * @returns {Buffer}
 */
niceware.passphraseToBytes = function (words/* : Array<string> */) {
  if (!Array.isArray(words)) {
    throw new Error('Input must be an array.')
  }

  const bytes = Buffer.alloc(words.length * 2)

  words.forEach((word, index) => {
    if (typeof word !== 'string') {
      throw new Error('Word must be a string.')
    }
    const wordIndex = bs(wordlist, word.toLowerCase(), (a, b) => {
      if (a === b) {
        return 0
      }
      return a > b ? 1 : -1
    })
    if (wordIndex < 0) {
      throw new Error(`Invalid word: ${word}`)
    }
    bytes[2 * index] = Math.floor(wordIndex / 256)
    bytes[2 * index + 1] = wordIndex % 256
  })

  return bytes
}

/**
 * Generates a random passphrase with the specified number of bytes.
 * NOTE: `size` must be an even number.
 * @param {number} size The number of random bytes to use
 * @returns {Array.<string>}
 */
niceware.generatePassphrase = function (size/* : number */) {
  if (typeof size !== 'number' || size < 0 || size > MAX_PASSPHRASE_SIZE) {
    throw new Error(`Size must be between 0 and ${MAX_PASSPHRASE_SIZE} bytes.`)
  }
  const bytes = randomBytes(size)
  return niceware.bytesToPassphrase(bytes)
}

// For browserify
if (typeof window === 'object') {
  window.niceware = niceware
}

module.exports = niceware

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/niceware/lib/wordlist.js":
/*!***********************************************!*\
  !*** ./node_modules/niceware/lib/wordlist.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * @fileoverview 2^16 English wordlist. Derived from
 * http://www-01.sil.org/linguistics/wordlists/english/.
 * Originally compiled for the Yahoo End-to-End project.
 * https://github.com/yahoo/end-to-end
 */

module.exports = [
'a',
'aah',
'aardvark',
'aardwolf',
'academia',
'academic',
'academical',
'academician',
'academicianship',
'academicism',
'academy',
'acadia',
'acapulco',
'ace',
'aced',
'acerb',
'acerbate',
'acerber',
'acerbest',
'acerbic',
'acerbity',
'acerola',
'acerose',
'acetate',
'acetic',
'acetified',
'acetify',
'acetifying',
'acetone',
'acetonic',
'ache',
'ached',
'achene',
'achenial',
'achier',
'achiest',
'achievable',
'achieve',
'achieved',
'achievement',
'achiever',
'achieving',
'aching',
'achoo',
'achordate',
'achromat',
'achromatic',
'achromatism',
'achy',
'acid',
'acidhead',
'acidic',
'acidifiable',
'acidification',
'acidified',
'acidifier',
'acidify',
'acidifying',
'acidity',
'acidly',
'acidotic',
'acidulate',
'acidulation',
'acidulously',
'acidy',
'acing',
'acknowledge',
'acknowledgeable',
'acknowledgement',
'acknowledger',
'acknowledging',
'acknowledgment',
'aclu',
'acme',
'acne',
'acned',
'acoin',
'acolyte',
'aconite',
'acorn',
'acoustic',
'acoustical',
'acquaint',
'acquaintance',
'acquaintanceship',
'acquainted',
'acquainting',
'acquiesce',
'acquiesced',
'acquiescence',
'acquiescent',
'acquiescently',
'acquiescing',
'acquiesence',
'acquirable',
'acquire',
'acquirement',
'acquirer',
'acquiring',
'acquisition',
'acquisitive',
'acquit',
'acquittal',
'acquitted',
'acquitter',
'acquitting',
'acre',
'acreage',
'acrid',
'acrider',
'acridest',
'acridity',
'acridly',
'acrimoniously',
'acrimony',
'acrobat',
'acrobatic',
'acromegalic',
'acromegaly',
'acronym',
'acrophobia',
'acrostic',
'acrylate',
'acrylic',
'act',
'actable',
'acted',
'actin',
'acting',
'actinic',
'actinide',
'actinism',
'actinium',
'action',
'actionability',
'actionable',
'activate',
'activation',
'active',
'activism',
'activist',
'activistic',
'activity',
'actomyosin',
'actorish',
'actual',
'actuality',
'actualization',
'actualize',
'actualized',
'actualizing',
'actuarial',
'actuary',
'actuate',
'actuation',
'acuity',
'acupuncture',
'acupuncturist',
'acute',
'acutely',
'acuter',
'acutest',
'ad',
'adage',
'adagial',
'adagio',
'adam',
'adamance',
'adamancy',
'adamant',
'adamantine',
'adamantly',
'adapt',
'adaptability',
'adaptable',
'adaptation',
'adapted',
'adapter',
'adapting',
'adaption',
'adaptive',
'adaptometer',
'adhere',
'adherence',
'adherent',
'adherer',
'adhering',
'adhesion',
'adhesional',
'adhesive',
'adiabatic',
'adiathermancy',
'adieu',
'adieux',
'adipose',
'adiposity',
'adjacency',
'adjacent',
'adjacently',
'adjectival',
'adjective',
'adjoin',
'adjoined',
'adjoining',
'adjoint',
'adjourn',
'adjourned',
'adjourning',
'adjournment',
'adjudge',
'adjudging',
'adjudicate',
'adjudication',
'adjunct',
'adjunctive',
'adjunctly',
'adjuration',
'adjuratory',
'adjure',
'adjurer',
'adjuring',
'adjuror',
'adjust',
'adjustable',
'adjusted',
'adjuster',
'adjusting',
'adjustment',
'adjutancy',
'adjutant',
'admin',
'administer',
'administerial',
'administering',
'administrable',
'administrant',
'administrate',
'administration',
'administrational',
'administrative',
'administratrix',
'adminstration',
'admirable',
'admirably',
'admiral',
'admiralship',
'admiralty',
'admiration',
'admire',
'admirer',
'admiring',
'admissability',
'admissable',
'admissibility',
'admissible',
'admissibly',
'admission',
'admissive',
'admit',
'admittance',
'admitted',
'admitter',
'admitting',
'admonish',
'admonished',
'admonisher',
'admonishing',
'admonishment',
'admonition',
'admonitory',
'ado',
'adobe',
'adolescence',
'adolescent',
'adolescently',
'adolf',
'adolph',
'adopt',
'adoptability',
'adoptable',
'adopted',
'adoptee',
'adopter',
'adopting',
'adoption',
'adoptive',
'adorability',
'adorable',
'adorably',
'adoration',
'adore',
'adorer',
'adoring',
'adorn',
'adorned',
'adorner',
'adorning',
'adornment',
'adoze',
'adrenal',
'adrenalin',
'adrenaline',
'adrenocortical',
'adriatic',
'adrift',
'adroit',
'adroiter',
'adroitest',
'adroitly',
'adsorb',
'adsorbable',
'adsorbate',
'adsorbed',
'adsorbent',
'adsorbing',
'adsorption',
'adsorptive',
'adulate',
'adulation',
'adulatory',
'adult',
'adulterant',
'adulterate',
'adulteration',
'adulterer',
'adulterously',
'adultery',
'adulthood',
'adultly',
'adumbrate',
'adumbration',
'adumbrative',
'advance',
'advanced',
'advancement',
'advancer',
'advancing',
'advantage',
'advantageously',
'advantaging',
'advent',
'adventitiously',
'adventure',
'adventurer',
'adventuresome',
'adventuring',
'adventurously',
'adverb',
'adverbial',
'adversary',
'adversative',
'adverse',
'adversely',
'adversity',
'advert',
'adverted',
'advertent',
'advertently',
'adverting',
'advertise',
'advertised',
'advertisement',
'advertiser',
'advertising',
'advertize',
'advertized',
'advertizement',
'advertizer',
'advertizing',
'advice',
'advisability',
'advisable',
'advisatory',
'advise',
'advised',
'advisee',
'advisement',
'adviser',
'advising',
'advisor',
'advisory',
'advocacy',
'advocate',
'advocatory',
'aelurophobia',
'aeolian',
'aeon',
'aeonian',
'aeonic',
'aerate',
'aeration',
'aerial',
'aerialist',
'aerobic',
'aerobiology',
'aerodrome',
'aerodynamic',
'aerodynamical',
'aerodyne',
'aerofoil',
'aerogram',
'aerolite',
'aerolith',
'aerological',
'aerologist',
'aerology',
'aerometer',
'aeronaut',
'aeronautic',
'aeronautical',
'aerophobia',
'aeroplane',
'aerosol',
'aerospace',
'aerostat',
'aesop',
'aesopian',
'aesthesia',
'aesthete',
'aesthetic',
'aestivate',
'aether',
'aetheric',
'afar',
'afeard',
'affability',
'affable',
'affably',
'affair',
'affaire',
'affect',
'affectation',
'affected',
'affecter',
'affecting',
'affection',
'affectionate',
'affectionately',
'affective',
'affectivity',
'afferent',
'afferently',
'affiance',
'affianced',
'affiancing',
'affiant',
'affidavit',
'affiliate',
'affiliation',
'affinity',
'affirm',
'affirmable',
'affirmably',
'affirmance',
'affirmation',
'affirmative',
'affirmed',
'affirmer',
'affirming',
'affix',
'affixal',
'affixation',
'affixed',
'affixer',
'affixing',
'affixion',
'afflict',
'afflicted',
'afflicting',
'affliction',
'afflictive',
'affluence',
'affluent',
'affluently',
'afflux',
'afford',
'affordable',
'affording',
'afforest',
'afforestation',
'afforested',
'afforesting',
'affray',
'affrayed',
'affrayer',
'affraying',
'affright',
'affrighted',
'affront',
'affronted',
'affronting',
'afghan',
'afghani',
'afghanistan',
'aficionado',
'afield',
'afire',
'aflame',
'afloat',
'aflutter',
'afoot',
'afore',
'aforesaid',
'aforethought',
'afoul',
'afraid',
'afreet',
'afresh',
'africa',
'african',
'afrit',
'afro',
'aft',
'after',
'afterbirth',
'afterburner',
'aftercare',
'afterdeck',
'afterdischarge',
'aftereffect',
'afterglow',
'afterimage',
'afterimpression',
'afterlife',
'aftermarket',
'aftermath',
'aftermost',
'afternoon',
'afterpotential',
'aftershave',
'aftertaste',
'afterthought',
'afterward',
'aftmost',
'ah',
'aha',
'ahead',
'ahem',
'ahimsa',
'ahold',
'ahorse',
'ahoy',
'aid',
'aide',
'aider',
'aidful',
'aiding',
'aidman',
'aikido',
'ail',
'ailed',
'aileron',
'ailing',
'ailment',
'ailurophobe',
'ailurophobia',
'aim',
'aimed',
'aimer',
'aimful',
'aimfully',
'aiming',
'aimlessly',
'air',
'airbill',
'airboat',
'airborne',
'airbrush',
'airbrushed',
'airbrushing',
'aircraft',
'aircrew',
'airdrome',
'airdrop',
'airdropping',
'airedale',
'airer',
'airest',
'airfare',
'airfield',
'airflow',
'airfoil',
'airframe',
'airfreight',
'airglow',
'airhead',
'airier',
'airiest',
'airily',
'airing',
'airlessly',
'airlift',
'airlifted',
'airlifting',
'airlike',
'airline',
'airliner',
'airlock',
'airmail',
'airmailed',
'airmailing',
'airman',
'airmanship',
'airmobile',
'airplane',
'airport',
'airproofed',
'airscrew',
'airship',
'airsick',
'airspace',
'airspeed',
'airstream',
'airstrip',
'airtight',
'airwave',
'airway',
'airwoman',
'airworthier',
'airworthiest',
'airworthy',
'airy',
'aisle',
'aisled',
'aitch',
'ajar',
'ajiva',
'akimbo',
'akin',
'akron',
'akvavit',
'al',
'alabama',
'alabamian',
'alabaster',
'alack',
'alacrity',
'aladdin',
'alai',
'alameda',
'alamo',
'alamode',
'alan',
'alar',
'alarm',
'alarmclock',
'alarmed',
'alarming',
'alarmism',
'alarmist',
'alarum',
'alarumed',
'alaruming',
'alary',
'alaska',
'alaskan',
'alate',
'alba',
'albacore',
'albania',
'albanian',
'albany',
'albedo',
'albeit',
'albert',
'alberta',
'albinism',
'albino',
'albinoism',
'album',
'albumin',
'albuquerque',
'alcalde',
'alcazar',
'alchemic',
'alchemical',
'alchemist',
'alchemy',
'alcohol',
'alcoholic',
'alcoholism',
'alcoholization',
'alcoholized',
'alcoholizing',
'alcoholometer',
'alcove',
'alcoved',
'aldehyde',
'alder',
'alderman',
'aldermanic',
'aldermanry',
'alderwoman',
'aldrin',
'ale',
'aleatory',
'alee',
'alehouse',
'alembic',
'aleph',
'alert',
'alerted',
'alerter',
'alertest',
'alerting',
'alertly',
'aleuron',
'aleutian',
'alewife',
'alexander',
'alexandria',
'alexandrian',
'alexandrine',
'alexia',
'alfa',
'alfalfa',
'alfresco',
'alga',
'algae',
'algal',
'algebra',
'algebraic',
'algeria',
'algerian',
'algicide',
'algid',
'algin',
'alginate',
'algoid',
'algonquian',
'algonquin',
'algorism',
'algorithm',
'algorithmic',
'alibi',
'alibied',
'alice',
'alien',
'alienability',
'alienable',
'alienage',
'alienate',
'alienation',
'aliened',
'alienee',
'aliener',
'aliening',
'alienism',
'alienist',
'alienly',
'alight',
'alighted',
'alighting',
'align',
'aligned',
'aligner',
'aligning',
'alignment',
'alike',
'aliment',
'alimentary',
'alimentation',
'alimented',
'alimenting',
'alimony',
'aline',
'alined',
'alinement',
'aliner',
'alining',
'aliphatic',
'aliquant',
'aliquot',
'alit',
'aliter',
'alive',
'alizarin',
'alizarine',
'alkali',
'alkalic',
'alkalify',
'alkalin',
'alkaline',
'alkalinity',
'alkalinization',
'alkalinize',
'alkalinized',
'alkalinizing',
'alkalise',
'alkalization',
'alkalize',
'alkalized',
'alkalizing',
'alkaloid',
'alkyd',
'alkyl',
'all',
'allah',
'allay',
'allayed',
'allayer',
'allaying',
'allayment',
'allegation',
'allege',
'allegeable',
'allegement',
'alleger',
'allegheny',
'allegiance',
'allegiant',
'allegiantly',
'alleging',
'allegoric',
'allegorical',
'allegorist',
'allegory',
'allegretto',
'allegro',
'allele',
'allelic',
'alleluia',
'allen',
'aller',
'allergen',
'allergenic',
'allergenicity',
'allergic',
'allergin',
'allergist',
'allergology',
'allergy',
'alleviate',
'alleviation',
'alleviative',
'alleviatory',
'alley',
'alleyway',
'allheal',
'alliable',
'alliance',
'allied',
'alliterate',
'alliteration',
'alliterative',
'allium',
'allocability',
'allocable',
'allocate',
'allocatee',
'allocation',
'allogenic',
'allomorphism',
'allopathy',
'allot',
'alloted',
'allotment',
'allotrope',
'allotrophic',
'allotropic',
'allotropism',
'allotropy',
'allottable',
'allotted',
'allottee',
'allotter',
'allotting',
'allotypic',
'allover',
'allow',
'allowable',
'allowance',
'allowed',
'allowing',
'alloy',
'alloyed',
'alloying',
'allspice',
'allude',
'alluding',
'allure',
'allurement',
'allurer',
'alluring',
'allusion',
'allusive',
'alluvia',
'alluvial',
'alluvium',
'allying',
'alma',
'almanac',
'almandine',
'almightily',
'almighty',
'almner',
'almond',
'almoner',
'almonry',
'almost',
'almshouse',
'almsman',
'alnico',
'aloe',
'aloft',
'aloha',
'alone',
'along',
'alongshore',
'alongside',
'aloof',
'aloofly',
'alopecia',
'alopecic',
'aloud',
'alp',
'alpaca',
'alpenhorn',
'alpenstock',
'alpha',
'alphabet',
'alphabeted',
'alphabetic',
'alphabetical',
'alphabetization',
'alphabetize',
'alphabetized',
'alphabetizer',
'alphabetizing',
'alphameric',
'alphanumeric',
'alphorn',
'alpine',
'alpinely',
'alpinism',
'alpinist',
'already',
'alright',
'also',
'alt',
'altar',
'altarpiece',
'alter',
'alterability',
'alterable',
'alterably',
'alterant',
'alteration',
'alterative',
'altercation',
'alterer',
'altering',
'alternate',
'alternately',
'alternation',
'alternative',
'althea',
'altho',
'althorn',
'although',
'altimeter',
'altitude',
'alto',
'altogether',
'altruism',
'altruist',
'altruistic',
'alum',
'alumin',
'alumina',
'alumine',
'aluminic',
'aluminize',
'aluminized',
'aluminizing',
'aluminum',
'alumna',
'alumnae',
'alumni',
'alumroot',
'alveolar',
'alveolate',
'alveoli',
'alway',
'alyssum',
'alzheimer',
'am',
'amain',
'amalgam',
'amalgamate',
'amalgamation',
'amalgamative',
'amandine',
'amanita',
'amaranth',
'amaranthine',
'amarillo',
'amassed',
'amasser',
'amassing',
'amassment',
'amateur',
'amateurish',
'amateurishly',
'amateurism',
'amative',
'amatory',
'amaze',
'amazed',
'amazement',
'amazing',
'amazon',
'amazonian',
'ambassador',
'ambassadorial',
'ambassadorship',
'amber',
'ambergrease',
'ambery',
'ambiance',
'ambidexter',
'ambidexterity',
'ambidextrously',
'ambience',
'ambient',
'ambiguity',
'ambiguously',
'ambilateral',
'ambisexuality',
'ambition',
'ambitiously',
'ambivalence',
'ambivalent',
'ambivalently',
'ambivert',
'amble',
'ambled',
'ambler',
'ambling',
'ambrosia',
'ambrosial',
'ambulance',
'ambulant',
'ambulate',
'ambulation',
'ambulatory',
'ambuscade',
'ambuscading',
'ambush',
'ambushed',
'ambusher',
'ambushing',
'ambushment',
'ameba',
'amebae',
'ameban',
'amebean',
'amebic',
'ameboid',
'ameer',
'ameerate',
'ameliorate',
'amelioration',
'ameliorative',
'amenability',
'amenable',
'amenably',
'amend',
'amendable',
'amendatory',
'amender',
'amending',
'amendment',
'amenity',
'ament',
'amerce',
'amerced',
'amercement',
'amercing',
'america',
'american',
'americana',
'americanism',
'americanist',
'americanization',
'americanize',
'americanized',
'americanizing',
'americium',
'amerind',
'amerindian',
'amerism',
'amethyst',
'amex',
'amiability',
'amiable',
'amiably',
'amicability',
'amicable',
'amicably',
'amice',
'amici',
'amid',
'amide',
'amidic',
'amidship',
'amidst',
'amigo',
'aminic',
'aminity',
'amino',
'amirate',
'amire',
'amish',
'amity',
'ammeter',
'ammine',
'ammino',
'ammo',
'ammonia',
'ammoniac',
'ammoniate',
'ammonic',
'ammonify',
'ammonite',
'ammonium',
'ammonoid',
'ammunition',
'amnesia',
'amnesiac',
'amnesic',
'amnestic',
'amnestied',
'amnesty',
'amnestying',
'amnion',
'amnionic',
'amniote',
'amniotic',
'amoeba',
'amoebae',
'amoeban',
'amoebean',
'amoebic',
'amoeboid',
'amok',
'amole',
'among',
'amongst',
'amontillado',
'amoral',
'amorality',
'amoretti',
'amoretto',
'amoroso',
'amorously',
'amorphously',
'amort',
'amortise',
'amortizable',
'amortization',
'amortize',
'amortized',
'amortizement',
'amortizing',
'amount',
'amounted',
'amounting',
'amour',
'amove',
'amp',
'amperage',
'ampere',
'ampersand',
'amphetamine',
'amphibia',
'amphibian',
'amphibole',
'amphitheater',
'amphora',
'amphorae',
'amphoral',
'ampicillin',
'ampitheater',
'ample',
'ampler',
'amplest',
'amplifiable',
'amplification',
'amplified',
'amplifier',
'amplify',
'amplifying',
'amplitude',
'amply',
'ampoule',
'ampul',
'ampule',
'ampulla',
'amputate',
'amputation',
'amputee',
'amreeta',
'amrita',
'amsterdam',
'amtrac',
'amtrack',
'amtrak',
'amuck',
'amulet',
'amusable',
'amuse',
'amused',
'amusement',
'amuser',
'amusing',
'amyl',
'amylase',
'an',
'ana',
'anabolic',
'anabolism',
'anachronism',
'anachronistic',
'anachronistical',
'anaconda',
'anadem',
'anaemia',
'anaemic',
'anaerobe',
'anaerobic',
'anaesthesia',
'anaesthetic',
'anaesthetist',
'anaesthetization',
'anaesthetize',
'anaesthetized',
'anaesthetizing',
'anagram',
'anagrammed',
'anaheim',
'anal',
'analemma',
'analeptic',
'analgesia',
'analgesic',
'analgia',
'anality',
'analog',
'analogic',
'analogical',
'analogize',
'analogously',
'analogue',
'analogy',
'analysand',
'analyse',
'analysed',
'analyser',
'analyst',
'analytic',
'analytical',
'analyzable',
'analyze',
'analyzed',
'analyzer',
'analyzing',
'anapest',
'anapestic',
'anarch',
'anarchic',
'anarchical',
'anarchism',
'anarchist',
'anarchistic',
'anarchy',
'anastigmatic',
'anatase',
'anathema',
'anathemata',
'anathematize',
'anathematized',
'anathematizing',
'anatomic',
'anatomical',
'anatomist',
'anatomize',
'anatomized',
'anatomizing',
'anatomy',
'anatto',
'ancestral',
'ancestry',
'anchor',
'anchorage',
'anchoring',
'anchorite',
'anchoritic',
'anchovy',
'ancien',
'ancient',
'ancienter',
'ancientest',
'anciently',
'ancillary',
'and',
'andante',
'andantino',
'andean',
'anderson',
'andesite',
'andesyte',
'andiron',
'andorra',
'andre',
'andrew',
'androgen',
'androgenic',
'androgyne',
'androgynism',
'androgyny',
'android',
'andromeda',
'anear',
'anearing',
'anecdotal',
'anecdote',
'anecdotic',
'anecdotist',
'anechoic',
'anele',
'anemia',
'anemic',
'anemometer',
'anemone',
'anent',
'anergy',
'aneroid',
'anesthesia',
'anesthesiologist',
'anesthesiology',
'anesthetic',
'anesthetist',
'anesthetization',
'anesthetize',
'anesthetized',
'anesthetizing',
'aneurism',
'aneurysm',
'anew',
'angary',
'angel',
'angelfish',
'angelic',
'angelica',
'angelical',
'anger',
'angering',
'angerly',
'angina',
'anginal',
'angiogram',
'angiology',
'angiosperm',
'angle',
'angled',
'angler',
'angleworm',
'anglican',
'anglicanism',
'anglicism',
'anglicization',
'anglicize',
'anglicized',
'anglicizing',
'angling',
'anglo',
'anglophile',
'anglophilia',
'anglophobe',
'anglophobia',
'angola',
'angolan',
'angora',
'angostura',
'angrier',
'angriest',
'angrily',
'angry',
'angst',
'angstrom',
'anguish',
'anguished',
'anguishing',
'angular',
'angularity',
'angularly',
'anhydride',
'anile',
'anilin',
'aniline',
'anility',
'anima',
'animadversion',
'animadvert',
'animadverted',
'animadverting',
'animal',
'animalcule',
'animalism',
'animalistic',
'animality',
'animate',
'animater',
'animation',
'animato',
'animism',
'animist',
'animistic',
'animo',
'animosity',
'anion',
'anionic',
'anise',
'aniseed',
'anisette',
'anisic',
'anitinstitutionalism',
'ankara',
'ankh',
'ankle',
'anklebone',
'anklet',
'ann',
'anna',
'annal',
'annalist',
'annat',
'annatto',
'anne',
'anneal',
'annealed',
'annealer',
'annealing',
'annelid',
'annex',
'annexation',
'annexational',
'annexed',
'annexing',
'annexion',
'annexure',
'annie',
'annihilate',
'annihilation',
'anniversary',
'anno',
'annotate',
'annotation',
'annotative',
'announce',
'announced',
'announcement',
'announcer',
'announcing',
'annoy',
'annoyance',
'annoyed',
'annoyer',
'annoying',
'annual',
'annualized',
'annuitant',
'annuity',
'annul',
'annular',
'annularity',
'annulate',
'annuler',
'annulet',
'annuli',
'annullable',
'annulled',
'annulling',
'annulment',
'annum',
'annunciate',
'annunciation',
'annunciatory',
'anodal',
'anode',
'anodic',
'anodization',
'anodize',
'anodized',
'anodizing',
'anodyne',
'anodynic',
'anoia',
'anoint',
'anointed',
'anointer',
'anointing',
'anointment',
'anole',
'anomalistic',
'anomaly',
'anomia',
'anomic',
'anomie',
'anomy',
'anon',
'anonym',
'anonyma',
'anonymity',
'anonymously',
'anopia',
'anorak',
'anorectic',
'anorexia',
'anorexy',
'another',
'anoxia',
'anoxic',
'ansi',
'answer',
'answerability',
'answerable',
'answerer',
'answering',
'ant',
'antacid',
'antagonism',
'antagonist',
'antagonistic',
'antagonize',
'antagonized',
'antagonizing',
'antarctic',
'antarctica',
'ante',
'anteater',
'antebellum',
'antecede',
'antecedence',
'antecedent',
'antecedental',
'antecedently',
'anteceding',
'antechamber',
'antechoir',
'anted',
'antedate',
'antediluvian',
'anteed',
'antefix',
'anteing',
'antelope',
'antemortem',
'antenna',
'antennae',
'antennal',
'antepartum',
'antepast',
'antepenult',
'antepenultimate',
'anteposition',
'anterior',
'anteriorly',
'anteroom',
'anthem',
'anthemed',
'anther',
'antheral',
'anthill',
'anthologist',
'anthologize',
'anthologized',
'anthologizing',
'anthology',
'anthony',
'anthracite',
'anthracitic',
'anthralin',
'anthrax',
'anthrop',
'anthropocentric',
'anthropoid',
'anthropoidea',
'anthropologic',
'anthropological',
'anthropologist',
'anthropology',
'anthropomorphic',
'anthropomorphism',
'anthropophagy',
'anthroposophy',
'anti',
'antiabortion',
'antiacid',
'antiaircraft',
'antibacterial',
'antibiotic',
'antibody',
'antibusing',
'antic',
'anticancer',
'anticapitalist',
'antichrist',
'anticipate',
'anticipation',
'anticipative',
'anticipatory',
'anticlerical',
'anticlimactic',
'anticlimax',
'anticlinal',
'anticline',
'anticly',
'anticoagulant',
'anticommunism',
'anticommunist',
'anticonvulsant',
'anticonvulsive',
'anticorrosive',
'anticyclone',
'anticyclonic',
'antidemocratic',
'antidepressant',
'antidepressive',
'antidisestablishmentarian',
'antidisestablishmentarianism',
'antidotal',
'antidote',
'antielectron',
'antienvironmentalism',
'antienvironmentalist',
'antifascism',
'antifascist',
'antifertility',
'antifreeze',
'antifungal',
'antigen',
'antigene',
'antigenic',
'antigenicity',
'antigravity',
'antihero',
'antiheroic',
'antihistamine',
'antihistaminic',
'antihumanism',
'antihypertensive',
'antiknock',
'antilabor',
'antiliberal',
'antilogarithm',
'antimacassar',
'antimagnetic',
'antimalarial',
'antimatter',
'antimicrobial',
'antimilitarism',
'antimilitaristic',
'antimissile',
'antimonarchist',
'antimonopolistic',
'antimony',
'antinarcotic',
'antinationalist',
'antineoplastic',
'antineutrino',
'antineutron',
'anting',
'antinoise',
'antinomian',
'antinomianism',
'antinomy',
'antinovel',
'antinucleon',
'antioxidant',
'antipacifist',
'antiparliamentarian',
'antiparticle',
'antipasti',
'antipasto',
'antipathetic',
'antipathy',
'antipersonnel',
'antiperspirant',
'antiphon',
'antiphonal',
'antiphonic',
'antiphony',
'antipodal',
'antipode',
'antipodean',
'antipole',
'antipollution',
'antipope',
'antipoverty',
'antiprohibition',
'antiproton',
'antipyretic',
'antiquarian',
'antiquarianism',
'antiquary',
'antiquate',
'antiquation',
'antique',
'antiqued',
'antiquely',
'antiquer',
'antiquing',
'antiquity',
'antiradical',
'antirational',
'antirevolutionary',
'antirust',
'antiseptic',
'antisepticize',
'antisepticized',
'antisepticizing',
'antiserum',
'antiskid',
'antislavery',
'antismog',
'antisocial',
'antispasmodic',
'antisubmarine',
'antitank',
'antithetic',
'antithetical',
'antitoxin',
'antitrust',
'antiunion',
'antivenin',
'antivivisectionist',
'antiwar',
'antler',
'antlike',
'antlion',
'antoinette',
'antonio',
'antony',
'antonym',
'antonymy',
'antra',
'antral',
'antre',
'antrum',
'antwerp',
'anvil',
'anviled',
'anviling',
'anvilled',
'anvilling',
'anviltop',
'anxiety',
'anxiously',
'any',
'anybody',
'anyhow',
'anymore',
'anyone',
'anyplace',
'anything',
'anytime',
'anyway',
'anywhere',
'anywise',
'aorta',
'aortae',
'aortal',
'aortic',
'aouad',
'aoudad',
'aqua',
'aquacade',
'aquaculture',
'aquae',
'aqualung',
'aquamarine',
'aquanaut',
'aquaplane',
'aquaplaned',
'aquaplaning',
'aquaria',
'aquarial',
'aquarian',
'aquarist',
'aquarium',
'aquatic',
'aquatint',
'aquatinted',
'aquatone',
'aquavit',
'aqueduct',
'aqueously',
'aquiculture',
'aquifer',
'aquiline',
'aquiver',
'arab',
'arabesk',
'arabesque',
'arabia',
'arabian',
'arabic',
'arabize',
'arabizing',
'arable',
'arachnid',
'arachnoid',
'aramaic',
'arapaho',
'arbalest',
'arbalist',
'arbiter',
'arbitrable',
'arbitrage',
'arbitrager',
'arbitral',
'arbitrament',
'arbitrarily',
'arbitrary',
'arbitrate',
'arbitration',
'arbitrational',
'arbitrative',
'arbor',
'arboreal',
'arborescent',
'arboreta',
'arboretum',
'arborist',
'arborization',
'arborize',
'arborized',
'arborizing',
'arborvitae',
'arbour',
'arc',
'arcade',
'arcadia',
'arcadian',
'arcana',
'arcane',
'arcanum',
'arced',
'arch',
'archaeologic',
'archaeological',
'archaeologist',
'archaeology',
'archaic',
'archaism',
'archaist',
'archaistic',
'archaize',
'archaized',
'archaizing',
'archangel',
'archangelic',
'archbishop',
'archbishopric',
'archdeacon',
'archdiocesan',
'archdiocese',
'archduke',
'arched',
'archenemy',
'archeological',
'archeology',
'archeozoic',
'archer',
'archery',
'archest',
'archetypal',
'archetype',
'archetypic',
'archetypical',
'archfiend',
'archiepiscopal',
'archimandrite',
'archimedean',
'arching',
'archipelago',
'architect',
'architectonic',
'architectural',
'architecture',
'architecure',
'architrave',
'archival',
'archive',
'archived',
'archiving',
'archivist',
'archly',
'archon',
'archonship',
'archway',
'arcing',
'arcking',
'arco',
'arctic',
'arcuate',
'ardency',
'ardent',
'ardently',
'ardor',
'ardour',
'arduously',
'are',
'area',
'areal',
'areaway',
'arena',
'areola',
'areolae',
'areolar',
'areolate',
'areole',
'areology',
'arete',
'argal',
'argent',
'argental',
'argentic',
'argentina',
'argentine',
'argentinean',
'argentite',
'argentum',
'arginine',
'argle',
'argled',
'argon',
'argonaut',
'argosy',
'argot',
'arguable',
'arguably',
'argue',
'argued',
'arguer',
'argufied',
'argufy',
'argufying',
'arguing',
'argument',
'argumentation',
'argumentative',
'argumentive',
'argyle',
'argyll',
'arhat',
'aria',
'arid',
'arider',
'aridest',
'aridity',
'aridly',
'ariel',
'aright',
'ariose',
'arioso',
'arise',
'arisen',
'arising',
'aristocracy',
'aristocrat',
'aristocratic',
'aristotelian',
'aristotle',
'arith',
'arithmetic',
'arithmetical',
'arithmetician',
'arizona',
'arizonan',
'arizonian',
'ark',
'arkansan',
'arlington',
'arm',
'armada',
'armadillo',
'armageddon',
'armament',
'armature',
'armband',
'armchair',
'armed',
'armenia',
'armenian',
'armer',
'armful',
'armhole',
'armiger',
'arming',
'armistice',
'armlessly',
'armlet',
'armload',
'armoire',
'armonica',
'armor',
'armorer',
'armorial',
'armoring',
'armory',
'armour',
'armourer',
'armouring',
'armoury',
'armpit',
'armrest',
'armsful',
'army',
'armyworm',
'arnica',
'arnold',
'aroint',
'arointed',
'arointing',
'aroma',
'aromatic',
'aromatize',
'arose',
'around',
'arousal',
'arouse',
'aroused',
'arouser',
'arousing',
'aroynt',
'arpeggio',
'arrack',
'arraign',
'arraigned',
'arraigner',
'arraigning',
'arraignment',
'arrange',
'arrangement',
'arranger',
'arranging',
'arrant',
'arrantly',
'array',
'arrayal',
'arrayed',
'arrayer',
'arraying',
'arrear',
'arrest',
'arrested',
'arrestee',
'arrester',
'arresting',
'arrestment',
'arrhythmia',
'arrhythmical',
'arrival',
'arrive',
'arrived',
'arrivederci',
'arriver',
'arriving',
'arrogance',
'arrogant',
'arrogantly',
'arrogate',
'arrogation',
'arrow',
'arrowed',
'arrowhead',
'arrowing',
'arrowroot',
'arrowy',
'arroyo',
'arse',
'arsenal',
'arsenate',
'arsenic',
'arsenical',
'arson',
'arsonic',
'arsonist',
'art',
'artefact',
'arterial',
'arteriocapillary',
'arteriogram',
'arteriography',
'arteriolar',
'arteriole',
'arteriosclerotic',
'artery',
'artful',
'artfully',
'arthritic',
'arthrography',
'arthropod',
'arthur',
'arthurian',
'artichoke',
'article',
'articled',
'articular',
'articulate',
'articulately',
'articulation',
'articulatory',
'artier',
'artiest',
'artifact',
'artifice',
'artificer',
'artificial',
'artificiality',
'artillerist',
'artillery',
'artilleryman',
'artily',
'artisan',
'artisanship',
'artist',
'artiste',
'artistic',
'artistry',
'artlessly',
'artwork',
'arty',
'arum',
'aryan',
'arythmia',
'arythmic',
'asafetida',
'asap',
'asbestic',
'ascend',
'ascendable',
'ascendance',
'ascendancy',
'ascendant',
'ascendence',
'ascendent',
'ascender',
'ascending',
'ascension',
'ascent',
'ascertain',
'ascertainable',
'ascertained',
'ascertaining',
'ascertainment',
'ascetic',
'asceticism',
'ascorbate',
'ascorbic',
'ascot',
'ascribable',
'ascribe',
'ascribed',
'ascribing',
'ascription',
'asea',
'aseptic',
'asexual',
'asexuality',
'ash',
'ashamed',
'ashcan',
'ashed',
'ashen',
'ashier',
'ashiest',
'ashing',
'ashlar',
'ashman',
'ashore',
'ashram',
'ashtray',
'ashy',
'asia',
'asian',
'asiatic',
'aside',
'asinine',
'asininely',
'asininity',
'ask',
'askance',
'askant',
'asked',
'asker',
'askew',
'asking',
'aslant',
'asleep',
'aslope',
'asocial',
'aspca',
'aspect',
'aspen',
'asper',
'asperity',
'asperse',
'aspersed',
'aspersing',
'aspersion',
'asphalt',
'asphalted',
'asphaltic',
'asphalting',
'asphaltum',
'aspheric',
'asphodel',
'asphyxia',
'asphyxiant',
'asphyxiate',
'asphyxiation',
'asphyxy',
'aspic',
'aspidistra',
'aspirant',
'aspirate',
'aspiration',
'aspire',
'aspirer',
'aspirin',
'aspiring',
'aspish',
'asquint',
'assafoetida',
'assagai',
'assail',
'assailable',
'assailant',
'assailed',
'assailer',
'assailing',
'assailment',
'assam',
'assassin',
'assassinate',
'assassination',
'assault',
'assaultable',
'assaulted',
'assaulter',
'assaulting',
'assaultive',
'assay',
'assayed',
'assayer',
'assaying',
'assegai',
'assemblage',
'assemble',
'assembled',
'assembler',
'assembling',
'assembly',
'assemblyman',
'assemblywoman',
'assent',
'assented',
'assenter',
'assenting',
'assert',
'asserted',
'asserter',
'asserting',
'assertion',
'assertive',
'assessable',
'assessed',
'assessee',
'assessing',
'assessment',
'assessor',
'assessorship',
'asset',
'asseverate',
'asseveration',
'assiduity',
'assiduously',
'assign',
'assignability',
'assignable',
'assignat',
'assignation',
'assigned',
'assignee',
'assigner',
'assigning',
'assignment',
'assignor',
'assimilable',
'assimilate',
'assimilation',
'assimilative',
'assisi',
'assist',
'assistance',
'assistant',
'assisted',
'assister',
'assisting',
'assize',
'assizer',
'asslike',
'assn',
'assoc',
'associate',
'association',
'associative',
'associativity',
'assonance',
'assonant',
'assonantly',
'assort',
'assorted',
'assorter',
'assorting',
'assortment',
'asst',
'assuagable',
'assuage',
'assuagement',
'assuaging',
'assuasive',
'assumable',
'assumably',
'assume',
'assumed',
'assumer',
'assuming',
'assumption',
'assumptive',
'assurance',
'assure',
'assurer',
'assuring',
'assuror',
'assyria',
'assyrian',
'astatine',
'aster',
'asterisk',
'asterisked',
'asterism',
'astern',
'asteroid',
'asteroidal',
'asthma',
'asthmatic',
'astigmatic',
'astigmatism',
'astir',
'astonish',
'astonished',
'astonishing',
'astonishment',
'astound',
'astounding',
'astraddle',
'astragal',
'astrakhan',
'astral',
'astray',
'astride',
'astringe',
'astringency',
'astringent',
'astringing',
'astrobiological',
'astrobiologist',
'astrobiology',
'astrodome',
'astrodynamic',
'astroid',
'astrolabe',
'astrologer',
'astrologic',
'astrological',
'astrologist',
'astrology',
'astronaut',
'astronautic',
'astronautical',
'astronomer',
'astronomic',
'astronomical',
'astronomy',
'astrophysical',
'astrophysicist',
'astute',
'astutely',
'asunder',
'aswarm',
'aswirl',
'aswoon',
'asyla',
'asylum',
'asymmetric',
'asymmetrical',
'asymmetry',
'asymptomatic',
'asymptote',
'asymptotic',
'asymptotical',
'async',
'asyndeta',
'asystematic',
'at',
'atavic',
'atavism',
'atavist',
'atavistic',
'ataxia',
'ataxic',
'ataxy',
'ate',
'atelier',
'atheism',
'atheist',
'atheistic',
'atheistical',
'atheling',
'athena',
'athenaeum',
'atheneum',
'athenian',
'atherosclerotic',
'athirst',
'athlete',
'athletic',
'athwart',
'atilt',
'atingle',
'atlanta',
'atlantic',
'atma',
'atman',
'atmosphere',
'atmospheric',
'atmospherical',
'atoll',
'atom',
'atomic',
'atomical',
'atomise',
'atomised',
'atomising',
'atomism',
'atomist',
'atomistic',
'atomization',
'atomize',
'atomized',
'atomizer',
'atomizing',
'atomy',
'atonable',
'atonal',
'atonality',
'atone',
'atoneable',
'atonement',
'atoner',
'atoning',
'atop',
'atopic',
'atremble',
'atria',
'atrial',
'atrip',
'atrium',
'atrociously',
'atrocity',
'atrophic',
'atrophied',
'atrophy',
'atrophying',
'atropine',
'atropism',
'attach',
'attachable',
'attache',
'attached',
'attacher',
'attaching',
'attachment',
'attack',
'attacker',
'attacking',
'attain',
'attainability',
'attainable',
'attainably',
'attainder',
'attained',
'attainer',
'attaining',
'attainment',
'attaint',
'attainted',
'attainting',
'attar',
'attemper',
'attempt',
'attemptable',
'attempted',
'attempter',
'attempting',
'attend',
'attendance',
'attendant',
'attendantly',
'attendee',
'attender',
'attending',
'attention',
'attentive',
'attenuate',
'attenuation',
'attermined',
'attest',
'attestable',
'attestant',
'attestation',
'attested',
'attester',
'attesting',
'attic',
'attila',
'attire',
'attiring',
'attitude',
'attitudinal',
'attitudinize',
'attitudinized',
'attitudinizing',
'attn',
'attorney',
'attorning',
'attract',
'attractable',
'attractant',
'attracted',
'attracting',
'attraction',
'attractive',
'attrib',
'attributable',
'attribute',
'attributed',
'attributing',
'attribution',
'attributive',
'attrition',
'attritional',
'attune',
'attuned',
'attuning',
'atty',
'atwain',
'atween',
'atwitter',
'atypic',
'atypical',
'aubade',
'auberge',
'auburn',
'auction',
'auctioneer',
'auctioning',
'auctorial',
'audaciously',
'audacity',
'audad',
'audibility',
'audible',
'audibly',
'audience',
'audient',
'audio',
'audiogram',
'audiological',
'audiologist',
'audiology',
'audiometer',
'audiometric',
'audiometrist',
'audiometry',
'audiophile',
'audiotape',
'audiovisual',
'audit',
'audited',
'auditing',
'audition',
'auditioning',
'auditive',
'auditoria',
'auditorial',
'auditorium',
'auditory',
'augend',
'auger',
'aught',
'augment',
'augmentation',
'augmented',
'augmenter',
'augmenting',
'augur',
'augural',
'augurer',
'auguring',
'augury',
'august',
'augusta',
'auguster',
'augustest',
'augustine',
'augustinian',
'augustly',
'auld',
'aulder',
'auldest',
'aunt',
'aunthood',
'auntie',
'auntliest',
'aunty',
'aura',
'aurae',
'aural',
'aurate',
'aureate',
'aureately',
'aureola',
'aureolae',
'aureole',
'aureoled',
'aureomycin',
'auric',
'auricle',
'auricled',
'auricular',
'auricularly',
'auriform',
'aurist',
'aurora',
'aurorae',
'auroral',
'aurorean',
'aurum',
'auscultate',
'auscultation',
'auspice',
'auspiciously',
'aussie',
'austere',
'austerely',
'austerest',
'austerity',
'austin',
'austral',
'australia',
'australian',
'austria',
'austrian',
'autarchy',
'autarky',
'authentic',
'authenticate',
'authentication',
'authenticity',
'author',
'authoring',
'authoritarian',
'authoritarianism',
'authoritative',
'authority',
'authorization',
'authorize',
'authorized',
'authorizer',
'authorizing',
'authorship',
'autism',
'autistic',
'auto',
'autobahn',
'autobahnen',
'autobiographer',
'autobiographic',
'autobiographical',
'autobiography',
'autocade',
'autoclave',
'autocracy',
'autocrat',
'autocratic',
'autodial',
'autodialed',
'autodialer',
'autodialing',
'autodialled',
'autodialling',
'autodidact',
'autodidactic',
'autoed',
'autoeroticism',
'autoerotism',
'autogenetic',
'autogiro',
'autograph',
'autographed',
'autographic',
'autographing',
'autogyro',
'autoimmunity',
'autoimmunization',
'autoimmunize',
'autoimmunized',
'autoimmunizing',
'autoinfection',
'autoing',
'autoinoculation',
'autointoxication',
'autolyze',
'automanipulation',
'automanipulative',
'automat',
'automata',
'automate',
'automatic',
'automation',
'automatism',
'automatization',
'automatize',
'automatized',
'automatizing',
'automaton',
'automobile',
'automobilist',
'automotive',
'autonomic',
'autonomously',
'autonomy',
'autophagy',
'autopilot',
'autopsic',
'autopsied',
'autopsy',
'autopsying',
'autoregulation',
'autoregulative',
'autoregulatory',
'autostrada',
'autosuggestion',
'autotherapy',
'autotransplant',
'autre',
'autumn',
'autumnal',
'aux',
'auxiliary',
'auxillary',
'auxin',
'avail',
'availability',
'available',
'availed',
'availing',
'avalanche',
'avantgarde',
'avarice',
'avariciously',
'avascular',
'avast',
'avatar',
'avaunt',
'avdp',
'ave',
'avenge',
'avenger',
'avenging',
'avenue',
'aver',
'average',
'averaging',
'averment',
'averring',
'averse',
'aversely',
'aversion',
'aversive',
'avert',
'averted',
'averting',
'avian',
'avianize',
'avianized',
'aviarist',
'aviary',
'aviate',
'aviation',
'aviatrix',
'avid',
'avidity',
'avidly',
'avifauna',
'avion',
'avionic',
'aviso',
'avitaminotic',
'avocado',
'avocation',
'avocational',
'avocet',
'avogadro',
'avoid',
'avoidable',
'avoidably',
'avoidance',
'avoidant',
'avoider',
'avoiding',
'avouch',
'avouched',
'avoucher',
'avouching',
'avow',
'avowable',
'avowably',
'avowal',
'avowed',
'avower',
'avowing',
'avuncular',
'aw',
'await',
'awaited',
'awaiter',
'awaiting',
'awake',
'awaked',
'awaken',
'awakened',
'awakener',
'awakening',
'awaking',
'award',
'awardee',
'awarder',
'awarding',
'aware',
'awash',
'away',
'awe',
'aweary',
'aweather',
'awed',
'aweigh',
'aweing',
'awesome',
'awesomely',
'awful',
'awfuller',
'awfullest',
'awfully',
'awhile',
'awhirl',
'awing',
'awkward',
'awkwarder',
'awkwardest',
'awkwardly',
'awl',
'awn',
'awned',
'awning',
'awoke',
'awoken',
'awol',
'awry',
'ax',
'axe',
'axed',
'axel',
'axeman',
'axial',
'axiality',
'axil',
'axillae',
'axillar',
'axillary',
'axing',
'axiom',
'axiomatic',
'axle',
'axled',
'axletree',
'axlike',
'axman',
'axolotl',
'axon',
'axonal',
'axone',
'axonic',
'axseed',
'ay',
'ayah',
'ayatollah',
'aye',
'azalea',
'azide',
'azido',
'azimuth',
'azimuthal',
'azine',
'azoic',
'azole',
'azote',
'azoth',
'aztec',
'aztecan',
'azure',
'azurite',
'baa',
'baaed',
'baaing',
'baal',
'baalism',
'baba',
'babbitting',
'babble',
'babbled',
'babbler',
'babbling',
'babcock',
'babe',
'babel',
'babied',
'babka',
'baboo',
'baboon',
'baboonish',
'babu',
'babul',
'babushka',
'baby',
'babyhood',
'babying',
'babyish',
'babylon',
'babylonia',
'babylonian',
'babysitting',
'bacca',
'baccalaureate',
'baccarat',
'bacchanal',
'bacchanalia',
'bacchanalian',
'bacchant',
'bacchic',
'bach',
'bachelor',
'bachelorhood',
'bachelorship',
'bacillary',
'bacilli',
'back',
'backache',
'backbencher',
'backbend',
'backbit',
'backbite',
'backbiter',
'backbiting',
'backbitten',
'backboard',
'backbone',
'backbreaking',
'backcourt',
'backdate',
'backdoor',
'backdrop',
'backer',
'backfield',
'backfill',
'backfilled',
'backfire',
'backfiring',
'backgammon',
'background',
'backhand',
'backhanding',
'backhoe',
'backing',
'backlash',
'backlashed',
'backlist',
'backlit',
'backlog',
'backlogging',
'backmost',
'backpack',
'backpacker',
'backpacking',
'backrest',
'backsaw',
'backseat',
'backside',
'backslap',
'backslapper',
'backslapping',
'backslid',
'backslidden',
'backslide',
'backslider',
'backsliding',
'backspace',
'backspaced',
'backspacing',
'backspin',
'backstage',
'backstay',
'backstitching',
'backstop',
'backstretch',
'backstroke',
'backstroking',
'backswept',
'backtrack',
'backtracking',
'backup',
'backward',
'backwardly',
'backwash',
'backwater',
'backwood',
'backwoodsman',
'backyard',
'bacon',
'bacteria',
'bacterial',
'bactericidal',
'bactericide',
'bacteriocidal',
'bacteriologic',
'bacteriological',
'bacteriologist',
'bacteriology',
'bacteriophage',
'bacteriotoxin',
'bacterium',
'bacteroidal',
'bad',
'baddie',
'baddy',
'bade',
'badge',
'badger',
'badgering',
'badgerly',
'badging',
'badinage',
'badinaging',
'badland',
'badly',
'badman',
'badminton',
'badmouth',
'badmouthed',
'badmouthing',
'baedeker',
'baffle',
'baffled',
'bafflement',
'baffler',
'baffling',
'bag',
'bagasse',
'bagatelle',
'bagel',
'bagful',
'baggage',
'baggie',
'baggier',
'baggiest',
'baggily',
'bagging',
'baggy',
'baghdad',
'bagman',
'bagnio',
'bagpipe',
'bagpiper',
'bagsful',
'baguet',
'baguette',
'bagwig',
'bagworm',
'bah',
'bahamian',
'baht',
'bail',
'bailable',
'bailed',
'bailee',
'bailer',
'bailey',
'bailie',
'bailiff',
'bailing',
'bailiwick',
'bailment',
'bailor',
'bailout',
'bailsman',
'bairn',
'bait',
'baited',
'baiter',
'baiting',
'baize',
'bake',
'baked',
'baker',
'bakersfield',
'bakery',
'bakeshop',
'baking',
'baklava',
'baksheesh',
'bakshish',
'balalaika',
'balance',
'balanced',
'balancer',
'balancing',
'balboa',
'balbriggan',
'balcony',
'bald',
'baldachin',
'balder',
'balderdash',
'baldest',
'baldhead',
'balding',
'baldish',
'baldly',
'baldpate',
'baldric',
'baldrick',
'bale',
'baled',
'baleen',
'balefire',
'baleful',
'balefully',
'baler',
'bali',
'balinese',
'baling',
'balk',
'balkan',
'balked',
'balker',
'balkier',
'balkiest',
'balkily',
'balking',
'balky',
'ball',
'ballad',
'balladeer',
'balladic',
'balladry',
'ballast',
'ballasted',
'ballasting',
'balled',
'baller',
'ballerina',
'ballet',
'balletic',
'balletomane',
'balling',
'ballista',
'ballistae',
'ballistic',
'ballistician',
'ballo',
'balloon',
'ballooner',
'ballooning',
'balloonist',
'balloonlike',
'ballot',
'balloted',
'balloter',
'balloting',
'ballottable',
'ballplayer',
'ballpoint',
'ballroom',
'ballute',
'ballyhoo',
'ballyhooed',
'ballyhooing',
'ballyrag',
'balm',
'balmier',
'balmiest',
'balmily',
'balmoral',
'balmy',
'baloney',
'balsa',
'balsam',
'balsamed',
'balsamic',
'balsaming',
'baltic',
'baltimore',
'baluster',
'balustrade',
'bambino',
'bamboo',
'bamboozle',
'bamboozled',
'bamboozler',
'bamboozling',
'ban',
'banal',
'banality',
'banana',
'banco',
'band',
'bandage',
'bandager',
'bandaging',
'bandana',
'bandanna',
'bandbox',
'bandeau',
'bandeaux',
'bander',
'banderole',
'bandicoot',
'bandied',
'banding',
'bandit',
'banditry',
'banditti',
'bandmaster',
'bandoleer',
'bandsman',
'bandstand',
'bandwagon',
'bandwidth',
'bandy',
'bandying',
'bane',
'baned',
'baneful',
'bang',
'banger',
'banging',
'bangkok',
'bangle',
'bangtail',
'banish',
'banished',
'banisher',
'banishing',
'banishment',
'banister',
'banjo',
'banjoist',
'bank',
'bankable',
'bankbook',
'banked',
'banker',
'banking',
'banknote',
'bankroll',
'bankrolled',
'bankrolling',
'bankrupt',
'bankruptcy',
'bankrupted',
'bankrupting',
'bankside',
'banned',
'banner',
'banning',
'bannister',
'bannock',
'banquet',
'banqueted',
'banqueter',
'banqueting',
'banquette',
'banshee',
'banshie',
'bantam',
'bantamweight',
'banter',
'banterer',
'bantering',
'banting',
'bantling',
'bantu',
'banyan',
'banzai',
'baobab',
'baptise',
'baptised',
'baptism',
'baptismal',
'baptist',
'baptistery',
'baptize',
'baptized',
'baptizer',
'baptizing',
'bar',
'barb',
'barbara',
'barbarian',
'barbarianism',
'barbaric',
'barbarism',
'barbarity',
'barbarization',
'barbarize',
'barbarized',
'barbarizing',
'barbarously',
'barbecue',
'barbecued',
'barbecuing',
'barbed',
'barbel',
'barbell',
'barber',
'barbering',
'barberry',
'barbershop',
'barbican',
'barbing',
'barbital',
'barbiturate',
'barbituric',
'barbwire',
'barcarole',
'barcelona',
'bard',
'bardic',
'barding',
'bare',
'bareback',
'barefaced',
'barefit',
'barefoot',
'barehead',
'barely',
'barer',
'barest',
'barf',
'barfed',
'barfing',
'barfly',
'bargain',
'bargainable',
'bargained',
'bargainee',
'bargainer',
'bargaining',
'barge',
'bargee',
'bargeman',
'barging',
'barhop',
'barhopping',
'bariatrician',
'baric',
'baring',
'barite',
'baritone',
'barium',
'bark',
'barked',
'barkeep',
'barkeeper',
'barkentine',
'barker',
'barkier',
'barking',
'barky',
'barley',
'barlow',
'barmaid',
'barman',
'barmie',
'barmier',
'barmiest',
'barmy',
'barn',
'barnacle',
'barnacled',
'barnier',
'barnstorm',
'barnstormed',
'barnstormer',
'barnstorming',
'barny',
'barnyard',
'barogram',
'barograph',
'barographic',
'barometer',
'barometric',
'barometrical',
'barometrograph',
'barometry',
'baron',
'baronage',
'baronet',
'baronetcy',
'baronial',
'barony',
'baroque',
'baroscope',
'barouche',
'barque',
'barquentine',
'barrable',
'barrack',
'barracking',
'barracuda',
'barrage',
'barraging',
'barratry',
'barre',
'barrel',
'barreled',
'barreling',
'barrelled',
'barrelling',
'barren',
'barrener',
'barrenest',
'barrenly',
'barrette',
'barricade',
'barricader',
'barricading',
'barrier',
'barring',
'barrio',
'barrister',
'barristerial',
'barroom',
'barrow',
'barstool',
'bartend',
'bartender',
'bartending',
'barter',
'barterer',
'bartering',
'bartizan',
'bartlett',
'barware',
'baryon',
'baryonic',
'barytone',
'basal',
'basalt',
'basaltic',
'base',
'baseball',
'baseboard',
'baseborn',
'based',
'baselessly',
'baseline',
'basely',
'baseman',
'basement',
'baseplate',
'baser',
'basest',
'bash',
'bashed',
'basher',
'bashful',
'bashfully',
'bashing',
'basic',
'basicity',
'basified',
'basifier',
'basify',
'basifying',
'basil',
'basilar',
'basilica',
'basilisk',
'basin',
'basined',
'basinet',
'basing',
'bask',
'basked',
'basket',
'basketball',
'basketful',
'basketlike',
'basketry',
'basketwork',
'basking',
'basque',
'basset',
'basseted',
'bassetting',
'bassi',
'bassinet',
'bassist',
'bassly',
'basso',
'bassoon',
'bassoonist',
'basswood',
'bassy',
'bast',
'bastardization',
'bastardize',
'bastardized',
'bastardizing',
'baste',
'basted',
'baster',
'bastian',
'bastille',
'bastinado',
'basting',
'bastion',
'bat',
'batboy',
'batch',
'batched',
'batcher',
'batching',
'bate',
'bateau',
'bateaux',
'batfish',
'bath',
'bathe',
'bathed',
'bather',
'bathetic',
'bathhouse',
'bathing',
'batholith',
'batholithic',
'bathrobe',
'bathroom',
'bathtub',
'bathyscaph',
'bathyscaphe',
'bathysphere',
'batik',
'batiste',
'batman',
'baton',
'batrachian',
'batsman',
'battalion',
'batteau',
'batteaux',
'batted',
'batten',
'battened',
'battener',
'battening',
'batter',
'battering',
'battery',
'battier',
'battiest',
'batting',
'battle',
'battled',
'battledore',
'battlefield',
'battlefront',
'battleground',
'battlement',
'battlemented',
'battler',
'battleship',
'battlewagon',
'battling',
'batty',
'batwing',
'batwoman',
'bauble',
'baud',
'baulk',
'baulked',
'baulkier',
'baulkiest',
'baulking',
'baulky',
'bauxite',
'bavarian',
'bawd',
'bawdier',
'bawdiest',
'bawdily',
'bawdric',
'bawdry',
'bawdy',
'bawl',
'bawled',
'bawler',
'bawling',
'bay',
'bayberry',
'bayed',
'baying',
'bayonet',
'bayoneted',
'bayoneting',
'bayonetted',
'bayonetting',
'bayou',
'baywood',
'bazaar',
'bazar',
'bazooka',
'be',
'beach',
'beachboy',
'beachcomber',
'beached',
'beachhead',
'beachier',
'beachiest',
'beaching',
'beachy',
'beacon',
'beaconing',
'bead',
'beadier',
'beadiest',
'beadily',
'beading',
'beadle',
'beadlike',
'beadman',
'beadroll',
'beadsman',
'beadwork',
'beady',
'beagle',
'beak',
'beaked',
'beaker',
'beakier',
'beakiest',
'beaklike',
'beaky',
'beam',
'beamed',
'beamier',
'beamily',
'beaming',
'beamish',
'beamy',
'bean',
'beanbag',
'beanball',
'beaned',
'beanery',
'beanie',
'beaning',
'beanlike',
'beano',
'beanpole',
'beanstalk',
'bear',
'bearable',
'bearably',
'bearberry',
'bearcat',
'beard',
'bearding',
'bearer',
'bearing',
'bearish',
'bearskin',
'beast',
'beastie',
'beastlier',
'beastliest',
'beastly',
'beat',
'beatable',
'beaten',
'beater',
'beatific',
'beatification',
'beatified',
'beatify',
'beatifying',
'beatitude',
'beatnik',
'beau',
'beaucoup',
'beaufort',
'beauish',
'beaumont',
'beaut',
'beauteously',
'beautician',
'beautification',
'beautified',
'beautifier',
'beautiful',
'beautifully',
'beautify',
'beautifying',
'beauty',
'beaux',
'beaver',
'beavering',
'bebop',
'bebopper',
'becalm',
'becalmed',
'becalming',
'became',
'because',
'bechamel',
'beck',
'becking',
'beckon',
'beckoner',
'beckoning',
'becloud',
'beclouding',
'become',
'becometh',
'becoming',
'becurse',
'becurst',
'bed',
'bedamn',
'bedamned',
'bedaub',
'bedaubed',
'bedaubing',
'bedazzle',
'bedazzled',
'bedazzlement',
'bedazzling',
'bedbug',
'bedchair',
'bedcover',
'beddable',
'bedder',
'bedding',
'bedeck',
'bedecking',
'bedevil',
'bedeviled',
'bedeviling',
'bedevilled',
'bedevilling',
'bedevilment',
'bedew',
'bedewed',
'bedewing',
'bedfast',
'bedfellow',
'bedframe',
'bedgown',
'bedight',
'bedighted',
'bedim',
'bedimmed',
'bedimming',
'bedizen',
'bedizened',
'bedizening',
'bedlam',
'bedlamp',
'bedmaker',
'bedmate',
'bednighted',
'bedouin',
'bedpan',
'bedpost',
'bedquilt',
'bedraggle',
'bedraggled',
'bedraggling',
'bedrail',
'bedrid',
'bedridden',
'bedrock',
'bedroll',
'bedroom',
'bedrug',
'bedside',
'bedsore',
'bedspread',
'bedspring',
'bedstand',
'bedstead',
'bedstraw',
'bedtime',
'bedumb',
'bedwarf',
'bee',
'beebee',
'beebread',
'beech',
'beechen',
'beechier',
'beechiest',
'beechnut',
'beechy',
'beef',
'beefburger',
'beefcake',
'beefeater',
'beefed',
'beefier',
'beefiest',
'beefily',
'beefing',
'beefsteak',
'beefy',
'beehive',
'beekeeper',
'beekeeping',
'beelike',
'beeline',
'beelzebub',
'been',
'beep',
'beeped',
'beeper',
'beeping',
'beer',
'beerier',
'beeriest',
'beery',
'beeswax',
'beet',
'beethoven',
'beetle',
'beetled',
'beetling',
'beetroot',
'befall',
'befallen',
'befalling',
'befell',
'befit',
'befitted',
'befitting',
'befog',
'befogging',
'befool',
'befooled',
'befooling',
'before',
'beforehand',
'befoul',
'befouled',
'befoulier',
'befouling',
'befriend',
'befriending',
'befuddle',
'befuddled',
'befuddlement',
'befuddler',
'befuddling',
'beg',
'began',
'begat',
'beget',
'begetter',
'begetting',
'beggar',
'beggaring',
'beggarly',
'beggary',
'begging',
'begin',
'beginner',
'beginning',
'begird',
'begirt',
'begone',
'begonia',
'begorah',
'begorra',
'begorrah',
'begot',
'begotten',
'begrime',
'begrimed',
'begriming',
'begrimmed',
'begrudge',
'begrudging',
'beguile',
'beguiled',
'beguilement',
'beguiler',
'beguiling',
'beguine',
'begum',
'begun',
'behalf',
'behave',
'behaved',
'behaver',
'behaving',
'behavior',
'behavioral',
'behaviorism',
'behaviorist',
'behavioristic',
'behead',
'beheading',
'beheld',
'behemoth',
'behest',
'behind',
'behindhand',
'behold',
'beholden',
'beholder',
'beholding',
'behoof',
'behoove',
'behooved',
'behooving',
'behove',
'behoved',
'beige',
'beigy',
'being',
'beirut',
'bejewel',
'bejeweled',
'bejeweling',
'bejewelled',
'bejewelling',
'beknighted',
'belabor',
'belaboring',
'belabour',
'belay',
'belayed',
'belaying',
'belch',
'belched',
'belcher',
'belching',
'beldam',
'beldame',
'beleaguer',
'beleaguering',
'beleapt',
'belfast',
'belfry',
'belgian',
'belgium',
'belgrade',
'belie',
'belied',
'belief',
'belier',
'believability',
'believable',
'believably',
'believe',
'believed',
'believer',
'believeth',
'believing',
'belike',
'belittle',
'belittled',
'belittlement',
'belittler',
'belittling',
'bell',
'belladonna',
'bellboy',
'belle',
'belled',
'belletrist',
'belletristic',
'bellevue',
'bellhop',
'belli',
'bellicose',
'bellicosely',
'bellicosity',
'bellied',
'belligerence',
'belligerency',
'belligerent',
'belligerently',
'belling',
'bellman',
'bello',
'bellow',
'bellowed',
'bellower',
'bellowing',
'bellpull',
'bellum',
'bellweather',
'bellwether',
'belly',
'bellyache',
'bellyached',
'bellyaching',
'bellybutton',
'bellyful',
'bellyfull',
'bellying',
'belong',
'belonging',
'beloved',
'below',
'belt',
'belted',
'belting',
'beltline',
'beltway',
'beluga',
'belvedere',
'belying',
'bema',
'bemata',
'bemire',
'bemiring',
'bemix',
'bemoan',
'bemoaned',
'bemoaning',
'bemuse',
'bemused',
'bemusing',
'ben',
'bench',
'benched',
'bencher',
'benching',
'benchmark',
'benchmarked',
'benchmarking',
'bend',
'bendable',
'bendee',
'bender',
'bending',
'bendy',
'bene',
'beneath',
'benedict',
'benediction',
'benefact',
'benefaction',
'benefactive',
'benefactrix',
'benefic',
'benefice',
'beneficence',
'beneficent',
'beneficently',
'beneficial',
'beneficiary',
'beneficiate',
'beneficing',
'benefit',
'benefited',
'benefiting',
'benefitted',
'benefitting',
'benevolence',
'benevolent',
'benevolently',
'bengal',
'benighted',
'benign',
'benignancy',
'benignant',
'benignantly',
'benignity',
'benignly',
'benin',
'benison',
'benjamin',
'benny',
'bent',
'benthal',
'benthic',
'bentonite',
'bentonitic',
'bentwood',
'benumb',
'benumbed',
'benumbing',
'benzedrine',
'benzene',
'benzin',
'benzine',
'benzoate',
'benzocaine',
'benzoic',
'benzoin',
'benzol',
'benzyl',
'bequeath',
'bequeathal',
'bequeathed',
'bequeathing',
'bequeathment',
'bequest',
'berate',
'berber',
'berceuse',
'bereave',
'bereaved',
'bereavement',
'bereaver',
'bereaving',
'bereft',
'beret',
'beretta',
'berg',
'bergamot',
'bergh',
'bergman',
'berhymed',
'beriberi',
'bering',
'berkeley',
'berkelium',
'berlin',
'berm',
'bermuda',
'bermudian',
'bernard',
'berobed',
'berried',
'berry',
'berrying',
'berrylike',
'berserk',
'berth',
'bertha',
'berthed',
'berthing',
'beryl',
'beryline',
'beryllium',
'beseech',
'beseeched',
'beseecher',
'beseeching',
'beseem',
'beseemed',
'beseeming',
'beset',
'besetter',
'besetting',
'beshrew',
'beshrewed',
'beside',
'besiege',
'besiegement',
'besieger',
'besieging',
'beslime',
'besmear',
'besmearing',
'besmile',
'besmirch',
'besmirched',
'besmircher',
'besmirching',
'besmoke',
'besom',
'besot',
'besotted',
'besotting',
'besought',
'bespake',
'bespangle',
'bespangled',
'bespangling',
'bespatter',
'bespattering',
'bespeak',
'bespeaking',
'bespectacled',
'bespoke',
'bespoken',
'bespread',
'bespreading',
'besprinkle',
'besprinkled',
'besprinkling',
'bessemer',
'best',
'bested',
'bestial',
'bestiality',
'bestialize',
'bestialized',
'bestializing',
'bestiary',
'besting',
'bestir',
'bestirring',
'bestow',
'bestowal',
'bestowed',
'bestowing',
'bestrew',
'bestrewed',
'bestrewing',
'bestrewn',
'bestridden',
'bestride',
'bestriding',
'bestrode',
'bestseller',
'bestselling',
'bet',
'beta',
'betake',
'betaken',
'betaking',
'betatron',
'bete',
'betel',
'betelnut',
'bethel',
'bethink',
'bethlehem',
'bethought',
'betide',
'betiding',
'betime',
'betoken',
'betokened',
'betokening',
'betony',
'betook',
'betray',
'betrayal',
'betrayed',
'betrayer',
'betraying',
'betroth',
'betrothal',
'betrothed',
'betrothing',
'betrothment',
'betta',
'betted',
'better',
'bettering',
'betterment',
'betting',
'betty',
'between',
'betweenbrain',
'betwixt',
'bevatron',
'bevel',
'beveled',
'beveler',
'beveling',
'bevelled',
'beveller',
'bevelling',
'beverage',
'bevy',
'bewail',
'bewailed',
'bewailer',
'bewailing',
'beware',
'bewaring',
'bewig',
'bewilder',
'bewildering',
'bewilderment',
'bewitch',
'bewitched',
'bewitching',
'bewitchment',
'bewrayed',
'bewrayer',
'bey',
'beyond',
'bezel',
'bezique',
'bezoar',
'bhakta',
'bhakti',
'bhang',
'bhutan',
'bhutanese',
'bialy',
'biannual',
'biased',
'biasing',
'biassed',
'biassing',
'biathlon',
'biaxal',
'biaxial',
'bib',
'bibasic',
'bibbed',
'bibber',
'bibbery',
'bibbing',
'bibelot',
'bible',
'biblical',
'bibliog',
'bibliographer',
'bibliographic',
'bibliographical',
'bibliography',
'bibliomania',
'bibliophile',
'bibliotherapist',
'bibliotherapy',
'bibulosity',
'bicameral',
'bicarb',
'bicarbonate',
'bicentenary',
'bicentennial',
'bichloride',
'bichrome',
'bicker',
'bickerer',
'bickering',
'bicolor',
'bicolour',
'biconcave',
'biconcavity',
'biconvex',
'biconvexity',
'bicorn',
'bicorporal',
'bicorporeal',
'bicultural',
'biculturalism',
'bicuspid',
'bicycle',
'bicycled',
'bicycler',
'bicyclic',
'bicycling',
'bicyclist',
'bid',
'biddable',
'biddably',
'bidden',
'bidder',
'bidding',
'biddy',
'bide',
'bider',
'bidet',
'biding',
'bidirectional',
'biennia',
'biennial',
'biennium',
'bier',
'biff',
'biffed',
'biffing',
'biffy',
'bifid',
'biflex',
'bifocal',
'bifold',
'biforked',
'biform',
'bifurcate',
'bifurcation',
'big',
'bigamist',
'bigamistic',
'bigamize',
'bigamized',
'bigamizing',
'bigamously',
'bigamy',
'bigeye',
'bigfoot',
'bigger',
'biggest',
'biggie',
'bigging',
'biggish',
'bighead',
'bighearted',
'bighorn',
'bight',
'bighted',
'bigly',
'bigmouth',
'bigmouthed',
'bigot',
'bigoted',
'bigotry',
'bigwig',
'bihourly',
'bijou',
'bijoux',
'bike',
'biked',
'biker',
'bikeway',
'biking',
'bikini',
'bikinied',
'bilabial',
'bilateral',
'bilateralism',
'bilateralistic',
'bilaterality',
'bilberry',
'bilbo',
'bile',
'bilge',
'bilgier',
'bilgiest',
'bilging',
'bilgy',
'bilinear',
'bilingual',
'bilk',
'bilked',
'bilker',
'bilking',
'bill',
'billable',
'billboard',
'billed',
'biller',
'billet',
'billeted',
'billeter',
'billeting',
'billfold',
'billhead',
'billhook',
'billiard',
'billie',
'billing',
'billingsgate',
'billion',
'billionaire',
'billionth',
'billow',
'billowed',
'billowier',
'billowiest',
'billowing',
'billowy',
'billy',
'billycan',
'bilobed',
'bimah',
'bimanual',
'bimester',
'bimetal',
'bimetallic',
'bimetallism',
'bimetallist',
'bimodal',
'bimolecular',
'bimonthly',
'bin',
'binal',
'binary',
'binaural',
'bind',
'bindable',
'binder',
'bindery',
'binding',
'bindle',
'bindweed',
'binge',
'bingo',
'binnacle',
'binned',
'binocular',
'binocularly',
'binomial',
'bio',
'bioactivity',
'bioassayed',
'bioastronautical',
'biocatalyst',
'biochemic',
'biochemical',
'biochemist',
'biochemistry',
'biocidal',
'biocide',
'bioclean',
'bioclimatology',
'biocycle',
'biodegradability',
'biodegradable',
'biodegradation',
'biodegrade',
'biodegrading',
'bioelectric',
'bioelectrical',
'bioelectricity',
'bioengineering',
'bioenvironmental',
'bioenvironmentaly',
'biofeedback',
'bioflavonoid',
'biogenic',
'biogeochemistry',
'biogeographer',
'biogeographic',
'biogeographical',
'biogeography',
'biographer',
'biographic',
'biographical',
'biography',
'biohazard',
'biol',
'biologic',
'biological',
'biologist',
'biology',
'bioluminescence',
'biomaterial',
'biome',
'biomedical',
'biomedicine',
'biometer',
'biometry',
'biomicroscope',
'biomicroscopy',
'bionic',
'biont',
'biophotometer',
'biophysical',
'biophysicist',
'biophysiography',
'biopsy',
'biopsychology',
'bioptic',
'bioresearch',
'biorhythm',
'biorhythmic',
'biorhythmicity',
'biorythmic',
'biosatellite',
'bioscience',
'bioscientist',
'bioscope',
'bioscopy',
'biosensor',
'biosphere',
'biota',
'biotechnological',
'biotechnologicaly',
'biotechnology',
'biotelemetric',
'biotelemetry',
'biotic',
'biotical',
'biotin',
'biotite',
'biotype',
'biparental',
'biparted',
'bipartisan',
'bipartisanship',
'bipartite',
'bipartition',
'biparty',
'biped',
'bipedal',
'biplane',
'bipod',
'bipolar',
'bipolarity',
'bipotentiality',
'biracial',
'biracialism',
'birch',
'birched',
'birchen',
'bircher',
'birching',
'birchism',
'bird',
'birdbath',
'birdbrain',
'birdcage',
'birdcall',
'birder',
'birdhouse',
'birdie',
'birdied',
'birdieing',
'birding',
'birdlime',
'birdlimed',
'birdliming',
'birdman',
'birdseed',
'birdseye',
'birefractive',
'bireme',
'biretta',
'birmingham',
'birretta',
'birth',
'birthday',
'birthed',
'birthing',
'birthmark',
'birthplace',
'birthrate',
'birthright',
'birthstone',
'biscuit',
'bisect',
'bisected',
'bisecting',
'bisection',
'bisectional',
'bisexual',
'bishop',
'bishoped',
'bishoping',
'bishopric',
'bismarck',
'bismark',
'bismuth',
'bismuthal',
'bismuthic',
'bison',
'bisque',
'bistable',
'bistate',
'bistro',
'bisulfate',
'bisulfide',
'bisulfite',
'bit',
'bite',
'biteable',
'biter',
'biting',
'bitsy',
'bitten',
'bitter',
'bitterer',
'bitterest',
'bitterly',
'bittern',
'bittersweet',
'bittier',
'bittiest',
'bitting',
'bitty',
'bivalent',
'bivalve',
'bivouac',
'bivouacking',
'biweekly',
'biyearly',
'bizarre',
'bizarrely',
'bizonal',
'blab',
'blabbed',
'blabber',
'blabbering',
'blabbermouth',
'blabbing',
'blabby',
'black',
'blackamoor',
'blackball',
'blackballed',
'blackballing',
'blackberry',
'blackbird',
'blackboard',
'blacken',
'blackened',
'blackener',
'blackening',
'blacker',
'blackest',
'blackfeet',
'blackfoot',
'blackguard',
'blackhead',
'blacking',
'blackish',
'blackjack',
'blackjacking',
'blacklight',
'blacklist',
'blacklisted',
'blacklisting',
'blackly',
'blackmail',
'blackmailed',
'blackmailer',
'blackmailing',
'blackout',
'blacksmith',
'blackthorn',
'blacktop',
'blacktopping',
'bladder',
'bladdery',
'blade',
'blah',
'blain',
'blamable',
'blamably',
'blame',
'blameable',
'blamed',
'blameful',
'blamelessly',
'blamer',
'blameworthy',
'blaming',
'blanc',
'blanch',
'blanche',
'blanched',
'blancher',
'blanching',
'blancmange',
'bland',
'blander',
'blandest',
'blandish',
'blandished',
'blandisher',
'blandishing',
'blandishment',
'blandly',
'blank',
'blanked',
'blanker',
'blankest',
'blanket',
'blanketed',
'blanketing',
'blanking',
'blankly',
'blare',
'blaring',
'blarney',
'blarneyed',
'blarneying',
'blase',
'blaspheme',
'blasphemed',
'blasphemer',
'blaspheming',
'blasphemously',
'blasphemy',
'blast',
'blasted',
'blaster',
'blastier',
'blasting',
'blastoff',
'blasty',
'blat',
'blatancy',
'blatant',
'blatantly',
'blather',
'blathering',
'blatherskite',
'blatted',
'blatter',
'blattering',
'blatting',
'blaze',
'blazed',
'blazer',
'blazing',
'blazon',
'blazoner',
'blazoning',
'blazonry',
'bldg',
'bleach',
'bleached',
'bleacher',
'bleaching',
'bleak',
'bleaker',
'bleakest',
'bleakish',
'bleakly',
'blear',
'blearier',
'bleariest',
'blearily',
'blearing',
'bleary',
'bleat',
'bleater',
'bled',
'bleed',
'bleeder',
'bleeding',
'bleep',
'bleeped',
'bleeping',
'blemish',
'blemished',
'blemishing',
'blench',
'blenched',
'blencher',
'blenching',
'blend',
'blender',
'blending',
'blenny',
'blent',
'blessed',
'blesseder',
'blessedest',
'blesser',
'blessing',
'blest',
'blether',
'blew',
'blight',
'blighted',
'blighter',
'blighting',
'blighty',
'blimey',
'blimp',
'blimpish',
'blimy',
'blind',
'blindage',
'blinder',
'blindest',
'blindfold',
'blindfolding',
'blinding',
'blindly',
'blini',
'blink',
'blinked',
'blinker',
'blinkering',
'blinking',
'blintz',
'blintze',
'blip',
'blipping',
'blissful',
'blissfully',
'blister',
'blistering',
'blistery',
'blithe',
'blithely',
'blither',
'blithering',
'blithesome',
'blithest',
'blitz',
'blitzed',
'blitzing',
'blitzkrieg',
'blitzkrieging',
'blizzard',
'bloat',
'bloater',
'blob',
'blobbed',
'blobbing',
'bloc',
'block',
'blockade',
'blockader',
'blockading',
'blockage',
'blockbuster',
'blockbusting',
'blocker',
'blockhead',
'blockhouse',
'blockier',
'blockiest',
'blocking',
'blockish',
'blocky',
'bloke',
'blond',
'blonde',
'blonder',
'blondest',
'blondish',
'blood',
'bloodbath',
'bloodcurdling',
'bloodfin',
'bloodhound',
'bloodied',
'bloodier',
'bloodiest',
'bloodily',
'blooding',
'bloodletting',
'bloodline',
'bloodmobile',
'bloodroot',
'bloodshed',
'bloodshedder',
'bloodshedding',
'bloodshot',
'bloodstain',
'bloodstained',
'bloodstone',
'bloodstream',
'bloodsucker',
'bloodsucking',
'bloodtest',
'bloodthirstier',
'bloodthirstiest',
'bloodthirstily',
'bloodthirsty',
'bloodworm',
'bloody',
'bloodying',
'bloom',
'bloomed',
'bloomer',
'bloomery',
'bloomier',
'bloomiest',
'blooming',
'bloomy',
'bloop',
'blooped',
'blooper',
'blooping',
'blossom',
'blossomed',
'blossoming',
'blossomy',
'blot',
'blotch',
'blotched',
'blotchier',
'blotchiest',
'blotching',
'blotchy',
'blotted',
'blotter',
'blottier',
'blottiest',
'blotting',
'blotto',
'blotty',
'blouse',
'bloused',
'blousier',
'blousiest',
'blousily',
'blousing',
'blouson',
'blousy',
'blow',
'blowback',
'blowby',
'blower',
'blowfish',
'blowfly',
'blowgun',
'blowhard',
'blowhole',
'blowier',
'blowiest',
'blowing',
'blowjob',
'blown',
'blowoff',
'blowout',
'blowpipe',
'blowsed',
'blowsier',
'blowsiest',
'blowsily',
'blowsy',
'blowtorch',
'blowtube',
'blowup',
'blowy',
'blowzier',
'blowziest',
'blowzy',
'blubber',
'blubberer',
'blubbering',
'blubbery',
'blucher',
'bludgeon',
'bludgeoning',
'blue',
'blueball',
'bluebeard',
'bluebell',
'blueberry',
'bluebird',
'blueblack',
'bluebonnet',
'bluebook',
'bluebottle',
'bluecap',
'bluecoat',
'blued',
'bluefin',
'bluefish',
'bluegill',
'bluegum',
'blueing',
'blueish',
'bluejacket',
'bluejay',
'bluely',
'bluenose',
'bluepoint',
'blueprint',
'blueprinted',
'blueprinting',
'bluer',
'bluesman',
'bluest',
'bluestocking',
'bluesy',
'bluet',
'bluey',
'bluff',
'bluffed',
'bluffer',
'bluffest',
'bluffing',
'bluffly',
'bluing',
'bluish',
'blunder',
'blunderer',
'blundering',
'blunge',
'blunger',
'blunging',
'blunt',
'blunted',
'blunter',
'bluntest',
'blunting',
'bluntly',
'blur',
'blurb',
'blurrier',
'blurriest',
'blurrily',
'blurring',
'blurry',
'blurt',
'blurted',
'blurter',
'blurting',
'blush',
'blushed',
'blusher',
'blushful',
'blushfully',
'blushing',
'bluster',
'blusterer',
'blustering',
'blustery',
'blvd',
'boa',
'boar',
'board',
'boarder',
'boarding',
'boardinghouse',
'boardman',
'boardwalk',
'boarish',
'boast',
'boasted',
'boaster',
'boastful',
'boastfully',
'boasting',
'boat',
'boatable',
'boatbill',
'boatel',
'boater',
'boatload',
'boatman',
'boatsman',
'boatswain',
'boatyard',
'bob',
'bobbed',
'bobber',
'bobbery',
'bobbin',
'bobbing',
'bobble',
'bobbled',
'bobbling',
'bobby',
'bobbysoxer',
'bobcat',
'bobolink',
'bobsled',
'bobsledder',
'bobsledding',
'bobtail',
'bobtailed',
'bobtailing',
'bobwhite',
'boca',
'bocaccio',
'bocce',
'bocci',
'boccie',
'boche',
'bock',
'bod',
'bode',
'bodega',
'bodice',
'bodied',
'bodily',
'boding',
'bodkin',
'body',
'bodybuilder',
'bodybuilding',
'bodyguard',
'bodying',
'bodysurf',
'bodysurfed',
'bodyweight',
'bodywork',
'boeing',
'boer',
'boff',
'boffin',
'boffo',
'boffola',
'bog',
'bogart',
'bogey',
'bogeying',
'bogeyman',
'boggier',
'boggiest',
'bogging',
'boggish',
'boggle',
'boggled',
'boggler',
'boggling',
'boggy',
'bogie',
'bogle',
'bogled',
'bogota',
'bogy',
'bogyism',
'bogyman',
'bohemia',
'bohemian',
'bohunk',
'boil',
'boilable',
'boiled',
'boiler',
'boilermaker',
'boiling',
'boise',
'boisterously',
'bola',
'bold',
'bolder',
'boldest',
'boldface',
'boldfaced',
'boldfacing',
'bolding',
'boldly',
'bole',
'bolero',
'bolide',
'bolivar',
'bolivia',
'bolivian',
'boll',
'bollard',
'bolled',
'bolling',
'bollix',
'bollixed',
'bollixing',
'bolloxed',
'bolo',
'bologna',
'boloney',
'bolshevik',
'bolshevism',
'bolshevist',
'bolster',
'bolsterer',
'bolstering',
'bolt',
'bolted',
'bolter',
'bolthead',
'bolting',
'bomb',
'bombard',
'bombardier',
'bombarding',
'bombardment',
'bombast',
'bombastic',
'bombay',
'bombazine',
'bombe',
'bombed',
'bomber',
'bombing',
'bombload',
'bombproof',
'bombshell',
'bombsight',
'bon',
'bona',
'bonanza',
'bonbon',
'bond',
'bondable',
'bondage',
'bonder',
'bondholder',
'bonding',
'bondmaid',
'bondman',
'bondsman',
'bondwoman',
'bone',
'boneblack',
'bonefish',
'bonehead',
'bonelet',
'boner',
'boneset',
'bonesetter',
'boney',
'boneyard',
'bonfire',
'bong',
'bonging',
'bongo',
'bongoist',
'bonhomie',
'bonier',
'boniest',
'boniface',
'boning',
'bonita',
'bonito',
'bonjour',
'bonnet',
'bonneted',
'bonneting',
'bonnie',
'bonnier',
'bonniest',
'bonnily',
'bonny',
'bonnyclabber',
'bono',
'bonsai',
'bonsoir',
'bonum',
'bony',
'bonze',
'bonzer',
'boo',
'booboo',
'booby',
'boodle',
'boodled',
'boodler',
'boodling',
'booed',
'booger',
'boogie',
'boogyman',
'boohoo',
'boohooed',
'boohooing',
'booing',
'book',
'bookbinder',
'bookbinding',
'bookcase',
'booked',
'bookend',
'booker',
'bookie',
'booking',
'bookish',
'bookkeeper',
'bookkeeping',
'booklet',
'booklore',
'bookmaker',
'bookmaking',
'bookman',
'bookmark',
'bookmobile',
'bookplate',
'bookrack',
'bookrest',
'bookseller',
'bookshelf',
'bookshop',
'bookstore',
'bookworm',
'boolean',
'boom',
'boomage',
'boomed',
'boomer',
'boomerang',
'boomeranging',
'boomier',
'booming',
'boomkin',
'boomlet',
'boomtown',
'boomy',
'boon',
'boondoggle',
'boondoggled',
'boondoggler',
'boondoggling',
'boor',
'boorish',
'boorishly',
'boost',
'boosted',
'booster',
'boosting',
'boot',
'bootblack',
'booted',
'bootee',
'bootery',
'booth',
'bootie',
'booting',
'bootjack',
'bootlace',
'bootleg',
'bootlegger',
'bootlegging',
'bootlessly',
'bootlick',
'bootlicker',
'bootlicking',
'bootstrap',
'bootstrapping',
'booty',
'booze',
'boozed',
'boozer',
'boozier',
'booziest',
'boozily',
'boozing',
'boozy',
'bop',
'bopper',
'bopping',
'borage',
'borate',
'borax',
'borborygmatic',
'bordello',
'border',
'bordereau',
'borderer',
'bordering',
'borderland',
'borderline',
'bore',
'boreal',
'boredom',
'boric',
'boring',
'born',
'borne',
'borneo',
'boron',
'boronic',
'borough',
'borrow',
'borrowed',
'borrower',
'borrowing',
'borsch',
'borscht',
'borsht',
'borstal',
'bort',
'borty',
'bortz',
'borzoi',
'bosh',
'boskier',
'boskiest',
'bosky',
'bosom',
'bosomed',
'bosoming',
'bosomy',
'boson',
'bosque',
'bosquet',
'bossa',
'bossdom',
'bossed',
'bossier',
'bossiest',
'bossily',
'bossing',
'bossism',
'bossy',
'boston',
'bostonian',
'bosun',
'bot',
'botanic',
'botanical',
'botanist',
'botanize',
'botanized',
'botanizing',
'botany',
'botch',
'botched',
'botcher',
'botchery',
'botchier',
'botchiest',
'botchily',
'botching',
'botchy',
'botfly',
'both',
'bother',
'bothering',
'bothersome',
'botswana',
'botticelli',
'bottle',
'bottled',
'bottleful',
'bottleneck',
'bottler',
'bottlesful',
'bottling',
'bottom',
'bottomed',
'bottomer',
'bottoming',
'bottommost',
'botulin',
'botulism',
'boucle',
'boudoir',
'bouffant',
'bouffe',
'bougainvillaea',
'bougainvillea',
'bough',
'boughed',
'bought',
'boughten',
'bouillabaisse',
'bouillon',
'boulder',
'bouldery',
'boule',
'boulevard',
'boulimia',
'bounce',
'bounced',
'bouncer',
'bouncier',
'bounciest',
'bouncily',
'bouncing',
'bouncy',
'bound',
'boundary',
'bounden',
'bounder',
'bounding',
'boundlessly',
'bounteously',
'bountied',
'bountiful',
'bountifully',
'bounty',
'bouquet',
'bourbon',
'bourg',
'bourgeoisie',
'bourgeon',
'bourn',
'bourne',
'bourree',
'bourse',
'bouse',
'boused',
'bousy',
'bout',
'boutique',
'boutonniere',
'bouzouki',
'bouzoukia',
'bovid',
'bovine',
'bovinely',
'bovinity',
'bow',
'bowdlerism',
'bowdlerization',
'bowdlerize',
'bowdlerized',
'bowdlerizing',
'bowed',
'bowel',
'boweled',
'boweling',
'bowelled',
'bowelling',
'bower',
'bowering',
'bowerlike',
'bowery',
'bowfin',
'bowfront',
'bowhead',
'bowie',
'bowing',
'bowknot',
'bowl',
'bowlder',
'bowled',
'bowleg',
'bowler',
'bowlful',
'bowlike',
'bowline',
'bowling',
'bowman',
'bowse',
'bowsed',
'bowshot',
'bowsprit',
'bowstring',
'bowwow',
'bowyer',
'box',
'boxcar',
'boxed',
'boxer',
'boxfish',
'boxful',
'boxier',
'boxiest',
'boxing',
'boxlike',
'boxwood',
'boxy',
'boy',
'boycott',
'boycotted',
'boycotting',
'boyfriend',
'boyhood',
'boyish',
'boyishly',
'boyo',
'boysenberry',
'bozo',
'bra',
'brace',
'braced',
'bracelet',
'bracer',
'bracero',
'brachial',
'brachiate',
'brachiation',
'brachium',
'brachycephalic',
'brachycephalism',
'brachycephaly',
'brachydactylia',
'brachydactyly',
'bracing',
'bracken',
'bracket',
'bracketed',
'bracketing',
'brackish',
'bract',
'bracted',
'brad',
'bradding',
'brae',
'brag',
'braggadocio',
'braggart',
'bragger',
'braggest',
'braggier',
'braggiest',
'bragging',
'braggy',
'brahma',
'brahman',
'brahmanism',
'brahmanist',
'brahmin',
'brahminism',
'brahminist',
'braid',
'braider',
'braiding',
'brail',
'brailed',
'brailing',
'braille',
'brailled',
'braillewriter',
'brailling',
'brain',
'braincase',
'brainchild',
'brainchildren',
'brained',
'brainier',
'brainiest',
'brainily',
'braining',
'brainish',
'brainlessly',
'brainpan',
'brainpower',
'brainsick',
'brainstorm',
'brainstorming',
'brainteaser',
'brainwash',
'brainwashed',
'brainwasher',
'brainwashing',
'brainy',
'braise',
'braised',
'braising',
'braize',
'brake',
'brakeage',
'braked',
'brakeman',
'brakier',
'braking',
'braky',
'bramble',
'brambled',
'bramblier',
'brambliest',
'brambling',
'brambly',
'bran',
'branch',
'branched',
'branchier',
'branchiest',
'branching',
'branchlet',
'branchlike',
'branchy',
'brand',
'brander',
'brandied',
'branding',
'brandish',
'brandished',
'brandisher',
'brandishing',
'brandy',
'brandying',
'brash',
'brasher',
'brashest',
'brashier',
'brashiest',
'brashly',
'brashy',
'brasil',
'brasilia',
'brassage',
'brassard',
'brasserie',
'brassica',
'brassie',
'brassier',
'brassiere',
'brassiest',
'brassily',
'brassish',
'brassy',
'brat',
'brattier',
'brattiest',
'brattish',
'brattling',
'bratty',
'bratwurst',
'braunschweiger',
'bravado',
'brave',
'braved',
'braver',
'bravery',
'bravest',
'braving',
'bravo',
'bravoed',
'bravoing',
'bravura',
'bravure',
'braw',
'brawl',
'brawled',
'brawler',
'brawlier',
'brawliest',
'brawling',
'brawn',
'brawnier',
'brawniest',
'brawnily',
'brawny',
'bray',
'brayed',
'brayer',
'braying',
'braze',
'brazed',
'brazee',
'brazen',
'brazened',
'brazening',
'brazenly',
'brazer',
'brazier',
'brazil',
'brazilian',
'brazing',
'breach',
'breached',
'breacher',
'breaching',
'bread',
'breadbasket',
'breadboard',
'breadfruit',
'breading',
'breadstuff',
'breadth',
'breadwinner',
'breadwinning',
'break',
'breakable',
'breakage',
'breakaway',
'breakdown',
'breaker',
'breakfast',
'breakfasted',
'breakfasting',
'breakfront',
'breaking',
'breakneck',
'breakout',
'breakpoint',
'breakthrough',
'breakup',
'breakwater',
'bream',
'breast',
'breastbone',
'breasted',
'breasting',
'breastplate',
'breaststroke',
'breastwork',
'breath',
'breathable',
'breathe',
'breathed',
'breather',
'breathier',
'breathiest',
'breathing',
'breathlessly',
'breathtaking',
'breathy',
'breccia',
'brede',
'breech',
'breechcloth',
'breeched',
'breeching',
'breed',
'breeder',
'breeding',
'breeze',
'breezed',
'breezeway',
'breezier',
'breeziest',
'breezily',
'breezing',
'breezy',
'brent',
'brethren',
'breton',
'breve',
'brevet',
'breveted',
'breveting',
'brevetted',
'brevetting',
'brevi',
'breviary',
'breviate',
'brevier',
'brevity',
'brew',
'brewage',
'brewed',
'brewer',
'brewery',
'brewing',
'brezhnev',
'brian',
'briar',
'briary',
'bribable',
'bribe',
'bribeable',
'bribed',
'bribee',
'briber',
'bribery',
'bribing',
'brick',
'brickbat',
'brickier',
'brickiest',
'bricking',
'bricklayer',
'bricklaying',
'brickle',
'bricktop',
'brickwork',
'bricky',
'brickyard',
'bridal',
'bride',
'bridegroom',
'bridesmaid',
'bridewell',
'bridge',
'bridgeable',
'bridgehead',
'bridgeport',
'bridgework',
'bridging',
'bridle',
'bridled',
'bridler',
'bridling',
'brie',
'brief',
'briefcase',
'briefed',
'briefer',
'briefest',
'briefing',
'briefly',
'brier',
'briery',
'brig',
'brigade',
'brigadier',
'brigading',
'brigand',
'brigandage',
'brigantine',
'bright',
'brighten',
'brightened',
'brightener',
'brightening',
'brighter',
'brightest',
'brightly',
'brill',
'brilliance',
'brilliancy',
'brilliant',
'brilliantine',
'brilliantly',
'brim',
'brimful',
'brimfull',
'brimmed',
'brimmer',
'brimming',
'brimstone',
'brin',
'brindle',
'brindled',
'brine',
'brined',
'briner',
'bring',
'bringer',
'bringeth',
'bringing',
'brinier',
'briniest',
'brining',
'brinish',
'brink',
'brinkmanship',
'briny',
'brio',
'brioche',
'briony',
'briquet',
'briquette',
'briquetted',
'brisbane',
'brisk',
'brisked',
'brisker',
'briskest',
'brisket',
'brisking',
'briskly',
'brisling',
'bristle',
'bristled',
'bristlier',
'bristliest',
'bristling',
'bristly',
'bristol',
'brit',
'britain',
'britannia',
'britannic',
'britannica',
'briticism',
'british',
'britisher',
'briton',
'brittle',
'brittled',
'brittler',
'brittlest',
'brittling',
'bro',
'broach',
'broached',
'broacher',
'broaching',
'broad',
'broadax',
'broadaxe',
'broadband',
'broadcast',
'broadcasted',
'broadcaster',
'broadcasting',
'broadcloth',
'broaden',
'broadened',
'broadening',
'broader',
'broadest',
'broadish',
'broadloom',
'broadly',
'broadside',
'broadsword',
'broadtail',
'broadway',
'brocade',
'brocading',
'broccoli',
'brochette',
'brochure',
'brock',
'brocket',
'brocoli',
'brogan',
'brogue',
'broguery',
'broguish',
'broider',
'broidering',
'broidery',
'broil',
'broiled',
'broiler',
'broiling',
'brokage',
'broke',
'broken',
'brokenhearted',
'brokenly',
'broker',
'brokerage',
'brokerly',
'brolly',
'bromate',
'bromide',
'bromidic',
'bromine',
'bromo',
'bronc',
'bronchi',
'bronchia',
'bronchial',
'bronchitic',
'broncho',
'bronchopneumonia',
'bronchopulmonary',
'bronchoscope',
'bronchoscopy',
'bronco',
'broncobuster',
'brontosaur',
'bronx',
'bronze',
'bronzed',
'bronzer',
'bronzier',
'bronziest',
'bronzing',
'bronzy',
'brooch',
'brood',
'brooder',
'broodier',
'broodiest',
'brooding',
'broody',
'brook',
'brooked',
'brooking',
'brooklet',
'brooklyn',
'broom',
'broomed',
'broomier',
'broomiest',
'brooming',
'broomstick',
'broomy',
'broth',
'brothel',
'brother',
'brotherhood',
'brothering',
'brotherly',
'brothier',
'brothiest',
'brothy',
'brougham',
'brought',
'brouhaha',
'brow',
'browbeat',
'browbeaten',
'brown',
'browned',
'browner',
'brownest',
'brownie',
'brownier',
'browniest',
'browning',
'brownish',
'brownout',
'brownstone',
'browny',
'browse',
'browsed',
'browser',
'browsing',
'bruce',
'bruin',
'bruise',
'bruised',
'bruiser',
'bruising',
'bruit',
'bruited',
'bruiter',
'bruiting',
'brunch',
'brunched',
'brunching',
'brunet',
'brunette',
'brunswick',
'brunt',
'brush',
'brushed',
'brusher',
'brushfire',
'brushier',
'brushiest',
'brushing',
'brushoff',
'brushup',
'brushwood',
'brushy',
'brusk',
'brusker',
'bruskest',
'bruskly',
'brusque',
'brusquely',
'brusquer',
'brusquest',
'brut',
'brutal',
'brutality',
'brutalization',
'brutalize',
'brutalized',
'brutalizing',
'brute',
'bruted',
'brutely',
'brutified',
'brutify',
'brutifying',
'bruting',
'brutish',
'brutishly',
'brutism',
'bryan',
'bryony',
'bub',
'bubble',
'bubbled',
'bubbler',
'bubbletop',
'bubblier',
'bubbliest',
'bubbling',
'bubbly',
'bubby',
'bubo',
'bubonic',
'buccaneer',
'buchanan',
'bucharest',
'buchu',
'buck',
'buckaroo',
'buckbean',
'buckboard',
'bucker',
'buckeroo',
'bucket',
'bucketed',
'bucketer',
'bucketful',
'bucketing',
'buckeye',
'buckhound',
'bucking',
'buckish',
'buckishly',
'buckle',
'buckled',
'buckler',
'buckling',
'bucko',
'buckra',
'buckram',
'buckramed',
'bucksaw',
'buckshot',
'buckskin',
'bucktail',
'buckteeth',
'buckthorn',
'bucktooth',
'bucktoothed',
'buckwheat',
'bucolic',
'bud',
'budapest',
'budder',
'buddha',
'buddhism',
'buddhist',
'budding',
'buddy',
'budge',
'budger',
'budgerigar',
'budget',
'budgetary',
'budgeted',
'budgeter',
'budgeting',
'budgie',
'budging',
'budlike',
'buff',
'buffable',
'buffalo',
'buffaloed',
'buffaloing',
'buffed',
'buffer',
'buffering',
'buffet',
'buffeted',
'buffeter',
'buffeting',
'buffier',
'buffing',
'buffo',
'buffoon',
'buffoonery',
'buffoonish',
'buffy',
'bufotoxin',
'bug',
'bugaboo',
'bugbane',
'bugbear',
'bugbearish',
'bugeye',
'bugger',
'buggering',
'buggery',
'buggier',
'buggiest',
'bugging',
'buggy',
'bughouse',
'bugle',
'bugled',
'bugler',
'bugling',
'buick',
'build',
'builder',
'building',
'buildup',
'built',
'bulb',
'bulbar',
'bulbed',
'bulbul',
'bulgaria',
'bulgarian',
'bulge',
'bulger',
'bulgier',
'bulgiest',
'bulging',
'bulgur',
'bulgy',
'bulimia',
'bulimiac',
'bulimic',
'bulk',
'bulkage',
'bulked',
'bulkhead',
'bulkier',
'bulkiest',
'bulkily',
'bulking',
'bulky',
'bull',
'bulldog',
'bulldogging',
'bulldoze',
'bulldozed',
'bulldozer',
'bulldozing',
'bulled',
'bullet',
'bulleted',
'bulletin',
'bulleting',
'bulletproof',
'bulletproofed',
'bulletproofing',
'bullfight',
'bullfighter',
'bullfighting',
'bullfinch',
'bullfrog',
'bullhead',
'bullhorn',
'bullied',
'bullier',
'bulling',
'bullion',
'bullish',
'bullneck',
'bullnose',
'bullock',
'bullpen',
'bullring',
'bullrush',
'bullweed',
'bullwhip',
'bully',
'bullyboy',
'bullying',
'bullyrag',
'bulrush',
'bulwark',
'bulwarked',
'bulwarking',
'bum',
'bumble',
'bumblebee',
'bumbled',
'bumbler',
'bumbling',
'bumboat',
'bumkin',
'bummed',
'bummer',
'bummest',
'bumming',
'bump',
'bumped',
'bumper',
'bumpering',
'bumpier',
'bumpiest',
'bumpily',
'bumping',
'bumpkin',
'bumpkinish',
'bumptiously',
'bumpy',
'bun',
'bunch',
'bunched',
'bunchier',
'bunchiest',
'bunchily',
'bunching',
'bunchy',
'bunco',
'buncoed',
'buncoing',
'buncombe',
'bund',
'bundle',
'bundled',
'bundler',
'bundling',
'bung',
'bungalow',
'bunghole',
'bunging',
'bungle',
'bungled',
'bungler',
'bungling',
'bunion',
'bunk',
'bunked',
'bunker',
'bunkerage',
'bunkering',
'bunkhouse',
'bunking',
'bunkmate',
'bunko',
'bunkoed',
'bunkoing',
'bunkum',
'bunn',
'bunny',
'bunsen',
'bunt',
'bunted',
'bunter',
'bunting',
'bunyan',
'buoy',
'buoyage',
'buoyance',
'buoyancy',
'buoyant',
'buoyantly',
'buoyed',
'buoying',
'bur',
'burble',
'burbled',
'burbler',
'burblier',
'burbliest',
'burbling',
'burbly',
'burden',
'burdened',
'burdener',
'burdening',
'burdensome',
'burdock',
'bureau',
'bureaucracy',
'bureaucrat',
'bureaucratic',
'bureaucratism',
'bureaucratization',
'bureaucratize',
'bureaucratized',
'bureaucratizing',
'bureaux',
'burette',
'burg',
'burgee',
'burgeon',
'burgeoning',
'burger',
'burgh',
'burgher',
'burglar',
'burglariously',
'burglarize',
'burglarized',
'burglarizing',
'burglarproof',
'burglary',
'burgle',
'burgled',
'burgling',
'burgomaster',
'burgoo',
'burgundy',
'burial',
'buried',
'burier',
'burin',
'burke',
'burl',
'burlap',
'burled',
'burler',
'burlesk',
'burlesque',
'burlesqued',
'burlesquing',
'burley',
'burlier',
'burliest',
'burlily',
'burling',
'burly',
'burma',
'burmese',
'burn',
'burnable',
'burned',
'burner',
'burnet',
'burnie',
'burning',
'burnish',
'burnished',
'burnisher',
'burnishing',
'burnoose',
'burnout',
'burnt',
'burp',
'burped',
'burping',
'burr',
'burrer',
'burrier',
'burring',
'burro',
'burrow',
'burrowed',
'burrower',
'burrowing',
'burry',
'bursa',
'bursae',
'bursal',
'bursar',
'bursarial',
'bursarship',
'bursary',
'burse',
'burst',
'bursted',
'burster',
'bursting',
'burthen',
'burton',
'burundi',
'burweed',
'bury',
'burying',
'busboy',
'busby',
'bused',
'bush',
'bushed',
'bushel',
'busheled',
'busheler',
'busheling',
'bushelled',
'busher',
'bushfire',
'bushido',
'bushier',
'bushiest',
'bushily',
'bushing',
'bushman',
'bushmaster',
'bushtit',
'bushwack',
'bushwhack',
'bushwhacker',
'bushwhacking',
'bushy',
'busied',
'busier',
'busiest',
'busily',
'businesslike',
'businessman',
'businesswoman',
'busing',
'buskin',
'buskined',
'busman',
'bussed',
'bussing',
'bust',
'bustard',
'busted',
'buster',
'bustier',
'bustiest',
'busting',
'bustle',
'bustled',
'bustler',
'bustling',
'busty',
'busy',
'busybody',
'busying',
'busywork',
'but',
'butane',
'butch',
'butcher',
'butchering',
'butchery',
'butler',
'butlery',
'butt',
'butte',
'butted',
'butter',
'buttercup',
'butterfat',
'butterfish',
'butterfly',
'butterier',
'butteriest',
'buttering',
'buttermilk',
'butternut',
'butterscotch',
'buttery',
'butting',
'buttock',
'button',
'buttoner',
'buttonhole',
'buttonholed',
'buttonholer',
'buttonholing',
'buttonhook',
'buttoning',
'buttony',
'buttressed',
'buttressing',
'butty',
'butyl',
'buxom',
'buxomer',
'buxomest',
'buxomly',
'buy',
'buyable',
'buyer',
'buying',
'buzz',
'buzzard',
'buzzed',
'buzzer',
'buzzing',
'buzzword',
'bwana',
'by',
'bye',
'byelorussia',
'byelorussian',
'bygone',
'bylaw',
'byline',
'bylined',
'byliner',
'bylining',
'bypassed',
'bypassing',
'bypath',
'byplay',
'byproduct',
'byre',
'byroad',
'byron',
'byronic',
'bystander',
'bystreet',
'byte',
'byway',
'byword',
'byzantine',
'byzantium',
'ca',
'cab',
'cabal',
'cabala',
'cabalism',
'cabalist',
'cabalistic',
'caballed',
'caballero',
'caballing',
'cabana',
'cabaret',
'cabbage',
'cabbaging',
'cabbala',
'cabbalah',
'cabbie',
'cabby',
'cabdriver',
'caber',
'cabin',
'cabined',
'cabinet',
'cabinetmaker',
'cabinetmaking',
'cabinetwork',
'cabining',
'cable',
'cabled',
'cablegram',
'cableway',
'cabling',
'cabman',
'cabob',
'cabochon',
'caboodle',
'caboose',
'cabot',
'cabriolet',
'cabstand',
'cacao',
'cacciatore',
'cachalot',
'cache',
'cached',
'cachepot',
'cachet',
'cacheted',
'cacheting',
'caching',
'cackle',
'cackled',
'cackler',
'cackling',
'cacodemonia',
'cacophonously',
'cacophony',
'cacti',
'cactoid',
'cad',
'cadaver',
'cadaveric',
'cadaverously',
'caddie',
'caddied',
'caddish',
'caddishly',
'caddy',
'caddying',
'cadence',
'cadenced',
'cadencing',
'cadency',
'cadent',
'cadenza',
'cadet',
'cadetship',
'cadette',
'cadge',
'cadger',
'cadging',
'cadgy',
'cadillac',
'cadmic',
'cadmium',
'cadre',
'caducei',
'caecum',
'caesar',
'caesarean',
'caesium',
'caesura',
'caesurae',
'caesural',
'caesuric',
'cafe',
'cafeteria',
'caffein',
'caffeine',
'caffeinic',
'caftan',
'cage',
'cageling',
'cager',
'cagey',
'cagier',
'cagiest',
'cagily',
'caging',
'cagy',
'cahoot',
'caiman',
'cairn',
'cairned',
'cairo',
'caisson',
'caitiff',
'cajaput',
'cajole',
'cajoled',
'cajolement',
'cajoler',
'cajolery',
'cajoling',
'cajon',
'cajun',
'cake',
'caked',
'cakewalk',
'cakewalked',
'cakewalker',
'cakier',
'cakiest',
'caking',
'caky',
'cal',
'calabash',
'calaboose',
'caladium',
'calamar',
'calamary',
'calamine',
'calamint',
'calamitously',
'calamity',
'calc',
'calcareously',
'calcaria',
'calcic',
'calcific',
'calcification',
'calcified',
'calcify',
'calcifying',
'calcimine',
'calcimined',
'calcimining',
'calcination',
'calcine',
'calcined',
'calcining',
'calcite',
'calcitic',
'calcium',
'calcspar',
'calculability',
'calculable',
'calculably',
'calculate',
'calculation',
'calculational',
'calculative',
'calculi',
'calcutta',
'caldera',
'calderon',
'caldron',
'calefacient',
'calendal',
'calendar',
'calendaring',
'calender',
'calendering',
'calendula',
'calf',
'calfskin',
'calgary',
'caliber',
'calibrate',
'calibration',
'calibre',
'calico',
'calif',
'califate',
'california',
'californian',
'californium',
'caliper',
'calipering',
'caliph',
'caliphal',
'caliphate',
'calisthenic',
'calix',
'calk',
'calked',
'calker',
'calking',
'call',
'calla',
'callable',
'callback',
'callboy',
'called',
'caller',
'calli',
'calligrapher',
'calligraphic',
'calligraphy',
'calling',
'calliope',
'calliper',
'callosity',
'calloused',
'callousing',
'callously',
'callow',
'callower',
'callowest',
'callused',
'callusing',
'calm',
'calmant',
'calmative',
'calmed',
'calmer',
'calmest',
'calming',
'calmly',
'calomel',
'calor',
'caloric',
'calorie',
'calorific',
'calorimeter',
'calorimetric',
'calorimetry',
'calory',
'calotte',
'calpack',
'caltrap',
'caltrop',
'calumet',
'calumniate',
'calumniation',
'calumniously',
'calumny',
'calvary',
'calve',
'calved',
'calvin',
'calving',
'calvinism',
'calvinist',
'calvinistic',
'calx',
'calycle',
'calypso',
'calyx',
'cam',
'camaraderie',
'camber',
'cambering',
'cambia',
'cambial',
'cambism',
'cambist',
'cambium',
'cambodia',
'cambodian',
'cambrian',
'cambric',
'cambridge',
'camden',
'came',
'camel',
'camelback',
'cameleer',
'camelia',
'camellia',
'camelopard',
'camembert',
'cameo',
'cameoed',
'cameoing',
'camera',
'cameral',
'cameralism',
'cameralist',
'cameralistic',
'cameraman',
'cameroon',
'cameroonian',
'camisole',
'camomile',
'camouflage',
'camouflager',
'camouflaging',
'camp',
'campagne',
'campaign',
'campaigned',
'campaigner',
'campaigning',
'campanile',
'campanili',
'campanologist',
'campanology',
'campbell',
'campcraft',
'camped',
'camper',
'campfire',
'campground',
'camphor',
'camphorate',
'camphoric',
'campi',
'campier',
'campiest',
'campily',
'camping',
'campo',
'camporee',
'campsite',
'campstool',
'campy',
'camshaft',
'can',
'canaan',
'canaanite',
'canada',
'canadian',
'canaille',
'canal',
'canalboat',
'canaled',
'canaling',
'canalise',
'canalization',
'canalize',
'canalized',
'canalizing',
'canalled',
'canaller',
'canalling',
'canape',
'canard',
'canary',
'canasta',
'canberra',
'cancan',
'cancel',
'cancelable',
'canceled',
'canceler',
'canceling',
'cancellation',
'cancelled',
'canceller',
'cancelling',
'cancer',
'cancerously',
'candelabra',
'candelabrum',
'candescence',
'candescent',
'candid',
'candidacy',
'candidate',
'candidature',
'candide',
'candider',
'candidest',
'candidly',
'candied',
'candle',
'candled',
'candlelight',
'candlepin',
'candlepower',
'candler',
'candlestick',
'candlewick',
'candling',
'candor',
'candour',
'candy',
'candying',
'cane',
'canebrake',
'caned',
'caner',
'caneware',
'canfield',
'canine',
'caning',
'caninity',
'canister',
'canker',
'cankering',
'cankerworm',
'canna',
'cannabic',
'cannabin',
'cannabinol',
'cannabism',
'cannalling',
'canned',
'cannel',
'cannelon',
'canner',
'cannery',
'cannibal',
'cannibalism',
'cannibalistic',
'cannibalization',
'cannibalize',
'cannibalized',
'cannibalizing',
'cannie',
'cannier',
'canniest',
'cannily',
'canning',
'cannon',
'cannonade',
'cannonading',
'cannonball',
'cannonballed',
'cannonballing',
'cannoneer',
'cannoning',
'cannonism',
'cannonry',
'cannot',
'cannula',
'cannulae',
'canny',
'canoe',
'canoed',
'canoeing',
'canoeist',
'canon',
'canonic',
'canonical',
'canonicity',
'canonise',
'canonist',
'canonistic',
'canonization',
'canonize',
'canonized',
'canonizing',
'canonry',
'canopied',
'canopy',
'canopying',
'cansful',
'canst',
'cant',
'cantabile',
'cantaloupe',
'cantankerously',
'cantata',
'canted',
'canteen',
'canter',
'canterbury',
'cantering',
'canthal',
'canticle',
'cantilever',
'cantilevering',
'cantina',
'canting',
'cantle',
'canto',
'canton',
'cantonal',
'cantonese',
'cantoning',
'cantonment',
'cantrap',
'cantrip',
'canty',
'canvasback',
'canvased',
'canvaser',
'canvaslike',
'canvassed',
'canvasser',
'canvassing',
'canyon',
'canzona',
'canzone',
'canzonet',
'canzoni',
'caoutchouc',
'cap',
'capability',
'capable',
'capabler',
'capablest',
'capably',
'capaciously',
'capacitance',
'capacitate',
'capacitation',
'capacitive',
'capacity',
'caparison',
'caparisoning',
'cape',
'caped',
'capelan',
'capelet',
'caper',
'caperer',
'capering',
'capeskin',
'capetown',
'capework',
'capful',
'capillarity',
'capillary',
'capita',
'capital',
'capitalism',
'capitalist',
'capitalistic',
'capitalization',
'capitalize',
'capitalized',
'capitalizer',
'capitalizing',
'capitate',
'capitation',
'capitol',
'capitulary',
'capitulate',
'capitulation',
'capitulatory',
'capmaker',
'capon',
'capone',
'caponization',
'caponize',
'caponized',
'caponizing',
'capote',
'cappella',
'capper',
'capping',
'cappy',
'capric',
'capriccio',
'caprice',
'capriciously',
'capricorn',
'caprine',
'capriole',
'capsicum',
'capsize',
'capsized',
'capsizing',
'capstan',
'capstone',
'capsular',
'capsulate',
'capsulation',
'capsule',
'capsuled',
'capsuling',
'captain',
'captaincy',
'captained',
'captaining',
'captainship',
'caption',
'captioning',
'captiously',
'captivate',
'captivation',
'captive',
'captivity',
'capture',
'capturer',
'capturing',
'capuchin',
'caput',
'capybara',
'car',
'carabao',
'carabineer',
'caracal',
'caracol',
'caracole',
'caracul',
'carafe',
'carageen',
'caramel',
'caramelize',
'caramelized',
'caramelizing',
'carapace',
'carat',
'carate',
'caravan',
'caravaning',
'caravanned',
'caravansary',
'caravel',
'caraway',
'carbarn',
'carbide',
'carbine',
'carbineer',
'carbo',
'carbohydrate',
'carbolic',
'carbon',
'carbonate',
'carbonation',
'carbondale',
'carbonic',
'carbonization',
'carbonize',
'carbonized',
'carbonizing',
'carborundum',
'carboxyl',
'carboy',
'carboyed',
'carbuncle',
'carbuncular',
'carburization',
'carburize',
'carburized',
'carburizing',
'carcase',
'carcinogen',
'carcinogenic',
'carcinogenicity',
'carcinoma',
'carcinomata',
'card',
'cardamom',
'cardamon',
'cardamum',
'cardboard',
'cardcase',
'carder',
'cardholder',
'cardia',
'cardiac',
'cardiectomy',
'cardigan',
'cardinal',
'cardinalate',
'cardinality',
'carding',
'cardiogram',
'cardiograph',
'cardiographer',
'cardiographic',
'cardiography',
'cardioid',
'cardiologic',
'cardiological',
'cardiologist',
'cardiology',
'cardiometer',
'cardiometry',
'cardiopulmonary',
'cardioscope',
'cardiotherapy',
'cardiovascular',
'cardoon',
'cardroom',
'cardsharp',
'cardsharper',
'care',
'careen',
'careened',
'careener',
'careening',
'career',
'careerer',
'careering',
'carefree',
'careful',
'carefuller',
'carefully',
'carelessly',
'carer',
'caressed',
'caresser',
'caressing',
'caret',
'caretaker',
'caretaking',
'careworn',
'carfare',
'carful',
'cargo',
'carhop',
'caribbean',
'caribou',
'caricature',
'caricaturing',
'caricaturist',
'carillon',
'carillonneur',
'carina',
'carinae',
'caring',
'carioca',
'cariole',
'carl',
'carlo',
'carload',
'carlot',
'carmaker',
'carman',
'carminative',
'carmine',
'carnage',
'carnal',
'carnality',
'carnation',
'carnauba',
'carne',
'carnegie',
'carnelian',
'carney',
'carnie',
'carnify',
'carnifying',
'carnival',
'carnivore',
'carnivorously',
'carny',
'carob',
'carol',
'caroled',
'caroler',
'carolina',
'caroling',
'carolinian',
'carolled',
'caroller',
'carolling',
'carolyn',
'carom',
'caromed',
'caroming',
'carotene',
'carotid',
'carotidal',
'carotin',
'carousal',
'carouse',
'caroused',
'carousel',
'carouser',
'carousing',
'carp',
'carpal',
'carpe',
'carped',
'carpel',
'carpenter',
'carpentry',
'carper',
'carpet',
'carpetbag',
'carpetbagger',
'carpetbaggery',
'carpetbagging',
'carpeted',
'carpeting',
'carpi',
'carping',
'carport',
'carrageen',
'carrageenan',
'carrageenin',
'carrel',
'carrell',
'carriage',
'carriageable',
'carriageway',
'carried',
'carrier',
'carrion',
'carroll',
'carrom',
'carromed',
'carroming',
'carrot',
'carrotier',
'carrotiest',
'carroty',
'carrousel',
'carry',
'carryall',
'carrying',
'carryon',
'carryout',
'carryover',
'carsick',
'carson',
'cart',
'cartable',
'cartage',
'carte',
'carted',
'cartel',
'carter',
'cartesian',
'cartilage',
'carting',
'cartload',
'cartographer',
'cartographic',
'cartography',
'cartomancy',
'carton',
'cartoning',
'cartoon',
'cartooning',
'cartoonist',
'cartop',
'cartridge',
'cartway',
'cartwheel',
'carve',
'carved',
'carven',
'carver',
'carving',
'carwash',
'caryatid',
'casa',
'casaba',
'casablanca',
'casanova',
'casava',
'casbah',
'cascabel',
'cascade',
'cascading',
'cascara',
'case',
'casebook',
'cased',
'caseharden',
'casehardened',
'casehardening',
'casein',
'caseload',
'casement',
'casette',
'casework',
'caseworker',
'cash',
'cashable',
'cashbook',
'cashbox',
'cashed',
'casher',
'cashew',
'cashier',
'cashiering',
'cashing',
'cashmere',
'cashoo',
'casing',
'casino',
'cask',
'casked',
'casket',
'casketed',
'casketing',
'casking',
'casper',
'caspian',
'casque',
'casqued',
'cassaba',
'cassandra',
'cassava',
'casserole',
'cassette',
'cassia',
'cassino',
'cassiterite',
'cassock',
'cassowary',
'cast',
'castanet',
'castaway',
'caste',
'casted',
'casteism',
'castellan',
'caster',
'castigate',
'castigation',
'castigatory',
'castile',
'casting',
'castle',
'castled',
'castling',
'castoff',
'castrate',
'castrati',
'castration',
'castrato',
'castro',
'casual',
'casualty',
'casuist',
'casuistic',
'casuistical',
'casuistry',
'cat',
'catabolic',
'catabolism',
'catabolize',
'catabolized',
'catabolizing',
'cataclysm',
'cataclysmal',
'cataclysmic',
'catacomb',
'catafalque',
'catalepsy',
'cataleptic',
'cataleptoid',
'catalog',
'cataloger',
'cataloging',
'catalogue',
'catalogued',
'cataloguer',
'cataloguing',
'catalpa',
'catalyst',
'catalytic',
'catalyze',
'catalyzed',
'catalyzer',
'catalyzing',
'catamaran',
'catamite',
'catamount',
'catapult',
'catapulted',
'catapulting',
'cataract',
'catarrh',
'catarrhal',
'catastrophe',
'catastrophic',
'catastrophical',
'catatonia',
'catatonic',
'catatony',
'catawba',
'catbird',
'catboat',
'catcall',
'catcalled',
'catcalling',
'catch',
'catchall',
'catcher',
'catchier',
'catchiest',
'catching',
'catchment',
'catchpenny',
'catchup',
'catchword',
'catchy',
'catechism',
'catechist',
'catechize',
'catechized',
'catechizing',
'categoric',
'categorical',
'categorization',
'categorize',
'categorized',
'categorizer',
'categorizing',
'category',
'catenary',
'cater',
'caterer',
'catering',
'caterpillar',
'caterwaul',
'caterwauled',
'caterwauling',
'catfish',
'catgut',
'catharine',
'cathartic',
'cathect',
'cathedra',
'cathedral',
'catherine',
'catheter',
'catheterize',
'catheterized',
'catheterizing',
'cathode',
'cathodic',
'catholic',
'catholicism',
'catholicity',
'cathouse',
'cathy',
'cation',
'catkin',
'catlike',
'catling',
'catmint',
'catnap',
'catnaper',
'catnapping',
'catnip',
'catskill',
'catspaw',
'catsup',
'cattail',
'catted',
'cattier',
'cattiest',
'cattily',
'catting',
'cattish',
'cattle',
'cattleman',
'catty',
'catwalk',
'caucasian',
'caucasoid',
'caucused',
'caucusing',
'caucussed',
'caucussing',
'caudal',
'caudate',
'caudillo',
'caught',
'caul',
'cauldron',
'cauliflower',
'caulk',
'caulked',
'caulker',
'caulking',
'causable',
'causal',
'causality',
'causation',
'causative',
'cause',
'caused',
'causelessly',
'causer',
'causerie',
'causeway',
'causewayed',
'causing',
'caustic',
'causticity',
'cauterization',
'cauterize',
'cauterized',
'cauterizing',
'cautery',
'caution',
'cautionary',
'cautioner',
'cautioning',
'cautiously',
'cavalcade',
'cavalier',
'cavalierly',
'cavalry',
'cavalryman',
'cave',
'caveat',
'caveatee',
'caved',
'cavefish',
'caveman',
'caver',
'cavern',
'caverned',
'caverning',
'cavernously',
'caviar',
'caviare',
'cavie',
'cavil',
'caviled',
'caviler',
'caviling',
'cavilled',
'caviller',
'cavilling',
'caving',
'cavitate',
'cavitation',
'cavitied',
'cavity',
'cavort',
'cavorted',
'cavorter',
'cavorting',
'cavy',
'caw',
'cawed',
'cawing',
'chaconne',
'chad',
'chadarim',
'chafe',
'chafed',
'chafer',
'chaff',
'chaffed',
'chaffer',
'chafferer',
'chaffering',
'chaffier',
'chaffiest',
'chaffinch',
'chaffing',
'chaffy',
'chafing',
'chagrin',
'chagrined',
'chagrining',
'chagrinned',
'chagrinning',
'chain',
'chained',
'chaining',
'chainlike',
'chainman',
'chair',
'chairing',
'chairlady',
'chairman',
'chairmaned',
'chairmanned',
'chairmanning',
'chairmanship',
'chairperson',
'chairwoman',
'chaise',
'chalah',
'chalcedonic',
'chalcedony',
'chalcopyrite',
'chaldron',
'chalet',
'chalice',
'chalk',
'chalkboard',
'chalked',
'chalkier',
'chalkiest',
'chalking',
'chalky',
'challah',
'challenge',
'challengeable',
'challenger',
'challenging',
'challie',
'challot',
'cham',
'chamber',
'chamberlain',
'chambermaid',
'chambray',
'chameleon',
'chamfer',
'chamfering',
'chamise',
'chamiso',
'chammied',
'chamoised',
'chamoising',
'chamoix',
'chamomile',
'champ',
'champagne',
'champaign',
'champed',
'champer',
'champing',
'champion',
'championing',
'championship',
'champy',
'chance',
'chanced',
'chancel',
'chancellery',
'chancellor',
'chancellorship',
'chanceman',
'chancer',
'chancering',
'chancery',
'chancier',
'chanciest',
'chancily',
'chancing',
'chancre',
'chancroid',
'chancy',
'chandelier',
'chandler',
'chandlery',
'chang',
'change',
'changeable',
'changeful',
'changeling',
'changeover',
'changer',
'changing',
'channel',
'channeled',
'channeling',
'channelization',
'channelize',
'channelized',
'channelizing',
'channelled',
'channelling',
'chanson',
'chant',
'chantage',
'chanted',
'chanter',
'chanteuse',
'chantey',
'chanticleer',
'chanting',
'chantry',
'chanty',
'chaotic',
'chap',
'chaparral',
'chapbook',
'chapeau',
'chapeaux',
'chapel',
'chaperon',
'chaperonage',
'chaperoning',
'chapfallen',
'chaplain',
'chaplaincy',
'chaplet',
'chapleted',
'chaplin',
'chapman',
'chapping',
'chapt',
'chapter',
'chaptering',
'char',
'character',
'characteristic',
'characterization',
'characterize',
'characterized',
'characterizing',
'charactery',
'charade',
'charbroil',
'charbroiled',
'charbroiling',
'charcoal',
'charcoaled',
'chard',
'chare',
'charge',
'chargeable',
'chargee',
'charger',
'charging',
'charier',
'chariest',
'charily',
'charing',
'chariot',
'charioteer',
'charioting',
'charism',
'charisma',
'charismatic',
'charitable',
'charitably',
'charity',
'charlady',
'charlatan',
'charlatanic',
'charlatanish',
'charlatanism',
'charlatanry',
'charlemagne',
'charleston',
'charley',
'charlie',
'charlotte',
'charlottesville',
'charm',
'charmed',
'charmer',
'charming',
'charminger',
'charnel',
'charon',
'charrier',
'charring',
'charry',
'chart',
'charted',
'charter',
'charterer',
'chartering',
'charting',
'chartist',
'chartreuse',
'charwoman',
'chary',
'chase',
'chased',
'chaser',
'chasing',
'chasm',
'chasmal',
'chasmed',
'chasmic',
'chasmy',
'chassed',
'chaste',
'chastely',
'chasten',
'chastened',
'chastener',
'chastening',
'chaster',
'chastest',
'chastise',
'chastised',
'chastisement',
'chastiser',
'chastising',
'chastity',
'chasuble',
'chat',
'chateau',
'chateaux',
'chatelaine',
'chattanooga',
'chatted',
'chattel',
'chatter',
'chatterbox',
'chatterer',
'chattering',
'chattery',
'chattier',
'chattiest',
'chattily',
'chatting',
'chatty',
'chaucer',
'chaucerian',
'chauffer',
'chauffeur',
'chauffeuring',
'chauffeuse',
'chaunting',
'chauvinism',
'chauvinist',
'chauvinistic',
'chaw',
'chawed',
'chawer',
'chawing',
'chayote',
'cheap',
'cheapen',
'cheapened',
'cheapening',
'cheaper',
'cheapest',
'cheapie',
'cheapish',
'cheaply',
'cheapskate',
'cheat',
'cheater',
'cheatery',
'check',
'checkable',
'checkbook',
'checker',
'checkerboard',
'checkering',
'checking',
'checklist',
'checkmate',
'checkoff',
'checkout',
'checkpoint',
'checkroom',
'checkrowed',
'checksum',
'checkup',
'chedar',
'cheddar',
'cheek',
'cheekbone',
'cheeked',
'cheekful',
'cheekier',
'cheekiest',
'cheekily',
'cheeking',
'cheeky',
'cheep',
'cheeped',
'cheeper',
'cheeping',
'cheer',
'cheerer',
'cheerful',
'cheerfully',
'cheerier',
'cheeriest',
'cheerily',
'cheering',
'cheerio',
'cheerleader',
'cheerlessly',
'cheery',
'cheese',
'cheeseburger',
'cheesecake',
'cheesecloth',
'cheesed',
'cheeseparing',
'cheesier',
'cheesiest',
'cheesily',
'cheesing',
'cheesy',
'cheetah',
'chef',
'chefdom',
'chekhov',
'chela',
'chelate',
'chelation',
'chem',
'chemical',
'chemin',
'chemise',
'chemism',
'chemist',
'chemistry',
'chemoreception',
'chemoreceptive',
'chemoreceptivity',
'chemosensitive',
'chemosensitivity',
'chemosterilant',
'chemosurgery',
'chemotherapeutic',
'chemotherapeutical',
'chemotherapist',
'chemotherapy',
'chemotropism',
'chemurgic',
'chemurgy',
'chenille',
'cheque',
'chequer',
'chequering',
'cherchez',
'cherenkov',
'cherish',
'cherished',
'cherisher',
'cherishing',
'cherokee',
'cheroot',
'cherry',
'cherrystone',
'chert',
'chertier',
'cherty',
'cherub',
'cherubic',
'cherubical',
'cherubim',
'chervil',
'chesapeake',
'chessboard',
'chessman',
'chest',
'chested',
'chesterfield',
'chestful',
'chestier',
'chestiest',
'chestnut',
'chesty',
'cheval',
'chevalier',
'chevaux',
'chevied',
'cheviot',
'chevrolet',
'chevron',
'chevy',
'chevying',
'chew',
'chewable',
'chewed',
'chewer',
'chewier',
'chewiest',
'chewing',
'chewy',
'cheyenne',
'chez',
'chi',
'chia',
'chianti',
'chiao',
'chiaroscuro',
'chiasma',
'chic',
'chicago',
'chicagoan',
'chicane',
'chicaned',
'chicaner',
'chicanery',
'chicaning',
'chicano',
'chiccory',
'chichi',
'chick',
'chickadee',
'chickasaw',
'chicken',
'chickened',
'chickening',
'chickpea',
'chickweed',
'chicle',
'chicly',
'chico',
'chicory',
'chid',
'chidden',
'chide',
'chider',
'chiding',
'chief',
'chiefdom',
'chiefer',
'chiefest',
'chiefly',
'chieftain',
'chieftaincy',
'chieftainship',
'chiel',
'chiffon',
'chiffonier',
'chiffonnier',
'chifforobe',
'chigger',
'chignon',
'chigoe',
'chihuahua',
'chilblain',
'child',
'childbearing',
'childbed',
'childbirth',
'childhood',
'childing',
'childish',
'childishly',
'childliest',
'childlike',
'childly',
'childproof',
'children',
'chile',
'chilean',
'chili',
'chill',
'chilled',
'chiller',
'chillest',
'chilli',
'chillier',
'chilliest',
'chillily',
'chilling',
'chillum',
'chilly',
'chimaera',
'chimbley',
'chimbly',
'chime',
'chimed',
'chimer',
'chimera',
'chimeric',
'chimerical',
'chiming',
'chimley',
'chimney',
'chimp',
'chimpanzee',
'chin',
'china',
'chinatown',
'chinaware',
'chinbone',
'chinch',
'chinchiest',
'chinchilla',
'chinchy',
'chine',
'chinese',
'chining',
'chinned',
'chinning',
'chino',
'chinone',
'chinook',
'chintz',
'chintzier',
'chintziest',
'chintzy',
'chip',
'chipmunk',
'chipper',
'chippering',
'chippewa',
'chippie',
'chipping',
'chippy',
'chirk',
'chirked',
'chirker',
'chirographer',
'chirographic',
'chirographical',
'chirography',
'chiromancy',
'chiropodist',
'chiropody',
'chiropractic',
'chirp',
'chirped',
'chirper',
'chirpier',
'chirpiest',
'chirpily',
'chirping',
'chirpy',
'chirrup',
'chirruped',
'chirruping',
'chirrupy',
'chisel',
'chiseled',
'chiseler',
'chiseling',
'chiselled',
'chiseller',
'chiselling',
'chit',
'chitchat',
'chitin',
'chitlin',
'chitling',
'chiton',
'chitter',
'chittering',
'chivalric',
'chivalrously',
'chivalry',
'chivaree',
'chive',
'chivied',
'chivvied',
'chivvy',
'chivvying',
'chivy',
'chivying',
'chloral',
'chlorate',
'chlordane',
'chloric',
'chlorid',
'chloride',
'chlorin',
'chlorinate',
'chlorination',
'chlorine',
'chlorite',
'chloroform',
'chloroformed',
'chloroforming',
'chlorophyll',
'chloroplast',
'chlorotic',
'chlorpromazine',
'chock',
'chocking',
'chocolate',
'choctaw',
'choice',
'choicely',
'choicer',
'choicest',
'choir',
'choirboy',
'choiring',
'choirmaster',
'choke',
'choked',
'choker',
'chokey',
'chokier',
'choking',
'choky',
'choler',
'cholera',
'choleric',
'cholesterol',
'choline',
'cholla',
'chomp',
'chomped',
'chomping',
'chondrite',
'chondrule',
'choose',
'chooser',
'choosey',
'choosier',
'choosiest',
'choosing',
'choosy',
'chop',
'chophouse',
'chopin',
'chopper',
'choppier',
'choppiest',
'choppily',
'chopping',
'choppy',
'chopstick',
'choral',
'chorale',
'chord',
'chordal',
'chordate',
'chording',
'chore',
'chorea',
'choreal',
'choreic',
'choreman',
'choreograph',
'choreographed',
'choreographer',
'choreographic',
'choreographing',
'choreography',
'chorial',
'choric',
'chorine',
'choring',
'chorion',
'chorister',
'chorizo',
'choroid',
'chortle',
'chortled',
'chortler',
'chortling',
'chorused',
'chorusing',
'chorussed',
'chorussing',
'chose',
'chosen',
'chou',
'chow',
'chowchow',
'chowder',
'chowdering',
'chowed',
'chowing',
'chowtime',
'chrism',
'christ',
'christen',
'christendom',
'christened',
'christener',
'christening',
'christian',
'christianity',
'christianize',
'christianized',
'christianizing',
'christie',
'christine',
'christly',
'christmastide',
'christopher',
'christy',
'chroma',
'chromate',
'chromatic',
'chromaticism',
'chromaticity',
'chromatogram',
'chromatograph',
'chromatographic',
'chromatography',
'chrome',
'chromed',
'chromic',
'chromide',
'chroming',
'chromite',
'chromium',
'chromize',
'chromized',
'chromizing',
'chromo',
'chromosomal',
'chromosome',
'chromosomic',
'chromosphere',
'chromospheric',
'chronaxy',
'chronic',
'chronicity',
'chronicle',
'chronicled',
'chronicler',
'chronicling',
'chronograph',
'chronographic',
'chronography',
'chronol',
'chronological',
'chronologist',
'chronology',
'chronometer',
'chronon',
'chrysanthemum',
'chrysler',
'chrysolite',
'chthonic',
'chub',
'chubbier',
'chubbiest',
'chubbily',
'chubby',
'chuck',
'chuckfull',
'chuckhole',
'chucking',
'chuckle',
'chuckled',
'chuckler',
'chuckling',
'chucky',
'chuff',
'chuffed',
'chuffer',
'chuffing',
'chuffy',
'chug',
'chugger',
'chugging',
'chukka',
'chukker',
'chum',
'chummed',
'chummier',
'chummiest',
'chummily',
'chumming',
'chummy',
'chump',
'chumped',
'chumping',
'chumship',
'chungking',
'chunk',
'chunked',
'chunkier',
'chunkiest',
'chunkily',
'chunking',
'chunky',
'chunter',
'church',
'churched',
'churchgoer',
'churchgoing',
'churchier',
'churchiest',
'churchill',
'churching',
'churchlier',
'churchly',
'churchman',
'churchwarden',
'churchwoman',
'churchy',
'churchyard',
'churl',
'churlish',
'churlishly',
'churn',
'churned',
'churner',
'churning',
'chute',
'chuted',
'chuting',
'chutist',
'chutney',
'chutzpa',
'chutzpah',
'chyme',
'chymist',
'cia',
'ciao',
'cicada',
'cicadae',
'cicatrix',
'cicatrize',
'cicatrized',
'cicely',
'cicero',
'cicerone',
'cichlid',
'cichlidae',
'cider',
'cigar',
'cigaret',
'cigarette',
'cigarillo',
'cilantro',
'cilia',
'ciliary',
'ciliata',
'ciliate',
'cilium',
'cinch',
'cinched',
'cinching',
'cinchona',
'cincinnati',
'cincture',
'cincturing',
'cinder',
'cindering',
'cindery',
'cine',
'cinema',
'cinematheque',
'cinematic',
'cinematograph',
'cinematographer',
'cinematographic',
'cinematography',
'cinerama',
'cineraria',
'cinerarium',
'cinerary',
'cinereal',
'cinnabar',
'cinnamon',
'cinquain',
'cinque',
'cinquefoil',
'cipher',
'ciphering',
'circ',
'circa',
'circadian',
'circe',
'circle',
'circled',
'circler',
'circlet',
'circling',
'circuit',
'circuital',
'circuited',
'circuiteer',
'circuiter',
'circuiting',
'circuitously',
'circuitry',
'circuity',
'circular',
'circularity',
'circularization',
'circularize',
'circularized',
'circularizer',
'circularizing',
'circularly',
'circulate',
'circulation',
'circulative',
'circulatory',
'circum',
'circumambulate',
'circumambulation',
'circumcise',
'circumcised',
'circumcising',
'circumcision',
'circumference',
'circumflex',
'circumlocution',
'circumlocutory',
'circumlunar',
'circumnavigate',
'circumnavigation',
'circumpolar',
'circumscribe',
'circumscribed',
'circumscribing',
'circumscription',
'circumsolar',
'circumspect',
'circumspection',
'circumstance',
'circumstanced',
'circumstantial',
'circumstantiate',
'circumstantiation',
'circumvent',
'circumventable',
'circumvented',
'circumventing',
'circumvention',
'circusy',
'cirque',
'cirrhotic',
'cirrose',
'cislunar',
'cistern',
'cisternal',
'cit',
'citable',
'citadel',
'citation',
'citatory',
'citatum',
'cite',
'citeable',
'cited',
'citer',
'cithara',
'cithern',
'citicorp',
'citied',
'citification',
'citified',
'citify',
'citifying',
'citing',
'citizen',
'citizenly',
'citizenry',
'citizenship',
'citrate',
'citric',
'citrine',
'citron',
'citronella',
'cittern',
'city',
'cityfied',
'cityward',
'citywide',
'civet',
'civic',
'civicism',
'civil',
'civiler',
'civilest',
'civilian',
'civilise',
'civilising',
'civility',
'civilizable',
'civilization',
'civilize',
'civilized',
'civilizer',
'civilizing',
'civilly',
'civvy',
'clabber',
'clabbering',
'clack',
'clacker',
'clacking',
'clad',
'cladding',
'clagging',
'claim',
'claimable',
'claimant',
'claimed',
'claimer',
'claiming',
'clair',
'clairvoyance',
'clairvoyancy',
'clairvoyant',
'clairvoyantly',
'clam',
'clambake',
'clamber',
'clambering',
'clammed',
'clammier',
'clammiest',
'clammily',
'clamming',
'clammy',
'clamor',
'clamorer',
'clamoring',
'clamorously',
'clamour',
'clamouring',
'clamp',
'clamped',
'clamper',
'clamping',
'clamshell',
'clamworm',
'clan',
'clandestine',
'clandestinely',
'clandestinity',
'clang',
'clanging',
'clangor',
'clangoring',
'clangorously',
'clangour',
'clank',
'clanked',
'clanking',
'clannish',
'clannishly',
'clansman',
'clanswoman',
'clap',
'clapboard',
'clapper',
'clapping',
'clapt',
'claptrap',
'claque',
'clarence',
'claret',
'clarifiable',
'clarification',
'clarified',
'clarifier',
'clarify',
'clarifying',
'clarinet',
'clarinetist',
'clarinettist',
'clarion',
'clarioning',
'clarity',
'clark',
'clarke',
'clarkia',
'clarksville',
'clash',
'clashed',
'clasher',
'clashing',
'clasp',
'clasped',
'clasper',
'clasping',
'claspt',
'classed',
'classer',
'classic',
'classical',
'classicalism',
'classicism',
'classicist',
'classier',
'classiest',
'classifiable',
'classification',
'classified',
'classifier',
'classify',
'classifying',
'classily',
'classing',
'classmate',
'classroom',
'classy',
'clastic',
'clatter',
'clatterer',
'clattering',
'clattery',
'clausal',
'clause',
'claustrophobe',
'claustrophobia',
'claustrophobiac',
'claustrophobic',
'clave',
'claver',
'clavichord',
'clavichordist',
'clavicle',
'clavicular',
'clavier',
'clavierist',
'claw',
'clawed',
'clawer',
'clawing',
'claxon',
'clay',
'claybank',
'clayed',
'clayey',
'clayier',
'claying',
'clayish',
'claymore',
'clayware',
'clean',
'cleanable',
'cleaned',
'cleaner',
'cleanest',
'cleaning',
'cleanlier',
'cleanliest',
'cleanly',
'cleanse',
'cleansed',
'cleanser',
'cleansing',
'cleanup',
'clear',
'clearable',
'clearance',
'clearer',
'clearest',
'clearing',
'clearinghouse',
'clearly',
'clearwater',
'cleat',
'cleavage',
'cleave',
'cleaved',
'cleaver',
'cleaving',
'clef',
'cleft',
'clemency',
'clement',
'clemently',
'clench',
'clenched',
'clenching',
'cleopatra',
'clepe',
'clept',
'clerestory',
'clergy',
'clergyman',
'clergywoman',
'cleric',
'clerical',
'clericalism',
'clericalist',
'clerk',
'clerkdom',
'clerked',
'clerking',
'clerkish',
'clerklier',
'clerkliest',
'clerkly',
'clerkship',
'cleveland',
'clever',
'cleverer',
'cleverest',
'cleverish',
'cleverly',
'clew',
'clewed',
'cliche',
'cliched',
'click',
'clicker',
'clicking',
'client',
'cliental',
'clientele',
'cliff',
'cliffhanger',
'cliffhanging',
'cliffier',
'cliffiest',
'cliffy',
'clift',
'climacteric',
'climactic',
'climatal',
'climate',
'climatic',
'climatical',
'climatologic',
'climatological',
'climatologist',
'climatology',
'climatotherapy',
'climax',
'climaxed',
'climaxing',
'climb',
'climbable',
'climbed',
'climber',
'climbing',
'clime',
'clinch',
'clinched',
'clincher',
'clinching',
'cline',
'cling',
'clinger',
'clingier',
'clingiest',
'clinging',
'clingstone',
'clingy',
'clinic',
'clinical',
'clinician',
'clink',
'clinked',
'clinker',
'clinkering',
'clinking',
'clip',
'clipboard',
'clipper',
'clipping',
'clipsheet',
'clipt',
'clique',
'cliqued',
'cliquey',
'cliquier',
'cliquiest',
'cliquing',
'cliquish',
'cliquishly',
'cliquy',
'clitoral',
'clitoric',
'clitoridean',
'clitoridectomy',
'cloaca',
'cloacal',
'cloak',
'cloaked',
'cloaking',
'cloakroom',
'clobber',
'clobbering',
'cloche',
'clock',
'clocker',
'clocking',
'clockwise',
'clockwork',
'clod',
'cloddier',
'cloddiest',
'cloddish',
'cloddy',
'clodhopper',
'clodhopping',
'clodpate',
'clodpole',
'clodpoll',
'clog',
'cloggier',
'cloggiest',
'clogging',
'cloggy',
'cloisonne',
'cloister',
'cloistering',
'cloistral',
'clomb',
'clomp',
'clomped',
'clomping',
'clonal',
'clone',
'clonic',
'cloning',
'clonism',
'clonk',
'clonked',
'clonking',
'clop',
'clopping',
'closable',
'close',
'closeable',
'closed',
'closefisted',
'closefitting',
'closely',
'closemouthed',
'closeout',
'closer',
'closest',
'closet',
'closeted',
'closeting',
'closeup',
'closing',
'closure',
'closuring',
'clot',
'cloth',
'clothbound',
'clothe',
'clothed',
'clotheshorse',
'clothesline',
'clothespin',
'clothier',
'clothing',
'clotted',
'clotting',
'clotty',
'cloture',
'cloturing',
'cloud',
'cloudburst',
'cloudier',
'cloudiest',
'cloudily',
'clouding',
'cloudlet',
'cloudlike',
'cloudy',
'clout',
'clouted',
'clouter',
'clouting',
'clove',
'cloven',
'clover',
'cloverleaf',
'clown',
'clowned',
'clownery',
'clowning',
'clownish',
'clownishly',
'cloy',
'cloyed',
'cloying',
'club',
'clubable',
'clubbed',
'clubber',
'clubbier',
'clubbiest',
'clubbing',
'clubby',
'clubfeet',
'clubfoot',
'clubfooted',
'clubhand',
'clubhauled',
'clubhouse',
'clubman',
'cluck',
'clucking',
'clue',
'clued',
'clueing',
'cluing',
'clump',
'clumped',
'clumpier',
'clumpiest',
'clumping',
'clumpish',
'clumpy',
'clumsier',
'clumsiest',
'clumsily',
'clumsy',
'clung',
'clunk',
'clunked',
'clunker',
'clunking',
'cluster',
'clustering',
'clustery',
'clutch',
'clutched',
'clutching',
'clutchy',
'clutter',
'cluttering',
'clyster',
'co',
'coach',
'coached',
'coacher',
'coaching',
'coachman',
'coachwork',
'coact',
'coacted',
'coacting',
'coaction',
'coadmit',
'coaeval',
'coagency',
'coagent',
'coagula',
'coagulability',
'coagulable',
'coagulant',
'coagulate',
'coagulation',
'coagulative',
'coagulometer',
'coagulum',
'coal',
'coalbin',
'coalbox',
'coaled',
'coaler',
'coalesce',
'coalesced',
'coalescence',
'coalescent',
'coalescing',
'coalfish',
'coalhole',
'coalified',
'coalify',
'coaling',
'coalition',
'coalitional',
'coalitioner',
'coalitionist',
'coalpit',
'coalsack',
'coalshed',
'coalyard',
'coaming',
'coarse',
'coarsely',
'coarsen',
'coarsened',
'coarsening',
'coarser',
'coarsest',
'coast',
'coastal',
'coasted',
'coaster',
'coastguardsman',
'coasting',
'coastline',
'coastward',
'coastwise',
'coat',
'coatee',
'coater',
'coati',
'coatrack',
'coatroom',
'coattail',
'coauthor',
'coax',
'coaxal',
'coaxed',
'coaxer',
'coaxial',
'coaxing',
'cob',
'cobalt',
'cobaltic',
'cobber',
'cobbier',
'cobble',
'cobbled',
'cobbler',
'cobblestone',
'cobbling',
'cobby',
'cobnut',
'cobol',
'cobra',
'cobweb',
'cobwebbed',
'cobwebbier',
'cobwebbing',
'cobwebby',
'cocain',
'cocaine',
'cocainism',
'cocainize',
'cocainized',
'cocci',
'coccygeal',
'coccyx',
'cochairing',
'cochairman',
'cochineal',
'cochlea',
'cochleae',
'cochlear',
'coco',
'cocoa',
'cocoanut',
'cocobolo',
'cocomat',
'coconut',
'cocoon',
'cocooning',
'cod',
'coda',
'codable',
'codal',
'codder',
'coddle',
'coddled',
'coddler',
'coddling',
'code',
'codefendant',
'codein',
'codeine',
'coder',
'codeword',
'codex',
'codfish',
'codger',
'codicil',
'codification',
'codified',
'codifier',
'codify',
'codifying',
'coding',
'codling',
'codon',
'codpiece',
'coed',
'coeducation',
'coeducational',
'coefficient',
'coelenterate',
'coempt',
'coenact',
'coenzyme',
'coequal',
'coequality',
'coequate',
'coerce',
'coerced',
'coercer',
'coercible',
'coercing',
'coercion',
'coercive',
'coeval',
'coexist',
'coexisted',
'coexistence',
'coexistent',
'coexisting',
'coextensive',
'cofeature',
'coffee',
'coffeecake',
'coffeehouse',
'coffeepot',
'coffer',
'cofferdam',
'coffering',
'coffin',
'coffined',
'coffing',
'coffining',
'cog',
'cogence',
'cogency',
'cogent',
'cogently',
'cogging',
'cogitate',
'cogitation',
'cogitative',
'cogito',
'cognac',
'cognate',
'cognati',
'cognation',
'cognisable',
'cognisance',
'cognise',
'cognised',
'cognising',
'cognition',
'cognitional',
'cognitive',
'cognizable',
'cognizably',
'cognizance',
'cognizant',
'cognize',
'cognized',
'cognizer',
'cognizing',
'cognomina',
'cognoscente',
'cognoscenti',
'cognoscing',
'cogway',
'cogwheel',
'cohabit',
'cohabitant',
'cohabitation',
'cohabited',
'cohabiting',
'coheir',
'cohen',
'cohere',
'coherence',
'coherency',
'coherent',
'coherently',
'coherer',
'cohering',
'cohesion',
'cohesive',
'coho',
'cohort',
'cohosh',
'coif',
'coifed',
'coiffed',
'coiffeur',
'coiffeuse',
'coiffing',
'coiffure',
'coiffuring',
'coifing',
'coign',
'coigne',
'coil',
'coiled',
'coiler',
'coiling',
'coin',
'coinable',
'coinage',
'coincide',
'coincidence',
'coincident',
'coincidental',
'coinciding',
'coined',
'coiner',
'coinhering',
'coining',
'coinsurance',
'coinsurer',
'coinsuring',
'coir',
'coital',
'coition',
'coitional',
'coitophobia',
'coke',
'coked',
'coking',
'col',
'cola',
'colander',
'cold',
'colder',
'coldest',
'coldish',
'coldly',
'cole',
'coleslaw',
'colewort',
'colic',
'colicky',
'coliform',
'colin',
'colinear',
'coliseum',
'colitic',
'coll',
'collaborate',
'collaboration',
'collaborationism',
'collaborationist',
'collaborative',
'collage',
'collagen',
'collapse',
'collapsed',
'collapsibility',
'collapsible',
'collapsing',
'collar',
'collarbone',
'collard',
'collaring',
'collat',
'collate',
'collateral',
'collateralizing',
'collation',
'colleague',
'collect',
'collectable',
'collected',
'collectible',
'collecting',
'collection',
'collective',
'collectivism',
'collectivist',
'collectivize',
'collectivized',
'collectivizing',
'colleen',
'college',
'colleger',
'collegia',
'collegial',
'collegiality',
'collegian',
'collegiate',
'collegium',
'colleted',
'collide',
'colliding',
'collie',
'collied',
'collier',
'colliery',
'collimate',
'collimation',
'collinear',
'collision',
'collocate',
'collocation',
'collodion',
'collodium',
'colloid',
'colloidal',
'collop',
'colloq',
'colloquia',
'colloquial',
'colloquialism',
'colloquium',
'colloquy',
'collude',
'colluder',
'colluding',
'collusion',
'collusive',
'colluvial',
'colluvium',
'colly',
'colocate',
'cologne',
'cologned',
'colombia',
'colombian',
'colombo',
'colon',
'colonel',
'colonelcy',
'colonelship',
'colonial',
'colonialism',
'colonialist',
'colonic',
'colonise',
'colonist',
'colonization',
'colonizationist',
'colonize',
'colonized',
'colonizer',
'colonizing',
'colonnade',
'colony',
'colophon',
'color',
'colorable',
'colorably',
'coloradan',
'colorado',
'colorant',
'coloration',
'coloratura',
'colorblind',
'colorcast',
'colorcasting',
'colorer',
'colorfast',
'colorful',
'colorfully',
'colorimeter',
'colorimetry',
'coloring',
'colorism',
'colorist',
'colossal',
'colosseum',
'colossi',
'colostomy',
'colostrum',
'colour',
'colourer',
'colouring',
'colporteur',
'colt',
'coltish',
'columbia',
'columbian',
'columbic',
'columbine',
'columbium',
'column',
'columnal',
'columnar',
'columned',
'columnist',
'colure',
'com',
'coma',
'comanche',
'comatose',
'comb',
'combat',
'combatant',
'combater',
'combative',
'combattant',
'combatted',
'combatting',
'combe',
'combed',
'comber',
'combination',
'combine',
'combined',
'combiner',
'combing',
'combining',
'combo',
'combust',
'combusted',
'combustibility',
'combustible',
'combustibly',
'combusting',
'combustion',
'combustive',
'come',
'comeback',
'comedian',
'comedic',
'comedienne',
'comedo',
'comedown',
'comedy',
'comelier',
'comeliest',
'comely',
'comer',
'comestible',
'comet',
'cometary',
'cometh',
'cometic',
'comeuppance',
'comfier',
'comfiest',
'comfit',
'comfort',
'comfortable',
'comfortably',
'comforted',
'comforter',
'comforting',
'comfrey',
'comfy',
'comic',
'comical',
'comicality',
'coming',
'comity',
'comma',
'command',
'commandant',
'commandeer',
'commandeering',
'commander',
'commanding',
'commandment',
'commando',
'comme',
'commemorate',
'commemoration',
'commemorative',
'commence',
'commenced',
'commencement',
'commencing',
'commend',
'commendable',
'commendably',
'commendation',
'commendatorily',
'commendatory',
'commending',
'commensurable',
'commensurably',
'commensurate',
'commensurately',
'commensuration',
'comment',
'commentary',
'commentate',
'commented',
'commenting',
'commerce',
'commerced',
'commercial',
'commercialism',
'commercialist',
'commercialization',
'commercialize',
'commercialized',
'commercializing',
'commercing',
'commie',
'commination',
'comminatory',
'commingle',
'commingled',
'commingling',
'comminute',
'commiserate',
'commiseration',
'commiserative',
'commissar',
'commissariat',
'commissary',
'commission',
'commissioner',
'commissionership',
'commissioning',
'commit',
'commitment',
'committable',
'committal',
'committed',
'committee',
'committeeman',
'committeewoman',
'committing',
'commix',
'commixed',
'commixing',
'commixt',
'commode',
'commodiously',
'commodity',
'commodore',
'common',
'commonable',
'commonality',
'commonalty',
'commoner',
'commonest',
'commonly',
'commonplace',
'commonsensical',
'commonweal',
'commonwealth',
'commotion',
'communal',
'communalism',
'communalist',
'communality',
'communalization',
'communalize',
'communalized',
'communard',
'commune',
'communed',
'communicability',
'communicable',
'communicably',
'communicant',
'communicate',
'communication',
'communicative',
'communing',
'communion',
'communique',
'communism',
'communist',
'communistic',
'community',
'commutable',
'commutation',
'commutative',
'commute',
'commuted',
'commuter',
'commuting',
'commy',
'comp',
'compact',
'compacted',
'compacter',
'compactest',
'compacting',
'compaction',
'compactly',
'compadre',
'companied',
'companion',
'companionable',
'companionably',
'companionship',
'companionway',
'company',
'companying',
'comparability',
'comparable',
'comparably',
'comparative',
'compare',
'comparer',
'comparing',
'comparison',
'compartment',
'compartmental',
'compartmentalize',
'compartmentalized',
'compartmentalizing',
'compartmented',
'compassed',
'compassing',
'compassion',
'compassionate',
'compassionately',
'compatibility',
'compatible',
'compatibly',
'compatriot',
'comped',
'compeer',
'compel',
'compellable',
'compelled',
'compeller',
'compelling',
'compendia',
'compendium',
'compensability',
'compensable',
'compensate',
'compensation',
'compensative',
'compensatory',
'compere',
'compete',
'competed',
'competence',
'competency',
'competent',
'competently',
'competing',
'competition',
'competitive',
'compilable',
'compilation',
'compile',
'compiled',
'compiler',
'compiling',
'comping',
'complacence',
'complacency',
'complacent',
'complacently',
'complain',
'complainant',
'complained',
'complainer',
'complaining',
'complaint',
'complaisance',
'complaisant',
'complaisantly',
'compleat',
'complect',
'complected',
'complement',
'complemental',
'complementarily',
'complementary',
'complemented',
'complementing',
'complete',
'completed',
'completely',
'completer',
'completest',
'completing',
'completion',
'complex',
'complexer',
'complexest',
'complexing',
'complexion',
'complexional',
'complexity',
'compliance',
'compliancy',
'compliant',
'compliantly',
'complicate',
'complication',
'complicity',
'complied',
'complier',
'compliment',
'complimentarily',
'complimentary',
'complimented',
'complimenter',
'complimenting',
'comply',
'complying',
'component',
'componential',
'comport',
'comported',
'comporting',
'comportment',
'compose',
'composed',
'composer',
'composing',
'composite',
'compositely',
'composition',
'compost',
'composted',
'composting',
'composure',
'compote',
'compound',
'compoundable',
'compounder',
'compounding',
'comprehend',
'comprehendible',
'comprehending',
'comprehensibility',
'comprehensible',
'comprehensibly',
'comprehension',
'comprehensive',
'compressed',
'compressibility',
'compressible',
'compressing',
'compression',
'compressional',
'compressive',
'compressor',
'comprise',
'comprised',
'comprising',
'comprize',
'comprized',
'comprizing',
'compromisable',
'compromise',
'compromised',
'compromiser',
'compromising',
'compt',
'compte',
'compted',
'compting',
'comptroller',
'compulsion',
'compulsive',
'compulsorily',
'compulsory',
'compunction',
'computability',
'computable',
'computation',
'computational',
'compute',
'computed',
'computer',
'computerese',
'computerization',
'computerize',
'computerized',
'computerizing',
'computing',
'comrade',
'comradely',
'comradeship',
'comsat',
'comte',
'con',
'conation',
'conative',
'concatenate',
'concatenation',
'concave',
'concaved',
'concaving',
'concavity',
'concavo',
'conceal',
'concealable',
'concealed',
'concealer',
'concealing',
'concealment',
'concede',
'conceder',
'conceding',
'conceit',
'conceited',
'conceiting',
'conceivability',
'conceivable',
'conceivably',
'conceive',
'conceived',
'conceiver',
'conceiving',
'concelebrate',
'concelebration',
'concentrate',
'concentration',
'concentrative',
'concentric',
'concentricity',
'concept',
'conception',
'conceptional',
'conceptive',
'conceptual',
'conceptualism',
'conceptualist',
'conceptualistic',
'conceptualization',
'conceptualize',
'conceptualized',
'conceptualizing',
'concern',
'concerned',
'concerning',
'concernment',
'concert',
'concerted',
'concerti',
'concertina',
'concerting',
'concertize',
'concertized',
'concertizing',
'concertmaster',
'concerto',
'concession',
'concessionaire',
'concessive',
'conch',
'conchoid',
'conchy',
'concierge',
'conciliar',
'conciliate',
'conciliation',
'conciliatory',
'concise',
'concisely',
'conciser',
'concisest',
'conclave',
'conclude',
'concluder',
'concluding',
'conclusion',
'conclusive',
'concoct',
'concocted',
'concocting',
'concoction',
'concomitance',
'concomitant',
'concomitantly',
'concord',
'concordance',
'concordant',
'concordantly',
'concordat',
'concourse',
'concrescence',
'concrescent',
'concrete',
'concreted',
'concretely',
'concreting',
'concretion',
'concubinage',
'concubine',
'concupiscence',
'concupiscent',
'concur',
'concurrence',
'concurrent',
'concurrently',
'concurring',
'concussed',
'concussing',
'concussion',
'concussive',
'condemn',
'condemnable',
'condemnation',
'condemnatory',
'condemned',
'condemner',
'condemning',
'condemnor',
'condensate',
'condensation',
'condense',
'condensed',
'condenser',
'condensing',
'condescend',
'condescendence',
'condescending',
'condescension',
'condign',
'condignly',
'condiment',
'condition',
'conditional',
'conditionality',
'conditione',
'conditioner',
'conditioning',
'condo',
'condole',
'condoled',
'condolence',
'condoler',
'condoling',
'condom',
'condominium',
'condonable',
'condonation',
'condone',
'condoner',
'condoning',
'condor',
'conduce',
'conduced',
'conducer',
'conducing',
'conducive',
'conduct',
'conductance',
'conducted',
'conductibility',
'conductible',
'conducting',
'conduction',
'conductive',
'conductivity',
'conduit',
'condyle',
'cone',
'conelrad',
'conestoga',
'coney',
'conf',
'confab',
'confabbed',
'confabbing',
'confabulate',
'confabulation',
'confect',
'confecting',
'confection',
'confectioner',
'confectionery',
'confederacy',
'confederate',
'confederation',
'confederative',
'confer',
'conferee',
'conference',
'conferment',
'conferrer',
'conferring',
'confessable',
'confessed',
'confessing',
'confession',
'confessional',
'confessor',
'confetti',
'confetto',
'confidant',
'confidante',
'confide',
'confidence',
'confident',
'confidential',
'confidentiality',
'confidently',
'confider',
'confiding',
'configuration',
'configurational',
'configurative',
'configure',
'configuring',
'confine',
'confined',
'confinement',
'confiner',
'confining',
'confirm',
'confirmable',
'confirmation',
'confirmatory',
'confirmed',
'confirming',
'confirmor',
'confiscate',
'confiscation',
'confiscatory',
'conflagration',
'conflict',
'conflicted',
'conflicting',
'conflictive',
'confluence',
'confluent',
'conflux',
'confocal',
'conform',
'conformable',
'conformably',
'conformation',
'conformational',
'conformed',
'conformer',
'conforming',
'conformism',
'conformist',
'conformity',
'confound',
'confounder',
'confounding',
'confraternity',
'confrere',
'confront',
'confrontation',
'confronted',
'confronting',
'confucian',
'confucianism',
'confuse',
'confused',
'confusing',
'confusion',
'confusional',
'confutable',
'confutation',
'confutative',
'confute',
'confuted',
'confuter',
'confuting',
'conga',
'congaed',
'congaing',
'congeal',
'congealable',
'congealed',
'congealing',
'congealment',
'congee',
'congeed',
'congener',
'congeneric',
'congenial',
'congeniality',
'congenital',
'conger',
'congest',
'congested',
'congesting',
'congestion',
'congestive',
'conglomerate',
'conglomeration',
'congo',
'congolese',
'congratulate',
'congratulation',
'congratulatory',
'congregant',
'congregate',
'congregation',
'congregational',
'congressed',
'congressional',
'congressman',
'congresswoman',
'congruence',
'congruency',
'congruent',
'congruently',
'congruity',
'congruously',
'conic',
'conical',
'conicity',
'conifer',
'conj',
'conjecturable',
'conjectural',
'conjecture',
'conjecturing',
'conjoin',
'conjoined',
'conjoining',
'conjoint',
'conjointly',
'conjugal',
'conjugality',
'conjugant',
'conjugate',
'conjugation',
'conjugational',
'conjunct',
'conjunction',
'conjunctiva',
'conjunctivae',
'conjunctival',
'conjunctive',
'conjuncture',
'conjuration',
'conjure',
'conjurer',
'conjuring',
'conjuror',
'conk',
'conked',
'conker',
'conking',
'conky',
'conn',
'connate',
'connect',
'connected',
'connecter',
'connecticut',
'connecting',
'connection',
'connective',
'conned',
'conner',
'connie',
'conning',
'conniption',
'connivance',
'connive',
'connived',
'conniver',
'connivery',
'conniving',
'connoisseur',
'connotation',
'connotative',
'connote',
'connoted',
'connoting',
'connubial',
'conoid',
'conoidal',
'conquer',
'conquerable',
'conquering',
'conqueror',
'conquest',
'conquian',
'conquistador',
'conrail',
'consanguine',
'consanguinity',
'conscience',
'conscientiously',
'consciously',
'conscript',
'conscripted',
'conscripting',
'conscription',
'conscripttion',
'consecrate',
'consecration',
'consecrative',
'consecratory',
'consecutive',
'consensual',
'consent',
'consented',
'consenter',
'consenting',
'consequence',
'consequent',
'consequential',
'consequently',
'conservable',
'conservancy',
'conservation',
'conservational',
'conservationism',
'conservationist',
'conservatism',
'conservative',
'conservatorship',
'conservatory',
'conserve',
'conserved',
'conserving',
'consider',
'considerable',
'considerably',
'considerate',
'considerately',
'consideration',
'considering',
'consign',
'consigned',
'consignee',
'consigning',
'consignment',
'consignor',
'consist',
'consisted',
'consistence',
'consistency',
'consistent',
'consistently',
'consisting',
'consistorial',
'consistory',
'consitutional',
'consolation',
'consolatory',
'console',
'consoled',
'consoler',
'consolidate',
'consolidation',
'consoling',
'consomme',
'consonance',
'consonant',
'consonantal',
'consonantly',
'consort',
'consorted',
'consortia',
'consorting',
'consortium',
'consortship',
'conspicuously',
'conspiracy',
'conspiratorial',
'conspire',
'conspirer',
'conspiring',
'constable',
'constabulary',
'constance',
'constancy',
'constant',
'constantinople',
'constantly',
'constellation',
'consternate',
'consternation',
'constipate',
'constipation',
'constituency',
'constituent',
'constituently',
'constitute',
'constituted',
'constituting',
'constitution',
'constitutional',
'constitutionality',
'constitutive',
'constrain',
'constrainable',
'constrained',
'constrainer',
'constraining',
'constrainment',
'constraint',
'constrict',
'constricted',
'constricting',
'constriction',
'constrictive',
'construable',
'construct',
'constructed',
'constructing',
'construction',
'constructionism',
'constructionist',
'constructive',
'construe',
'construed',
'construer',
'construing',
'consubstantiation',
'consul',
'consular',
'consulate',
'consulship',
'consult',
'consultant',
'consultation',
'consultative',
'consultatory',
'consulted',
'consulter',
'consulting',
'consultive',
'consumable',
'consume',
'consumed',
'consumer',
'consumerism',
'consuming',
'consummate',
'consummately',
'consummation',
'consummatory',
'consumption',
'consumptive',
'cont',
'contact',
'contacted',
'contacting',
'contagion',
'contagiously',
'contain',
'containable',
'contained',
'container',
'containerization',
'containerize',
'containerized',
'containerizing',
'containership',
'containing',
'containment',
'contaminant',
'contaminate',
'contamination',
'contaminative',
'conte',
'contemn',
'contemned',
'contemner',
'contemnor',
'contemplate',
'contemplation',
'contemplative',
'contemporaneously',
'contemporarily',
'contemporary',
'contempt',
'contemptible',
'contemptibly',
'contemptuously',
'contend',
'contender',
'contendere',
'contending',
'content',
'contented',
'contenting',
'contention',
'contentional',
'contentiously',
'contently',
'contentment',
'conterminously',
'contest',
'contestable',
'contestably',
'contestant',
'contestation',
'contested',
'contestee',
'contesting',
'context',
'contextual',
'contiguity',
'contiguously',
'continence',
'continent',
'continental',
'contingence',
'contingency',
'contingent',
'contingentiam',
'contingently',
'continua',
'continuable',
'continual',
'continuance',
'continuant',
'continuation',
'continue',
'continued',
'continuer',
'continuing',
'continuity',
'continuo',
'continuously',
'continuum',
'conto',
'contort',
'contorted',
'contorting',
'contortion',
'contortionist',
'contortionistic',
'contortive',
'contour',
'contouring',
'contra',
'contraband',
'contraception',
'contraceptive',
'contract',
'contracted',
'contractibility',
'contractible',
'contractile',
'contractility',
'contracting',
'contraction',
'contractive',
'contractual',
'contracture',
'contradict',
'contradicted',
'contradicting',
'contradiction',
'contradictive',
'contradictorily',
'contradictory',
'contradistinction',
'contradistinctive',
'contrail',
'contraindicate',
'contraindication',
'contraindicative',
'contraire',
'contralto',
'contraption',
'contrapuntal',
'contrariety',
'contrarily',
'contrariwise',
'contrary',
'contrast',
'contrastable',
'contrasted',
'contrasting',
'contravene',
'contravened',
'contravening',
'contravention',
'contribute',
'contributed',
'contributing',
'contribution',
'contributorily',
'contributory',
'contrite',
'contritely',
'contrition',
'contrivance',
'contrive',
'contrived',
'contriver',
'contriving',
'control',
'controllability',
'controllable',
'controllably',
'controlled',
'controller',
'controlling',
'controversial',
'controversy',
'controvert',
'controverted',
'controvertible',
'controverting',
'contumaciously',
'contumacy',
'contumely',
'contuse',
'contused',
'contusing',
'contusion',
'conundrum',
'conurbation',
'convalesce',
'convalesced',
'convalescence',
'convalescent',
'convalescing',
'convect',
'convected',
'convecting',
'convection',
'convectional',
'convective',
'convene',
'convened',
'convener',
'convenience',
'convenient',
'conveniently',
'convening',
'convent',
'convented',
'conventicle',
'conventing',
'convention',
'conventional',
'conventionalism',
'conventionality',
'conventionalize',
'conventionalized',
'conventionalizing',
'conventionary',
'conventioneer',
'conventual',
'converge',
'convergence',
'convergency',
'convergent',
'converging',
'conversant',
'conversation',
'conversational',
'conversationalist',
'converse',
'conversed',
'conversely',
'conversing',
'conversion',
'convert',
'converted',
'converter',
'convertible',
'converting',
'convex',
'convexity',
'convexly',
'convexo',
'convey',
'conveyable',
'conveyance',
'conveyancer',
'conveyancing',
'conveyed',
'conveyer',
'conveying',
'conveyor',
'convict',
'convicted',
'convicting',
'conviction',
'convince',
'convinced',
'convincer',
'convincing',
'convivial',
'conviviality',
'convocation',
'convoke',
'convoked',
'convoker',
'convoking',
'convoluted',
'convolutely',
'convoluting',
'convolution',
'convoy',
'convoyed',
'convoying',
'convulsant',
'convulse',
'convulsed',
'convulsing',
'convulsion',
'convulsive',
'cony',
'coo',
'cooch',
'cooed',
'cooee',
'cooeeing',
'cooer',
'cooey',
'cooeyed',
'cooeying',
'cooing',
'cook',
'cookable',
'cookbook',
'cooked',
'cooker',
'cookery',
'cookey',
'cookie',
'cooking',
'cookout',
'cookshop',
'cookware',
'cooky',
'cool',
'coolant',
'cooled',
'cooler',
'coolest',
'cooley',
'coolidge',
'coolie',
'cooling',
'coolish',
'coolly',
'cooly',
'coomb',
'coombe',
'coon',
'cooncan',
'coonhound',
'coonskin',
'coop',
'cooped',
'cooper',
'cooperage',
'cooperate',
'cooperation',
'cooperative',
'coopering',
'coopery',
'cooping',
'coopt',
'coopted',
'coopting',
'cooption',
'coordinate',
'coordinately',
'coordination',
'coordinative',
'coot',
'cootie',
'cop',
'copal',
'coparent',
'copartner',
'copartnership',
'cope',
'copeck',
'coped',
'copenhagen',
'copepod',
'coper',
'copernican',
'copied',
'copier',
'copilot',
'coping',
'copiously',
'coplanar',
'coplot',
'copolymer',
'copolymeric',
'copolymerization',
'copolymerize',
'copolymerized',
'copolymerizing',
'copout',
'copper',
'copperhead',
'coppering',
'copperplate',
'coppersmith',
'coppery',
'coppice',
'coppiced',
'copping',
'copra',
'coprocessing',
'coprocessor',
'coprolith',
'coprology',
'copse',
'copter',
'copula',
'copulae',
'copular',
'copulate',
'copulation',
'copulative',
'copulatory',
'copy',
'copybook',
'copyboy',
'copycat',
'copycatted',
'copyholder',
'copying',
'copyist',
'copyreader',
'copyright',
'copyrightable',
'copyrighted',
'copyrighting',
'copywriter',
'coquet',
'coquetry',
'coquette',
'coquetted',
'coquetting',
'coquettish',
'coquettishly',
'coracle',
'coral',
'corbel',
'corbeled',
'cord',
'cordage',
'cordate',
'corder',
'cordial',
'cordiality',
'cordillera',
'cordilleran',
'cording',
'cordite',
'cordlessly',
'cordoba',
'cordon',
'cordoning',
'cordovan',
'corduroy',
'cordwood',
'core',
'coredeemed',
'corelate',
'corer',
'corespondent',
'corgi',
'coriander',
'coring',
'corinthian',
'cork',
'corkage',
'corked',
'corker',
'corkier',
'corkiest',
'corking',
'corkscrew',
'corkscrewed',
'corkscrewing',
'corkwood',
'corky',
'corm',
'cormorant',
'corn',
'cornball',
'cornbread',
'corncake',
'corncob',
'corncrib',
'cornea',
'corneal',
'corned',
'cornel',
'cornell',
'corner',
'cornerback',
'cornering',
'cornerstone',
'cornet',
'cornetist',
'cornfed',
'cornfield',
'cornflower',
'cornhusk',
'cornice',
'corniced',
'corniche',
'cornier',
'corniest',
'cornify',
'cornily',
'corning',
'cornmeal',
'cornrow',
'cornstalk',
'cornstarch',
'cornu',
'cornucopia',
'cornucopian',
'cornucopiate',
'cornute',
'corny',
'corolla',
'corollary',
'corona',
'coronach',
'coronae',
'coronal',
'coronary',
'coronation',
'coroner',
'coronet',
'corotate',
'corp',
'corpora',
'corporal',
'corporate',
'corporately',
'corporation',
'corporative',
'corpore',
'corporeal',
'corporeality',
'corpse',
'corpsman',
'corpulence',
'corpulency',
'corpulent',
'corpulently',
'corpuscle',
'corpuscular',
'corral',
'corralled',
'corralling',
'correality',
'correct',
'correctable',
'corrected',
'correcter',
'correctest',
'correcting',
'correction',
'correctional',
'corrective',
'correctly',
'correl',
'correlatable',
'correlate',
'correlation',
'correlative',
'correspond',
'correspondence',
'correspondent',
'corresponding',
'corrida',
'corridor',
'corrigenda',
'corrigendum',
'corrigibility',
'corrigible',
'corrigibly',
'corroborate',
'corroboration',
'corroborative',
'corroboratory',
'corrode',
'corroder',
'corrodibility',
'corrodible',
'corroding',
'corrosion',
'corrosive',
'corrugate',
'corrugation',
'corrupt',
'corrupted',
'corrupter',
'corruptest',
'corruptibility',
'corruptible',
'corruptibly',
'corrupting',
'corruption',
'corruptionist',
'corruptive',
'corruptly',
'corsage',
'corsair',
'corse',
'corselet',
'corset',
'corseted',
'corseting',
'corslet',
'cortege',
'cortex',
'cortical',
'cortin',
'cortisone',
'corundum',
'coruscate',
'coruscation',
'coruscative',
'corvee',
'corvet',
'corvette',
'corvine',
'coryza',
'coryzal',
'cosec',
'cosecant',
'coset',
'cosey',
'cosh',
'coshed',
'cosher',
'coshing',
'cosie',
'cosier',
'cosiest',
'cosign',
'cosignatory',
'cosigned',
'cosigner',
'cosigning',
'cosily',
'cosine',
'cosmetic',
'cosmetician',
'cosmetologist',
'cosmetology',
'cosmic',
'cosmical',
'cosmism',
'cosmist',
'cosmo',
'cosmochemical',
'cosmochemistry',
'cosmogonic',
'cosmogonist',
'cosmogony',
'cosmological',
'cosmologist',
'cosmology',
'cosmonaut',
'cosmopolitan',
'cosmopolitanism',
'cosponsor',
'cosponsoring',
'cosponsorship',
'cossack',
'cosset',
'cosseted',
'cosseting',
'cost',
'costar',
'costard',
'costarring',
'costed',
'coster',
'costing',
'costive',
'costlier',
'costliest',
'costly',
'costume',
'costumed',
'costumer',
'costumey',
'costumier',
'costuming',
'cosy',
'cot',
'cotan',
'cotangent',
'cote',
'coted',
'coterie',
'cotillion',
'cotillon',
'cotta',
'cottage',
'cottager',
'cottagey',
'cotter',
'cotton',
'cottoning',
'cottonmouth',
'cottonseed',
'cottontail',
'cottonwood',
'cottony',
'cotyledon',
'cotyledonal',
'cotyledonary',
'couch',
'couchant',
'couchantly',
'couched',
'coucher',
'couching',
'cougar',
'cough',
'coughed',
'cougher',
'coughing',
'could',
'couldest',
'couldst',
'coulee',
'coulomb',
'coulter',
'council',
'councillor',
'councillorship',
'councilman',
'councilor',
'councilwoman',
'counsel',
'counselable',
'counseled',
'counselee',
'counseling',
'counsellable',
'counselled',
'counselling',
'counsellor',
'counselor',
'count',
'countability',
'countable',
'countdown',
'counted',
'countenance',
'countenanced',
'countenancing',
'counter',
'counteract',
'counteracted',
'counteracting',
'counteraction',
'counteractive',
'counterattack',
'counterattacking',
'counterbalance',
'counterbalanced',
'counterbalancing',
'counterblow',
'counterclaim',
'counterclaimed',
'counterclaiming',
'counterclassification',
'counterclockwise',
'counterculture',
'countercurrent',
'counterespionage',
'counterfeit',
'counterfeited',
'counterfeiter',
'counterfeiting',
'counterfeitly',
'countering',
'counterinsurgency',
'counterinsurgent',
'counterintelligence',
'countermaid',
'counterman',
'countermand',
'countermanding',
'countermeasure',
'counteroffensive',
'counteroffer',
'counteropening',
'counterpane',
'counterpart',
'counterphobic',
'counterplea',
'counterplot',
'counterplotted',
'counterplotting',
'counterpoint',
'counterpointed',
'counterpointing',
'counterpoise',
'counterpoised',
'counterpoising',
'counterproductive',
'counterrevolution',
'counterrevolutionary',
'countersank',
'countershock',
'countersign',
'countersignature',
'countersigned',
'countersigning',
'countersink',
'countersinking',
'counterspy',
'countersunk',
'countertenor',
'countervail',
'countervailed',
'countervailing',
'counterweight',
'countian',
'counting',
'countrified',
'country',
'countryman',
'countryside',
'countrywide',
'countrywoman',
'county',
'coup',
'coupe',
'couped',
'couping',
'couple',
'coupled',
'coupler',
'couplet',
'coupling',
'coupon',
'courage',
'courageously',
'courant',
'courante',
'courier',
'course',
'coursed',
'courser',
'coursing',
'court',
'courted',
'courteously',
'courter',
'courtesan',
'courtesied',
'courtesy',
'courthouse',
'courtier',
'courting',
'courtlier',
'courtliest',
'courtly',
'courtroom',
'courtship',
'courtyard',
'cousin',
'cousinly',
'cousinry',
'couth',
'couther',
'couthest',
'couthier',
'couture',
'couturier',
'couturiere',
'covalence',
'covalent',
'covalently',
'cove',
'coved',
'coven',
'covenant',
'covenanted',
'covenantee',
'covenanting',
'cover',
'coverage',
'coverall',
'coverer',
'covering',
'coverlet',
'coverlid',
'coverslip',
'covert',
'covertly',
'coverture',
'coverup',
'covet',
'coveted',
'coveter',
'coveting',
'covetously',
'covey',
'coving',
'cow',
'coward',
'cowardice',
'cowardly',
'cowbane',
'cowbell',
'cowbird',
'cowboy',
'cowcatcher',
'cowed',
'cower',
'cowering',
'cowfish',
'cowgirl',
'cowhand',
'cowherb',
'cowherd',
'cowhide',
'cowier',
'cowiest',
'cowing',
'cowkine',
'cowl',
'cowled',
'cowlick',
'cowling',
'cowman',
'coworker',
'cowpat',
'cowpea',
'cowpoke',
'cowpox',
'cowpuncher',
'cowrie',
'cowry',
'cowshed',
'cowskin',
'cowslip',
'coxcomb',
'coxswain',
'coxwain',
'coxwaining',
'coy',
'coyer',
'coyest',
'coyish',
'coyly',
'coyote',
'coypu',
'cozen',
'cozenage',
'cozened',
'cozener',
'cozening',
'cozey',
'cozie',
'cozier',
'coziest',
'cozily',
'cozy',
'cpu',
'craal',
'crab',
'crabapple',
'crabbed',
'crabber',
'crabbier',
'crabbiest',
'crabbily',
'crabbing',
'crabby',
'crabwise',
'crack',
'crackdown',
'cracker',
'crackerjack',
'cracking',
'crackle',
'crackled',
'cracklier',
'crackliest',
'crackling',
'crackly',
'cracknel',
'crackpot',
'cracksman',
'crackup',
'cracky',
'cradle',
'cradled',
'cradler',
'cradlesong',
'cradling',
'craft',
'crafted',
'craftier',
'craftiest',
'craftily',
'crafting',
'craftsman',
'craftsmanly',
'craftsmanship',
'crafty',
'crag',
'craggier',
'craggiest',
'craggily',
'craggy',
'cragsman',
'cram',
'crammed',
'crammer',
'cramming',
'cramp',
'cramped',
'cramping',
'crampon',
'cranberry',
'cranched',
'cranching',
'crane',
'craned',
'crania',
'cranial',
'craniate',
'craning',
'craniofacial',
'cranium',
'crank',
'crankcase',
'cranked',
'cranker',
'crankest',
'crankier',
'crankiest',
'crankily',
'cranking',
'crankpin',
'crankshaft',
'cranky',
'crannied',
'cranny',
'crap',
'crape',
'craped',
'craping',
'crapper',
'crappie',
'crappier',
'crappiest',
'crapping',
'crappy',
'crapshooter',
'crapulence',
'crapulent',
'crash',
'crashed',
'crasher',
'crashing',
'crasser',
'crassest',
'crassly',
'crate',
'crater',
'cratering',
'craton',
'cravat',
'crave',
'craved',
'craven',
'cravened',
'cravenly',
'craver',
'craving',
'craw',
'crawdad',
'crawfish',
'crawfished',
'crawl',
'crawled',
'crawler',
'crawlier',
'crawliest',
'crawling',
'crawlspace',
'crawlway',
'crawly',
'crayfish',
'crayon',
'crayoning',
'crayonist',
'craze',
'crazed',
'crazier',
'craziest',
'crazily',
'crazing',
'crazy',
'creak',
'creaked',
'creakier',
'creakiest',
'creakily',
'creaking',
'creaky',
'cream',
'creamed',
'creamer',
'creamery',
'creamier',
'creamiest',
'creamily',
'creaming',
'creamy',
'crease',
'creased',
'creaser',
'creasier',
'creasiest',
'creasing',
'creasy',
'create',
'creation',
'creative',
'creativity',
'creature',
'creche',
'credence',
'credential',
'credentialed',
'credenza',
'credibility',
'credible',
'credibly',
'credit',
'creditability',
'creditable',
'creditably',
'credited',
'crediting',
'credo',
'credulity',
'credulously',
'cree',
'creed',
'creedal',
'creek',
'creel',
'creep',
'creepage',
'creeper',
'creepie',
'creepier',
'creepiest',
'creepily',
'creeping',
'creepy',
'cremate',
'cremation',
'crematoria',
'crematorium',
'crematory',
'creme',
'crenate',
'crenation',
'crenel',
'crenelate',
'crenelation',
'creneled',
'creole',
'creosote',
'creosoted',
'creosoting',
'crepe',
'creped',
'crepey',
'crepier',
'creping',
'crepitant',
'crepitation',
'crept',
'crepuscular',
'crepy',
'crescendo',
'crescent',
'crescentic',
'cresset',
'crest',
'crestal',
'crested',
'crestfallen',
'crestfallenly',
'cresting',
'crete',
'cretic',
'cretin',
'cretinism',
'cretinize',
'cretinized',
'cretinizing',
'cretonne',
'crevasse',
'crevassing',
'crevice',
'creviced',
'crew',
'crewcut',
'crewed',
'crewel',
'crewelwork',
'crewing',
'crewman',
'crib',
'cribbage',
'cribbed',
'cribber',
'cribbing',
'cribwork',
'crick',
'cricket',
'cricketer',
'cricketing',
'cricking',
'cried',
'crier',
'crime',
'crimea',
'crimean',
'criminal',
'criminality',
'criminologic',
'criminological',
'criminologist',
'criminology',
'crimp',
'crimped',
'crimper',
'crimpier',
'crimpiest',
'crimping',
'crimpy',
'crimson',
'crimsoning',
'cringe',
'cringer',
'cringing',
'crinkle',
'crinkled',
'crinklier',
'crinkliest',
'crinkling',
'crinkly',
'crinoline',
'cripple',
'crippled',
'crippler',
'crippling',
'crisic',
'crisp',
'crisped',
'crispen',
'crispened',
'crispening',
'crisper',
'crispest',
'crispier',
'crispiest',
'crispily',
'crisping',
'crisply',
'crispy',
'crisscrossed',
'crisscrossing',
'criteria',
'criterion',
'critic',
'critical',
'criticality',
'criticism',
'criticizable',
'criticize',
'criticized',
'criticizer',
'criticizing',
'critique',
'critiqued',
'critiquing',
'critter',
'crittur',
'croak',
'croaked',
'croaker',
'croakier',
'croakiest',
'croakily',
'croaking',
'croaky',
'crochet',
'crocheted',
'crocheter',
'crocheting',
'croci',
'crock',
'crockery',
'crocket',
'crocking',
'crocodile',
'croft',
'crofter',
'croissant',
'cromwell',
'cromwellian',
'crone',
'crony',
'cronyism',
'crook',
'crooked',
'crookeder',
'crookedest',
'crookery',
'crooking',
'crookneck',
'croon',
'crooner',
'crooning',
'crop',
'cropland',
'cropper',
'cropping',
'croquet',
'croqueted',
'croqueting',
'croquette',
'crosby',
'crosier',
'crossability',
'crossarm',
'crossbar',
'crossbeam',
'crossbow',
'crossbreed',
'crossbreeding',
'crosscurrent',
'crosscut',
'crosscutting',
'crosse',
'crossed',
'crosser',
'crossest',
'crosshatch',
'crosshatched',
'crosshatching',
'crossing',
'crosslet',
'crossly',
'crossover',
'crosspatch',
'crosspiece',
'crossroad',
'crosstalk',
'crosstie',
'crosstown',
'crosswalk',
'crossway',
'crosswise',
'crossword',
'crotch',
'crotched',
'crotchet',
'crotchety',
'crouch',
'crouched',
'crouching',
'croup',
'croupier',
'croupiest',
'croupily',
'croupy',
'crouton',
'crow',
'crowbar',
'crowd',
'crowder',
'crowding',
'crowdy',
'crowed',
'crower',
'crowfeet',
'crowfoot',
'crowing',
'crown',
'crowned',
'crowner',
'crowning',
'crozier',
'crucial',
'cruciate',
'crucible',
'crucifer',
'crucified',
'crucifix',
'crucifixion',
'cruciform',
'crucify',
'crucifying',
'crud',
'crudding',
'cruddy',
'crude',
'crudely',
'cruder',
'crudest',
'crudity',
'cruel',
'crueler',
'cruelest',
'crueller',
'cruellest',
'cruelly',
'cruelty',
'cruet',
'cruise',
'cruised',
'cruiser',
'cruising',
'cruller',
'crumb',
'crumbed',
'crumber',
'crumbier',
'crumbiest',
'crumbing',
'crumble',
'crumbled',
'crumblier',
'crumbliest',
'crumbling',
'crumbly',
'crumby',
'crummie',
'crummier',
'crummiest',
'crummy',
'crump',
'crumped',
'crumpet',
'crumping',
'crumple',
'crumpled',
'crumpling',
'crumply',
'crunch',
'crunched',
'cruncher',
'crunchier',
'crunchiest',
'crunching',
'crunchy',
'crupper',
'crusade',
'crusader',
'crusading',
'cruse',
'crush',
'crushable',
'crushed',
'crusher',
'crushing',
'crushproof',
'crust',
'crustacea',
'crustacean',
'crustal',
'crusted',
'crustier',
'crustiest',
'crustily',
'crusting',
'crusty',
'crutch',
'crutched',
'crux',
'cruzeiro',
'cry',
'crybaby',
'crying',
'cryobiology',
'cryogen',
'cryogenic',
'cryogeny',
'cryolite',
'cryonic',
'cryostat',
'cryosurgeon',
'cryosurgery',
'cryosurgical',
'cryotherapy',
'cryotron',
'crypt',
'cryptal',
'cryptic',
'crypto',
'cryptogam',
'cryptogram',
'cryptograph',
'cryptographer',
'cryptographic',
'cryptography',
'crystal',
'crystalize',
'crystalline',
'crystallization',
'crystallize',
'crystallized',
'crystallizer',
'crystallizing',
'crystallogram',
'crystallographer',
'crystallographic',
'crystallography',
'crystalloid',
'crystalloidal',
'ctrl',
'cuba',
'cubage',
'cuban',
'cubature',
'cubbish',
'cubby',
'cubbyhole',
'cube',
'cubed',
'cuber',
'cubic',
'cubical',
'cubicity',
'cubicle',
'cubicly',
'cubiform',
'cubing',
'cubism',
'cubist',
'cubistic',
'cubit',
'cubital',
'cuboid',
'cuboidal',
'cuckold',
'cuckolding',
'cuckoldry',
'cuckoo',
'cuckooed',
'cuckooing',
'cucumber',
'cucurbit',
'cud',
'cuddle',
'cuddled',
'cuddlesome',
'cuddlier',
'cuddliest',
'cuddling',
'cuddly',
'cuddy',
'cudgel',
'cudgeled',
'cudgeler',
'cudgeling',
'cudgelled',
'cudgelling',
'cudweed',
'cue',
'cued',
'cueing',
'cuesta',
'cuff',
'cuffed',
'cuffing',
'cuing',
'cuirassed',
'cuirassing',
'cuish',
'cuisine',
'cuke',
'culinary',
'cull',
'culled',
'cullender',
'culler',
'cullet',
'cullied',
'culling',
'cully',
'culminate',
'culmination',
'culotte',
'culpa',
'culpability',
'culpable',
'culpably',
'culpae',
'culprit',
'cult',
'cultic',
'cultigen',
'cultism',
'cultist',
'cultivable',
'cultivar',
'cultivatable',
'cultivate',
'cultivation',
'cultural',
'culture',
'culturing',
'culver',
'culvert',
'cumber',
'cumberer',
'cumbering',
'cumbersome',
'cumbrously',
'cumin',
'cummerbund',
'cummin',
'cumquat',
'cumshaw',
'cumulate',
'cumulative',
'cumuli',
'cuneate',
'cuneiform',
'cuniform',
'cunner',
'cunni',
'cunning',
'cunninger',
'cunningest',
'cup',
'cupbearer',
'cupboard',
'cupcake',
'cupful',
'cupholder',
'cupid',
'cupidity',
'cupola',
'cupolaed',
'cuppa',
'cupper',
'cuppier',
'cupping',
'cuppy',
'cupric',
'cuprite',
'cupronickel',
'cupsful',
'curability',
'curable',
'curably',
'curacao',
'curacy',
'curara',
'curare',
'curari',
'curarization',
'curate',
'curative',
'curatorial',
'curatorship',
'curatrix',
'curb',
'curbable',
'curbed',
'curber',
'curbing',
'curbside',
'curbstone',
'curd',
'curdier',
'curding',
'curdle',
'curdled',
'curdler',
'curdling',
'curdy',
'cure',
'curer',
'curettage',
'curette',
'curetted',
'curetting',
'curfew',
'curfewed',
'curfewing',
'curia',
'curiae',
'curial',
'curie',
'curing',
'curio',
'curiosa',
'curiosity',
'curiouser',
'curiousest',
'curiously',
'curium',
'curl',
'curled',
'curler',
'curlew',
'curlicue',
'curlicued',
'curlicuing',
'curlier',
'curliest',
'curlily',
'curling',
'curly',
'curlycue',
'curmudgeon',
'curran',
'currant',
'currency',
'current',
'currently',
'curricula',
'curricular',
'curriculum',
'currie',
'curried',
'currier',
'curriery',
'curring',
'currish',
'curry',
'currycomb',
'currycombed',
'currycombing',
'currying',
'curse',
'cursed',
'curseder',
'cursedest',
'curser',
'cursing',
'cursive',
'cursor',
'cursorily',
'cursory',
'curst',
'curt',
'curtail',
'curtailed',
'curtailing',
'curtailment',
'curtain',
'curtained',
'curtaining',
'curter',
'curtest',
'curtesy',
'curtly',
'curtsey',
'curtseyed',
'curtseying',
'curtsied',
'curtsy',
'curtsying',
'curvaceously',
'curvature',
'curve',
'curved',
'curvet',
'curveted',
'curvetting',
'curvey',
'curvier',
'curviest',
'curving',
'curvy',
'cushier',
'cushiest',
'cushily',
'cushing',
'cushion',
'cushioning',
'cushiony',
'cushy',
'cusp',
'cusped',
'cuspid',
'cuspidal',
'cuspidor',
'cussed',
'cusser',
'cussing',
'cussword',
'custard',
'custodial',
'custodian',
'custodianship',
'custody',
'custom',
'customarily',
'customary',
'customer',
'customhouse',
'customization',
'customize',
'customized',
'customizing',
'customshouse',
'cut',
'cutaneously',
'cutaway',
'cutback',
'cutdown',
'cute',
'cutely',
'cuter',
'cutesier',
'cutesiest',
'cutest',
'cutesy',
'cutey',
'cuticle',
'cuticular',
'cutie',
'cutin',
'cutinizing',
'cutler',
'cutlery',
'cutlet',
'cutoff',
'cutout',
'cutpurse',
'cuttable',
'cutter',
'cutthroat',
'cutting',
'cuttle',
'cuttlebone',
'cuttled',
'cuttlefish',
'cuttling',
'cutty',
'cutup',
'cutworm',
'cyan',
'cyanic',
'cyanide',
'cyanin',
'cyanitic',
'cyanoacrylate',
'cyanogen',
'cyanosed',
'cyanotic',
'cybercultural',
'cyberculture',
'cybernation',
'cybernetic',
'cybernetical',
'cybernetician',
'cyberneticist',
'cyborg',
'cycad',
'cyclamate',
'cyclazocine',
'cycle',
'cyclecar',
'cycled',
'cycler',
'cyclic',
'cyclical',
'cyclicly',
'cycling',
'cyclist',
'cyclized',
'cyclizing',
'cyclo',
'cycloid',
'cycloidal',
'cyclometer',
'cyclonal',
'cyclone',
'cyclonic',
'cyclopedia',
'cyclotron',
'cygnet',
'cylinder',
'cylindrical',
'cymbal',
'cymbaler',
'cymbalist',
'cymbling',
'cyme',
'cymose',
'cynic',
'cynical',
'cynicism',
'cynosure',
'cypher',
'cyphering',
'cyprian',
'cypriot',
'cypriote',
'cyst',
'cystic',
'cytologic',
'cytological',
'cytologist',
'cytology',
'cytoplasm',
'cytoplasmic',
'cytosine',
'czar',
'czardom',
'czarevna',
'czarina',
'czarism',
'czarist',
'czaritza',
'czech',
'czechoslovak',
'czechoslovakia',
'czechoslovakian',
'dab',
'dabbed',
'dabbing',
'dabble',
'dabbled',
'dabbler',
'dabbling',
'dace',
'dacha',
'dachshund',
'dacoit',
'dacron',
'dactyl',
'dactylic',
'dad',
'dada',
'dadaism',
'dadaist',
'daddling',
'daddy',
'dado',
'dadoed',
'dadoing',
'daemon',
'daemonic',
'daffier',
'daffiest',
'daffodil',
'daffy',
'daft',
'dafter',
'daftest',
'daftly',
'dagger',
'dago',
'dagoba',
'daguerreotype',
'dahlia',
'dahomey',
'daily',
'daimon',
'daimonic',
'daimyo',
'daintier',
'daintiest',
'daintily',
'dainty',
'daiquiri',
'dairy',
'dairying',
'dairymaid',
'dairyman',
'daisied',
'daisy',
'dakoit',
'dakota',
'dakotan',
'dale',
'dalesman',
'daleth',
'dalliance',
'dallied',
'dallier',
'dallying',
'dalmatian',
'dam',
'damage',
'damageable',
'damager',
'damaging',
'damascene',
'damascened',
'damask',
'damasked',
'dame',
'dammed',
'dammer',
'damming',
'damn',
'damnability',
'damnable',
'damnably',
'damnation',
'damndest',
'damned',
'damneder',
'damnedest',
'damner',
'damnification',
'damnify',
'damnifying',
'damning',
'damnit',
'damosel',
'damp',
'damped',
'dampen',
'dampened',
'dampener',
'dampening',
'damper',
'dampest',
'damping',
'dampish',
'damply',
'damsel',
'damselfly',
'damson',
'dan',
'dana',
'dance',
'danced',
'dancer',
'dancing',
'dandelion',
'dander',
'dandier',
'dandiest',
'dandification',
'dandified',
'dandify',
'dandifying',
'dandily',
'dandle',
'dandled',
'dandler',
'dandling',
'dandruff',
'dandy',
'dandyish',
'dandyism',
'dane',
'danegeld',
'daneweed',
'danewort',
'dang',
'danger',
'dangerously',
'danging',
'dangle',
'dangled',
'dangler',
'dangling',
'daniel',
'danish',
'dank',
'danker',
'dankest',
'dankly',
'danseur',
'danseuse',
'dante',
'danube',
'daphnia',
'dapper',
'dapperer',
'dapperest',
'dapperly',
'dapping',
'dapple',
'dappled',
'dappling',
'dare',
'daredevil',
'dareful',
'darer',
'daresay',
'daring',
'dark',
'darked',
'darken',
'darkened',
'darkener',
'darkening',
'darker',
'darkest',
'darkey',
'darkie',
'darking',
'darkish',
'darkle',
'darkled',
'darklier',
'darkliest',
'darkling',
'darkly',
'darkroom',
'darksome',
'darky',
'darling',
'darn',
'darndest',
'darned',
'darneder',
'darnedest',
'darnel',
'darner',
'darning',
'dart',
'darted',
'darter',
'darting',
'darvon',
'darwin',
'darwinian',
'darwinism',
'darwinist',
'darwinite',
'dash',
'dashboard',
'dashed',
'dasher',
'dashier',
'dashiki',
'dashing',
'dashpot',
'dashy',
'dastard',
'dastardly',
'data',
'database',
'datable',
'dataflow',
'datamation',
'datary',
'datcha',
'date',
'dateable',
'dateline',
'datelined',
'datelining',
'dater',
'dative',
'datsun',
'datum',
'datura',
'daub',
'daubed',
'dauber',
'daubery',
'daubier',
'daubing',
'dauby',
'daughter',
'daughterly',
'daunt',
'daunted',
'daunter',
'daunting',
'dauntlessly',
'dauphin',
'dauphine',
'dave',
'davenport',
'david',
'davit',
'daw',
'dawdle',
'dawdled',
'dawdler',
'dawdling',
'dawn',
'dawned',
'dawning',
'day',
'daybed',
'daybook',
'daybreak',
'daydream',
'daydreamed',
'daydreamer',
'daydreaming',
'daydreamt',
'dayflower',
'dayfly',
'dayglow',
'daylight',
'daylighted',
'daylily',
'daylit',
'daylong',
'daymare',
'dayroom',
'dayside',
'daystar',
'daytime',
'dayton',
'daze',
'dazed',
'dazing',
'dazzle',
'dazzled',
'dazzler',
'dazzling',
'deaccession',
'deaccessioning',
'deacidification',
'deacidified',
'deacidifying',
'deacon',
'deaconing',
'deaconry',
'deactivate',
'deactivation',
'dead',
'deadbeat',
'deaden',
'deadened',
'deadener',
'deadening',
'deader',
'deadest',
'deadeye',
'deadfall',
'deadhead',
'deadlier',
'deadliest',
'deadline',
'deadlock',
'deadlocking',
'deadly',
'deadman',
'deadpan',
'deadpanned',
'deadweight',
'deadwood',
'deaf',
'deafen',
'deafened',
'deafening',
'deafer',
'deafest',
'deafish',
'deafly',
'deair',
'deal',
'dealcoholization',
'dealer',
'dealership',
'dealing',
'dealt',
'dean',
'deanery',
'deaning',
'deanship',
'dear',
'dearer',
'dearest',
'dearie',
'dearly',
'dearth',
'deary',
'deash',
'death',
'deathbed',
'deathblow',
'deathcup',
'deathful',
'deathlessly',
'deathlike',
'deathly',
'deathrate',
'deathtrap',
'deathwatch',
'deathy',
'deb',
'debacle',
'debar',
'debark',
'debarkation',
'debarked',
'debarking',
'debarment',
'debarring',
'debase',
'debased',
'debasement',
'debaser',
'debasing',
'debatable',
'debatably',
'debate',
'debateable',
'debater',
'debauch',
'debauched',
'debauchee',
'debaucher',
'debauchery',
'debauching',
'debbie',
'debenture',
'debilitant',
'debilitate',
'debilitation',
'debilitative',
'debility',
'debit',
'debitable',
'debited',
'debiting',
'debonair',
'debonairly',
'debone',
'debouch',
'debouche',
'debouched',
'debouching',
'debrief',
'debriefed',
'debriefing',
'debruising',
'debt',
'debtee',
'debug',
'debugger',
'debugging',
'debunk',
'debunked',
'debunker',
'debunking',
'debussy',
'debut',
'debutant',
'debutante',
'debuted',
'debuting',
'dec',
'decade',
'decadence',
'decadent',
'decadently',
'decaffeinate',
'decagon',
'decagram',
'decahedra',
'decahedron',
'decal',
'decalcification',
'decalcified',
'decalcify',
'decalcifying',
'decalcomania',
'decameter',
'decamp',
'decamped',
'decamping',
'decampment',
'decant',
'decanted',
'decanter',
'decanting',
'decapitate',
'decapitation',
'decapod',
'decapsulate',
'decasyllabic',
'decasyllable',
'decathlon',
'decay',
'decayable',
'decayed',
'decayer',
'decaying',
'decease',
'deceased',
'deceasing',
'decedent',
'deceit',
'deceitful',
'deceitfully',
'deceivable',
'deceive',
'deceived',
'deceiver',
'deceiving',
'decelerate',
'deceleration',
'december',
'decemvir',
'decenary',
'decency',
'decennia',
'decennial',
'decent',
'decenter',
'decentest',
'decently',
'decentralism',
'decentralist',
'decentralization',
'decentralize',
'decentralized',
'decentralizing',
'decentring',
'deception',
'deceptive',
'decertification',
'decertified',
'decertifying',
'dechlorinate',
'dechlorination',
'deciare',
'decibel',
'decidable',
'decide',
'decider',
'deciding',
'decidua',
'decidual',
'deciduously',
'decigram',
'decile',
'deciliter',
'decimal',
'decimalization',
'decimalize',
'decimalized',
'decimalizing',
'decimate',
'decimation',
'decimeter',
'decipher',
'decipherable',
'deciphering',
'decision',
'decisional',
'decisive',
'decistere',
'deck',
'decker',
'deckhand',
'decking',
'deckle',
'declaim',
'declaimed',
'declaimer',
'declaiming',
'declamation',
'declamatory',
'declarable',
'declarant',
'declaration',
'declarative',
'declaratory',
'declare',
'declarer',
'declaring',
'declasse',
'declassification',
'declassified',
'declassify',
'declassifying',
'declassing',
'declension',
'declinable',
'declination',
'declinational',
'declinatory',
'declinature',
'decline',
'declined',
'decliner',
'declining',
'declivity',
'deco',
'decoct',
'decocted',
'decocting',
'decoction',
'decode',
'decoder',
'decoding',
'decollete',
'decolonization',
'decolonize',
'decolonized',
'decolonizing',
'decommission',
'decommissioning',
'decompensate',
'decompensation',
'decomposability',
'decomposable',
'decompose',
'decomposed',
'decomposer',
'decomposing',
'decomposition',
'decompressed',
'decompressing',
'decompression',
'decompressive',
'decongest',
'decongestant',
'decongested',
'decongesting',
'decongestion',
'decongestive',
'decontaminate',
'decontamination',
'decontrol',
'decontrolled',
'decontrolling',
'decor',
'decorate',
'decoration',
'decorative',
'decorously',
'decorticate',
'decorum',
'decoupage',
'decouple',
'decoy',
'decoyed',
'decoyer',
'decoying',
'decrease',
'decreased',
'decreasing',
'decree',
'decreed',
'decreeing',
'decreer',
'decrement',
'decrepit',
'decrepitly',
'decrepitude',
'decrescendo',
'decrial',
'decried',
'decrier',
'decriminalization',
'decriminalize',
'decriminalized',
'decriminalizing',
'decry',
'decrying',
'decrypt',
'decrypted',
'decrypting',
'decryption',
'dedicate',
'dedicatee',
'dedication',
'dedicational',
'dedicatory',
'deduce',
'deduced',
'deducible',
'deducing',
'deduct',
'deducted',
'deductibility',
'deductible',
'deducting',
'deduction',
'deductive',
'deed',
'deedbox',
'deedier',
'deeding',
'deedy',
'deejay',
'deem',
'deemed',
'deeming',
'deemphasize',
'deemphasized',
'deemphasizing',
'deep',
'deepen',
'deepened',
'deepener',
'deepening',
'deeper',
'deepest',
'deeply',
'deer',
'deerfly',
'deerskin',
'deerstalker',
'deerweed',
'deeryard',
'deescalate',
'deescalation',
'deface',
'defaced',
'defacement',
'defacer',
'defacing',
'defacto',
'defalcate',
'defalcation',
'defamation',
'defamatory',
'defame',
'defamed',
'defamer',
'defaming',
'defat',
'defatted',
'default',
'defaulted',
'defaulter',
'defaulting',
'defeat',
'defeater',
'defeatism',
'defeatist',
'defecate',
'defecation',
'defect',
'defected',
'defecter',
'defecting',
'defection',
'defective',
'defeminize',
'defeminized',
'defeminizing',
'defence',
'defend',
'defendable',
'defendant',
'defender',
'defending',
'defense',
'defensed',
'defenselessly',
'defensibility',
'defensible',
'defensibly',
'defensing',
'defensive',
'defer',
'deference',
'deferent',
'deferential',
'deferment',
'deferrable',
'deferral',
'deferrer',
'deferring',
'defiance',
'defiant',
'defiantly',
'defibrillate',
'deficiency',
'deficient',
'deficiently',
'deficit',
'defied',
'defier',
'defile',
'defiled',
'defilement',
'defiler',
'defiling',
'definable',
'definably',
'define',
'defined',
'definement',
'definer',
'defining',
'definite',
'definitely',
'definition',
'definitive',
'deflagrate',
'deflagration',
'deflate',
'deflation',
'deflationary',
'deflea',
'deflect',
'deflectable',
'deflected',
'deflecting',
'deflection',
'deflective',
'defloration',
'deflorescence',
'deflower',
'deflowering',
'defoam',
'defoamed',
'defoamer',
'defog',
'defogger',
'defogging',
'defoliant',
'defoliate',
'defoliation',
'deforest',
'deforestation',
'deforested',
'deforesting',
'deform',
'deformable',
'deformation',
'deformative',
'deformed',
'deformer',
'deforming',
'deformity',
'defraud',
'defraudation',
'defrauder',
'defrauding',
'defray',
'defrayable',
'defrayal',
'defrayed',
'defrayer',
'defraying',
'defrayment',
'defrock',
'defrocking',
'defrost',
'defrosted',
'defroster',
'defrosting',
'deft',
'defter',
'deftest',
'deftly',
'defunct',
'defunctive',
'defuse',
'defused',
'defusing',
'defuze',
'defuzed',
'defuzing',
'defy',
'defying',
'degassed',
'degassing',
'degaussed',
'degaussing',
'degeneracy',
'degenerate',
'degenerately',
'degeneration',
'degenerative',
'degerm',
'degermed',
'degradable',
'degradation',
'degrade',
'degrader',
'degrading',
'degrease',
'degreased',
'degreasing',
'degree',
'degreed',
'degum',
'degummed',
'degumming',
'dehorn',
'dehorned',
'dehorner',
'dehorning',
'dehumanization',
'dehumanize',
'dehumanized',
'dehumanizing',
'dehumidification',
'dehumidified',
'dehumidifier',
'dehumidify',
'dehumidifying',
'dehydrate',
'dehydration',
'dehydrogenate',
'dehydrogenation',
'dehypnotize',
'dehypnotized',
'dehypnotizing',
'deice',
'deiced',
'deicer',
'deicidal',
'deicide',
'deicing',
'deific',
'deifical',
'deification',
'deified',
'deifier',
'deiform',
'deify',
'deifying',
'deign',
'deigned',
'deigning',
'deionization',
'deionize',
'deionized',
'deionizing',
'deism',
'deist',
'deistic',
'deity',
'deja',
'deject',
'dejected',
'dejecting',
'dejection',
'dekagram',
'dekaliter',
'dekameter',
'delaware',
'delawarean',
'delay',
'delayed',
'delayer',
'delaying',
'dele',
'delead',
'delectable',
'delectably',
'delectation',
'deled',
'delegacy',
'delegalizing',
'delegant',
'delegate',
'delegatee',
'delegati',
'delegation',
'delegatory',
'deleing',
'delete',
'deleted',
'deleteriously',
'deleting',
'deletion',
'delft',
'delhi',
'deli',
'deliberate',
'deliberately',
'deliberation',
'deliberative',
'delicacy',
'delicate',
'delicately',
'delicatessen',
'deliciously',
'delict',
'delicti',
'delicto',
'delight',
'delighted',
'delightful',
'delightfully',
'delighting',
'delime',
'deliming',
'delimit',
'delimitation',
'delimitative',
'delimited',
'delimiter',
'delimiting',
'delineate',
'delineation',
'delineative',
'delinquency',
'delinquent',
'delinquently',
'deliquesce',
'deliquesced',
'deliquescence',
'deliquescent',
'deliquescing',
'deliria',
'deliriant',
'delirifacient',
'deliriously',
'delirium',
'delist',
'deliver',
'deliverable',
'deliverance',
'deliverer',
'delivering',
'delivery',
'dell',
'delly',
'delouse',
'deloused',
'delousing',
'delphinia',
'delphinium',
'delta',
'deltaic',
'deltic',
'deltoid',
'delude',
'deluder',
'deluding',
'deluge',
'deluging',
'delusion',
'delusional',
'delusionary',
'delusionist',
'delusive',
'delusory',
'deluxe',
'delve',
'delved',
'delver',
'delving',
'demagnetization',
'demagnetize',
'demagnetized',
'demagnetizing',
'demagnification',
'demagog',
'demagogic',
'demagogue',
'demagoguery',
'demagogy',
'demand',
'demandable',
'demander',
'demanding',
'demarcate',
'demarcation',
'demarche',
'demarking',
'demasculinize',
'demasculinized',
'demasculinizing',
'demean',
'demeaned',
'demeaning',
'demeanor',
'dement',
'demented',
'dementia',
'dementing',
'demerit',
'demerited',
'demeriting',
'demesne',
'demeter',
'demigod',
'demijohn',
'demilitarization',
'demilitarize',
'demilitarized',
'demilitarizing',
'demimondain',
'demimondaine',
'demimonde',
'demineralization',
'demineralize',
'demineralized',
'demineralizing',
'demise',
'demised',
'demising',
'demit',
'demitasse',
'demitted',
'demiurge',
'demo',
'demob',
'demobbed',
'demobbing',
'demobilization',
'demobilize',
'demobilized',
'demobilizing',
'democracy',
'democrat',
'democratic',
'democratical',
'democratism',
'democratization',
'democratize',
'democratized',
'democratizing',
'demode',
'demodulate',
'demodulation',
'demographer',
'demographic',
'demography',
'demoiselle',
'demolish',
'demolished',
'demolisher',
'demolishing',
'demolition',
'demolitionist',
'demon',
'demonetization',
'demonetize',
'demonetized',
'demonetizing',
'demoniac',
'demoniacal',
'demonian',
'demonic',
'demonical',
'demonise',
'demonism',
'demonist',
'demonize',
'demonized',
'demonizing',
'demonology',
'demonstrable',
'demonstrably',
'demonstrandum',
'demonstrate',
'demonstration',
'demonstrational',
'demonstrationist',
'demonstrative',
'demoralization',
'demoralize',
'demoralized',
'demoralizer',
'demoralizing',
'demote',
'demoted',
'demotic',
'demoting',
'demotion',
'demotist',
'demount',
'demountable',
'demounted',
'demounting',
'dempster',
'demulcent',
'demur',
'demure',
'demurely',
'demurer',
'demurest',
'demurrable',
'demurrage',
'demurral',
'demurrer',
'demurring',
'demythologization',
'demythologize',
'demythologized',
'demythologizing',
'den',
'denationalizing',
'denaturant',
'denaturation',
'denature',
'denaturing',
'denazified',
'denazify',
'dendrite',
'dendritic',
'dendroid',
'dendrologic',
'dendrological',
'dendrologist',
'dendrology',
'dengue',
'deniable',
'deniably',
'denial',
'denicotinize',
'denicotinized',
'denicotinizing',
'denied',
'denier',
'denigrate',
'denigration',
'denigratory',
'denim',
'denizen',
'denmark',
'denned',
'denning',
'denominate',
'denomination',
'denominational',
'denotation',
'denotative',
'denote',
'denoted',
'denoting',
'denotive',
'denouement',
'denounce',
'denounced',
'denouncement',
'denouncer',
'denouncing',
'dense',
'densely',
'denser',
'densest',
'densified',
'densify',
'densifying',
'densitometer',
'density',
'dent',
'dental',
'dentate',
'dented',
'dentifrice',
'dentin',
'dentinal',
'dentine',
'denting',
'dentist',
'dentistry',
'dentition',
'denture',
'denuclearization',
'denuclearize',
'denuclearized',
'denuclearizing',
'denudate',
'denudation',
'denude',
'denuder',
'denuding',
'denunciate',
'denunciation',
'denunciatory',
'denver',
'deny',
'denying',
'deodar',
'deodorant',
'deodorize',
'deodorized',
'deodorizer',
'deodorizing',
'deoxidation',
'deoxidization',
'deoxidize',
'deoxidized',
'deoxidizer',
'deoxidizing',
'deoxygenate',
'deoxygenation',
'deoxyribonucleic',
'depart',
'departed',
'departing',
'department',
'departmental',
'departmentalism',
'departmentalization',
'departmentalize',
'departmentalized',
'departmentalizing',
'departure',
'depend',
'dependability',
'dependable',
'dependably',
'dependance',
'dependant',
'dependence',
'dependency',
'dependent',
'dependently',
'depending',
'depersonalize',
'depersonalized',
'depersonalizing',
'depict',
'depicted',
'depicter',
'depicting',
'depiction',
'depilate',
'depilation',
'depilatory',
'deplane',
'deplaned',
'deplaning',
'depletable',
'deplete',
'depleted',
'depleting',
'depletion',
'deplorable',
'deplorably',
'deplore',
'deplorer',
'deploring',
'deploy',
'deployed',
'deploying',
'deployment',
'depolarization',
'depolarize',
'depolarized',
'depolarizer',
'depolarizing',
'depolished',
'depoliticize',
'depoliticized',
'depoliticizing',
'deponent',
'deponing',
'depopulate',
'depopulation',
'deport',
'deportability',
'deportable',
'deportation',
'deported',
'deportee',
'deporting',
'deportment',
'deposable',
'deposal',
'depose',
'deposed',
'deposer',
'deposing',
'deposit',
'deposited',
'depositing',
'deposition',
'depositional',
'depository',
'depot',
'deprave',
'depraved',
'depraver',
'depraving',
'depravity',
'deprecate',
'deprecation',
'deprecative',
'deprecatory',
'depreciable',
'depreciate',
'depreciation',
'depreciative',
'depreciatory',
'depredate',
'depredation',
'depredatory',
'deprehension',
'depressant',
'depressed',
'depressibility',
'depressible',
'depressing',
'depression',
'depressional',
'depressionary',
'depressive',
'depressor',
'deprival',
'deprivation',
'deprive',
'deprived',
'depriver',
'depriving',
'deprogram',
'deprogrammed',
'deprogrammer',
'deprogramming',
'dept',
'depth',
'deputation',
'deputational',
'deputative',
'depute',
'deputed',
'deputing',
'deputize',
'deputized',
'deputizing',
'deputy',
'der',
'derail',
'derailed',
'derailing',
'derailleur',
'derailment',
'derange',
'derangement',
'deranging',
'derat',
'deray',
'derby',
'deregulate',
'deregulation',
'derelict',
'dereliction',
'derestrict',
'deride',
'derider',
'deriding',
'deringer',
'derisible',
'derision',
'derisive',
'derisory',
'derivate',
'derivation',
'derivative',
'derive',
'derived',
'deriver',
'deriving',
'derm',
'derma',
'dermabrasion',
'dermal',
'dermatological',
'dermatologist',
'dermatology',
'dermic',
'dermopathy',
'dernier',
'derogate',
'derogation',
'derogatorily',
'derogatory',
'derrick',
'derriere',
'derringer',
'dervish',
'desalinate',
'desalination',
'desalinization',
'desalinize',
'desalinized',
'desalinizing',
'desalt',
'desalted',
'desalter',
'desalting',
'desand',
'descant',
'descanted',
'descanting',
'descend',
'descendance',
'descendant',
'descendence',
'descendent',
'descending',
'descent',
'describable',
'describe',
'described',
'describer',
'describing',
'descried',
'descrier',
'description',
'descriptive',
'descry',
'descrying',
'desecrate',
'desecration',
'desegregate',
'desegregation',
'deselect',
'deselected',
'deselecting',
'desensitization',
'desensitize',
'desensitized',
'desensitizer',
'desensitizing',
'desert',
'deserted',
'deserter',
'desertic',
'deserting',
'desertion',
'deserve',
'deserved',
'deserver',
'deserving',
'desex',
'desexed',
'desexing',
'desexualization',
'desexualize',
'desexualized',
'desexualizing',
'desiccant',
'desiccate',
'desiccation',
'desiccative',
'desiccatory',
'desiderata',
'desideratum',
'design',
'designate',
'designation',
'designative',
'designed',
'designee',
'designer',
'designing',
'designment',
'desirability',
'desirable',
'desirably',
'desire',
'desireable',
'desirer',
'desiring',
'desist',
'desisted',
'desisting',
'desk',
'deskman',
'desktop',
'desolate',
'desolately',
'desolation',
'desoxyribonucleic',
'despair',
'despairing',
'despatch',
'despatched',
'despatcher',
'despatching',
'desperado',
'desperate',
'desperately',
'desperation',
'despicable',
'despicably',
'despise',
'despised',
'despiser',
'despising',
'despite',
'despited',
'despiteful',
'despitefully',
'despiting',
'despoil',
'despoiled',
'despoiler',
'despoiling',
'despoilment',
'despoliation',
'despond',
'despondence',
'despondency',
'despondent',
'despondently',
'desponding',
'despot',
'despotic',
'despotism',
'dessert',
'destain',
'destaining',
'destination',
'destine',
'destined',
'destining',
'destiny',
'destitute',
'destitutely',
'destitution',
'destressed',
'destrier',
'destroy',
'destroyable',
'destroyed',
'destroyer',
'destroying',
'destruct',
'destructed',
'destructibility',
'destructible',
'destructing',
'destruction',
'destructive',
'desuetude',
'desugar',
'desugaring',
'desultory',
'desynchronizing',
'detach',
'detachability',
'detachable',
'detachably',
'detached',
'detacher',
'detaching',
'detachment',
'detail',
'detailed',
'detailer',
'detailing',
'detain',
'detained',
'detainee',
'detainer',
'detaining',
'detainment',
'detect',
'detectable',
'detectably',
'detected',
'detecter',
'detectible',
'detecting',
'detection',
'detective',
'detent',
'detente',
'detention',
'deter',
'deterge',
'detergent',
'deterger',
'deteriorate',
'deterioration',
'deteriorative',
'determent',
'determinability',
'determinable',
'determinably',
'determinacy',
'determinant',
'determinate',
'determination',
'determinative',
'determine',
'determined',
'determining',
'determinism',
'determinist',
'deterministic',
'deterrence',
'deterrent',
'deterrer',
'deterring',
'detest',
'detestable',
'detestably',
'detestation',
'detested',
'detester',
'detesting',
'dethrone',
'dethronement',
'dethroner',
'dethroning',
'detonable',
'detonate',
'detonation',
'detour',
'detouring',
'detournement',
'detoxication',
'detoxification',
'detoxified',
'detoxifier',
'detoxify',
'detoxifying',
'detract',
'detracted',
'detracting',
'detraction',
'detractive',
'detrain',
'detrained',
'detraining',
'detriment',
'detrimental',
'detrital',
'detroit',
'detumescence',
'detumescent',
'deuce',
'deuced',
'deucing',
'deuterium',
'deuteron',
'deuteronomy',
'deutsche',
'deutschland',
'deux',
'deva',
'devaluate',
'devaluation',
'devalue',
'devalued',
'devaluing',
'devastate',
'devastation',
'devastative',
'devein',
'deveined',
'deveining',
'develop',
'develope',
'developed',
'developer',
'developing',
'development',
'developmental',
'devest',
'deviance',
'deviancy',
'deviant',
'deviate',
'deviation',
'deviational',
'device',
'devil',
'deviled',
'deviling',
'devilish',
'devilishly',
'devilkin',
'devilled',
'devilling',
'devilment',
'devilry',
'deviltry',
'deviously',
'devisable',
'devisal',
'devise',
'devised',
'devisee',
'deviser',
'devising',
'devisor',
'devitalize',
'devitalized',
'devitalizing',
'devoice',
'devoicing',
'devoid',
'devoir',
'devolution',
'devolutionary',
'devolutive',
'devolve',
'devolved',
'devolvement',
'devolving',
'devon',
'devonian',
'devote',
'devoted',
'devotee',
'devoting',
'devotion',
'devotional',
'devour',
'devourer',
'devouring',
'devout',
'devoutly',
'dew',
'dewatering',
'dewax',
'dewaxed',
'dewberry',
'dewclaw',
'dewdrop',
'dewed',
'dewfall',
'dewier',
'dewiest',
'dewily',
'dewing',
'dewlap',
'dewool',
'deworm',
'dewy',
'dexter',
'dexterity',
'dexterously',
'dextral',
'dextrin',
'dextro',
'dextrorotary',
'dextrose',
'dezinc',
'dharma',
'dharmic',
'dhole',
'dhoti',
'dhow',
'dhyana',
'diabetic',
'diablery',
'diabolic',
'diabolical',
'diabolo',
'diacritic',
'diacritical',
'diadem',
'diademed',
'diadic',
'diag',
'diagnosable',
'diagnose',
'diagnoseable',
'diagnosed',
'diagnosing',
'diagnostic',
'diagnostician',
'diagonal',
'diagram',
'diagramed',
'diagraming',
'diagrammable',
'diagrammatic',
'diagrammatical',
'diagrammed',
'diagrammer',
'diagramming',
'diagraph',
'dial',
'dialect',
'dialectal',
'dialectic',
'dialectical',
'dialed',
'dialer',
'dialing',
'dialist',
'diallage',
'dialled',
'dialler',
'dialling',
'diallist',
'dialog',
'dialoger',
'dialogic',
'dialogue',
'dialogued',
'dialoguing',
'dialyse',
'dialysed',
'dialyser',
'dialytic',
'dialyze',
'dialyzed',
'dialyzer',
'diam',
'diamagnetic',
'diamagnetism',
'diameter',
'diametric',
'diametrical',
'diamond',
'diamondback',
'diamonding',
'diana',
'diane',
'diapason',
'diaper',
'diapering',
'diaphoretic',
'diaphragm',
'diaphragmatic',
'diarchy',
'diarist',
'diarrhea',
'diarrheal',
'diarrhoeal',
'diarrhoeic',
'diary',
'diaspora',
'diaspore',
'diastole',
'diastolic',
'diastrophic',
'diastrophism',
'diathermic',
'diathermy',
'diatom',
'diatomic',
'diatomite',
'diatonic',
'diatribe',
'diazepam',
'diazo',
'dibbed',
'dibber',
'dibbing',
'dibble',
'dibbled',
'dibbler',
'dibbling',
'dibbuk',
'dibbukim',
'dice',
'diced',
'dicer',
'dicey',
'dichotic',
'dichotomously',
'dichotomy',
'dichromatic',
'dichromatism',
'dicier',
'diciest',
'dicing',
'dickensian',
'dicker',
'dickering',
'dickey',
'dickie',
'dicky',
'dicot',
'dicotyledon',
'dict',
'dicta',
'dictaphone',
'dictate',
'dictation',
'dictatorial',
'dictatorship',
'dictatory',
'diction',
'dictionary',
'dictum',
'did',
'didactic',
'didacticism',
'diddle',
'diddled',
'diddler',
'diddling',
'dido',
'didst',
'didy',
'die',
'dieback',
'died',
'diehard',
'dieing',
'dieldrin',
'dielectric',
'diem',
'diemaker',
'diesel',
'diestock',
'diet',
'dietary',
'dieted',
'dieter',
'dietetic',
'diethylamide',
'dietician',
'dieting',
'dietitian',
'differ',
'difference',
'different',
'differentia',
'differentiable',
'differentiae',
'differential',
'differentiate',
'differentiation',
'differently',
'differing',
'difficult',
'difficultly',
'difficulty',
'diffidence',
'diffident',
'diffidently',
'diffract',
'diffracted',
'diffraction',
'diffractive',
'diffuse',
'diffused',
'diffusely',
'diffuser',
'diffusing',
'diffusion',
'diffusive',
'diffusor',
'dig',
'digamy',
'digest',
'digestant',
'digested',
'digester',
'digestibility',
'digestible',
'digesting',
'digestion',
'digestive',
'digger',
'digging',
'dight',
'dighted',
'digit',
'digital',
'digitalization',
'digitalize',
'digitalized',
'digitalizing',
'digitate',
'digitization',
'digitize',
'digitized',
'digitizing',
'dignified',
'dignify',
'dignifying',
'dignitary',
'dignity',
'digraph',
'digressed',
'digressing',
'digression',
'digressive',
'dihedral',
'dihedron',
'dikdik',
'dike',
'diked',
'diker',
'diking',
'dilantin',
'dilapidate',
'dilapidation',
'dilatant',
'dilatate',
'dilatation',
'dilate',
'dilater',
'dilation',
'dilative',
'dilatorily',
'dilatory',
'dildo',
'dildoe',
'dilemma',
'dilemmic',
'dilettante',
'dilettanti',
'dilettantish',
'dilettantism',
'diligence',
'diligent',
'diligently',
'dill',
'dilly',
'dillydallied',
'dillydallying',
'diluent',
'dilute',
'diluted',
'diluter',
'diluting',
'dilution',
'dilutive',
'diluvial',
'diluvian',
'diluvion',
'diluvium',
'dim',
'dime',
'dimension',
'dimensional',
'dimensionality',
'dimer',
'diminish',
'diminished',
'diminishing',
'diminishment',
'diminuendo',
'diminution',
'diminutive',
'dimity',
'dimly',
'dimmable',
'dimmed',
'dimmer',
'dimmest',
'dimming',
'dimmock',
'dimorph',
'dimorphic',
'dimorphism',
'dimout',
'dimple',
'dimpled',
'dimpling',
'dimply',
'dimwit',
'dimwitted',
'din',
'dinar',
'dine',
'dined',
'diner',
'dinette',
'ding',
'dingbat',
'dingdong',
'dingey',
'dinghy',
'dingier',
'dingiest',
'dingily',
'dinging',
'dingle',
'dingo',
'dingy',
'dining',
'dinkier',
'dinkiest',
'dinking',
'dinkum',
'dinky',
'dinned',
'dinner',
'dinnertime',
'dinnerware',
'dinning',
'dinosaur',
'dint',
'dinted',
'dinting',
'diocesan',
'diocese',
'diode',
'dionysian',
'diopter',
'dioptometer',
'dioptre',
'diorama',
'dioramic',
'dioritic',
'dioxane',
'dioxide',
'dioxin',
'dip',
'diphtheria',
'diphtherial',
'diphtherian',
'diphtheric',
'diphtheritic',
'diphthong',
'diplex',
'diploid',
'diploidy',
'diploma',
'diplomacy',
'diplomat',
'diplomate',
'diplomatic',
'diplomatique',
'diplomatist',
'diplopod',
'dipody',
'dipole',
'dippable',
'dipper',
'dippier',
'dippiest',
'dipping',
'dippy',
'dipsomania',
'dipsomaniac',
'dipsomaniacal',
'dipstick',
'dipt',
'diptera',
'diptyca',
'diptych',
'dire',
'direct',
'directed',
'directer',
'directest',
'directing',
'direction',
'directional',
'directive',
'directly',
'directorate',
'directorship',
'directory',
'direful',
'direfully',
'direly',
'direr',
'direst',
'dirge',
'dirgeful',
'dirigible',
'dirk',
'dirked',
'dirking',
'dirndl',
'dirt',
'dirtied',
'dirtier',
'dirtiest',
'dirtily',
'dirty',
'dirtying',
'disability',
'disable',
'disabled',
'disablement',
'disabler',
'disabling',
'disabuse',
'disabused',
'disabusing',
'disaccharide',
'disadvantage',
'disadvantageously',
'disaffect',
'disaffected',
'disaffecting',
'disaffection',
'disaffiliate',
'disaffiliation',
'disaffirmance',
'disaffirmation',
'disaggregation',
'disagree',
'disagreeable',
'disagreeably',
'disagreed',
'disagreeing',
'disagreement',
'disallow',
'disallowance',
'disallowed',
'disallowing',
'disannul',
'disannulled',
'disannulling',
'disappear',
'disappearance',
'disappearing',
'disappoint',
'disappointed',
'disappointing',
'disappointment',
'disapprobation',
'disapproval',
'disapprove',
'disapproved',
'disapproving',
'disarm',
'disarmament',
'disarmed',
'disarmer',
'disarming',
'disarrange',
'disarrangement',
'disarranging',
'disarray',
'disarrayed',
'disarraying',
'disarticulate',
'disarticulation',
'disassemble',
'disassembled',
'disassembling',
'disassembly',
'disassimilate',
'disassimilation',
'disassimilative',
'disassociate',
'disassociation',
'disaster',
'disastrously',
'disavow',
'disavowal',
'disavowed',
'disavowing',
'disband',
'disbanding',
'disbandment',
'disbar',
'disbarment',
'disbarring',
'disbelief',
'disbelieve',
'disbelieved',
'disbeliever',
'disbelieving',
'disbosom',
'disbound',
'disbowel',
'disburden',
'disburdened',
'disburdening',
'disbursal',
'disburse',
'disbursed',
'disbursement',
'disburser',
'disbursing',
'disc',
'discard',
'discarding',
'discase',
'discased',
'disced',
'discern',
'discernable',
'discerned',
'discerner',
'discernible',
'discerning',
'discernment',
'discharge',
'dischargeable',
'discharger',
'discharging',
'discing',
'disciple',
'discipleship',
'disciplinarian',
'disciplinary',
'discipline',
'disciplined',
'discipliner',
'discipling',
'disciplining',
'disclaim',
'disclaimant',
'disclaimed',
'disclaimer',
'disclaiming',
'disclamation',
'disclamatory',
'disclose',
'disclosed',
'discloser',
'disclosing',
'disclosure',
'disco',
'discoblastic',
'discography',
'discoid',
'discolor',
'discoloration',
'discoloring',
'discombobulate',
'discombobulation',
'discomfit',
'discomfited',
'discomfiting',
'discomfiture',
'discomfort',
'discomforted',
'discomforting',
'discommode',
'discommoding',
'discompose',
'discomposed',
'discomposing',
'discomposure',
'disconcert',
'disconcerted',
'disconcerting',
'disconcertment',
'disconnect',
'disconnected',
'disconnecting',
'disconnection',
'disconsolate',
'disconsolately',
'discontent',
'discontented',
'discontenting',
'discontentment',
'discontinuance',
'discontinuation',
'discontinue',
'discontinued',
'discontinuing',
'discontinuity',
'discontinuously',
'discord',
'discordance',
'discordant',
'discordantly',
'discording',
'discotheque',
'discount',
'discountable',
'discounted',
'discountenance',
'discountenanced',
'discountenancing',
'discounter',
'discounting',
'discourage',
'discouragement',
'discouraging',
'discourse',
'discoursed',
'discourser',
'discoursing',
'discourteously',
'discourtesy',
'discover',
'discoverable',
'discoverer',
'discovering',
'discovery',
'discredit',
'discreditable',
'discredited',
'discrediting',
'discreet',
'discreeter',
'discreetly',
'discrepancy',
'discrepant',
'discrepantly',
'discrete',
'discretely',
'discretion',
'discretional',
'discretionary',
'discriminate',
'discriminately',
'discrimination',
'discriminational',
'discriminatory',
'discrown',
'discrowned',
'discursive',
'discussant',
'discussed',
'discussing',
'discussion',
'disdain',
'disdained',
'disdainful',
'disdainfully',
'disdaining',
'disease',
'diseased',
'diseasing',
'disembark',
'disembarkation',
'disembarked',
'disembarking',
'disembodied',
'disembodiment',
'disembody',
'disembodying',
'disembowel',
'disemboweled',
'disemboweling',
'disembowelled',
'disembowelling',
'disembowelment',
'disemploy',
'disemployed',
'disemploying',
'disemployment',
'disenchant',
'disenchanted',
'disenchanting',
'disenchantment',
'disencumber',
'disencumbering',
'disenfranchise',
'disenfranchised',
'disenfranchisement',
'disenfranchising',
'disengage',
'disengagement',
'disengaging',
'disentailment',
'disentangle',
'disentangled',
'disentanglement',
'disentangling',
'disenthrall',
'disenthralled',
'disenthralling',
'disentitle',
'disentitling',
'disequilibria',
'disequilibrium',
'disestablish',
'disestablished',
'disestablishing',
'disestablishment',
'disestablismentarian',
'disestablismentarianism',
'disesteem',
'disfavor',
'disfigure',
'disfigurement',
'disfigurer',
'disfiguring',
'disfranchise',
'disfranchised',
'disfranchisement',
'disfranchiser',
'disfranchising',
'disfunction',
'disgorge',
'disgorging',
'disgrace',
'disgraced',
'disgraceful',
'disgracefully',
'disgracer',
'disgracing',
'disgruntle',
'disgruntled',
'disgruntling',
'disguise',
'disguised',
'disguisement',
'disguising',
'disgust',
'disgusted',
'disgusting',
'dish',
'dishabille',
'disharmony',
'dishcloth',
'dishearten',
'disheartened',
'disheartening',
'disheartenment',
'dished',
'dishevel',
'disheveled',
'disheveling',
'dishevelled',
'dishevelling',
'dishevelment',
'dishful',
'dishier',
'dishing',
'dishonest',
'dishonestly',
'dishonesty',
'dishonor',
'dishonorable',
'dishonorably',
'dishonoring',
'dishpan',
'dishrag',
'dishtowel',
'dishware',
'dishwasher',
'dishwater',
'dishy',
'disillusion',
'disillusioning',
'disillusionment',
'disinclination',
'disincline',
'disinclined',
'disinclining',
'disincorporate',
'disincorporation',
'disinfect',
'disinfectant',
'disinfected',
'disinfecting',
'disinfection',
'disinfestant',
'disinfestation',
'disinformation',
'disinherit',
'disinheritance',
'disinherited',
'disinheriting',
'disintegrate',
'disintegration',
'disintegrative',
'disinter',
'disinterest',
'disinterested',
'disinterring',
'disintoxication',
'disjoin',
'disjoined',
'disjoining',
'disjoint',
'disjointed',
'disjointing',
'disjunct',
'disjunctive',
'disk',
'disked',
'diskette',
'disking',
'dislike',
'disliked',
'disliker',
'disliking',
'dislocate',
'dislocation',
'dislodge',
'dislodging',
'disloyal',
'disloyalty',
'dismal',
'dismaler',
'dismalest',
'dismantle',
'dismantled',
'dismantlement',
'dismantling',
'dismast',
'dismasting',
'dismay',
'dismayed',
'dismaying',
'dismember',
'dismembering',
'dismemberment',
'dismissal',
'dismissed',
'dismissing',
'dismortgage',
'dismortgaging',
'dismount',
'dismountable',
'dismounted',
'dismounting',
'disney',
'disneyland',
'disobedience',
'disobedient',
'disobediently',
'disobey',
'disobeyed',
'disobeyer',
'disobeying',
'disoblige',
'disobliging',
'disorder',
'disordering',
'disorderly',
'disorganization',
'disorganize',
'disorganized',
'disorganizer',
'disorganizing',
'disorient',
'disorientate',
'disorientation',
'disoriented',
'disorienting',
'disown',
'disowned',
'disowning',
'disownment',
'disparage',
'disparagement',
'disparaging',
'disparate',
'disparately',
'disparity',
'dispassion',
'dispassionate',
'dispassionately',
'dispatch',
'dispatched',
'dispatcher',
'dispatching',
'dispel',
'dispelled',
'dispelling',
'dispending',
'dispensable',
'dispensary',
'dispensation',
'dispensatory',
'dispense',
'dispensed',
'dispenser',
'dispensing',
'dispersal',
'disperse',
'dispersed',
'dispersement',
'dispersing',
'dispersion',
'dispirit',
'dispirited',
'dispiriting',
'displace',
'displaced',
'displacement',
'displacing',
'displanted',
'display',
'displayable',
'displayed',
'displaying',
'displease',
'displeased',
'displeasing',
'displeasure',
'disport',
'disported',
'disporting',
'disposable',
'disposal',
'dispose',
'disposed',
'disposer',
'disposing',
'disposition',
'dispositive',
'dispossessed',
'dispossessing',
'dispossession',
'dispossessor',
'dispossessory',
'dispraise',
'disproof',
'disproportion',
'disproportional',
'disproportionate',
'disproportionately',
'disprovable',
'disprove',
'disproved',
'disproven',
'disproving',
'disputability',
'disputable',
'disputably',
'disputant',
'disputation',
'dispute',
'disputed',
'disputer',
'disputing',
'disqualification',
'disqualified',
'disqualify',
'disqualifying',
'disquiet',
'disquieted',
'disquieting',
'disquietude',
'disquisition',
'disraeli',
'disregard',
'disregardful',
'disregarding',
'disrepair',
'disreputability',
'disreputable',
'disreputably',
'disrepute',
'disrespect',
'disrespectable',
'disrespectful',
'disrespectfully',
'disrobe',
'disrobed',
'disrober',
'disrobing',
'disrupt',
'disrupted',
'disrupter',
'disrupting',
'disruption',
'disruptive',
'dissatisfaction',
'dissatisfied',
'dissatisfy',
'dissatisfying',
'dissect',
'dissected',
'dissecting',
'dissection',
'dissemblance',
'dissemble',
'dissembled',
'dissembler',
'dissembling',
'disseminate',
'dissemination',
'dissension',
'dissent',
'dissented',
'dissenter',
'dissentient',
'dissenting',
'dissepimental',
'dissert',
'dissertation',
'disserve',
'disservice',
'dissever',
'dissevering',
'dissidence',
'dissident',
'dissidently',
'dissimilar',
'dissimilarity',
'dissimilate',
'dissimilitude',
'dissimulate',
'dissimulation',
'dissipate',
'dissipater',
'dissipation',
'dissociate',
'dissociation',
'dissociative',
'dissolute',
'dissolutely',
'dissolution',
'dissolutive',
'dissolvability',
'dissolvable',
'dissolve',
'dissolved',
'dissolving',
'dissonance',
'dissonant',
'dissonantly',
'dissuadable',
'dissuade',
'dissuader',
'dissuading',
'dissuasion',
'dissuasive',
'distaff',
'distal',
'distance',
'distanced',
'distancing',
'distant',
'distantly',
'distaste',
'distasted',
'distasteful',
'distastefully',
'distasting',
'distemper',
'distend',
'distending',
'distensibility',
'distensible',
'distension',
'distent',
'distention',
'distich',
'distill',
'distillable',
'distillate',
'distillation',
'distilled',
'distiller',
'distillery',
'distilling',
'distinct',
'distincter',
'distinction',
'distinctive',
'distinctly',
'distinguish',
'distinguishable',
'distinguishably',
'distinguished',
'distinguishing',
'distort',
'distortable',
'distorted',
'distorter',
'distorting',
'distortion',
'distortional',
'distr',
'distract',
'distracted',
'distractibility',
'distracting',
'distraction',
'distractive',
'distrain',
'distraint',
'distrait',
'distraught',
'distressed',
'distressful',
'distressfully',
'distressing',
'distributable',
'distribute',
'distributed',
'distributee',
'distributer',
'distributing',
'distribution',
'distributive',
'distributorship',
'distributution',
'district',
'districted',
'distrust',
'distrusted',
'distrustful',
'distrustfully',
'distrusting',
'disturb',
'disturbance',
'disturbed',
'disturber',
'disturbing',
'disunion',
'disunite',
'disunited',
'disuniter',
'disuniting',
'disunity',
'disuse',
'disused',
'disusing',
'disvaluing',
'disyoke',
'ditch',
'ditched',
'ditcher',
'ditching',
'dither',
'dithering',
'dithery',
'ditto',
'dittoed',
'dittoing',
'ditty',
'diuretic',
'diurnal',
'diva',
'divagate',
'divagation',
'divalent',
'divan',
'dive',
'dived',
'diver',
'diverge',
'divergence',
'divergent',
'divergently',
'diverging',
'diverse',
'diversely',
'diversification',
'diversified',
'diversify',
'diversifying',
'diversion',
'diversionary',
'diversionist',
'diversity',
'divert',
'diverted',
'diverter',
'diverticula',
'diverticulum',
'diverting',
'divest',
'divested',
'divesting',
'divestitive',
'divestiture',
'divestment',
'divesture',
'dividable',
'divide',
'dividend',
'divider',
'dividing',
'divination',
'divine',
'divined',
'divinely',
'diviner',
'divinest',
'diving',
'divining',
'divinise',
'divinity',
'divinize',
'divisibility',
'divisible',
'division',
'divisional',
'divisive',
'divisor',
'divorce',
'divorceable',
'divorced',
'divorcee',
'divorcement',
'divorcer',
'divorcing',
'divot',
'divulge',
'divulgement',
'divulgence',
'divulger',
'divulging',
'divvied',
'divvy',
'divvying',
'dixie',
'dixieland',
'dixit',
'dizzied',
'dizzier',
'dizziest',
'dizzily',
'dizzy',
'dizzying',
'djakarta',
'djellaba',
'djibouti',
'djin',
'djinn',
'djinni',
'djinny',
'dnieper',
'do',
'doable',
'dobber',
'dobbin',
'doberman',
'dobson',
'doc',
'docent',
'docile',
'docilely',
'docility',
'docimasia',
'dock',
'dockage',
'docker',
'docket',
'docketed',
'docketing',
'dockhand',
'docking',
'dockside',
'dockyard',
'doctoral',
'doctorate',
'doctoring',
'doctorship',
'doctrinaire',
'doctrinairism',
'doctrinal',
'doctrine',
'docudrama',
'document',
'documentable',
'documental',
'documentarily',
'documentary',
'documentation',
'documented',
'documenter',
'documenting',
'dodder',
'dodderer',
'doddering',
'doddery',
'dodge',
'dodger',
'dodgery',
'dodgier',
'dodging',
'dodgy',
'dodo',
'dodoism',
'doe',
'doer',
'doeskin',
'doest',
'doeth',
'doff',
'doffed',
'doffer',
'doffing',
'dog',
'dogbane',
'dogberry',
'dogcart',
'dogcatcher',
'dogdom',
'doge',
'dogear',
'dogey',
'dogface',
'dogfight',
'dogfish',
'dogger',
'doggerel',
'doggery',
'doggie',
'doggier',
'dogging',
'doggish',
'doggo',
'doggone',
'doggoner',
'doggonest',
'doggoning',
'doggrel',
'doggy',
'doghouse',
'dogie',
'dogleg',
'doglegging',
'dogma',
'dogmata',
'dogmatic',
'dogmatical',
'dogmatism',
'dogmatist',
'dognap',
'dognaped',
'dognaper',
'dognaping',
'dognapping',
'dogsbody',
'dogsled',
'dogteeth',
'dogtooth',
'dogtrot',
'dogtrotted',
'dogwatch',
'dogwood',
'dogy',
'doily',
'doing',
'dojo',
'dolce',
'dolci',
'dole',
'doled',
'doleful',
'dolefuller',
'dolefully',
'dolesome',
'doling',
'doll',
'dollar',
'dolled',
'dollied',
'dolling',
'dollish',
'dollishly',
'dollop',
'dolly',
'dollying',
'dolman',
'dolomite',
'dolor',
'doloroso',
'dolorously',
'dolour',
'dolphin',
'dolt',
'doltish',
'doltishly',
'dom',
'domain',
'dome',
'domed',
'domestic',
'domesticate',
'domestication',
'domesticity',
'domicil',
'domicile',
'domiciled',
'domiciliary',
'domiciling',
'dominance',
'dominant',
'dominantly',
'dominate',
'domination',
'domineer',
'domineering',
'doming',
'domini',
'dominica',
'dominican',
'dominick',
'dominie',
'dominion',
'dominium',
'domino',
'don',
'dona',
'donald',
'donate',
'donatee',
'donatio',
'donation',
'donative',
'done',
'donee',
'dong',
'donjon',
'donkey',
'donna',
'donne',
'donned',
'donning',
'donnish',
'donnybrook',
'donor',
'donorship',
'donovan',
'donut',
'doodad',
'doodle',
'doodled',
'doodler',
'doodling',
'doom',
'doomed',
'doomful',
'dooming',
'doomsday',
'doomster',
'door',
'doorbell',
'doorjamb',
'doorkeeper',
'doorknob',
'doorman',
'doormat',
'doornail',
'doorplate',
'doorpost',
'doorsill',
'doorstep',
'doorstop',
'doorway',
'dooryard',
'doozer',
'doozy',
'dopant',
'dope',
'doped',
'doper',
'dopester',
'dopey',
'dopier',
'dopiest',
'doping',
'doppler',
'dopy',
'dorado',
'doric',
'dorm',
'dormancy',
'dormant',
'dormer',
'dormice',
'dormitory',
'dormouse',
'dormy',
'dorothy',
'dorp',
'dorsa',
'dorsal',
'dorsi',
'dory',
'dosage',
'dose',
'dosed',
'doser',
'dosimeter',
'dosimetric',
'dosimetry',
'dosing',
'dossed',
'dosser',
'dossier',
'dossing',
'dost',
'dostoevsky',
'dot',
'dotage',
'dotard',
'dotardly',
'dotation',
'dote',
'doted',
'doter',
'doth',
'dotier',
'dotiest',
'doting',
'dotted',
'dotter',
'dottier',
'dottiest',
'dottily',
'dotting',
'dottle',
'dotty',
'doty',
'double',
'doubled',
'doubleheader',
'doubler',
'doublet',
'doublethink',
'doublewidth',
'doubling',
'doubloon',
'doubly',
'doubt',
'doubtable',
'doubted',
'doubter',
'doubtful',
'doubtfully',
'doubting',
'doubtlessly',
'douce',
'douche',
'douched',
'douching',
'dough',
'doughboy',
'doughier',
'doughiest',
'doughnut',
'dought',
'doughtier',
'doughtiest',
'doughtily',
'doughty',
'doughy',
'dour',
'dourer',
'dourest',
'dourine',
'dourly',
'douse',
'doused',
'douser',
'dousing',
'dove',
'dovecote',
'dover',
'dovetail',
'dovetailed',
'dovetailing',
'dovish',
'dowager',
'dowdier',
'dowdiest',
'dowdily',
'dowdy',
'dowdyish',
'dowel',
'doweled',
'doweling',
'dowelled',
'dowelling',
'dower',
'dowering',
'dowery',
'dowing',
'dowitcher',
'down',
'downbeat',
'downcast',
'downcourt',
'downed',
'downer',
'downfall',
'downfallen',
'downgrade',
'downgrading',
'downhearted',
'downhill',
'downier',
'downiest',
'downing',
'downlink',
'downlinked',
'downlinking',
'download',
'downloadable',
'downloading',
'downplay',
'downplayed',
'downpour',
'downrange',
'downright',
'downshift',
'downshifted',
'downshifting',
'downsize',
'downsized',
'downsizing',
'downstage',
'downstate',
'downstream',
'downstroke',
'downswing',
'downtime',
'downtown',
'downtrend',
'downtrod',
'downtrodden',
'downturn',
'downward',
'downwind',
'downy',
'dowry',
'dowse',
'dowsed',
'dowser',
'dowsing',
'doxie',
'doxology',
'doxy',
'doyen',
'doyenne',
'doyly',
'doz',
'doze',
'dozed',
'dozen',
'dozened',
'dozening',
'dozenth',
'dozer',
'dozier',
'doziest',
'dozily',
'dozing',
'dozy',
'drab',
'drabbed',
'drabber',
'drabbest',
'drabbing',
'drabble',
'drably',
'drachm',
'drachma',
'drachmae',
'draconian',
'draconic',
'draft',
'draftable',
'drafted',
'draftee',
'drafter',
'draftier',
'draftiest',
'draftily',
'drafting',
'draftsman',
'draftsmanship',
'drafty',
'drag',
'dragger',
'draggier',
'draggiest',
'dragging',
'draggle',
'draggled',
'draggling',
'draggy',
'dragline',
'dragnet',
'dragoman',
'dragon',
'dragonet',
'dragonfly',
'dragonhead',
'dragoon',
'dragooning',
'dragrope',
'dragster',
'drain',
'drainage',
'drained',
'drainer',
'draining',
'drainpipe',
'drake',
'dram',
'drama',
'dramamine',
'dramatic',
'dramatist',
'dramatization',
'dramatize',
'dramatized',
'dramatizing',
'dramshop',
'drank',
'drapable',
'drape',
'drapeable',
'draped',
'draper',
'drapery',
'draping',
'drastic',
'drat',
'dratted',
'dratting',
'draught',
'draughtier',
'draughting',
'draughty',
'drave',
'draw',
'drawable',
'drawback',
'drawbar',
'drawbore',
'drawbridge',
'drawdown',
'drawer',
'drawing',
'drawl',
'drawled',
'drawler',
'drawlier',
'drawling',
'drawly',
'drawn',
'drawstring',
'drawtube',
'dray',
'drayage',
'drayed',
'draying',
'drayman',
'dread',
'dreadful',
'dreadfully',
'dreading',
'dreadnought',
'dream',
'dreamed',
'dreamer',
'dreamful',
'dreamier',
'dreamiest',
'dreamily',
'dreaming',
'dreamland',
'dreamlike',
'dreamt',
'dreamy',
'drear',
'drearier',
'dreariest',
'drearily',
'dreary',
'dreck',
'dredge',
'dredger',
'dredging',
'dreg',
'dreggier',
'dreggiest',
'dreggish',
'dreggy',
'dreidel',
'dreidl',
'drek',
'drench',
'drenched',
'drencher',
'drenching',
'dressage',
'dressed',
'dresser',
'dressier',
'dressiest',
'dressily',
'dressing',
'dressmaker',
'dressmaking',
'dressy',
'drest',
'drew',
'drib',
'dribbed',
'dribbing',
'dribble',
'dribbled',
'dribbler',
'dribblet',
'dribbling',
'driblet',
'dried',
'drier',
'driest',
'drift',
'driftage',
'drifted',
'drifter',
'driftier',
'driftiest',
'drifting',
'driftpin',
'driftway',
'driftwood',
'drifty',
'drill',
'drilled',
'driller',
'drilling',
'drillmaster',
'drily',
'drink',
'drinkable',
'drinker',
'drinking',
'drip',
'dripper',
'drippier',
'drippiest',
'dripping',
'drippy',
'dript',
'drivable',
'drive',
'drivel',
'driveled',
'driveler',
'driveling',
'drivelled',
'driveller',
'drivelling',
'driven',
'driver',
'driveway',
'driving',
'drizzle',
'drizzled',
'drizzlier',
'drizzliest',
'drizzling',
'drizzly',
'drogue',
'droit',
'droll',
'droller',
'drollery',
'drollest',
'drolling',
'drolly',
'dromedary',
'drone',
'droner',
'drongo',
'droning',
'dronish',
'drool',
'drooled',
'drooling',
'droop',
'drooped',
'droopier',
'droopiest',
'droopily',
'drooping',
'droopy',
'drop',
'dropkick',
'dropkicker',
'droplet',
'dropout',
'dropper',
'dropping',
'dropsical',
'dropsied',
'dropsy',
'dropt',
'droshky',
'drossier',
'drossiest',
'drossy',
'drought',
'droughty',
'drouthy',
'drove',
'droved',
'drover',
'droving',
'drown',
'drownd',
'drownding',
'drowned',
'drowner',
'drowning',
'drowse',
'drowsed',
'drowsier',
'drowsiest',
'drowsily',
'drowsing',
'drowsy',
'drub',
'drubbed',
'drubber',
'drubbing',
'drudge',
'drudger',
'drudgery',
'drudging',
'drug',
'drugging',
'druggist',
'drugmaker',
'drugstore',
'druid',
'druidic',
'druidism',
'drum',
'drumbeat',
'drumhead',
'drumlin',
'drummed',
'drummer',
'drumming',
'drumroll',
'drumstick',
'drunk',
'drunkard',
'drunken',
'drunkenly',
'drunker',
'drunkest',
'drunkometer',
'drupe',
'drupelet',
'dry',
'dryable',
'dryad',
'dryadic',
'dryer',
'dryest',
'drying',
'drylot',
'dryly',
'drypoint',
'dryrot',
'drywall',
'duad',
'dual',
'dualism',
'dualist',
'dualistic',
'duality',
'dualize',
'dualized',
'dualizing',
'dub',
'dubbed',
'dubber',
'dubbin',
'dubbing',
'dubiety',
'dubio',
'dubiously',
'dublin',
'dubonnet',
'ducal',
'ducat',
'duce',
'duchy',
'duck',
'duckbill',
'duckboard',
'ducker',
'duckie',
'duckier',
'duckiest',
'ducking',
'duckling',
'duckpin',
'ducktail',
'duckweed',
'ducky',
'duct',
'ductal',
'ducted',
'ductile',
'ductility',
'ducting',
'dud',
'duddy',
'dude',
'dudgeon',
'dudish',
'dudishly',
'due',
'duel',
'dueled',
'dueler',
'dueling',
'duelist',
'duelled',
'dueller',
'duelling',
'duellist',
'duello',
'duenna',
'duet',
'duetted',
'duetting',
'duettist',
'duff',
'duffel',
'duffer',
'duffle',
'duffy',
'dug',
'dugong',
'dugout',
'duke',
'dukedom',
'dulcet',
'dulcetly',
'dulcify',
'dulcimer',
'dull',
'dullard',
'dulled',
'duller',
'dullest',
'dulling',
'dullish',
'dully',
'dulse',
'duluth',
'duly',
'dumb',
'dumbbell',
'dumbed',
'dumber',
'dumbest',
'dumbing',
'dumbly',
'dumbstruck',
'dumbwaiter',
'dumdum',
'dumfound',
'dumfounding',
'dummied',
'dummkopf',
'dummy',
'dummying',
'dump',
'dumpcart',
'dumped',
'dumper',
'dumpier',
'dumpiest',
'dumpily',
'dumping',
'dumpish',
'dumpling',
'dumpy',
'dun',
'dunce',
'dundee',
'dunderhead',
'dunderpate',
'dune',
'dung',
'dungaree',
'dungeon',
'dunghill',
'dungier',
'dunging',
'dungy',
'dunk',
'dunked',
'dunker',
'dunking',
'dunnage',
'dunned',
'dunner',
'dunning',
'duo',
'duodecimal',
'duodena',
'duodenal',
'duodenum',
'duologue',
'dup',
'dupable',
'dupe',
'duped',
'duper',
'dupery',
'duping',
'duple',
'duplex',
'duplexed',
'duplexer',
'duplexing',
'duplicate',
'duplication',
'duplicity',
'durability',
'durable',
'durably',
'dural',
'durance',
'duration',
'durational',
'durative',
'during',
'durn',
'durndest',
'durned',
'durneder',
'durnedest',
'durning',
'durra',
'durst',
'durum',
'dusk',
'dusked',
'duskier',
'duskiest',
'duskily',
'dusking',
'duskish',
'dusky',
'dust',
'dustbin',
'dusted',
'duster',
'dustheap',
'dustier',
'dustiest',
'dustily',
'dusting',
'dustman',
'dustpan',
'dustrag',
'dustup',
'dusty',
'dutch',
'dutchman',
'duteously',
'dutiable',
'dutiful',
'dutifully',
'duty',
'duumvir',
'dvorak',
'dwarf',
'dwarfed',
'dwarfer',
'dwarfest',
'dwarfing',
'dwarfish',
'dwarfism',
'dwarflike',
'dwell',
'dwelled',
'dweller',
'dwelling',
'dwelt',
'dwight',
'dwindle',
'dwindled',
'dwindling',
'dyable',
'dyad',
'dyadic',
'dyarchy',
'dybbuk',
'dybbukim',
'dye',
'dyeable',
'dyed',
'dyeing',
'dyer',
'dyestuff',
'dyeweed',
'dyewood',
'dying',
'dyke',
'dyking',
'dynamic',
'dynamical',
'dynamism',
'dynamist',
'dynamistic',
'dynamite',
'dynamited',
'dynamiter',
'dynamiting',
'dynamo',
'dynamometer',
'dynamoscope',
'dynast',
'dynastic',
'dynasty',
'dyne',
'dynode',
'dysenteric',
'dysentery',
'dysesthesia',
'dysesthetic',
'dysfunction',
'dysfunctional',
'dyslectic',
'dyslexia',
'dyslexic',
'dyspepsia',
'dyspepsy',
'dyspeptic',
'dyspeptical',
'dysprosium',
'dystopia',
'dystrophic',
'dystrophy',
'each',
'eager',
'eagerer',
'eagerest',
'eagerly',
'eagle',
'eaglet',
'ear',
'earache',
'eardrop',
'eardrum',
'earflap',
'earful',
'earing',
'earl',
'earldom',
'earlier',
'earliest',
'earlobe',
'earlock',
'earlship',
'early',
'earmark',
'earmarked',
'earmarking',
'earmuff',
'earn',
'earnable',
'earned',
'earner',
'earnest',
'earnestly',
'earning',
'earphone',
'earpiece',
'earplug',
'earring',
'earshot',
'earsplitting',
'earth',
'earthbound',
'earthed',
'earthen',
'earthenware',
'earthier',
'earthiest',
'earthily',
'earthing',
'earthlier',
'earthliest',
'earthling',
'earthly',
'earthman',
'earthmoving',
'earthquake',
'earthshaking',
'earthward',
'earthwork',
'earthworm',
'earthy',
'earwax',
'earwig',
'earwigging',
'earworm',
'ease',
'eased',
'easeful',
'easel',
'easement',
'easer',
'easier',
'easiest',
'easily',
'easing',
'east',
'eastbound',
'easter',
'easterly',
'eastern',
'easterner',
'easting',
'eastman',
'eastward',
'eastwardly',
'easy',
'easygoing',
'eat',
'eatable',
'eaten',
'eater',
'eatery',
'eau',
'eaux',
'eave',
'eaved',
'eavesdrop',
'eavesdropper',
'eavesdropping',
'ebb',
'ebbed',
'ebbing',
'ebcdic',
'ebon',
'ebonite',
'ebonizing',
'ebony',
'ebullience',
'ebullient',
'ebulliently',
'ebullition',
'eccentric',
'eccentricity',
'eccl',
'ecclesia',
'ecclesiastic',
'ecclesiastical',
'ecdysial',
'echelon',
'echeloning',
'echidna',
'echidnae',
'echinodermata',
'echo',
'echoed',
'echoer',
'echoey',
'echoic',
'echoing',
'echoism',
'echolalia',
'echolocation',
'eclair',
'eclampsia',
'eclamptic',
'eclat',
'eclectic',
'eclecticism',
'eclipse',
'eclipsed',
'eclipsing',
'ecliptic',
'eclogue',
'ecocide',
'ecol',
'ecole',
'ecologic',
'ecological',
'ecologist',
'ecology',
'econ',
'economic',
'economical',
'economist',
'economize',
'economized',
'economizer',
'economizing',
'economy',
'ecosystem',
'ecotype',
'ecotypic',
'ecru',
'ecstasy',
'ecstatic',
'ectoderm',
'ectomorph',
'ectopic',
'ectoplasm',
'ectoplasmatic',
'ectoplasmic',
'ecuador',
'ecumenic',
'ecumenical',
'ecumenicalism',
'ecumenicism',
'ecumenicity',
'ecumenism',
'eczema',
'edam',
'edda',
'eddied',
'eddy',
'eddying',
'edema',
'edemata',
'eden',
'edgar',
'edge',
'edger',
'edgewise',
'edgier',
'edgiest',
'edgily',
'edging',
'edgy',
'edibility',
'edible',
'edict',
'edification',
'edifice',
'edified',
'edifier',
'edify',
'edifying',
'edinburgh',
'edison',
'edit',
'editable',
'edited',
'edith',
'editing',
'edition',
'editorial',
'editorialist',
'editorialization',
'editorialize',
'editorialized',
'editorializer',
'editorializing',
'editorship',
'educability',
'educable',
'educate',
'education',
'educational',
'educative',
'educe',
'educed',
'educing',
'educt',
'eduction',
'eductive',
'edward',
'eel',
'eelier',
'eeliest',
'eelworm',
'eely',
'eerie',
'eerier',
'eeriest',
'eerily',
'eery',
'effable',
'efface',
'effaceable',
'effaced',
'effacement',
'effacer',
'effacing',
'effect',
'effected',
'effecter',
'effecting',
'effective',
'effectual',
'effectuality',
'effectuate',
'effectuation',
'effeminacy',
'effeminate',
'effeminately',
'effemination',
'effendi',
'efferent',
'effervesce',
'effervesced',
'effervescence',
'effervescent',
'effervescently',
'effervescing',
'effete',
'effetely',
'efficaciously',
'efficacy',
'efficiency',
'efficient',
'efficiently',
'effigy',
'effloresce',
'effloresced',
'efflorescence',
'efflorescent',
'efflorescing',
'effluence',
'effluent',
'effluvia',
'effluvial',
'effluvium',
'efflux',
'effort',
'effortlessly',
'effrontery',
'effulge',
'effulgence',
'effulgent',
'effulgently',
'effulging',
'effuse',
'effused',
'effusing',
'effusion',
'effusive',
'eft',
'eftsoon',
'egad',
'egalitarian',
'egalitarianism',
'egalite',
'egg',
'eggbeater',
'eggcup',
'egger',
'egghead',
'egging',
'eggnog',
'eggplant',
'eggshell',
'eglantine',
'ego',
'egocentric',
'egocentricity',
'egocentrism',
'egoism',
'egoist',
'egoistic',
'egoistical',
'egomania',
'egomaniac',
'egomaniacal',
'egotism',
'egotist',
'egotistic',
'egotistical',
'egregiously',
'egressed',
'egressing',
'egret',
'egypt',
'egyptian',
'eh',
'eider',
'eiderdown',
'eidetic',
'eidola',
'eidolon',
'eiffel',
'eight',
'eightball',
'eighteen',
'eighteenth',
'eighth',
'eighthly',
'eightieth',
'eighty',
'eikon',
'einstein',
'einsteinium',
'eire',
'eisenhower',
'eisteddfod',
'either',
'ejacula',
'ejaculate',
'ejaculation',
'ejaculatory',
'ejaculum',
'eject',
'ejecta',
'ejectable',
'ejected',
'ejecting',
'ejection',
'ejective',
'ejectment',
'ejectum',
'eke',
'eked',
'eking',
'ekistic',
'elaborate',
'elaborately',
'elaboration',
'elaine',
'elan',
'eland',
'elapse',
'elapsed',
'elapsing',
'elastic',
'elasticity',
'elasticize',
'elasticized',
'elasticizing',
'elasticum',
'elastin',
'elastomer',
'elastomeric',
'elate',
'elater',
'elation',
'elative',
'elbow',
'elbowed',
'elbowing',
'elbowroom',
'eld',
'elder',
'elderberry',
'elderly',
'eldest',
'eldrich',
'eldritch',
'eleanor',
'elect',
'elected',
'electee',
'electing',
'election',
'electioneer',
'electioneering',
'elective',
'electoral',
'electorate',
'electorial',
'electra',
'electric',
'electrical',
'electrician',
'electricity',
'electrification',
'electrified',
'electrifier',
'electrify',
'electrifying',
'electro',
'electrocardiogram',
'electrocardiograph',
'electrocardiographic',
'electrocardiography',
'electrochemical',
'electrochemistry',
'electrocute',
'electrocuted',
'electrocuting',
'electrocution',
'electrocutional',
'electrode',
'electrodynamic',
'electroencephalogram',
'electroencephalograph',
'electroencephalographic',
'electroencephalography',
'electrogram',
'electrologist',
'electrolyte',
'electrolytic',
'electrolyze',
'electrolyzed',
'electrolyzing',
'electromagnet',
'electromagnetic',
'electromagnetical',
'electromagnetism',
'electromotive',
'electron',
'electronic',
'electrophorese',
'electrophoresed',
'electrophoresing',
'electrophoretic',
'electroplate',
'electropositive',
'electroscope',
'electroshock',
'electrostatic',
'electrosurgery',
'electrotheraputic',
'electrotheraputical',
'electrotherapy',
'electrotype',
'electrum',
'electuary',
'eleemosynary',
'elegance',
'elegancy',
'elegant',
'eleganter',
'elegantly',
'elegiac',
'elegise',
'elegised',
'elegist',
'elegize',
'elegized',
'elegizing',
'elegy',
'element',
'elemental',
'elementarily',
'elementary',
'elephant',
'elephantine',
'elevate',
'elevation',
'eleven',
'eleventh',
'elevon',
'elf',
'elfin',
'elfish',
'elfishly',
'elflock',
'elhi',
'elicit',
'elicitation',
'elicited',
'eliciting',
'elide',
'elidible',
'eliding',
'eligibility',
'eligible',
'eligibly',
'elijah',
'eliminant',
'eliminate',
'elimination',
'eliminative',
'eliminatory',
'elision',
'elite',
'elitism',
'elitist',
'elixir',
'elizabeth',
'elizabethan',
'elk',
'elkhound',
'ell',
'ellen',
'ellipse',
'ellipsoid',
'ellipsoidal',
'elliptic',
'elliptical',
'elm',
'elmier',
'elmiest',
'elmy',
'elocution',
'elocutionist',
'elongate',
'elongation',
'elope',
'eloped',
'elopement',
'eloper',
'eloping',
'eloquence',
'eloquent',
'eloquently',
'else',
'elsewhere',
'elucidate',
'elucidation',
'elude',
'eluder',
'eluding',
'elusion',
'elusive',
'elusory',
'elver',
'elvish',
'elvishly',
'elysian',
'elysium',
'emaciate',
'emaciation',
'emanate',
'emanation',
'emanative',
'emancipate',
'emancipation',
'emasculate',
'emasculation',
'embalm',
'embalmed',
'embalmer',
'embalming',
'embank',
'embanked',
'embanking',
'embankment',
'embar',
'embargo',
'embargoed',
'embargoing',
'embark',
'embarkation',
'embarked',
'embarking',
'embarkment',
'embarrassed',
'embarrassing',
'embarrassment',
'embarring',
'embassador',
'embassy',
'embattle',
'embattled',
'embattling',
'embay',
'embed',
'embedding',
'embellish',
'embellished',
'embellisher',
'embellishing',
'embellishment',
'ember',
'embezzle',
'embezzled',
'embezzlement',
'embezzler',
'embezzling',
'embitter',
'embittering',
'embitterment',
'emblaze',
'emblazing',
'emblazon',
'emblazoning',
'emblazonment',
'emblem',
'emblematic',
'emblematical',
'embleming',
'embodied',
'embodier',
'embodiment',
'embody',
'embodying',
'embolden',
'emboldened',
'emboldening',
'emboli',
'embolic',
'embolism',
'embolization',
'embonpoint',
'embosomed',
'embosoming',
'embossed',
'embosser',
'embossing',
'embossment',
'embouchure',
'embow',
'emboweled',
'emboweling',
'embowelled',
'embower',
'embowering',
'embrace',
'embraceable',
'embraced',
'embracer',
'embracing',
'embrasure',
'embrocate',
'embrocation',
'embroider',
'embroiderer',
'embroidering',
'embroidery',
'embroil',
'embroiled',
'embroiling',
'embroilment',
'embryo',
'embryogenic',
'embryoid',
'embryologic',
'embryological',
'embryologist',
'embryology',
'embryonic',
'emcee',
'emceed',
'emceeing',
'emeer',
'emeerate',
'emend',
'emendable',
'emendation',
'emender',
'emending',
'emerald',
'emerge',
'emergence',
'emergency',
'emergent',
'emerging',
'emerita',
'emeriti',
'emersion',
'emerson',
'emery',
'emetic',
'emf',
'emigrant',
'emigrate',
'emigration',
'emigrational',
'emigre',
'emily',
'eminence',
'eminency',
'eminent',
'eminently',
'emir',
'emirate',
'emissary',
'emission',
'emissive',
'emissivity',
'emit',
'emitted',
'emitter',
'emitting',
'emmet',
'emmy',
'emollient',
'emolument',
'emote',
'emoted',
'emoter',
'emoting',
'emotion',
'emotional',
'emotionalism',
'emotionalist',
'emotionalistic',
'emotionality',
'emotionalize',
'emotive',
'empaling',
'empanel',
'empaneled',
'empaneling',
'empanelled',
'empathetic',
'empathic',
'empathize',
'empathized',
'empathizing',
'empathy',
'empennage',
'emperor',
'emphasize',
'emphasized',
'emphasizing',
'emphatic',
'emphysema',
'empire',
'empiric',
'empirical',
'empiricism',
'empiricist',
'emplace',
'emplaced',
'emplacement',
'emplacing',
'emplane',
'emplaning',
'employ',
'employability',
'employable',
'employed',
'employee',
'employer',
'employing',
'employment',
'emporia',
'emporium',
'empower',
'empowering',
'empowerment',
'emptied',
'emptier',
'emptiest',
'emptily',
'emptive',
'empty',
'emptying',
'empurple',
'empurpled',
'empurpling',
'empyreal',
'empyrean',
'emu',
'emulate',
'emulation',
'emulative',
'emulsible',
'emulsifiable',
'emulsification',
'emulsified',
'emulsifier',
'emulsify',
'emulsifying',
'emulsin',
'emulsion',
'emulsive',
'emulsoid',
'enable',
'enabled',
'enabler',
'enabling',
'enact',
'enacted',
'enacting',
'enactive',
'enactment',
'enamel',
'enameled',
'enameler',
'enameling',
'enamelled',
'enameller',
'enamelling',
'enamelware',
'enamelwork',
'enamor',
'enamoring',
'enamour',
'enamouring',
'enarthrodial',
'enate',
'enatic',
'enc',
'encage',
'encaging',
'encamp',
'encamped',
'encamping',
'encampment',
'encapsulate',
'encapsulation',
'encapsule',
'encapsuled',
'encapsuling',
'encase',
'encased',
'encasement',
'encasing',
'enceinte',
'encephala',
'encephalic',
'encephalitic',
'encephalogram',
'encephalograph',
'encephalographic',
'encephalography',
'encephalon',
'enchain',
'enchained',
'enchaining',
'enchainment',
'enchant',
'enchanted',
'enchanter',
'enchanting',
'enchantment',
'enchilada',
'encina',
'encipher',
'enciphering',
'encipherment',
'encircle',
'encircled',
'encirclement',
'encircling',
'encl',
'enclasp',
'enclasping',
'enclave',
'enclosable',
'enclose',
'enclosed',
'encloser',
'enclosing',
'enclosure',
'encode',
'encoder',
'encoding',
'encomia',
'encomium',
'encompassed',
'encompassing',
'encompassment',
'encore',
'encoring',
'encounter',
'encounterer',
'encountering',
'encourage',
'encouragement',
'encourager',
'encouraging',
'encroach',
'encroached',
'encroaching',
'encroachment',
'encrust',
'encrustation',
'encrusted',
'encrusting',
'encrypt',
'encrypted',
'encrypting',
'encryption',
'encumber',
'encumbering',
'encumbrance',
'encumbrancer',
'encyclic',
'encyclical',
'encyclopedia',
'encyclopedic',
'encyst',
'encysted',
'encysting',
'encystment',
'end',
'endamaging',
'endanger',
'endangering',
'endangerment',
'endbrain',
'endear',
'endearing',
'endearment',
'endeavor',
'endeavoring',
'endeavour',
'endeavouring',
'endemic',
'ender',
'endermic',
'ending',
'enditing',
'endive',
'endleaf',
'endlessly',
'endlong',
'endmost',
'endnote',
'endocrine',
'endocrinic',
'endocrinologic',
'endocrinological',
'endocrinologist',
'endocrinology',
'endogamy',
'endogenously',
'endogeny',
'endomorph',
'endomorphic',
'endomorphism',
'endorsable',
'endorse',
'endorsed',
'endorsee',
'endorsement',
'endorser',
'endorsing',
'endorsor',
'endoscope',
'endoscopic',
'endoscopy',
'endoskeleton',
'endothermal',
'endothermic',
'endow',
'endowed',
'endower',
'endowing',
'endowment',
'endozoic',
'endpaper',
'endplate',
'endpoint',
'endrin',
'endue',
'endued',
'enduing',
'endurable',
'endurance',
'endure',
'enduring',
'enduro',
'endwise',
'enema',
'enemy',
'energetic',
'energise',
'energize',
'energized',
'energizer',
'energizing',
'energy',
'enervate',
'enervation',
'enface',
'enfant',
'enfeeble',
'enfeebled',
'enfeeblement',
'enfeebling',
'enfeoffed',
'enfeoffing',
'enfeoffment',
'enfetter',
'enfever',
'enfevering',
'enfilade',
'enfilading',
'enfin',
'enflame',
'enflamed',
'enflaming',
'enfold',
'enfolder',
'enfolding',
'enforce',
'enforceability',
'enforceable',
'enforced',
'enforcement',
'enforcer',
'enforcing',
'enframe',
'enframed',
'enframing',
'enfranchise',
'enfranchised',
'enfranchisement',
'enfranchising',
'engage',
'engagement',
'engager',
'engaging',
'engender',
'engendering',
'engild',
'engilding',
'engine',
'engined',
'engineer',
'engineering',
'enginery',
'engining',
'engird',
'engirding',
'engirdle',
'engirdled',
'engirdling',
'engirt',
'england',
'englander',
'english',
'englished',
'englishing',
'englishman',
'englishwoman',
'englobe',
'englobed',
'englobement',
'englobing',
'englutting',
'engorge',
'engorgement',
'engorging',
'engr',
'engraft',
'engrafted',
'engrafting',
'engrailed',
'engrailing',
'engrained',
'engraining',
'engram',
'engramme',
'engrave',
'engraved',
'engraver',
'engraving',
'engrossed',
'engrosser',
'engrossing',
'engrossment',
'engulf',
'engulfed',
'engulfing',
'engulfment',
'enhaloed',
'enhaloing',
'enhance',
'enhanced',
'enhancement',
'enhancer',
'enhancing',
'enigma',
'enigmata',
'enigmatic',
'enigmatical',
'enjambment',
'enjoin',
'enjoinder',
'enjoined',
'enjoiner',
'enjoining',
'enjoy',
'enjoyable',
'enjoyably',
'enjoyed',
'enjoyer',
'enjoying',
'enjoyment',
'enkindle',
'enkindled',
'enkindling',
'enlace',
'enlacing',
'enlarge',
'enlargement',
'enlarger',
'enlarging',
'enlighten',
'enlightened',
'enlightener',
'enlightening',
'enlightenment',
'enlist',
'enlisted',
'enlistee',
'enlister',
'enlisting',
'enlistment',
'enliven',
'enlivened',
'enlivening',
'enlivenment',
'enmesh',
'enmeshed',
'enmeshing',
'enmeshment',
'enmity',
'ennead',
'ennoble',
'ennobled',
'ennoblement',
'ennobler',
'ennobling',
'ennui',
'enormity',
'enormously',
'enough',
'enounced',
'enouncing',
'enow',
'enplane',
'enplaned',
'enplaning',
'enqueue',
'enquire',
'enquirer',
'enquiring',
'enquiry',
'enrage',
'enraging',
'enrapt',
'enrapture',
'enrapturing',
'enravish',
'enravished',
'enrich',
'enriched',
'enricher',
'enriching',
'enrichment',
'enrobe',
'enrobed',
'enrober',
'enrobing',
'enrol',
'enroll',
'enrolled',
'enrollee',
'enroller',
'enrolling',
'enrollment',
'enrolment',
'enroot',
'ensconce',
'ensconced',
'ensconcing',
'enscrolled',
'ensemble',
'enserfing',
'ensheathe',
'ensheathed',
'ensheathing',
'enshrine',
'enshrined',
'enshrinement',
'enshrining',
'enshroud',
'enshrouding',
'ensign',
'ensigncy',
'ensilage',
'ensilaging',
'ensile',
'ensiled',
'ensiling',
'ensky',
'enskying',
'enslave',
'enslaved',
'enslavement',
'enslaver',
'enslaving',
'ensnare',
'ensnarement',
'ensnarer',
'ensnaring',
'ensnarl',
'ensnarled',
'ensnarling',
'ensorcel',
'ensorceled',
'ensoul',
'ensouling',
'ensuant',
'ensue',
'ensued',
'ensuing',
'ensure',
'ensurer',
'ensuring',
'enswathed',
'entail',
'entailed',
'entailer',
'entailing',
'entailment',
'entangle',
'entangled',
'entanglement',
'entangler',
'entangling',
'entendre',
'entente',
'enter',
'enterable',
'enterer',
'entering',
'enterprise',
'enterpriser',
'enterprising',
'enterprize',
'entertain',
'entertained',
'entertainer',
'entertaining',
'entertainment',
'enthrall',
'enthralled',
'enthralling',
'enthrallment',
'enthrone',
'enthronement',
'enthroning',
'enthuse',
'enthused',
'enthusiasm',
'enthusiast',
'enthusiastic',
'enthusing',
'entice',
'enticed',
'enticement',
'enticer',
'enticing',
'entire',
'entirely',
'entirety',
'entitle',
'entitled',
'entitlement',
'entitling',
'entity',
'entoiled',
'entoiling',
'entomb',
'entombed',
'entombing',
'entombment',
'entomological',
'entomologist',
'entomology',
'entourage',
'entrain',
'entrained',
'entraining',
'entrance',
'entranced',
'entrancement',
'entrancing',
'entrant',
'entrap',
'entrapment',
'entrapping',
'entre',
'entreat',
'entreaty',
'entree',
'entrench',
'entrenched',
'entrenching',
'entrenchment',
'entrepreneur',
'entrepreneurial',
'entrepreneurship',
'entropy',
'entrust',
'entrusted',
'entrusting',
'entrustment',
'entry',
'entryway',
'entwine',
'entwined',
'entwining',
'entwist',
'entwisted',
'entwisting',
'enumerable',
'enumerate',
'enumeration',
'enunciate',
'enunciation',
'enure',
'enuretic',
'envelop',
'envelope',
'enveloped',
'enveloper',
'enveloping',
'envelopment',
'envenom',
'envenomation',
'envenomed',
'envenoming',
'envenomization',
'enviable',
'enviably',
'envied',
'envier',
'enviously',
'environ',
'environing',
'environment',
'environmental',
'environmentalism',
'environmentalist',
'envisage',
'envisaging',
'envision',
'envisioning',
'envoi',
'envoy',
'envy',
'envying',
'enwheeling',
'enwinding',
'enwombing',
'enwrap',
'enwrapping',
'enzymatic',
'enzyme',
'enzymologist',
'eocene',
'eof',
'eolian',
'eolith',
'eolithic',
'eon',
'eonian',
'epaulet',
'epaxial',
'epee',
'epeeist',
'epergne',
'ephedra',
'ephedrin',
'ephedrine',
'ephemera',
'ephemerae',
'ephemeral',
'epic',
'epical',
'epicanthic',
'epicene',
'epicenter',
'epicentral',
'epicure',
'epicurean',
'epicycle',
'epidemic',
'epidemiological',
'epidemiologist',
'epidemiology',
'epidermal',
'epidermic',
'epidermization',
'epidermoidal',
'epigon',
'epigram',
'epigrammatic',
'epigrammatical',
'epigrammatism',
'epigrammatist',
'epigrammatize',
'epigrammatizer',
'epigraph',
'epigrapher',
'epigraphic',
'epigraphical',
'epigraphy',
'epilepsy',
'epileptic',
'epileptoid',
'epilog',
'epilogue',
'epilogued',
'epiloguing',
'epinephrine',
'epiphany',
'epiphenomena',
'epiphenomenalism',
'epiphenomenon',
'episcopacy',
'episcopal',
'episcopalian',
'episcopate',
'episode',
'episodic',
'epistemology',
'epistle',
'epistler',
'epistolary',
'epitaph',
'epithalamia',
'epithalamion',
'epithalamium',
'epithelia',
'epithelial',
'epithelium',
'epithet',
'epitome',
'epitomic',
'epitomize',
'epitomized',
'epitomizing',
'epizoa',
'epizootic',
'epoch',
'epochal',
'epode',
'eponym',
'eponymic',
'eponymy',
'epoxied',
'epoxy',
'epoxyed',
'epoxying',
'epsilon',
'epsom',
'equability',
'equable',
'equably',
'equal',
'equaled',
'equaling',
'equalise',
'equalised',
'equalising',
'equality',
'equalization',
'equalize',
'equalized',
'equalizer',
'equalizing',
'equalled',
'equalling',
'equanimity',
'equatable',
'equate',
'equation',
'equational',
'equatorial',
'equerry',
'equestrian',
'equestrianism',
'equestrienne',
'equiangular',
'equidistance',
'equidistant',
'equidistantly',
'equilateral',
'equilibrate',
'equilibration',
'equilibria',
'equilibrium',
'equine',
'equinely',
'equinity',
'equinoctial',
'equinox',
'equip',
'equipage',
'equipment',
'equipoise',
'equipper',
'equipping',
'equitable',
'equitably',
'equitant',
'equitation',
'equity',
'equivalence',
'equivalency',
'equivalent',
'equivalently',
'equivocacy',
'equivocal',
'equivocality',
'equivocate',
'equivocation',
'equivoke',
'era',
'eradicable',
'eradicate',
'eradication',
'erasable',
'erase',
'erased',
'eraser',
'erasing',
'erasure',
'erat',
'erbium',
'ere',
'erect',
'erectable',
'erected',
'erecter',
'erectile',
'erecting',
'erection',
'erective',
'erectly',
'erelong',
'eremite',
'eremitic',
'erenow',
'erewhile',
'erg',
'ergo',
'ergometer',
'ergonomic',
'ergosterol',
'ergot',
'ergotic',
'ergotized',
'erica',
'erie',
'erin',
'eristic',
'ermine',
'ermined',
'erne',
'ernest',
'erode',
'erodible',
'eroding',
'erose',
'erosely',
'erosible',
'erosion',
'erosional',
'erosive',
'erosivity',
'erotic',
'erotica',
'erotical',
'eroticism',
'eroticist',
'eroticization',
'eroticize',
'eroticizing',
'erotism',
'erotization',
'erotize',
'erotized',
'erotizing',
'erotogenic',
'err',
'errancy',
'errand',
'errant',
'errantly',
'errantry',
'errata',
'erratic',
'erratum',
'erring',
'erroneously',
'error',
'ersatz',
'erst',
'erstwhile',
'eruct',
'eructate',
'eructation',
'eructed',
'eructing',
'erudite',
'eruditely',
'erudition',
'erupt',
'erupted',
'erupting',
'eruption',
'eruptional',
'eruptive',
'erythema',
'erythrocyte',
'erythromycin',
'esc',
'escalade',
'escalading',
'escalate',
'escalation',
'escalatory',
'escallop',
'escalloped',
'escalloping',
'escaloped',
'escapable',
'escapade',
'escape',
'escaped',
'escapee',
'escapement',
'escaper',
'escapeway',
'escaping',
'escapism',
'escapist',
'escargot',
'escarole',
'escarp',
'escarped',
'escarping',
'escarpment',
'eschalot',
'eschew',
'eschewal',
'eschewed',
'eschewer',
'eschewing',
'escort',
'escorted',
'escorting',
'escoting',
'escritoire',
'escrow',
'escrowed',
'escrowee',
'escrowing',
'escudo',
'esculent',
'escutcheon',
'eskimo',
'esophagal',
'esophageal',
'esophagi',
'esophagoscope',
'esoteric',
'esp',
'espadrille',
'espalier',
'espanol',
'especial',
'esperanto',
'espial',
'espied',
'espionage',
'esplanade',
'espousal',
'espouse',
'espoused',
'espouser',
'espousing',
'espresso',
'esprit',
'espy',
'espying',
'esquire',
'esquiring',
'essay',
'essayed',
'essayer',
'essaying',
'essayist',
'esse',
'essence',
'essential',
'establish',
'establishable',
'established',
'establisher',
'establishing',
'establishment',
'establismentarian',
'establismentarianism',
'estate',
'esteem',
'esteemed',
'esteeming',
'ester',
'esther',
'esthete',
'esthetic',
'estimable',
'estimate',
'estimation',
'estivate',
'estonia',
'estonian',
'estop',
'estoppage',
'estoppel',
'estopping',
'estradiol',
'estrange',
'estrangement',
'estranging',
'estray',
'estraying',
'estrin',
'estrogen',
'estrogenic',
'estrogenicity',
'estrum',
'estuary',
'et',
'eta',
'etagere',
'etape',
'etatism',
'etatist',
'etc',
'etcetera',
'etch',
'etched',
'etcher',
'etching',
'eternal',
'eterne',
'eternise',
'eternity',
'eternize',
'eternized',
'eternizing',
'ethane',
'ethanol',
'ethel',
'ethene',
'ether',
'ethereal',
'etheric',
'etherification',
'etherified',
'etherify',
'etherish',
'etherize',
'etherized',
'etherizing',
'ethic',
'ethical',
'ethicist',
'ethicize',
'ethicized',
'ethicizing',
'ethiopia',
'ethiopian',
'ethnic',
'ethnical',
'ethnicity',
'ethnologic',
'ethnological',
'ethnologist',
'ethnology',
'ethological',
'ethologist',
'ethology',
'ethyl',
'ethylene',
'etiolate',
'etiologic',
'etiological',
'etiology',
'etiquette',
'etna',
'etoile',
'etruria',
'etruscan',
'etude',
'etym',
'etymological',
'etymologist',
'etymology',
'eucalypti',
'eucharist',
'eucharistic',
'eucharistical',
'euchre',
'euchring',
'euclid',
'euclidean',
'eudaemon',
'eugene',
'eugenic',
'eugenical',
'eugenicist',
'eugenism',
'eugenist',
'euglena',
'euler',
'eulogia',
'eulogise',
'eulogist',
'eulogistic',
'eulogize',
'eulogized',
'eulogizer',
'eulogizing',
'eulogy',
'eumorphic',
'eunuch',
'eunuchism',
'eunuchoid',
'euphemism',
'euphemistic',
'euphony',
'euphoria',
'euphoric',
'eurasia',
'eurasian',
'eureka',
'eurodollar',
'europe',
'european',
'europium',
'eurythmy',
'eustachian',
'euthanasia',
'eutrophic',
'eutrophication',
'eutrophy',
'evacuate',
'evacuation',
'evacuee',
'evadable',
'evade',
'evader',
'evadible',
'evading',
'evaluate',
'evaluation',
'evanesce',
'evanesced',
'evanescence',
'evanescent',
'evanescently',
'evanescing',
'evangelic',
'evangelical',
'evangelicalism',
'evangelism',
'evangelist',
'evangelistic',
'evangelize',
'evangelized',
'evangelizing',
'evanished',
'evaporate',
'evaporation',
'evaporative',
'evaporite',
'evaporitic',
'evasion',
'evasive',
'eve',
'even',
'evened',
'evener',
'evenest',
'evenfall',
'evening',
'evenly',
'evensong',
'event',
'eventful',
'eventfully',
'eventide',
'eventual',
'eventuality',
'eventuate',
'eventuation',
'ever',
'everblooming',
'everest',
'everglade',
'evergreen',
'everlasting',
'evermore',
'eversion',
'evert',
'everted',
'everting',
'every',
'everybody',
'everyday',
'everyman',
'everyone',
'everyplace',
'everything',
'everyway',
'everywhere',
'evict',
'evicted',
'evictee',
'evicting',
'eviction',
'evidence',
'evidenced',
'evidencing',
'evident',
'evidential',
'evidentiary',
'evidently',
'evil',
'evildoer',
'eviler',
'evilest',
'eviller',
'evillest',
'evilly',
'evince',
'evinced',
'evincible',
'evincing',
'evincive',
'eviscerate',
'evisceration',
'evitable',
'evocable',
'evocation',
'evocative',
'evoke',
'evoked',
'evoker',
'evoking',
'evolution',
'evolutionary',
'evolutionism',
'evolutionist',
'evolve',
'evolved',
'evolvement',
'evolver',
'evolving',
'evzone',
'ewe',
'ewer',
'ewing',
'ex',
'exacerbate',
'exacerbation',
'exact',
'exacta',
'exacted',
'exacter',
'exactest',
'exacting',
'exaction',
'exactitude',
'exactly',
'exaggerate',
'exaggeration',
'exaggerative',
'exalt',
'exaltation',
'exalted',
'exalter',
'exalting',
'exam',
'examination',
'examine',
'examined',
'examinee',
'examiner',
'examining',
'example',
'exampled',
'exampling',
'exarch',
'exarchy',
'exasperate',
'exasperation',
'excavate',
'excavation',
'exceed',
'exceeder',
'exceeding',
'excel',
'excelled',
'excellence',
'excellency',
'excellent',
'excellently',
'excelling',
'excelsior',
'except',
'excepted',
'excepting',
'exception',
'exceptionable',
'exceptional',
'exceptionality',
'excerpt',
'excerpted',
'excerpting',
'excessive',
'exchange',
'exchangeable',
'exchanger',
'exchanging',
'exchequer',
'excisable',
'excise',
'excised',
'exciseman',
'excising',
'excision',
'excitability',
'excitable',
'excitant',
'excitation',
'excitatory',
'excite',
'excited',
'excitement',
'exciter',
'exciting',
'exclaim',
'exclaimed',
'exclaimer',
'exclaiming',
'exclamation',
'exclamatory',
'exclave',
'exclude',
'excluder',
'excluding',
'exclusion',
'exclusive',
'exclusivity',
'excogitate',
'excommunicate',
'excommunication',
'excoriate',
'excoriation',
'excrement',
'excremental',
'excrescence',
'excrescent',
'excreta',
'excretal',
'excrete',
'excreted',
'excreter',
'excreting',
'excretion',
'excretory',
'excruciate',
'exculpate',
'exculpation',
'excursion',
'excursionist',
'excursive',
'excusable',
'excuse',
'excused',
'excuser',
'excusing',
'exec',
'execeptional',
'execrable',
'execrably',
'execrate',
'execration',
'executable',
'execute',
'executed',
'executer',
'executing',
'execution',
'executional',
'executioner',
'executive',
'executorial',
'executorship',
'executory',
'executrix',
'exedra',
'exegete',
'exegetic',
'exempla',
'exemplar',
'exemplary',
'exempli',
'exemplification',
'exemplified',
'exemplify',
'exemplifying',
'exemplum',
'exempt',
'exempted',
'exemptible',
'exempting',
'exemption',
'exemptive',
'exercisable',
'exercise',
'exercised',
'exerciser',
'exercising',
'exert',
'exerted',
'exerting',
'exertion',
'exertive',
'exfoliate',
'exhalant',
'exhalation',
'exhale',
'exhaled',
'exhalent',
'exhaling',
'exhaust',
'exhausted',
'exhaustible',
'exhausting',
'exhaustion',
'exhaustive',
'exhibit',
'exhibitant',
'exhibited',
'exhibiter',
'exhibiting',
'exhibition',
'exhibitioner',
'exhibitionism',
'exhibitionist',
'exhilarate',
'exhilaration',
'exhilarative',
'exhort',
'exhortation',
'exhorted',
'exhorter',
'exhorting',
'exhumation',
'exhume',
'exhumed',
'exhumer',
'exhuming',
'exhusband',
'exigence',
'exigency',
'exigent',
'exigible',
'exiguity',
'exile',
'exiled',
'exilic',
'exiling',
'exist',
'existed',
'existence',
'existent',
'existential',
'existentialism',
'existentialist',
'existing',
'exit',
'exited',
'exiting',
'exobiological',
'exobiologist',
'exobiology',
'exocrine',
'exogamic',
'exogamy',
'exogenously',
'exonerate',
'exoneration',
'exorbitance',
'exorbitant',
'exorbitantly',
'exorcise',
'exorcised',
'exorciser',
'exorcising',
'exorcism',
'exorcist',
'exorcize',
'exorcized',
'exorcizing',
'exordia',
'exordium',
'exoskeleton',
'exosphere',
'exospheric',
'exoteric',
'exothermal',
'exothermic',
'exotic',
'exotica',
'exoticism',
'exotism',
'exotoxic',
'exotoxin',
'expand',
'expandable',
'expander',
'expandible',
'expanding',
'expanse',
'expansible',
'expansion',
'expansionary',
'expansionism',
'expansionist',
'expansive',
'expatiate',
'expatiation',
'expatriate',
'expatriation',
'expect',
'expectable',
'expectance',
'expectancy',
'expectant',
'expectantly',
'expectation',
'expectative',
'expected',
'expecter',
'expecting',
'expectorant',
'expectorate',
'expectoration',
'expedience',
'expediency',
'expedient',
'expediential',
'expediently',
'expedite',
'expedited',
'expediter',
'expediting',
'expedition',
'expeditionary',
'expeditiously',
'expel',
'expellable',
'expelled',
'expellee',
'expeller',
'expelling',
'expend',
'expendability',
'expendable',
'expender',
'expending',
'expenditure',
'expense',
'expensed',
'expensing',
'expensive',
'experience',
'experienced',
'experiencing',
'experiential',
'experiment',
'experimental',
'experimentalist',
'experimentation',
'experimented',
'experimenter',
'experimenting',
'expert',
'experted',
'experting',
'expertise',
'expertly',
'expiable',
'expiate',
'expiation',
'expiatory',
'expiration',
'expiratory',
'expire',
'expirer',
'expiring',
'explain',
'explainable',
'explained',
'explainer',
'explaining',
'explanation',
'explanatory',
'explanted',
'explanting',
'expletive',
'explicable',
'explicate',
'explication',
'explicit',
'explicitly',
'explode',
'exploder',
'exploding',
'exploit',
'exploitable',
'exploitation',
'exploitative',
'exploited',
'exploitee',
'exploiter',
'exploiting',
'exploration',
'exploratory',
'explore',
'explorer',
'exploring',
'explosion',
'explosive',
'expo',
'exponent',
'exponential',
'export',
'exportable',
'exportation',
'exported',
'exporter',
'exporting',
'exposal',
'expose',
'exposed',
'exposer',
'exposing',
'exposit',
'exposited',
'expositing',
'exposition',
'expository',
'expostulate',
'expostulation',
'exposure',
'expound',
'expounder',
'expounding',
'expressed',
'expressible',
'expressing',
'expression',
'expressionism',
'expressionist',
'expressionistic',
'expressive',
'expressly',
'expressway',
'expropriate',
'expropriation',
'expulse',
'expulsed',
'expulsing',
'expulsion',
'expunge',
'expunger',
'expunging',
'expurgate',
'expurgation',
'expwy',
'exquisite',
'exquisitely',
'exsanguine',
'exscinding',
'exsert',
'exserted',
'exserting',
'ext',
'extant',
'extemporaneously',
'extemporary',
'extempore',
'extemporize',
'extemporized',
'extemporizing',
'extend',
'extendability',
'extendable',
'extender',
'extendibility',
'extendible',
'extending',
'extensible',
'extension',
'extensive',
'extensor',
'extent',
'extenuate',
'extenuation',
'exterior',
'exteriorize',
'exteriorized',
'exteriorizing',
'exteriorly',
'exterminate',
'extermination',
'extern',
'external',
'externalism',
'externalization',
'externalize',
'externalized',
'externalizing',
'exterritoriality',
'extinct',
'extincted',
'extincting',
'extinction',
'extinguised',
'extinguish',
'extinguishable',
'extinguished',
'extinguisher',
'extinguishing',
'extinguishment',
'extirpate',
'extirpation',
'extol',
'extoll',
'extolled',
'extoller',
'extolling',
'extorsion',
'extorsive',
'extort',
'extorted',
'extorter',
'extorting',
'extortion',
'extortionate',
'extortionately',
'extortioner',
'extortionist',
'extra',
'extracellular',
'extract',
'extracted',
'extracting',
'extraction',
'extractive',
'extracurricular',
'extraditable',
'extradite',
'extradited',
'extraditing',
'extradition',
'extragalactic',
'extralegal',
'extramarital',
'extramural',
'extraneously',
'extranuclear',
'extraordinarily',
'extraordinary',
'extrapolate',
'extrapolation',
'extrasensory',
'extraterrestrial',
'extraterritorial',
'extraterritoriality',
'extrauterine',
'extravagance',
'extravagant',
'extravagantly',
'extravaganza',
'extravehicular',
'extravert',
'extreme',
'extremely',
'extremer',
'extremest',
'extremism',
'extremist',
'extremity',
'extricable',
'extricate',
'extrication',
'extrinsic',
'extrospection',
'extroversion',
'extroversive',
'extrovert',
'extroverted',
'extrude',
'extruder',
'extruding',
'extrusion',
'extrusive',
'exuberance',
'exuberant',
'exuberantly',
'exudate',
'exudation',
'exudative',
'exude',
'exuding',
'exult',
'exultant',
'exultantly',
'exultation',
'exulted',
'exulting',
'exurb',
'exurban',
'exurbanite',
'exurbia',
'exxon',
'eye',
'eyeable',
'eyeball',
'eyeballed',
'eyeballing',
'eyebeam',
'eyebolt',
'eyebrow',
'eyecup',
'eyed',
'eyedropper',
'eyedropperful',
'eyeful',
'eyehole',
'eyehook',
'eyeing',
'eyelash',
'eyelet',
'eyeletted',
'eyeletting',
'eyelid',
'eyeliner',
'eyepiece',
'eyepoint',
'eyer',
'eyeshade',
'eyeshot',
'eyesight',
'eyesore',
'eyestalk',
'eyestone',
'eyestrain',
'eyeteeth',
'eyetooth',
'eyewash',
'eyewink',
'eying',
'eyrie',
'eyrir',
'ezekiel',
'fabian',
'fable',
'fabled',
'fabler',
'fabling',
'fabric',
'fabricate',
'fabrication',
'fabulist',
'fabulously',
'facade',
'face',
'faceable',
'faced',
'facedown',
'facelift',
'facer',
'facet',
'faceted',
'faceting',
'facetiously',
'facetted',
'facetting',
'faceup',
'facia',
'facial',
'facie',
'facile',
'facilely',
'facilitate',
'facilitation',
'facility',
'facing',
'facsimile',
'fact',
'factful',
'faction',
'factional',
'factionalism',
'factiously',
'factitiously',
'facto',
'factorable',
'factorage',
'factorial',
'factoring',
'factorize',
'factorized',
'factorship',
'factory',
'factotum',
'factual',
'factualism',
'facula',
'faculae',
'faculty',
'fad',
'fadable',
'faddier',
'faddish',
'faddism',
'faddist',
'faddy',
'fade',
'fadeaway',
'fadeout',
'fader',
'fading',
'faerie',
'faery',
'fahrenheit',
'faience',
'fail',
'failed',
'failing',
'faille',
'failsafe',
'failure',
'fain',
'fainer',
'fainest',
'faint',
'fainted',
'fainter',
'faintest',
'fainthearted',
'fainting',
'faintish',
'faintly',
'fair',
'faire',
'fairer',
'fairest',
'fairground',
'fairing',
'fairish',
'fairly',
'fairway',
'fairy',
'fairyism',
'fairyland',
'fait',
'faith',
'faithed',
'faithful',
'faithfully',
'faithing',
'faithlessly',
'fake',
'faked',
'fakeer',
'faker',
'fakery',
'faking',
'fakir',
'falchion',
'falcon',
'falconer',
'falconet',
'falconry',
'fall',
'fallaciously',
'fallacy',
'fallback',
'fallen',
'faller',
'fallibility',
'fallible',
'fallibly',
'falling',
'falloff',
'fallopian',
'fallout',
'fallow',
'fallowed',
'fallowing',
'false',
'falsehood',
'falsely',
'falser',
'falsest',
'falsetto',
'falsie',
'falsifiability',
'falsifiable',
'falsification',
'falsified',
'falsifier',
'falsify',
'falsifying',
'falsity',
'faltboat',
'falter',
'falterer',
'faltering',
'fame',
'famed',
'familarity',
'familia',
'familial',
'familiar',
'familiarity',
'familiarization',
'familiarize',
'familiarized',
'familiarizing',
'familiarly',
'family',
'famine',
'faming',
'famish',
'famished',
'famishing',
'famously',
'fan',
'fanatic',
'fanatical',
'fanaticism',
'fanaticize',
'fanaticized',
'fancied',
'fancier',
'fanciest',
'fanciful',
'fancifully',
'fancily',
'fancy',
'fancying',
'fancywork',
'fandango',
'fandom',
'fanfare',
'fanfold',
'fang',
'fanjet',
'fanlight',
'fanned',
'fanner',
'fanning',
'fanny',
'fantail',
'fantailed',
'fantasia',
'fantasie',
'fantasied',
'fantasist',
'fantasize',
'fantasized',
'fantasizing',
'fantasm',
'fantast',
'fantastic',
'fantastical',
'fantasy',
'fantasying',
'fantod',
'fantom',
'fanwise',
'fanwort',
'fanzine',
'faqir',
'faquir',
'far',
'farad',
'faraday',
'faraway',
'farce',
'farced',
'farcer',
'farcical',
'farcing',
'farcy',
'fare',
'farer',
'farewell',
'farewelled',
'farfetched',
'farina',
'faring',
'farm',
'farmable',
'farmed',
'farmer',
'farmhand',
'farmhouse',
'farming',
'farmland',
'farmstead',
'farmyard',
'faro',
'faroff',
'farrago',
'farrier',
'farriery',
'farrow',
'farrowed',
'farrowing',
'farseeing',
'farsighted',
'fart',
'farted',
'farther',
'farthermost',
'farthest',
'farthing',
'farthingale',
'farting',
'fascia',
'fasciae',
'fascial',
'fascicle',
'fascicled',
'fascinate',
'fascination',
'fascism',
'fascist',
'fascistic',
'fashed',
'fashion',
'fashionable',
'fashionably',
'fashioner',
'fashioning',
'fast',
'fastback',
'fastball',
'fasted',
'fasten',
'fastened',
'fastener',
'fastening',
'faster',
'fastest',
'fastidiously',
'fasting',
'fat',
'fatal',
'fatale',
'fatalism',
'fatalist',
'fatalistic',
'fatality',
'fatback',
'fate',
'fateful',
'fatefully',
'fathead',
'father',
'fatherhood',
'fathering',
'fatherland',
'fatherly',
'fathom',
'fathomable',
'fathomed',
'fathoming',
'fatigability',
'fatigable',
'fatiguability',
'fatiguable',
'fatigue',
'fatigued',
'fatiguing',
'fatly',
'fatso',
'fatted',
'fatten',
'fattened',
'fattener',
'fattening',
'fatter',
'fattest',
'fattier',
'fattiest',
'fattily',
'fatting',
'fattish',
'fatty',
'fatuity',
'fatuously',
'faubourg',
'faucet',
'faugh',
'faulkner',
'fault',
'faulted',
'faultfinder',
'faultfinding',
'faultier',
'faultiest',
'faultily',
'faulting',
'faultlessly',
'faulty',
'faun',
'fauna',
'faunae',
'faunal',
'faust',
'faustian',
'faut',
'fauve',
'fauvism',
'fauvist',
'faux',
'favor',
'favorable',
'favorably',
'favorer',
'favoring',
'favorite',
'favoritism',
'favour',
'favourer',
'favouring',
'fawn',
'fawned',
'fawner',
'fawnier',
'fawning',
'fawny',
'fax',
'faxed',
'faxing',
'fay',
'faying',
'faze',
'fazed',
'fazing',
'fbi',
'fealty',
'fear',
'fearer',
'fearful',
'fearfuller',
'fearfully',
'fearing',
'fearlessly',
'fearsome',
'fearsomely',
'feasance',
'feasant',
'fease',
'feasibility',
'feasible',
'feasibly',
'feast',
'feasted',
'feaster',
'feastful',
'feasting',
'feat',
'feater',
'featest',
'feather',
'featherbed',
'featherbedding',
'featherbrain',
'featherbrained',
'featheredge',
'featherier',
'feathering',
'featherweight',
'feathery',
'featlier',
'featliest',
'featly',
'feature',
'featuring',
'feaze',
'febrifuge',
'febrile',
'february',
'fecal',
'fecklessly',
'feculent',
'fecund',
'fecundate',
'fecundation',
'fecundity',
'fed',
'fedayeen',
'federacy',
'federal',
'federalism',
'federalist',
'federalization',
'federalize',
'federalized',
'federalizing',
'federate',
'federation',
'federational',
'federative',
'fedora',
'fee',
'feeble',
'feebler',
'feeblest',
'feeblish',
'feebly',
'feed',
'feedable',
'feedback',
'feedbag',
'feedbox',
'feeder',
'feeding',
'feedlot',
'feedstuff',
'feeing',
'feel',
'feeler',
'feeling',
'feet',
'feign',
'feigned',
'feigner',
'feigning',
'feinschmecker',
'feint',
'feinted',
'feinting',
'feist',
'feistier',
'feistiest',
'feisty',
'feldspar',
'felicitate',
'felicitation',
'felicitously',
'felicity',
'feline',
'felinely',
'felinity',
'felix',
'fell',
'fella',
'fellable',
'fellah',
'fellaheen',
'fellahin',
'fellate',
'fellatee',
'fellatio',
'fellation',
'fellatrice',
'fellatrix',
'felled',
'feller',
'fellest',
'felling',
'felloe',
'fellow',
'fellowed',
'fellowing',
'fellowly',
'fellowman',
'fellowship',
'felly',
'felon',
'feloniously',
'felony',
'felt',
'felted',
'felting',
'feltwork',
'fem',
'female',
'feminacy',
'feminine',
'femininely',
'femininity',
'feminise',
'feminism',
'feminist',
'feministic',
'feminity',
'feminization',
'feminize',
'feminized',
'feminizing',
'femme',
'femora',
'femoral',
'femur',
'fen',
'fence',
'fenced',
'fencepost',
'fencer',
'fencible',
'fencing',
'fend',
'fender',
'fending',
'fenestrae',
'fenestration',
'fennec',
'fennel',
'fenny',
'fenugreek',
'feoff',
'feoffment',
'feral',
'fermata',
'ferment',
'fermentable',
'fermentation',
'fermentative',
'fermented',
'fermenting',
'fermi',
'fermium',
'fern',
'fernery',
'ferniest',
'ferny',
'ferociously',
'ferocity',
'ferret',
'ferreted',
'ferreter',
'ferreting',
'ferrety',
'ferriage',
'ferric',
'ferried',
'ferrite',
'ferromagnetic',
'ferromagnetism',
'ferrotype',
'ferrule',
'ferruled',
'ferruling',
'ferrum',
'ferry',
'ferryage',
'ferryboat',
'ferrying',
'ferryman',
'fertile',
'fertilely',
'fertility',
'fertilizable',
'fertilization',
'fertilize',
'fertilized',
'fertilizer',
'fertilizing',
'ferule',
'feruled',
'feruling',
'fervency',
'fervent',
'fervently',
'fervid',
'fervidly',
'fervor',
'fervour',
'fescue',
'fesse',
'fessed',
'fessing',
'festal',
'fester',
'festering',
'festival',
'festive',
'festivity',
'festoon',
'festooning',
'feta',
'fetal',
'fetch',
'fetched',
'fetcher',
'fetching',
'fete',
'feted',
'feticide',
'fetid',
'fetidly',
'feting',
'fetish',
'fetishism',
'fetishist',
'fetishistic',
'fetlock',
'fetted',
'fetter',
'fetterer',
'fettering',
'fettle',
'fettucini',
'feud',
'feudal',
'feudalism',
'feudalist',
'feudalistic',
'feudary',
'feudatory',
'feuding',
'feudist',
'fever',
'feverfew',
'fevering',
'feverish',
'feverishly',
'few',
'fewer',
'fewest',
'fey',
'feyer',
'feyest',
'fez',
'fezzed',
'fiance',
'fiancee',
'fiasco',
'fiat',
'fib',
'fibbed',
'fibber',
'fibbing',
'fiber',
'fiberboard',
'fiberfill',
'fiberize',
'fiberized',
'fiberizing',
'fibre',
'fibril',
'fibrillate',
'fibrillation',
'fibrin',
'fibrinogen',
'fibroid',
'fibroin',
'fibroma',
'fibrose',
'fibula',
'fibulae',
'fibular',
'fica',
'fiche',
'fichu',
'fickle',
'fickler',
'ficklest',
'fiction',
'fictional',
'fictionalize',
'fictionalized',
'fictionalizing',
'fictitiously',
'fictive',
'fiddle',
'fiddled',
'fiddler',
'fiddlestick',
'fiddling',
'fide',
'fidel',
'fidelity',
'fidget',
'fidgeted',
'fidgeter',
'fidgeting',
'fidgety',
'fido',
'fiducial',
'fiduciarily',
'fiduciary',
'fie',
'fief',
'fiefdom',
'field',
'fielder',
'fielding',
'fieldleft',
'fieldmice',
'fieldpiece',
'fieldstone',
'fieldwork',
'fiend',
'fiendish',
'fiendishly',
'fierce',
'fiercely',
'fiercer',
'fiercest',
'fierier',
'fieriest',
'fierily',
'fiery',
'fiesta',
'fife',
'fifed',
'fifer',
'fifing',
'fifteen',
'fifteenth',
'fifth',
'fifthly',
'fiftieth',
'fifty',
'fig',
'figeater',
'figging',
'fight',
'fighter',
'fighting',
'figment',
'figurant',
'figurate',
'figuration',
'figurative',
'figure',
'figurehead',
'figurer',
'figurine',
'figuring',
'figwort',
'fiji',
'filagree',
'filagreed',
'filament',
'filamentary',
'filar',
'filaree',
'filbert',
'filch',
'filched',
'filcher',
'filching',
'file',
'fileable',
'filed',
'filename',
'filer',
'filespec',
'filet',
'fileted',
'fileting',
'filial',
'filibuster',
'filibusterer',
'filibustering',
'filicide',
'filigree',
'filigreed',
'filigreeing',
'filing',
'filipino',
'fill',
'fillable',
'fille',
'filled',
'filler',
'fillet',
'filleted',
'filleting',
'filling',
'fillip',
'filliped',
'filliping',
'fillmore',
'filly',
'film',
'filmdom',
'filmed',
'filmgoer',
'filmic',
'filmier',
'filmiest',
'filmily',
'filming',
'filmland',
'filmography',
'filmstrip',
'filmy',
'filter',
'filterability',
'filterable',
'filterer',
'filtering',
'filth',
'filthier',
'filthiest',
'filthily',
'filthy',
'filtrable',
'filtrate',
'filtration',
'fin',
'finable',
'finagle',
'finagled',
'finagler',
'finagling',
'final',
'finale',
'finalism',
'finalist',
'finality',
'finalization',
'finalize',
'finalized',
'finalizing',
'finance',
'financed',
'financial',
'financier',
'financing',
'finch',
'find',
'findable',
'finder',
'finding',
'fine',
'fineable',
'fined',
'finely',
'finer',
'finery',
'finespun',
'finesse',
'finessed',
'finessing',
'finest',
'finger',
'fingerboard',
'fingerer',
'fingering',
'fingerling',
'fingernail',
'fingerprint',
'fingerprinted',
'fingerprinting',
'fingertip',
'finial',
'finialed',
'finical',
'finickier',
'finickiest',
'finicky',
'fining',
'finish',
'finished',
'finisher',
'finishing',
'finite',
'finitely',
'finitude',
'fink',
'finked',
'finking',
'finland',
'finmark',
'finn',
'finnan',
'finned',
'finnickier',
'finnicky',
'finnier',
'finniest',
'finning',
'finnmark',
'finny',
'finochio',
'fiord',
'fir',
'fire',
'firearm',
'fireball',
'firebase',
'firebird',
'fireboat',
'firebomb',
'firebombed',
'firebombing',
'firebox',
'firebrand',
'firebreak',
'firebrick',
'firebug',
'firecracker',
'firedamp',
'firedog',
'firefly',
'firehouse',
'firelight',
'fireman',
'firepan',
'fireplace',
'fireplug',
'firepower',
'fireproof',
'firer',
'fireside',
'firetrap',
'firewater',
'fireweed',
'firewood',
'firework',
'fireworm',
'firing',
'firkin',
'firm',
'firma',
'firmament',
'firmed',
'firmer',
'firmest',
'firming',
'firmly',
'firry',
'first',
'firstborn',
'firsthand',
'firstling',
'firstly',
'firth',
'fiscal',
'fish',
'fishable',
'fishbone',
'fishbowl',
'fished',
'fisher',
'fisherman',
'fishery',
'fisheye',
'fishhook',
'fishier',
'fishiest',
'fishily',
'fishing',
'fishline',
'fishmeal',
'fishnet',
'fishpole',
'fishpond',
'fishskin',
'fishtail',
'fishtailed',
'fishtailing',
'fishwife',
'fishy',
'fissile',
'fissility',
'fission',
'fissionable',
'fissioning',
'fissure',
'fissuring',
'fist',
'fisted',
'fistful',
'fistic',
'fisticuff',
'fisting',
'fistula',
'fistulae',
'fistular',
'fit',
'fitful',
'fitfully',
'fitly',
'fittable',
'fitted',
'fitter',
'fittest',
'fitting',
'five',
'fivefold',
'fiver',
'fix',
'fixable',
'fixate',
'fixation',
'fixative',
'fixe',
'fixed',
'fixer',
'fixing',
'fixity',
'fixture',
'fixup',
'fizgig',
'fizz',
'fizzed',
'fizzer',
'fizzier',
'fizziest',
'fizzing',
'fizzle',
'fizzled',
'fizzling',
'fizzy',
'fjord',
'flab',
'flabbergast',
'flabbergasted',
'flabbergasting',
'flabbier',
'flabbiest',
'flabbily',
'flabby',
'flaccid',
'flaccidity',
'flack',
'flacon',
'flag',
'flagella',
'flagellant',
'flagellate',
'flagellation',
'flagellum',
'flageolet',
'flagger',
'flaggier',
'flaggiest',
'flagging',
'flaggy',
'flagman',
'flagon',
'flagpole',
'flagrance',
'flagrancy',
'flagrant',
'flagrante',
'flagrantly',
'flagship',
'flagstaff',
'flagstone',
'flail',
'flailed',
'flailing',
'flair',
'flak',
'flake',
'flaked',
'flaker',
'flakier',
'flakiest',
'flakily',
'flaking',
'flaky',
'flambe',
'flambeau',
'flambeaux',
'flambee',
'flambeed',
'flambeing',
'flamboyance',
'flamboyancy',
'flamboyant',
'flamboyantly',
'flame',
'flamed',
'flamenco',
'flameout',
'flameproof',
'flamer',
'flamethrower',
'flamier',
'flaming',
'flamingo',
'flammability',
'flammable',
'flammably',
'flammed',
'flamming',
'flamy',
'flan',
'flange',
'flanger',
'flanging',
'flank',
'flanked',
'flanker',
'flanking',
'flannel',
'flanneled',
'flannelet',
'flanneling',
'flannelled',
'flannelly',
'flap',
'flapjack',
'flappable',
'flapper',
'flappier',
'flappiest',
'flapping',
'flappy',
'flare',
'flaring',
'flash',
'flashback',
'flashbulb',
'flashcube',
'flashed',
'flasher',
'flashflood',
'flashforward',
'flashgun',
'flashier',
'flashiest',
'flashily',
'flashing',
'flashlamp',
'flashlight',
'flashtube',
'flashy',
'flask',
'flat',
'flatbed',
'flatboat',
'flatcar',
'flatfeet',
'flatfish',
'flatfoot',
'flatfooted',
'flathead',
'flatiron',
'flatland',
'flatly',
'flatted',
'flatten',
'flattened',
'flattener',
'flattening',
'flatter',
'flatterer',
'flattering',
'flattery',
'flattest',
'flatting',
'flattish',
'flattop',
'flatulence',
'flatulency',
'flatulent',
'flatulently',
'flatware',
'flatwise',
'flatwork',
'flatworm',
'flaunt',
'flaunted',
'flaunter',
'flauntier',
'flauntiest',
'flaunting',
'flaunty',
'flautist',
'flavonoid',
'flavonol',
'flavor',
'flavorer',
'flavorful',
'flavorfully',
'flavoring',
'flavorsome',
'flavory',
'flavour',
'flavouring',
'flavoury',
'flaw',
'flawed',
'flawier',
'flawing',
'flawlessly',
'flawy',
'flax',
'flaxen',
'flaxier',
'flaxseed',
'flaxy',
'flay',
'flayed',
'flayer',
'flaying',
'flea',
'fleabag',
'fleabane',
'fleabite',
'fleabitten',
'fleawort',
'fleche',
'fleck',
'flecking',
'flecky',
'fled',
'fledge',
'fledgier',
'fledging',
'fledgling',
'fledgy',
'flee',
'fleece',
'fleeced',
'fleecer',
'fleecier',
'fleeciest',
'fleecily',
'fleecing',
'fleecy',
'fleeing',
'fleer',
'fleering',
'fleet',
'fleeted',
'fleeter',
'fleetest',
'fleeting',
'fleetly',
'fleming',
'flemish',
'flemished',
'flenched',
'flenching',
'flense',
'flensed',
'flenser',
'flensing',
'flesh',
'fleshed',
'flesher',
'fleshier',
'fleshiest',
'fleshing',
'fleshlier',
'fleshliest',
'fleshly',
'fleshpot',
'fleshy',
'fletch',
'fletched',
'fletcher',
'fletching',
'fleury',
'flew',
'flex',
'flexed',
'flexibility',
'flexible',
'flexibly',
'flexile',
'flexing',
'flexion',
'flexitime',
'flexor',
'flexure',
'fleyed',
'flibbertigibbet',
'flick',
'flicker',
'flickering',
'flickery',
'flicking',
'flied',
'flier',
'fliest',
'flight',
'flighted',
'flightier',
'flightiest',
'flighting',
'flighty',
'flimflam',
'flimflammer',
'flimsier',
'flimsiest',
'flimsily',
'flimsy',
'flinch',
'flinched',
'flincher',
'flinching',
'flinder',
'fling',
'flinger',
'flinging',
'flint',
'flinted',
'flintier',
'flintiest',
'flintily',
'flinting',
'flintlike',
'flintlock',
'flinty',
'flip',
'flippancy',
'flippant',
'flippantly',
'flipper',
'flippest',
'flipping',
'flirt',
'flirtation',
'flirtatiously',
'flirted',
'flirter',
'flirtier',
'flirtiest',
'flirting',
'flirty',
'flit',
'flitch',
'flitched',
'flitching',
'flite',
'flitted',
'flitter',
'flittering',
'flitting',
'flivver',
'float',
'floatability',
'floatable',
'floatage',
'floatation',
'floater',
'floatier',
'floatiest',
'floaty',
'floccular',
'flock',
'flockier',
'flockiest',
'flocking',
'flocky',
'floe',
'flog',
'flogger',
'flogging',
'flood',
'flooder',
'floodgate',
'flooding',
'floodlight',
'floodlighted',
'floodlighting',
'floodlit',
'floodplain',
'floodwater',
'floodway',
'flooey',
'floor',
'floorboard',
'floorer',
'flooring',
'floorshift',
'floorshow',
'floorthrough',
'floorwalker',
'floozie',
'floozy',
'flop',
'flophouse',
'flopover',
'flopper',
'floppier',
'floppiest',
'floppily',
'flopping',
'floppy',
'flora',
'florae',
'floral',
'florence',
'florentine',
'florescence',
'florescent',
'floret',
'florid',
'florida',
'floridan',
'floridian',
'floridly',
'florin',
'florist',
'flossed',
'flossie',
'flossier',
'flossiest',
'flossing',
'flossy',
'flotation',
'flotilla',
'flotsam',
'flounce',
'flounced',
'flouncier',
'flounciest',
'flouncing',
'flouncy',
'flounder',
'floundering',
'flour',
'flouring',
'flourish',
'flourished',
'flourishing',
'floury',
'flout',
'flouted',
'flouter',
'flouting',
'flow',
'flowage',
'flowchart',
'flowcharted',
'flowcharting',
'flowed',
'flower',
'flowerer',
'floweret',
'flowerier',
'floweriest',
'flowering',
'flowerpot',
'flowery',
'flowing',
'flowmeter',
'flown',
'flu',
'flub',
'flubbed',
'flubbing',
'fluctuate',
'fluctuation',
'fluctuational',
'flue',
'flued',
'fluency',
'fluent',
'fluently',
'fluff',
'fluffed',
'fluffier',
'fluffiest',
'fluffily',
'fluffing',
'fluffy',
'fluid',
'fluidal',
'fluidic',
'fluidity',
'fluidize',
'fluidized',
'fluidizing',
'fluidly',
'fluke',
'fluked',
'flukey',
'flukier',
'flukiest',
'fluking',
'fluky',
'flume',
'flumed',
'fluming',
'flummery',
'flummox',
'flummoxed',
'flummoxing',
'flump',
'flumped',
'flung',
'flunk',
'flunked',
'flunker',
'flunkey',
'flunking',
'flunky',
'fluor',
'fluoresce',
'fluoresced',
'fluorescence',
'fluorescent',
'fluorescing',
'fluoridate',
'fluoridation',
'fluoride',
'fluorinate',
'fluorination',
'fluorine',
'fluorite',
'fluorocarbon',
'fluorophosphate',
'fluoroscope',
'fluoroscopic',
'fluoroscopist',
'fluoroscopy',
'flurried',
'flurry',
'flurrying',
'flush',
'flushable',
'flushed',
'flusher',
'flushest',
'flushing',
'fluster',
'flustering',
'flute',
'fluted',
'fluter',
'flutier',
'flutiest',
'fluting',
'flutist',
'flutter',
'flutterer',
'fluttering',
'fluttery',
'fluty',
'flux',
'fluxed',
'fluxing',
'fly',
'flyable',
'flyaway',
'flyblown',
'flyby',
'flycatcher',
'flyer',
'flying',
'flyleaf',
'flyman',
'flyover',
'flypaper',
'flyspeck',
'flytrap',
'flyway',
'flyweight',
'flywheel',
'foal',
'foaled',
'foaling',
'foam',
'foamed',
'foamer',
'foamier',
'foamiest',
'foamily',
'foaming',
'foamy',
'fob',
'fobbed',
'fobbing',
'focal',
'focalised',
'focalize',
'focalized',
'focalizing',
'foci',
'focused',
'focuser',
'focusing',
'focussed',
'focussing',
'fodder',
'foddering',
'foe',
'foehn',
'foeman',
'foetal',
'foeti',
'foetid',
'fog',
'fogbound',
'fogey',
'fogger',
'foggier',
'foggiest',
'foggily',
'fogging',
'foggy',
'foghorn',
'fogie',
'fogy',
'fogyish',
'fogyism',
'foible',
'foil',
'foilable',
'foiled',
'foiling',
'foilsman',
'foist',
'foisted',
'foisting',
'fold',
'foldable',
'foldage',
'foldaway',
'foldboat',
'folder',
'folderol',
'folding',
'foldout',
'folia',
'foliage',
'foliar',
'foliate',
'foliation',
'folic',
'folio',
'folioed',
'folioing',
'folk',
'folkish',
'folklore',
'folkloric',
'folklorist',
'folksier',
'folksiest',
'folksily',
'folksy',
'folktale',
'folkway',
'follicle',
'follicular',
'follow',
'followed',
'follower',
'followeth',
'following',
'followup',
'folly',
'foment',
'fomentation',
'fomented',
'fomenter',
'fomenting',
'fond',
'fondant',
'fonder',
'fondest',
'fonding',
'fondle',
'fondled',
'fondler',
'fondling',
'fondly',
'fondu',
'fondue',
'font',
'fontal',
'fontanelle',
'fontina',
'food',
'foodstuff',
'foofaraw',
'fool',
'fooled',
'foolery',
'foolfish',
'foolhardier',
'foolhardiest',
'foolhardily',
'foolhardy',
'fooling',
'foolish',
'foolisher',
'foolishest',
'foolishly',
'foolproof',
'foolscap',
'foot',
'footage',
'football',
'footbath',
'footboard',
'footboy',
'footbridge',
'footed',
'footer',
'footfall',
'footgear',
'foothill',
'foothold',
'footier',
'footing',
'footlight',
'footlocker',
'footloose',
'footman',
'footmark',
'footnote',
'footnoted',
'footnoting',
'footpace',
'footpad',
'footpath',
'footprint',
'footrace',
'footrest',
'footrope',
'footsie',
'footslog',
'footsore',
'footstep',
'footstool',
'footway',
'footwear',
'footwork',
'footworn',
'footy',
'foozle',
'foozling',
'fop',
'foppery',
'fopping',
'foppish',
'for',
'fora',
'forage',
'forager',
'foraging',
'foramina',
'forasmuch',
'foray',
'forayed',
'forayer',
'foraying',
'forbad',
'forbade',
'forbear',
'forbearance',
'forbearer',
'forbearing',
'forbid',
'forbiddance',
'forbidden',
'forbidder',
'forbidding',
'forbode',
'forboding',
'forbore',
'forborne',
'force',
'forced',
'forceful',
'forcefully',
'forcer',
'forcible',
'forcibly',
'forcing',
'ford',
'fordable',
'fordid',
'fording',
'fore',
'forearm',
'forearmed',
'forearming',
'forebay',
'forebear',
'forebearing',
'forebode',
'foreboder',
'foreboding',
'forebrain',
'foreby',
'forebye',
'forecast',
'forecasted',
'forecaster',
'forecasting',
'forecastle',
'foreclose',
'foreclosed',
'foreclosing',
'foreclosure',
'forecourt',
'foredate',
'foredeck',
'foredid',
'foredo',
'foredoing',
'foredoom',
'foredoomed',
'foredooming',
'forefather',
'forefeet',
'forefend',
'forefinger',
'forefoot',
'forefront',
'foregather',
'forego',
'foregoer',
'foregoing',
'foregone',
'foreground',
'foregut',
'forehand',
'forehead',
'forehoof',
'foreign',
'foreigner',
'forejudge',
'forejudger',
'forejudgment',
'foreknew',
'foreknow',
'foreknowing',
'foreknowledge',
'foreknown',
'forelady',
'foreland',
'foreleg',
'forelimb',
'forelock',
'foreman',
'foremanship',
'foremast',
'foremost',
'foremother',
'forename',
'forenamed',
'forenoon',
'forensic',
'foreordain',
'foreordained',
'foreordaining',
'foreordainment',
'foreordination',
'forepart',
'forepaw',
'foreplay',
'forepleasure',
'forequarter',
'foreran',
'forerun',
'forerunner',
'foresaid',
'foresail',
'foresaw',
'foresee',
'foreseeability',
'foreseeable',
'foreseeing',
'foreseen',
'foreseer',
'foreshadow',
'foreshadowed',
'foreshadower',
'foreshadowing',
'foresheet',
'foreshore',
'foreshorten',
'foreshortened',
'foreshortening',
'foreshowed',
'foreshown',
'foreside',
'foresight',
'foresighted',
'foreskin',
'forest',
'forestall',
'forestalled',
'forestaller',
'forestalling',
'forestation',
'forestay',
'forested',
'forester',
'forestery',
'foresting',
'forestry',
'foreswear',
'foreswearing',
'foreswore',
'foresworn',
'foretaste',
'foretasted',
'foretasting',
'foretell',
'foreteller',
'foretelling',
'forethought',
'forethoughtful',
'foretime',
'foretoken',
'foretokened',
'foretokening',
'foretold',
'foretop',
'forever',
'forevermore',
'forewarn',
'forewarned',
'forewarning',
'forewent',
'forewing',
'forewoman',
'foreword',
'foreworn',
'foreyard',
'forfeit',
'forfeitable',
'forfeited',
'forfeiting',
'forfeiture',
'forfend',
'forfending',
'forgather',
'forgathering',
'forgave',
'forge',
'forger',
'forgery',
'forget',
'forgetful',
'forgetfully',
'forgettable',
'forgetting',
'forging',
'forgivable',
'forgive',
'forgiven',
'forgiver',
'forgiving',
'forgo',
'forgoer',
'forgoing',
'forgone',
'forgot',
'forgotten',
'forint',
'forjudge',
'forjudger',
'forjudging',
'fork',
'forked',
'forker',
'forkful',
'forkier',
'forking',
'forklift',
'forklike',
'forksful',
'forky',
'forlorn',
'forlorner',
'forlornest',
'forlornly',
'form',
'forma',
'formable',
'formal',
'formaldehyde',
'formalin',
'formalism',
'formalist',
'formalistic',
'formality',
'formalization',
'formalize',
'formalized',
'formalizer',
'formalizing',
'formant',
'format',
'formation',
'formative',
'formatted',
'formatter',
'formatting',
'formed',
'former',
'formerly',
'formfeed',
'formfitting',
'formful',
'formic',
'formica',
'formidable',
'formidably',
'forming',
'formlessly',
'formula',
'formulae',
'formulary',
'formulate',
'formulation',
'fornicate',
'fornication',
'fornicatrix',
'forsake',
'forsaken',
'forsaker',
'forsaking',
'forsee',
'forseeable',
'forseen',
'forsook',
'forsooth',
'forspent',
'forswear',
'forswearing',
'forswore',
'forsworn',
'forsythia',
'fort',
'forte',
'forth',
'forthcoming',
'forthright',
'forthrightly',
'forthwith',
'fortieth',
'fortification',
'fortified',
'fortifier',
'fortify',
'fortifying',
'fortiori',
'fortissimo',
'fortitude',
'fortnight',
'fortnightly',
'fortran',
'fortressed',
'fortuitously',
'fortuity',
'fortunate',
'fortunately',
'fortune',
'fortuned',
'fortuneteller',
'fortunetelling',
'fortuning',
'forty',
'fortyfive',
'forum',
'forward',
'forwarder',
'forwardest',
'forwarding',
'forwardly',
'forwardsearch',
'forwent',
'forwhy',
'forworn',
'forzando',
'fossa',
'fossae',
'fossate',
'fosse',
'fossil',
'fossilization',
'fossilize',
'fossilized',
'fossilizing',
'fossillike',
'foster',
'fosterage',
'fosterer',
'fostering',
'fosterling',
'fought',
'foul',
'foulard',
'fouled',
'fouler',
'foulest',
'fouling',
'foully',
'foulmouthed',
'found',
'foundation',
'foundational',
'founder',
'foundering',
'founding',
'foundling',
'foundry',
'fount',
'fountain',
'fountained',
'fountainhead',
'four',
'fourflusher',
'fourfold',
'fourpenny',
'fourposter',
'fourscore',
'foursome',
'foursquare',
'fourteen',
'fourteenth',
'fourth',
'fourthly',
'fovea',
'foveae',
'foveal',
'foveate',
'fowl',
'fowled',
'fowler',
'fowling',
'fowlpox',
'fox',
'foxed',
'foxfire',
'foxfish',
'foxglove',
'foxhole',
'foxhound',
'foxier',
'foxiest',
'foxily',
'foxing',
'foxskin',
'foxtail',
'foxtrot',
'foxy',
'foyer',
'fraction',
'fractional',
'fractionalize',
'fractionalized',
'fractionalizing',
'fractiously',
'fracture',
'fracturing',
'frag',
'fragging',
'fragile',
'fragility',
'fragment',
'fragmental',
'fragmentarily',
'fragmentary',
'fragmentate',
'fragmentation',
'fragmented',
'fragmenting',
'fragrance',
'fragrancy',
'fragrant',
'fragrantly',
'frail',
'frailer',
'frailest',
'frailly',
'frailty',
'framable',
'frambesia',
'frame',
'framed',
'framer',
'framework',
'framing',
'franc',
'franca',
'france',
'franchise',
'franchised',
'franchisee',
'franchiser',
'franchising',
'franciscan',
'francisco',
'francium',
'franco',
'frangibility',
'frangible',
'frank',
'franked',
'frankenstein',
'franker',
'frankest',
'frankfort',
'frankfurt',
'frankfurter',
'frankincense',
'franking',
'franklin',
'frankly',
'frantic',
'franz',
'frappe',
'frapping',
'frat',
'frater',
'fraternal',
'fraternalism',
'fraternity',
'fraternization',
'fraternize',
'fraternized',
'fraternizer',
'fraternizing',
'fratriage',
'fratricidal',
'fratricide',
'frau',
'fraud',
'fraudulence',
'fraudulent',
'fraudulently',
'frauen',
'fraught',
'fraughted',
'fraulein',
'fray',
'frayed',
'fraying',
'frazzle',
'frazzled',
'frazzling',
'freak',
'freaked',
'freakier',
'freakiest',
'freakily',
'freaking',
'freakish',
'freakishly',
'freakout',
'freaky',
'freckle',
'freckled',
'frecklier',
'freckliest',
'freckling',
'freckly',
'frederick',
'free',
'freebee',
'freebie',
'freeboard',
'freeboot',
'freebooted',
'freebooter',
'freeborn',
'freed',
'freedman',
'freedom',
'freeform',
'freehand',
'freehearted',
'freehold',
'freeholder',
'freeing',
'freelance',
'freelanced',
'freelancing',
'freeload',
'freeloader',
'freeloading',
'freely',
'freeman',
'freemason',
'freemasonry',
'freeport',
'freer',
'freest',
'freestanding',
'freestone',
'freethinker',
'freethinking',
'freeway',
'freewheel',
'freewheeling',
'freewill',
'freezable',
'freeze',
'freezed',
'freezer',
'freezing',
'freight',
'freightage',
'freighted',
'freighter',
'freighting',
'freightyard',
'french',
'frenched',
'frenching',
'frenchman',
'frenchwoman',
'frenetic',
'frenum',
'frenzied',
'frenzily',
'frenzy',
'frenzying',
'freon',
'frequency',
'frequent',
'frequentation',
'frequented',
'frequenter',
'frequenting',
'frequently',
'frere',
'fresco',
'frescoed',
'frescoer',
'frescoing',
'frescoist',
'fresh',
'freshed',
'freshen',
'freshened',
'freshener',
'freshening',
'fresher',
'freshest',
'freshet',
'freshing',
'freshly',
'freshman',
'freshwater',
'fresnel',
'fresno',
'fret',
'fretful',
'fretfully',
'fretsaw',
'fretsome',
'fretted',
'fretter',
'frettier',
'frettiest',
'fretting',
'fretwork',
'freud',
'freudian',
'freudianism',
'friability',
'friable',
'friar',
'friarly',
'friary',
'fricassee',
'fricasseed',
'fricasseeing',
'fricative',
'friction',
'frictional',
'friday',
'fridge',
'fried',
'friedman',
'friend',
'friending',
'friendlier',
'friendliest',
'friendly',
'friendship',
'frier',
'frieze',
'frig',
'frigate',
'frigging',
'fright',
'frighted',
'frighten',
'frightened',
'frightening',
'frightful',
'frightfully',
'frighting',
'frigid',
'frigidity',
'frigidly',
'frijole',
'frill',
'frilled',
'friller',
'frillier',
'frilliest',
'frilling',
'frilly',
'fringe',
'fringelike',
'fringier',
'fringiest',
'fringing',
'fringy',
'frippery',
'frisbee',
'frisian',
'frisk',
'frisked',
'frisker',
'friskier',
'friskiest',
'friskily',
'frisking',
'frisky',
'frisson',
'fritted',
'fritter',
'fritterer',
'frittering',
'fritting',
'frivol',
'frivoled',
'frivoler',
'frivoling',
'frivolity',
'frivolled',
'frivolling',
'frivolously',
'friz',
'frizz',
'frizzed',
'frizzer',
'frizzier',
'frizziest',
'frizzily',
'frizzing',
'frizzle',
'frizzled',
'frizzler',
'frizzlier',
'frizzliest',
'frizzling',
'frizzly',
'frizzy',
'fro',
'frock',
'frocking',
'frog',
'frogeye',
'frogeyed',
'froggier',
'froggiest',
'frogging',
'froggy',
'frogman',
'frolic',
'frolicker',
'frolicking',
'frolicky',
'frolicsome',
'from',
'fromage',
'frond',
'front',
'frontage',
'frontager',
'frontal',
'fronted',
'fronter',
'frontier',
'frontiersman',
'fronting',
'frontispiece',
'frontward',
'frosh',
'frost',
'frostbit',
'frostbite',
'frostbiting',
'frostbitten',
'frosted',
'frostier',
'frostiest',
'frostily',
'frosting',
'frostlike',
'frostwork',
'frosty',
'froth',
'frothed',
'frothier',
'frothiest',
'frothily',
'frothing',
'frothy',
'froufrou',
'frouncing',
'frow',
'froward',
'frown',
'frowned',
'frowner',
'frowning',
'frowsier',
'frowstier',
'frowstiest',
'frowsty',
'frowsy',
'frowzier',
'frowziest',
'frowzily',
'frowzy',
'froze',
'frozen',
'frozenly',
'fructified',
'fructify',
'fructifying',
'fructose',
'fructuary',
'frug',
'frugal',
'frugality',
'frugging',
'fruit',
'fruitcake',
'fruited',
'fruiter',
'fruiterer',
'fruitful',
'fruitfully',
'fruitier',
'fruitiest',
'fruiting',
'fruition',
'fruitlessly',
'fruitlet',
'fruity',
'frumenty',
'frump',
'frumpier',
'frumpiest',
'frumpily',
'frumpish',
'frumpy',
'frusta',
'frustrate',
'frustration',
'frustum',
'fry',
'fryer',
'frying',
'frypan',
'fubbed',
'fubbing',
'fubsier',
'fuchsia',
'fuddle',
'fuddled',
'fuddling',
'fudge',
'fudging',
'fuehrer',
'fuel',
'fueled',
'fueler',
'fueling',
'fuelled',
'fueller',
'fuelling',
'fugal',
'fuggier',
'fugging',
'fuggy',
'fugit',
'fugitive',
'fugue',
'fugued',
'fuguing',
'fuguist',
'fuhrer',
'fuji',
'fulcra',
'fulcrum',
'fulfil',
'fulfill',
'fulfilled',
'fulfiller',
'fulfilling',
'fulfillment',
'fulgent',
'fulgurant',
'fulgurate',
'full',
'fullback',
'fulled',
'fuller',
'fullering',
'fullery',
'fullest',
'fullface',
'fullfil',
'fulling',
'fullterm',
'fulltime',
'fully',
'fulminant',
'fulminate',
'fulmination',
'fulsome',
'fulsomely',
'fumaric',
'fumarole',
'fumarolic',
'fumatory',
'fumble',
'fumbled',
'fumbler',
'fumbling',
'fume',
'fumed',
'fumer',
'fumet',
'fumier',
'fumiest',
'fumigant',
'fumigate',
'fumigation',
'fuming',
'fumitory',
'fumy',
'fun',
'function',
'functional',
'functionalist',
'functionalistic',
'functionality',
'functionary',
'functioning',
'fund',
'fundament',
'fundamental',
'fundamentalism',
'fundamentalist',
'fundi',
'funding',
'funeral',
'funerary',
'funereal',
'funfair',
'fungal',
'fungi',
'fungic',
'fungicidal',
'fungicide',
'fungiform',
'fungitoxic',
'fungoid',
'fungosity',
'funicular',
'funk',
'funked',
'funker',
'funkier',
'funkiest',
'funking',
'funky',
'funned',
'funnel',
'funneled',
'funneling',
'funnelled',
'funnelling',
'funnier',
'funniest',
'funnily',
'funning',
'funny',
'funnyman',
'fur',
'furbelow',
'furbish',
'furbished',
'furbishing',
'furcula',
'furculae',
'furcular',
'furioso',
'furiously',
'furl',
'furlable',
'furled',
'furler',
'furling',
'furlong',
'furlough',
'furloughed',
'furloughing',
'furnace',
'furnaced',
'furnacing',
'furnish',
'furnished',
'furnisher',
'furnishing',
'furniture',
'furor',
'furore',
'furrier',
'furriery',
'furriest',
'furrily',
'furriner',
'furring',
'furrow',
'furrowed',
'furrower',
'furrowing',
'furrowy',
'furry',
'further',
'furtherance',
'furthering',
'furthermore',
'furthermost',
'furthest',
'furtive',
'furuncle',
'fury',
'furze',
'furzier',
'furzy',
'fuse',
'fused',
'fusee',
'fusel',
'fuselage',
'fusible',
'fusibly',
'fusiform',
'fusil',
'fusile',
'fusileer',
'fusilier',
'fusillade',
'fusing',
'fusion',
'fusional',
'fussbudget',
'fussed',
'fusser',
'fussier',
'fussiest',
'fussily',
'fussing',
'fusspot',
'fussy',
'fustian',
'fustic',
'fustier',
'fustiest',
'fustily',
'fusty',
'futhermore',
'futile',
'futilely',
'futility',
'futural',
'future',
'futurism',
'futurist',
'futuristic',
'futurity',
'futurologist',
'futurology',
'fuze',
'fuzed',
'fuzee',
'fuzil',
'fuzing',
'fuzz',
'fuzzed',
'fuzzier',
'fuzziest',
'fuzzily',
'fuzzing',
'fuzzy',
'fwd',
'fylfot',
'gab',
'gabardine',
'gabbed',
'gabber',
'gabbier',
'gabbiest',
'gabbing',
'gabble',
'gabbled',
'gabbler',
'gabbling',
'gabbro',
'gabbroic',
'gabby',
'gaberdine',
'gabfest',
'gable',
'gabled',
'gabling',
'gabon',
'gabriel',
'gad',
'gadabout',
'gadder',
'gadding',
'gadfly',
'gadget',
'gadgeteer',
'gadgetry',
'gadgety',
'gadolinium',
'gaelic',
'gaff',
'gaffe',
'gaffed',
'gaffer',
'gaffing',
'gag',
'gaga',
'gage',
'gager',
'gagger',
'gagging',
'gaggle',
'gaggled',
'gaggling',
'gaging',
'gagman',
'gagster',
'gaiety',
'gaily',
'gain',
'gainable',
'gained',
'gainer',
'gainful',
'gainfully',
'gaining',
'gainlier',
'gainliest',
'gainly',
'gainsaid',
'gainsay',
'gainsayer',
'gainsaying',
'gainst',
'gait',
'gaited',
'gaiter',
'gaiting',
'gal',
'gala',
'galactic',
'galactoscope',
'galactose',
'galahad',
'galatea',
'galax',
'galaxy',
'gale',
'galena',
'galenic',
'galenite',
'galilean',
'galilee',
'galilei',
'galileo',
'galipot',
'galivant',
'gall',
'gallamine',
'gallant',
'gallanted',
'gallanting',
'gallantly',
'gallantry',
'gallbladder',
'galled',
'galleon',
'galleried',
'gallery',
'gallerying',
'galley',
'galliard',
'gallic',
'gallicism',
'gallied',
'gallimaufry',
'galling',
'gallinule',
'gallium',
'gallivant',
'gallivanted',
'gallivanter',
'gallivanting',
'gallon',
'galloot',
'gallop',
'galloped',
'galloper',
'galloping',
'gallstone',
'gallup',
'galoot',
'galop',
'galore',
'galosh',
'galoshed',
'galumph',
'galumphed',
'galumphing',
'galvanic',
'galvanism',
'galvanization',
'galvanize',
'galvanized',
'galvanizer',
'galvanizing',
'galvanometer',
'galvanometric',
'gam',
'gamba',
'gambian',
'gambit',
'gamble',
'gambled',
'gambler',
'gambling',
'gambol',
'gamboled',
'gamboling',
'gambolled',
'gambolling',
'gambrel',
'game',
'gamecock',
'gamed',
'gamekeeper',
'gamelan',
'gamely',
'gamer',
'gamesmanship',
'gamesome',
'gamesomely',
'gamest',
'gamester',
'gamete',
'gametic',
'gamey',
'gamic',
'gamier',
'gamiest',
'gamily',
'gamin',
'gamine',
'gaming',
'gamma',
'gammer',
'gammon',
'gamut',
'gamy',
'gander',
'gandering',
'gandhi',
'ganef',
'ganev',
'gang',
'ganger',
'ganging',
'gangland',
'ganglia',
'ganglial',
'gangliar',
'gangliate',
'ganglier',
'gangliest',
'gangling',
'ganglion',
'ganglionic',
'gangly',
'gangplank',
'gangplow',
'gangrel',
'gangrene',
'gangrened',
'gangrening',
'gangster',
'gangsterism',
'gangway',
'ganja',
'gannet',
'ganser',
'gantlet',
'gantleted',
'gantleting',
'gantry',
'ganymede',
'gaol',
'gaoled',
'gaoler',
'gaoling',
'gap',
'gape',
'gaped',
'gaper',
'gaping',
'gappier',
'gapping',
'gappy',
'gapy',
'gar',
'garage',
'garaging',
'garb',
'garbage',
'garbanzo',
'garbed',
'garbing',
'garble',
'garbled',
'garbler',
'garbling',
'garbo',
'garcon',
'garde',
'garden',
'gardened',
'gardener',
'gardenia',
'gardening',
'garfield',
'garfish',
'gargantua',
'gargantuan',
'gargle',
'gargled',
'gargler',
'gargling',
'gargoyle',
'gargoyled',
'garibaldi',
'garish',
'garishly',
'garland',
'garlanding',
'garlic',
'garlicky',
'garment',
'garmented',
'garmenting',
'garner',
'garnering',
'garnet',
'garnetlike',
'garnish',
'garnishable',
'garnished',
'garnishee',
'garnisheed',
'garnisheeing',
'garnishing',
'garnishment',
'garniture',
'garoted',
'garoting',
'garotte',
'garotted',
'garotter',
'garotting',
'garret',
'garrison',
'garrisoning',
'garrote',
'garroted',
'garroter',
'garroting',
'garrotte',
'garrotted',
'garrotter',
'garrotting',
'garrulity',
'garrulously',
'garter',
'gartering',
'garth',
'gary',
'gasbag',
'gaseously',
'gash',
'gashed',
'gasher',
'gashing',
'gashouse',
'gasified',
'gasifier',
'gasiform',
'gasify',
'gasifying',
'gasket',
'gaslight',
'gaslit',
'gasman',
'gasohol',
'gasoline',
'gasp',
'gasped',
'gasper',
'gasping',
'gassed',
'gasser',
'gassier',
'gassiest',
'gassing',
'gassy',
'gastight',
'gastrectomy',
'gastric',
'gastroenteric',
'gastroenterological',
'gastroenterologist',
'gastroenterology',
'gastrointestinal',
'gastrolavage',
'gastrologist',
'gastrology',
'gastronome',
'gastronomic',
'gastronomical',
'gastronomy',
'gastropod',
'gastroscope',
'gastroscopic',
'gastroscopy',
'gastrostomy',
'gat',
'gate',
'gatecrasher',
'gatefold',
'gatekeeper',
'gateman',
'gatepost',
'gateway',
'gather',
'gatherer',
'gathering',
'gatsby',
'gauche',
'gauchely',
'gaucher',
'gaucherie',
'gauchest',
'gaucho',
'gaud',
'gaudery',
'gaudier',
'gaudiest',
'gaudily',
'gaudy',
'gauge',
'gaugeable',
'gauger',
'gauging',
'gaunt',
'gaunter',
'gauntest',
'gauntlet',
'gauntleted',
'gauntly',
'gauze',
'gauzier',
'gauziest',
'gauzily',
'gauzy',
'gavage',
'gave',
'gavel',
'gaveled',
'gaveler',
'gaveling',
'gavelled',
'gaveller',
'gavelling',
'gavot',
'gavotte',
'gavotted',
'gavotting',
'gawk',
'gawked',
'gawker',
'gawkier',
'gawkiest',
'gawkily',
'gawking',
'gawkish',
'gawky',
'gay',
'gayer',
'gayest',
'gayety',
'gayly',
'gaze',
'gazebo',
'gazed',
'gazelle',
'gazer',
'gazette',
'gazetted',
'gazetteer',
'gazetting',
'gazing',
'gazpacho',
'gear',
'gearbox',
'gearcase',
'gearing',
'gearshift',
'gearwheel',
'gecko',
'gee',
'geed',
'geegaw',
'geeing',
'geek',
'geese',
'geezer',
'gefilte',
'geiger',
'geisha',
'gel',
'gelable',
'gelatin',
'gelatine',
'gelatinization',
'gelatinize',
'gelatinized',
'gelatinizing',
'gelatinously',
'geld',
'gelder',
'gelding',
'gelee',
'gelid',
'gelidity',
'gelidly',
'gelignite',
'gelled',
'gelling',
'gelt',
'gem',
'geminate',
'gemination',
'gemini',
'gemmier',
'gemmiest',
'gemmily',
'gemmological',
'gemmologist',
'gemmy',
'gemological',
'gemologist',
'gemology',
'gemsbok',
'gemstone',
'gemutlich',
'gemutlichkeit',
'gen',
'genal',
'gendarme',
'gendarmerie',
'gender',
'gendering',
'gene',
'genealogical',
'genealogist',
'genealogy',
'genera',
'general',
'generalissimo',
'generality',
'generalizable',
'generalization',
'generalize',
'generalized',
'generalizer',
'generalizing',
'generalship',
'generate',
'generation',
'generational',
'generative',
'generic',
'generosity',
'generously',
'genet',
'genetic',
'geneticist',
'geneva',
'genial',
'geniality',
'genic',
'genie',
'genital',
'genitalia',
'genitalic',
'genitive',
'genitourinary',
'geniture',
'genoa',
'genocidal',
'genocide',
'genome',
'genomic',
'genotype',
'genotypic',
'genotypical',
'genre',
'gent',
'genteel',
'genteeler',
'genteelest',
'genteelly',
'gentian',
'gentil',
'gentile',
'gentility',
'gentle',
'gentled',
'gentlefolk',
'gentleman',
'gentlemanlike',
'gentlemanly',
'gentler',
'gentlest',
'gentlewoman',
'gentling',
'gently',
'gentrification',
'gentry',
'genuflect',
'genuflected',
'genuflecting',
'genuflection',
'genuine',
'genuinely',
'geocentric',
'geochemical',
'geochemist',
'geochemistry',
'geode',
'geodesic',
'geodesist',
'geodesy',
'geodetic',
'geodic',
'geoduck',
'geog',
'geographer',
'geographic',
'geographical',
'geography',
'geoid',
'geoidal',
'geol',
'geologer',
'geologic',
'geological',
'geologist',
'geology',
'geom',
'geomagnetic',
'geomagnetism',
'geomancy',
'geomedicine',
'geometer',
'geometric',
'geometrical',
'geometrician',
'geometry',
'geomorphology',
'geophysical',
'geophysicist',
'george',
'georgia',
'georgian',
'georgic',
'geoscientist',
'geostationary',
'geosynclinal',
'geosyncline',
'geotaxy',
'geothermal',
'geothermic',
'geotropic',
'gerald',
'geranium',
'gerbil',
'geriatric',
'geriatrician',
'geriatrist',
'germ',
'german',
'germane',
'germanely',
'germanic',
'germanium',
'germanized',
'germantown',
'germany',
'germfree',
'germicidal',
'germicide',
'germier',
'germiest',
'germinal',
'germinate',
'germination',
'germproof',
'germy',
'gerontic',
'gerontological',
'gerontologist',
'gerontology',
'gerontotherapy',
'gerrymander',
'gerrymandering',
'gertrude',
'gerund',
'gesso',
'gestalt',
'gestalten',
'gestapo',
'gestate',
'gestation',
'gestational',
'geste',
'gesticulate',
'gesticulation',
'gestural',
'gesture',
'gesturer',
'gesturing',
'gesundheit',
'get',
'getable',
'getaway',
'gettable',
'getter',
'getting',
'gettysburg',
'getup',
'geum',
'gewgaw',
'geyser',
'ghana',
'ghanian',
'ghast',
'ghastful',
'ghastlier',
'ghastliest',
'ghastly',
'ghat',
'ghee',
'gherkin',
'ghetto',
'ghettoed',
'ghettoing',
'ghettoize',
'ghettoized',
'ghettoizing',
'ghost',
'ghosted',
'ghostier',
'ghostiest',
'ghosting',
'ghostlier',
'ghostliest',
'ghostlike',
'ghostly',
'ghostwrite',
'ghostwriter',
'ghostwriting',
'ghostwritten',
'ghostwrote',
'ghosty',
'ghoul',
'ghoulish',
'ghoulishly',
'giant',
'giantism',
'gibbed',
'gibber',
'gibbering',
'gibberish',
'gibbet',
'gibbeted',
'gibbeting',
'gibbetted',
'gibbing',
'gibbon',
'gibbosity',
'gibbously',
'gibe',
'gibed',
'giber',
'gibing',
'giblet',
'gibraltar',
'giddap',
'giddied',
'giddier',
'giddiest',
'giddily',
'giddy',
'giddying',
'gift',
'gifted',
'gifting',
'gig',
'gigabit',
'gigabyte',
'gigantic',
'gigantism',
'gigaton',
'gigawatt',
'gigging',
'giggle',
'giggled',
'giggler',
'gigglier',
'giggliest',
'giggling',
'giggly',
'gigolo',
'gigue',
'gila',
'gilbert',
'gild',
'gilder',
'gildhall',
'gilding',
'gill',
'gilled',
'giller',
'gillie',
'gillied',
'gilling',
'gillnet',
'gilly',
'gilt',
'gimbal',
'gimbaled',
'gimbaling',
'gimballed',
'gimballing',
'gimcrack',
'gimcrackery',
'gimel',
'gimlet',
'gimleted',
'gimleting',
'gimmick',
'gimmicking',
'gimmickry',
'gimmicky',
'gimp',
'gimped',
'gimpier',
'gimpiest',
'gimping',
'gimpy',
'gin',
'ginger',
'gingerbread',
'gingering',
'gingerly',
'gingersnap',
'gingery',
'gingham',
'gingivae',
'gingival',
'gingko',
'ginkgo',
'ginned',
'ginner',
'ginnier',
'ginning',
'ginny',
'ginseng',
'gip',
'gipper',
'gipping',
'gipsied',
'gipsy',
'gipsying',
'giraffe',
'girasol',
'gird',
'girder',
'girding',
'girdle',
'girdled',
'girdler',
'girdling',
'girl',
'girlfriend',
'girlhood',
'girlie',
'girlish',
'girly',
'girt',
'girted',
'girth',
'girthed',
'girthing',
'girting',
'gismo',
'gist',
'git',
'giuseppe',
'give',
'giveable',
'giveaway',
'given',
'giver',
'givin',
'giving',
'gizmo',
'gizzard',
'gjetost',
'glace',
'glaceed',
'glaceing',
'glacial',
'glaciate',
'glacier',
'glaciologist',
'glaciology',
'glad',
'gladden',
'gladdened',
'gladdening',
'gladder',
'gladdest',
'gladding',
'glade',
'gladelike',
'gladiate',
'gladiatorial',
'gladier',
'gladiola',
'gladioli',
'gladlier',
'gladliest',
'gladly',
'gladsome',
'gladsomely',
'gladstone',
'glady',
'glaive',
'glamor',
'glamorization',
'glamorize',
'glamorized',
'glamorizer',
'glamorizing',
'glamorously',
'glamour',
'glamouring',
'glamourize',
'glance',
'glanced',
'glancing',
'gland',
'glandular',
'glandularly',
'glare',
'glarier',
'glaring',
'glary',
'glasgow',
'glassblower',
'glassblowing',
'glassed',
'glasser',
'glassful',
'glassie',
'glassier',
'glassiest',
'glassily',
'glassine',
'glassing',
'glassman',
'glassware',
'glasswork',
'glassworker',
'glassy',
'glaucoma',
'glaze',
'glazed',
'glazer',
'glazier',
'glaziery',
'glazing',
'glazy',
'gleam',
'gleamed',
'gleamier',
'gleamiest',
'gleaming',
'gleamy',
'glean',
'gleanable',
'gleaned',
'gleaner',
'gleaning',
'gleba',
'glebe',
'glee',
'gleeful',
'gleefully',
'gleeman',
'gleesome',
'glen',
'glendale',
'glengarry',
'glenwood',
'glib',
'glibber',
'glibbest',
'glibly',
'glide',
'glider',
'gliding',
'glim',
'glimmer',
'glimmering',
'glimpse',
'glimpsed',
'glimpser',
'glimpsing',
'glint',
'glinted',
'glinting',
'glissade',
'glissading',
'glissandi',
'glissando',
'glisten',
'glistened',
'glistening',
'glister',
'glistering',
'glitch',
'glitter',
'glittering',
'glittery',
'glitzy',
'gloam',
'gloaming',
'gloat',
'gloater',
'glob',
'global',
'globalism',
'globalist',
'globalization',
'globalize',
'globalized',
'globalizing',
'globate',
'globe',
'globed',
'globetrotter',
'globetrotting',
'globing',
'globoid',
'globose',
'globular',
'globularity',
'globularly',
'globule',
'globulin',
'glockenspiel',
'glogg',
'glom',
'glommed',
'glomming',
'gloom',
'gloomed',
'gloomful',
'gloomier',
'gloomiest',
'gloomily',
'glooming',
'gloomy',
'glop',
'gloria',
'gloriam',
'gloried',
'glorification',
'glorified',
'glorifier',
'glorify',
'glorifying',
'gloriously',
'glory',
'glorying',
'glossal',
'glossarial',
'glossary',
'glossed',
'glosser',
'glossier',
'glossiest',
'glossily',
'glossing',
'glossolalia',
'glossy',
'glottal',
'glottic',
'glove',
'gloved',
'glover',
'gloving',
'glow',
'glowed',
'glower',
'glowering',
'glowfly',
'glowing',
'glowworm',
'gloxinia',
'gloze',
'glucose',
'glucosic',
'glue',
'glued',
'glueing',
'gluer',
'gluey',
'gluier',
'gluiest',
'gluily',
'gluing',
'glum',
'glumly',
'glummer',
'glummest',
'glut',
'glutamate',
'glutamine',
'gluteal',
'glutei',
'gluten',
'glutinously',
'glutted',
'glutting',
'glutton',
'gluttonously',
'gluttony',
'glycemia',
'glyceraldehyde',
'glyceride',
'glycerin',
'glycerine',
'glycerol',
'glycerose',
'glyceryl',
'glycogen',
'glycogenic',
'glycol',
'glycoside',
'glycosidic',
'glyoxylic',
'glyph',
'glyphic',
'glyptic',
'gnarl',
'gnarled',
'gnarlier',
'gnarliest',
'gnarling',
'gnarly',
'gnash',
'gnashed',
'gnashing',
'gnat',
'gnattier',
'gnaw',
'gnawable',
'gnawed',
'gnawer',
'gnawing',
'gnawn',
'gneissic',
'gnocchi',
'gnome',
'gnomic',
'gnomical',
'gnomish',
'gnomist',
'gnomon',
'gnomonic',
'gnostic',
'gnotobiology',
'gnotobiotic',
'gnu',
'go',
'goad',
'goading',
'goal',
'goaled',
'goalie',
'goaling',
'goalkeeper',
'goalpost',
'goaltender',
'goat',
'goatee',
'goateed',
'goatfish',
'goatherd',
'goatish',
'goatskin',
'gob',
'gobbed',
'gobbet',
'gobbing',
'gobble',
'gobbled',
'gobbledegook',
'gobbledygook',
'gobbler',
'gobbling',
'goblet',
'goblin',
'goby',
'god',
'godchild',
'godchildren',
'goddam',
'goddamn',
'goddamned',
'goddamning',
'goddard',
'goddaughter',
'godding',
'godfather',
'godhead',
'godhood',
'godlessly',
'godlier',
'godliest',
'godlike',
'godlily',
'godling',
'godly',
'godmother',
'godparent',
'godsend',
'godship',
'godson',
'godspeed',
'godwit',
'goer',
'goethe',
'gofer',
'goffer',
'goggle',
'goggled',
'goggler',
'gogglier',
'goggliest',
'goggling',
'goggly',
'gogo',
'going',
'goiter',
'goitre',
'gold',
'goldarn',
'goldbrick',
'goldbricker',
'golden',
'goldener',
'goldenest',
'goldenly',
'goldenrod',
'golder',
'goldest',
'goldfield',
'goldfinch',
'goldfish',
'goldsmith',
'goldurn',
'golem',
'golf',
'golfed',
'golfer',
'golfing',
'golgotha',
'golliwog',
'golly',
'gombo',
'gomorrah',
'gonad',
'gonadal',
'gonadectomized',
'gonadectomizing',
'gonadectomy',
'gonadial',
'gonadic',
'gondola',
'gondolier',
'gone',
'goner',
'gonfalon',
'gong',
'gonging',
'gonif',
'gonococcal',
'gonococci',
'gonococcic',
'gonof',
'gonoph',
'gonophore',
'gonorrhea',
'gonorrheal',
'gonorrhoea',
'goo',
'goober',
'good',
'goodby',
'goodbye',
'gooder',
'goodie',
'goodish',
'goodlier',
'goodliest',
'goodly',
'goodman',
'goodnight',
'goodrich',
'goodwife',
'goodwill',
'goody',
'goodyear',
'gooey',
'goof',
'goofball',
'goofed',
'goofier',
'goofiest',
'goofily',
'goofing',
'goofy',
'googly',
'googol',
'gooier',
'gooiest',
'gook',
'gooky',
'goon',
'gooney',
'goonie',
'goony',
'goop',
'goose',
'gooseberry',
'goosed',
'goosey',
'goosier',
'goosiest',
'goosing',
'goosy',
'gopher',
'gorblimy',
'gore',
'gorge',
'gorgeously',
'gorger',
'gorget',
'gorging',
'gorgon',
'gorgonzola',
'gorier',
'goriest',
'gorilla',
'gorily',
'goring',
'gorki',
'gormand',
'gormandize',
'gormandized',
'gormandizer',
'gormandizing',
'gorse',
'gorsier',
'gorsy',
'gory',
'gosh',
'goshawk',
'gosling',
'gospel',
'gossamer',
'gossip',
'gossiped',
'gossiper',
'gossiping',
'gossipping',
'gossipry',
'gossipy',
'gossoon',
'got',
'goth',
'gothic',
'gothicism',
'gothicist',
'gothicize',
'gotten',
'gouache',
'gouda',
'gouge',
'gouger',
'gouging',
'goulash',
'gourami',
'gourd',
'gourde',
'gourmand',
'gourmandize',
'gourmet',
'gout',
'goutier',
'goutiest',
'goutily',
'gouty',
'gov',
'govern',
'governability',
'governable',
'governance',
'governed',
'governing',
'government',
'governmental',
'governor',
'governorate',
'governorship',
'govt',
'gown',
'gowned',
'gowning',
'gownsman',
'goy',
'goyim',
'goyish',
'graal',
'grab',
'grabbed',
'grabber',
'grabbier',
'grabbiest',
'grabbing',
'grabby',
'graben',
'grace',
'graced',
'graceful',
'gracefully',
'gracelessly',
'gracile',
'gracing',
'gracioso',
'graciously',
'grackle',
'grad',
'gradable',
'gradate',
'gradation',
'gradational',
'grade',
'grader',
'gradient',
'grading',
'gradual',
'gradualism',
'graduand',
'graduate',
'graduation',
'graecize',
'graecized',
'graecizing',
'graffiti',
'graffito',
'graft',
'graftage',
'grafted',
'grafter',
'grafting',
'graham',
'grail',
'grain',
'grained',
'grainer',
'grainfield',
'grainier',
'grainiest',
'graining',
'grainy',
'gram',
'gramarye',
'gramercy',
'grammar',
'grammarian',
'grammatical',
'gramme',
'grammy',
'gramophone',
'gramp',
'grana',
'granary',
'grand',
'grandad',
'grandam',
'grandame',
'grandaunt',
'grandbaby',
'grandchild',
'grandchildren',
'granddad',
'granddaughter',
'grande',
'grandee',
'grander',
'grandest',
'grandeur',
'grandfather',
'grandiloquence',
'grandiloquent',
'grandiloquently',
'grandiose',
'grandiosely',
'grandiosity',
'grandly',
'grandma',
'grandmaster',
'grandmaternal',
'grandmother',
'grandnephew',
'grandniece',
'grandpa',
'grandparent',
'grandsir',
'grandson',
'grandstand',
'grandstander',
'grandtotal',
'granduncle',
'grange',
'granger',
'granite',
'graniteware',
'granitic',
'grannie',
'granny',
'granola',
'grant',
'grantable',
'granted',
'grantee',
'granter',
'granting',
'grantsman',
'grantsmanship',
'granular',
'granularity',
'granularly',
'granulate',
'granulation',
'granule',
'granulose',
'grape',
'grapefruit',
'grapery',
'grapeshot',
'grapevine',
'graph',
'graphed',
'graphic',
'graphical',
'graphing',
'graphite',
'graphitic',
'graphological',
'graphologist',
'graphology',
'grapier',
'grapnel',
'grapple',
'grappled',
'grappler',
'grappling',
'grapy',
'grasp',
'graspable',
'grasped',
'grasper',
'grasping',
'grassed',
'grassfire',
'grasshopper',
'grassier',
'grassiest',
'grassily',
'grassing',
'grassland',
'grassplot',
'grassy',
'grata',
'gratae',
'grate',
'grateful',
'gratefully',
'grater',
'gratia',
'gratification',
'gratified',
'gratify',
'gratifying',
'gratin',
'gratitude',
'gratuitously',
'gratuity',
'graupel',
'gravamina',
'grave',
'graved',
'gravel',
'graveled',
'graveling',
'gravelled',
'gravelling',
'gravelly',
'graven',
'graver',
'gravest',
'gravestone',
'graveyard',
'gravid',
'gravidity',
'gravidly',
'gravimeter',
'gravimetric',
'graving',
'gravitate',
'gravitation',
'gravitational',
'gravitative',
'gravitic',
'graviton',
'gravity',
'gravure',
'gravy',
'gray',
'graybeard',
'grayed',
'grayer',
'grayest',
'graying',
'grayish',
'grayling',
'grayly',
'grazable',
'graze',
'grazed',
'grazer',
'grazier',
'grazing',
'grazioso',
'grease',
'greased',
'greasepaint',
'greaser',
'greasewood',
'greasier',
'greasiest',
'greasily',
'greasing',
'greasy',
'great',
'greatcoat',
'greaten',
'greatened',
'greatening',
'greater',
'greatest',
'greathearted',
'greatly',
'greave',
'greaved',
'grebe',
'grecian',
'grecized',
'greco',
'greece',
'greed',
'greedier',
'greediest',
'greedily',
'greedy',
'greek',
'green',
'greenback',
'greenbelt',
'greened',
'greener',
'greenery',
'greenest',
'greengrocer',
'greenhorn',
'greenhouse',
'greenier',
'greeniest',
'greening',
'greenish',
'greenland',
'greenly',
'greenroom',
'greenstick',
'greensward',
'greenthumbed',
'greenwich',
'greenwood',
'greeny',
'greet',
'greeted',
'greeter',
'greeting',
'gregariously',
'gregorian',
'gregory',
'gremlin',
'gremmie',
'gremmy',
'grenada',
'grenade',
'grenadier',
'grenadine',
'greta',
'grew',
'grey',
'greyed',
'greyer',
'greyest',
'greyhound',
'greying',
'greyish',
'greyly',
'grid',
'griddle',
'griddlecake',
'griddled',
'griddling',
'gridiron',
'gridlock',
'grief',
'grievance',
'grievant',
'grieve',
'grieved',
'griever',
'grieving',
'grievously',
'griffin',
'griffon',
'grift',
'grifted',
'grifter',
'grifting',
'grill',
'grillage',
'grille',
'grilled',
'griller',
'grillework',
'grilling',
'grillwork',
'grim',
'grimace',
'grimaced',
'grimacer',
'grimacing',
'grime',
'grimed',
'grimier',
'grimiest',
'grimily',
'griming',
'grimly',
'grimm',
'grimmer',
'grimmest',
'grimy',
'grin',
'grind',
'grinder',
'grindery',
'grinding',
'grindstone',
'gringo',
'grinned',
'grinner',
'grinning',
'griot',
'grip',
'gripe',
'griped',
'griper',
'gripey',
'gripier',
'gripiest',
'griping',
'grippe',
'gripper',
'grippier',
'grippiest',
'gripping',
'gripple',
'grippy',
'gripsack',
'gript',
'gripy',
'grislier',
'grisliest',
'grisly',
'grist',
'gristle',
'gristlier',
'gristliest',
'gristly',
'gristmill',
'grit',
'gritted',
'grittier',
'grittiest',
'grittily',
'gritting',
'gritty',
'grizzle',
'grizzled',
'grizzler',
'grizzlier',
'grizzliest',
'grizzling',
'grizzly',
'groan',
'groaned',
'groaner',
'groaning',
'groat',
'grocer',
'grocery',
'grog',
'groggery',
'groggier',
'groggiest',
'groggily',
'groggy',
'grogram',
'grogshop',
'groin',
'groined',
'groining',
'grommet',
'groom',
'groomed',
'groomer',
'grooming',
'groomsman',
'groove',
'grooved',
'groover',
'groovier',
'grooviest',
'grooving',
'groovy',
'grope',
'groped',
'groper',
'groping',
'grosbeak',
'groschen',
'grosgrain',
'grossed',
'grosser',
'grossest',
'grossing',
'grossly',
'grosz',
'grot',
'grotesque',
'grotesquely',
'grotto',
'grouch',
'grouched',
'grouchier',
'grouchiest',
'grouchily',
'grouching',
'groucho',
'grouchy',
'ground',
'groundage',
'grounder',
'groundhog',
'grounding',
'groundlessly',
'groundling',
'groundnut',
'groundsheet',
'groundswell',
'groundwater',
'groundwave',
'groundwork',
'group',
'grouped',
'grouper',
'groupie',
'grouping',
'grouse',
'groused',
'grouser',
'grousing',
'grout',
'grouted',
'grouter',
'groutier',
'groutiest',
'grouting',
'grouty',
'grove',
'groved',
'grovel',
'groveled',
'groveler',
'groveling',
'grovelled',
'grovelling',
'grow',
'growable',
'grower',
'growing',
'growl',
'growled',
'growler',
'growlier',
'growliest',
'growling',
'growly',
'grown',
'grownup',
'growth',
'grub',
'grubbed',
'grubber',
'grubbier',
'grubbiest',
'grubbily',
'grubbing',
'grubby',
'grubstake',
'grubstaked',
'grubstaker',
'grubstaking',
'grubworm',
'grudge',
'grudger',
'grudging',
'gruel',
'grueled',
'grueler',
'grueling',
'gruelled',
'grueller',
'gruelling',
'gruesome',
'gruesomely',
'gruesomer',
'gruesomest',
'gruff',
'gruffed',
'gruffer',
'gruffest',
'gruffish',
'gruffly',
'gruffy',
'grumble',
'grumbled',
'grumbler',
'grumbling',
'grumbly',
'grump',
'grumped',
'grumpier',
'grumpiest',
'grumpily',
'grumping',
'grumpish',
'grumpy',
'grungier',
'grungiest',
'grungy',
'grunion',
'grunt',
'grunted',
'grunter',
'grunting',
'gruntle',
'gruntled',
'grutten',
'gryphon',
'guacamole',
'guaco',
'guam',
'guanaco',
'guanin',
'guanine',
'guano',
'guar',
'guarani',
'guarantee',
'guaranteed',
'guaranteeing',
'guarantied',
'guaranty',
'guarantying',
'guard',
'guardant',
'guarder',
'guardhouse',
'guardian',
'guardianship',
'guarding',
'guardrail',
'guardsman',
'guatemala',
'guatemalan',
'guava',
'gubernative',
'gubernatorial',
'guck',
'gudgeon',
'guerdon',
'guerilla',
'guernsey',
'guerre',
'guerrilla',
'guessed',
'guesser',
'guessing',
'guesstimate',
'guesswork',
'guest',
'guested',
'guesting',
'guff',
'guffaw',
'guffawed',
'guffawing',
'guiana',
'guidable',
'guidance',
'guide',
'guidebook',
'guideline',
'guider',
'guiding',
'guidon',
'guild',
'guilder',
'guildhall',
'guildry',
'guile',
'guiled',
'guileful',
'guilelessly',
'guiling',
'guillotine',
'guillotined',
'guillotining',
'guilt',
'guiltier',
'guiltiest',
'guiltily',
'guiltlessly',
'guilty',
'guinea',
'guinean',
'guiro',
'guise',
'guised',
'guising',
'guitar',
'guitarist',
'gulch',
'gulden',
'gulf',
'gulfed',
'gulfier',
'gulfing',
'gulflike',
'gulfweed',
'gulfy',
'gull',
'gullable',
'gullably',
'gulled',
'gullet',
'gulley',
'gullibility',
'gullible',
'gullibly',
'gullied',
'gulling',
'gully',
'gullying',
'gulp',
'gulped',
'gulper',
'gulpier',
'gulping',
'gulpy',
'gum',
'gumbo',
'gumboil',
'gumdrop',
'gumlike',
'gummed',
'gummer',
'gummier',
'gummiest',
'gumming',
'gummy',
'gumption',
'gumshoe',
'gumshoed',
'gumtree',
'gumweed',
'gumwood',
'gun',
'gunbarrel',
'gunboat',
'guncotton',
'gundog',
'gunfight',
'gunfighter',
'gunfire',
'gung',
'gunk',
'gunlock',
'gunman',
'gunmetal',
'gunned',
'gunnel',
'gunner',
'gunnery',
'gunning',
'gunny',
'gunnysack',
'gunplay',
'gunpoint',
'gunpowder',
'gunroom',
'gunrunner',
'gunrunning',
'gunsel',
'gunship',
'gunshot',
'gunslinger',
'gunslinging',
'gunsmith',
'gunstock',
'gunwale',
'gunwhale',
'guppy',
'gurgle',
'gurgled',
'gurgling',
'gurney',
'guru',
'gush',
'gushed',
'gusher',
'gushier',
'gushiest',
'gushily',
'gushing',
'gushy',
'gusset',
'gusseted',
'gusseting',
'gussied',
'gussy',
'gussying',
'gust',
'gustable',
'gustation',
'gustative',
'gustatorial',
'gustatorily',
'gustatory',
'gusted',
'gustier',
'gustiest',
'gustily',
'gusting',
'gusto',
'gusty',
'gut',
'gutlike',
'gutsier',
'gutsiest',
'gutsy',
'gutta',
'gutted',
'gutter',
'guttering',
'guttersnipe',
'guttery',
'guttier',
'guttiest',
'gutting',
'guttural',
'gutty',
'guy',
'guyana',
'guyed',
'guying',
'guzzle',
'guzzled',
'guzzler',
'guzzling',
'gweduc',
'gweduck',
'gym',
'gymkhana',
'gymnasia',
'gymnasium',
'gymnast',
'gymnastic',
'gymnosperm',
'gynarchy',
'gynecologic',
'gynecological',
'gynecologist',
'gynecology',
'gyp',
'gypper',
'gypping',
'gypsied',
'gypsum',
'gypsy',
'gypsydom',
'gypsying',
'gypsyish',
'gypsyism',
'gyral',
'gyrate',
'gyration',
'gyratory',
'gyre',
'gyrfalcon',
'gyring',
'gyro',
'gyroidal',
'gyromagnetic',
'gyroscope',
'gyroscopic',
'gyrose',
'gyve',
'gyved',
'gyving',
'ha',
'habanera',
'haberdasher',
'haberdashery',
'habile',
'habiliment',
'habilitate',
'habilitation',
'habit',
'habitability',
'habitable',
'habitably',
'habitancy',
'habitant',
'habitat',
'habitation',
'habited',
'habiting',
'habitual',
'habituality',
'habituate',
'habituation',
'habitude',
'habitue',
'hacienda',
'hack',
'hackamore',
'hackberry',
'hackbut',
'hackee',
'hacker',
'hackie',
'hacking',
'hackle',
'hackled',
'hackler',
'hacklier',
'hackling',
'hackly',
'hackman',
'hackney',
'hackneyed',
'hackneying',
'hacksaw',
'hackwork',
'had',
'haddie',
'haddock',
'hading',
'hadj',
'hadjee',
'hadji',
'hadron',
'hadronic',
'hadst',
'haematin',
'haemoglobin',
'hafnium',
'haft',
'hafted',
'hafter',
'hafting',
'haftorah',
'hag',
'hagborn',
'hagfish',
'haggard',
'haggardly',
'hagging',
'haggish',
'haggle',
'haggled',
'haggler',
'haggling',
'hagiographer',
'hagiography',
'hagridden',
'hagride',
'hagriding',
'hagrode',
'hague',
'hah',
'hahnium',
'haiku',
'hail',
'hailed',
'hailer',
'hailing',
'hailstone',
'hailstorm',
'hair',
'hairball',
'hairband',
'hairbreadth',
'hairbrush',
'haircloth',
'haircut',
'haircutter',
'haircutting',
'hairdo',
'hairdresser',
'hairdressing',
'hairier',
'hairiest',
'hairlike',
'hairline',
'hairlock',
'hairpiece',
'hairpin',
'hairsbreadth',
'hairsplitter',
'hairsplitting',
'hairspray',
'hairspring',
'hairstreak',
'hairstyle',
'hairstyling',
'hairstylist',
'hairweaver',
'hairweaving',
'hairwork',
'hairworm',
'hairy',
'haiti',
'haitian',
'haji',
'hajj',
'hajji',
'hake',
'halavah',
'halberd',
'halcyon',
'hale',
'haled',
'haler',
'halest',
'half',
'halfback',
'halfbeak',
'halfhearted',
'halflife',
'halfpence',
'halfpenny',
'halftime',
'halftone',
'halfway',
'halibut',
'halide',
'halidom',
'halidome',
'halifax',
'haling',
'halite',
'hall',
'hallah',
'hallelujah',
'hallmark',
'hallmarked',
'hallo',
'halloa',
'halloaing',
'halloed',
'halloo',
'hallooed',
'hallooing',
'hallow',
'hallowed',
'halloween',
'hallower',
'hallowing',
'hallucinate',
'hallucination',
'hallucinational',
'hallucinative',
'hallucinatory',
'hallucinogen',
'hallucinogenic',
'hallway',
'halo',
'haloed',
'halogen',
'halogenoid',
'haloing',
'halometer',
'halt',
'halted',
'halter',
'haltering',
'halting',
'halva',
'halvah',
'halve',
'halved',
'halving',
'halyard',
'ham',
'hamadryad',
'hamburg',
'hamburger',
'hamilton',
'hamiltonian',
'hamlet',
'hammed',
'hammer',
'hammerer',
'hammerhead',
'hammering',
'hammerlock',
'hammertoe',
'hammier',
'hammiest',
'hammily',
'hamming',
'hammock',
'hammy',
'hamper',
'hamperer',
'hampering',
'hampshire',
'hampshireman',
'hampshirite',
'hamster',
'hamstring',
'hamstringing',
'hamstrung',
'hance',
'hand',
'handbag',
'handball',
'handbarrow',
'handbill',
'handbook',
'handbreadth',
'handcar',
'handcart',
'handclasp',
'handcraft',
'handcrafted',
'handcrafting',
'handcuff',
'handcuffed',
'handcuffing',
'handel',
'handfast',
'handfasted',
'handful',
'handgrip',
'handgun',
'handhold',
'handicap',
'handicapper',
'handicapping',
'handicraft',
'handicraftsman',
'handier',
'handiest',
'handily',
'handing',
'handiwork',
'handkerchief',
'handle',
'handlebar',
'handled',
'handler',
'handling',
'handloom',
'handmade',
'handmaid',
'handmaiden',
'handoff',
'handout',
'handpick',
'handpicking',
'handpiece',
'handrail',
'handsaw',
'handsbreadth',
'handselling',
'handset',
'handsewn',
'handsful',
'handshake',
'handshaking',
'handsome',
'handsomely',
'handsomer',
'handsomest',
'handspring',
'handstand',
'handwheel',
'handwork',
'handwoven',
'handwrit',
'handwrite',
'handwriting',
'handwritten',
'handwrote',
'handy',
'handyman',
'hang',
'hangable',
'hangar',
'hangaring',
'hangdog',
'hanger',
'hangfire',
'hanging',
'hangman',
'hangnail',
'hangout',
'hangover',
'hangtag',
'hangup',
'hank',
'hanked',
'hanker',
'hankerer',
'hankering',
'hankie',
'hanking',
'hanky',
'hanoi',
'hansel',
'hansom',
'hanukkah',
'hanuman',
'haole',
'hap',
'haphazard',
'haphazardly',
'haplessly',
'haploid',
'haploidy',
'haply',
'happen',
'happened',
'happening',
'happenstance',
'happier',
'happiest',
'happily',
'happing',
'happy',
'harangue',
'harangued',
'haranguer',
'haranguing',
'harassed',
'harasser',
'harassing',
'harassment',
'harbinger',
'harbor',
'harborage',
'harborer',
'harboring',
'harbour',
'harbouring',
'hard',
'hardback',
'hardball',
'hardboard',
'hardboiled',
'hardbought',
'hardbound',
'hardcase',
'hardcore',
'hardcover',
'harden',
'hardened',
'hardener',
'hardening',
'harder',
'hardest',
'hardhat',
'hardhead',
'hardhearted',
'hardier',
'hardiest',
'hardihood',
'hardily',
'harding',
'hardly',
'hardpan',
'hardset',
'hardshell',
'hardship',
'hardstand',
'hardtack',
'hardtop',
'hardware',
'hardwood',
'hardworking',
'hardy',
'hare',
'harebell',
'harebrained',
'hareem',
'harelike',
'harelip',
'harem',
'haring',
'hark',
'harked',
'harken',
'harkened',
'harkener',
'harkening',
'harking',
'harlem',
'harlequin',
'harlot',
'harlotry',
'harm',
'harmed',
'harmer',
'harmful',
'harmfully',
'harming',
'harmlessly',
'harmonic',
'harmonica',
'harmoniously',
'harmonium',
'harmonization',
'harmonize',
'harmonized',
'harmonizer',
'harmonizing',
'harmony',
'harnessed',
'harnesser',
'harnessing',
'harold',
'harp',
'harped',
'harper',
'harping',
'harpist',
'harpoon',
'harpooner',
'harpooning',
'harpsichord',
'harpsichordist',
'harpy',
'harridan',
'harried',
'harrier',
'harriet',
'harrison',
'harrow',
'harrowed',
'harrower',
'harrowing',
'harrumph',
'harrumphed',
'harry',
'harrying',
'harsh',
'harshen',
'harshened',
'harshening',
'harsher',
'harshest',
'harshly',
'hart',
'hartebeest',
'hartford',
'hartshorn',
'haruspex',
'harvard',
'harvest',
'harvestable',
'harvested',
'harvester',
'harvesting',
'harvestman',
'hasenpfeffer',
'hash',
'hashed',
'hasheesh',
'hashhead',
'hashing',
'hashish',
'hasid',
'hasidic',
'hasidim',
'hasp',
'hasped',
'hasping',
'hassle',
'hassled',
'hassling',
'hassock',
'hast',
'hasta',
'haste',
'hasted',
'hasteful',
'hasten',
'hastened',
'hastener',
'hastening',
'hastier',
'hastiest',
'hastily',
'hasting',
'hasty',
'hat',
'hatable',
'hatband',
'hatbox',
'hatch',
'hatchable',
'hatchback',
'hatcheck',
'hatched',
'hatcheling',
'hatchelled',
'hatcher',
'hatchery',
'hatchet',
'hatchetlike',
'hatching',
'hatchment',
'hatchway',
'hate',
'hateable',
'hateful',
'hatefully',
'hatemonger',
'hatemongering',
'hater',
'hatful',
'hath',
'hatmaker',
'hatpin',
'hatrack',
'hatsful',
'hatted',
'hatter',
'hatting',
'hauberk',
'haugh',
'haughtier',
'haughtiest',
'haughtily',
'haughty',
'haul',
'haulage',
'hauled',
'hauler',
'haulier',
'hauling',
'haulyard',
'haunch',
'haunched',
'haunt',
'haunted',
'haunter',
'haunting',
'hausfrau',
'hausfrauen',
'hautboy',
'haute',
'hauteur',
'havana',
'have',
'haven',
'havened',
'havening',
'haver',
'haversack',
'having',
'haviour',
'havoc',
'havocker',
'havocking',
'haw',
'hawed',
'hawing',
'hawk',
'hawkbill',
'hawked',
'hawker',
'hawkeye',
'hawking',
'hawkish',
'hawkmoth',
'hawknose',
'hawkshaw',
'hawkweed',
'hawse',
'hawser',
'hawthorn',
'hawthorne',
'hay',
'haycock',
'haydn',
'hayed',
'hayer',
'hayfork',
'haying',
'hayloft',
'haymaker',
'haymow',
'hayrack',
'hayrick',
'hayride',
'hayseed',
'haystack',
'hayward',
'haywire',
'hazard',
'hazarding',
'hazardously',
'haze',
'hazed',
'hazel',
'hazelnut',
'hazer',
'hazier',
'haziest',
'hazily',
'hazing',
'hazy',
'he',
'head',
'headache',
'headachier',
'headachy',
'headband',
'headboard',
'headcheese',
'header',
'headfirst',
'headforemost',
'headgear',
'headhunt',
'headhunted',
'headhunter',
'headhunting',
'headier',
'headiest',
'headily',
'heading',
'headlamp',
'headland',
'headlight',
'headline',
'headlined',
'headlining',
'headlock',
'headlong',
'headman',
'headmaster',
'headmost',
'headnote',
'headphone',
'headpiece',
'headpin',
'headquarter',
'headquartering',
'headrest',
'headroom',
'headset',
'headship',
'headshrinker',
'headsman',
'headspring',
'headstall',
'headstand',
'headstay',
'headstone',
'headstrong',
'headwaiter',
'headwater',
'headway',
'headwind',
'headword',
'headwork',
'heady',
'heal',
'healable',
'healed',
'healer',
'healing',
'health',
'healthful',
'healthfully',
'healthier',
'healthiest',
'healthily',
'healthy',
'heap',
'heaped',
'heaping',
'hear',
'hearable',
'heard',
'hearer',
'hearing',
'hearken',
'hearkened',
'hearkening',
'hearsay',
'hearse',
'hearsed',
'hearsing',
'heart',
'heartache',
'heartbeat',
'heartbreak',
'heartbreaker',
'heartbreaking',
'heartbroke',
'heartbroken',
'heartburn',
'hearted',
'hearten',
'heartened',
'heartening',
'heartfelt',
'hearth',
'hearthside',
'hearthstone',
'heartier',
'heartiest',
'heartily',
'hearting',
'heartland',
'heartlessly',
'heartrending',
'heartsick',
'heartsore',
'heartstring',
'heartthrob',
'heartwarming',
'heartwood',
'heartworm',
'heat',
'heatable',
'heater',
'heath',
'heathen',
'heathendom',
'heathenish',
'heathenism',
'heather',
'heathery',
'heathier',
'heathiest',
'heathy',
'heatstroke',
'heave',
'heaved',
'heaven',
'heavenlier',
'heavenly',
'heavenward',
'heaver',
'heavier',
'heaviest',
'heavily',
'heaving',
'heavy',
'heavyhearted',
'heavyset',
'heavyweight',
'hebephrenia',
'hebephrenic',
'hebraic',
'hebraism',
'hebraist',
'hebraized',
'hebraizing',
'hebrew',
'hecatomb',
'heck',
'heckle',
'heckled',
'heckler',
'heckling',
'hectare',
'hectic',
'hectical',
'hecticly',
'hectogram',
'hectoliter',
'hectometer',
'hectoring',
'hedge',
'hedgehog',
'hedgehop',
'hedgehopper',
'hedgehopping',
'hedgepig',
'hedger',
'hedgerow',
'hedgier',
'hedgiest',
'hedging',
'hedgy',
'hedonic',
'hedonism',
'hedonist',
'hedonistic',
'hee',
'heed',
'heeder',
'heedful',
'heedfully',
'heeding',
'heedlessly',
'heehaw',
'heehawed',
'heehawing',
'heel',
'heeled',
'heeler',
'heeling',
'heelpost',
'heeltap',
'heft',
'hefted',
'hefter',
'heftier',
'heftiest',
'heftily',
'hefting',
'hefty',
'hegemon',
'hegemonic',
'hegemonical',
'hegemony',
'hegira',
'heifer',
'heigh',
'height',
'heighten',
'heightened',
'heightening',
'heighth',
'heil',
'heiled',
'heiling',
'heinie',
'heinously',
'heir',
'heirdom',
'heiring',
'heirloom',
'heirship',
'heist',
'heisted',
'heister',
'heisting',
'hejira',
'hektare',
'held',
'helen',
'helical',
'helicoid',
'helicoidal',
'helicon',
'helicopter',
'helio',
'heliocentric',
'heliocentricity',
'heliograph',
'heliotherapy',
'heliotrope',
'heliotropic',
'heliotropism',
'helipad',
'heliport',
'helistop',
'helium',
'helix',
'hell',
'hellbent',
'hellbox',
'hellcat',
'hellebore',
'helled',
'hellene',
'hellenic',
'hellenism',
'hellenist',
'hellenistic',
'heller',
'hellfire',
'hellgrammite',
'hellhole',
'helling',
'hellion',
'hellish',
'hellishly',
'hello',
'helloed',
'helloing',
'helluva',
'helm',
'helmed',
'helmet',
'helmeted',
'helmeting',
'helming',
'helmsman',
'helot',
'helotry',
'help',
'helpable',
'helped',
'helper',
'helpful',
'helpfully',
'helping',
'helplessly',
'helpmate',
'helpmeet',
'helsinki',
'helve',
'helved',
'helving',
'hem',
'heman',
'hematic',
'hematin',
'hematinic',
'hematite',
'hematologic',
'hematological',
'hematologist',
'hematology',
'hematoma',
'hematozoa',
'heme',
'hemingway',
'hemiola',
'hemiplegic',
'hemisection',
'hemisphere',
'hemispheric',
'hemispherical',
'hemistich',
'hemline',
'hemlock',
'hemmed',
'hemmer',
'hemming',
'hemoglobin',
'hemoglobinic',
'hemogram',
'hemokonia',
'hemolyze',
'hemophilia',
'hemophiliac',
'hemophilic',
'hemorrhage',
'hemorrhagic',
'hemorrhaging',
'hemorrhoid',
'hemorrhoidal',
'hemorrhoidectomy',
'hemostat',
'hemotoxin',
'hemp',
'hempen',
'hempier',
'hempseed',
'hempweed',
'hempy',
'hemstitch',
'hemstitched',
'hemstitching',
'hen',
'henbane',
'henbit',
'hence',
'henceforth',
'henceforward',
'henchman',
'hencoop',
'henhouse',
'henna',
'hennaed',
'hennaing',
'hennery',
'henpeck',
'henpecking',
'henry',
'henting',
'hep',
'heparin',
'hepatic',
'hepatica',
'hepatize',
'hepatized',
'hepburn',
'hepcat',
'heptad',
'heptagon',
'heptameter',
'heptarch',
'her',
'herald',
'heraldic',
'heralding',
'heraldist',
'heraldry',
'herb',
'herbage',
'herbal',
'herbalist',
'herbaria',
'herbarium',
'herbert',
'herbicidal',
'herbicide',
'herbier',
'herbivore',
'herbivorously',
'herby',
'herculean',
'herd',
'herder',
'herding',
'herdman',
'herdsman',
'herdswoman',
'here',
'hereabout',
'hereafter',
'hereat',
'hereby',
'hereditarily',
'hereditary',
'heredity',
'hereford',
'herein',
'hereinafter',
'hereinto',
'hereof',
'hereon',
'heresy',
'heretic',
'heretical',
'hereto',
'heretofore',
'heretrix',
'hereunder',
'hereunto',
'hereupon',
'herewith',
'heritability',
'heritable',
'heritably',
'heritage',
'heritrix',
'herman',
'hermaphrodism',
'hermaphrodite',
'hermaphroditic',
'hermaphroditism',
'hermeneutic',
'hermeneutical',
'hermetic',
'hermetical',
'hermit',
'hermitage',
'hermitic',
'hermitry',
'hernia',
'herniae',
'hernial',
'herniate',
'herniation',
'hero',
'heroic',
'heroical',
'heroin',
'heroine',
'heroinism',
'heroism',
'heroize',
'heroized',
'heroizing',
'heron',
'herpetic',
'herpetologic',
'herpetological',
'herpetologist',
'herpetology',
'herr',
'herring',
'herringbone',
'herself',
'hershey',
'hertz',
'hesitance',
'hesitancy',
'hesitant',
'hesitantly',
'hesitate',
'hesitater',
'hesitation',
'hessian',
'hest',
'hetaera',
'hetaerae',
'hetaeric',
'hetero',
'heterodox',
'heterodoxy',
'heteroerotic',
'heterogeneity',
'heterogeneously',
'heteronomy',
'heterophile',
'heterosexual',
'heterosexuality',
'heterotic',
'heuristic',
'hew',
'hewable',
'hewed',
'hewer',
'hewing',
'hewn',
'hex',
'hexad',
'hexadecimal',
'hexagon',
'hexagonal',
'hexagram',
'hexahedra',
'hexahedral',
'hexahedron',
'hexameter',
'hexane',
'hexaploid',
'hexapod',
'hexapody',
'hexed',
'hexer',
'hexing',
'hexone',
'hexose',
'hexyl',
'hexylresorcinol',
'hey',
'heyday',
'heydey',
'hi',
'hiatal',
'hibachi',
'hibernal',
'hibernate',
'hibernation',
'hic',
'hiccough',
'hiccoughed',
'hiccup',
'hiccuped',
'hiccuping',
'hiccupping',
'hick',
'hickey',
'hickory',
'hid',
'hidable',
'hidalgo',
'hidden',
'hiddenly',
'hide',
'hideaway',
'hidebound',
'hideously',
'hideout',
'hider',
'hiding',
'hie',
'hied',
'hieing',
'hierarch',
'hierarchal',
'hierarchial',
'hierarchic',
'hierarchical',
'hierarchism',
'hierarchy',
'hieratic',
'hieroglyphic',
'hierophant',
'higgle',
'high',
'highball',
'highballed',
'highbinder',
'highboard',
'highborn',
'highboy',
'highbrow',
'higher',
'highest',
'highfalutin',
'highhatting',
'highjack',
'highland',
'highlander',
'highlight',
'highlighted',
'highlighting',
'highly',
'highroad',
'highschool',
'hight',
'hightail',
'hightailed',
'hightailing',
'highted',
'highth',
'highting',
'highway',
'highwayman',
'hijack',
'hijacker',
'hijacking',
'hike',
'hiked',
'hiker',
'hiking',
'hilariously',
'hilarity',
'hill',
'hillbilly',
'hilled',
'hiller',
'hillier',
'hilliest',
'hilling',
'hillock',
'hillocky',
'hillside',
'hilltop',
'hilly',
'hilt',
'hilted',
'hilting',
'him',
'himalayan',
'himself',
'hind',
'hindbrain',
'hinder',
'hinderance',
'hinderer',
'hindering',
'hindermost',
'hindgut',
'hindi',
'hindmost',
'hindquarter',
'hindrance',
'hindsight',
'hindu',
'hinduism',
'hindustan',
'hindustani',
'hinge',
'hinger',
'hinging',
'hinnied',
'hinny',
'hint',
'hinted',
'hinter',
'hinterland',
'hinting',
'hip',
'hipbone',
'hipline',
'hipper',
'hippest',
'hippie',
'hippiedom',
'hippier',
'hipping',
'hippish',
'hippo',
'hippocratic',
'hippocratism',
'hippodrome',
'hippopotami',
'hippy',
'hipshot',
'hipster',
'hirable',
'hiragana',
'hire',
'hireable',
'hireling',
'hirer',
'hiring',
'hiroshima',
'hirsute',
'hirsutism',
'hisn',
'hispanic',
'hispaniola',
'hispano',
'hispid',
'hissed',
'hisself',
'hisser',
'hissing',
'hist',
'histamin',
'histamine',
'histaminic',
'histed',
'histing',
'histogram',
'histologist',
'histology',
'histolytic',
'historian',
'historic',
'historical',
'historicity',
'historiographer',
'historiography',
'history',
'histrionic',
'hit',
'hitch',
'hitched',
'hitcher',
'hitchhike',
'hitchhiked',
'hitchhiker',
'hitchhiking',
'hitching',
'hither',
'hitherto',
'hitler',
'hitlerism',
'hitter',
'hitting',
'hive',
'hived',
'hiving',
'ho',
'hoagie',
'hoagy',
'hoar',
'hoard',
'hoarder',
'hoarding',
'hoarfrost',
'hoarier',
'hoariest',
'hoarily',
'hoarse',
'hoarsely',
'hoarsen',
'hoarsened',
'hoarsening',
'hoarser',
'hoarsest',
'hoary',
'hoatzin',
'hoax',
'hoaxed',
'hoaxer',
'hoaxing',
'hob',
'hobbesian',
'hobbit',
'hobble',
'hobbled',
'hobbledehoy',
'hobbler',
'hobbling',
'hobby',
'hobbyhorse',
'hobbyist',
'hobgoblin',
'hobnail',
'hobnailed',
'hobnob',
'hobnobbed',
'hobnobbing',
'hobo',
'hoboed',
'hoboing',
'hoboism',
'hoc',
'hock',
'hocker',
'hockey',
'hocking',
'hockshop',
'hocused',
'hocusing',
'hocussed',
'hocussing',
'hod',
'hodad',
'hodaddy',
'hodgepodge',
'hoe',
'hoecake',
'hoed',
'hoedown',
'hoeing',
'hoer',
'hog',
'hogan',
'hogback',
'hogfish',
'hogger',
'hogging',
'hoggish',
'hoggishly',
'hognose',
'hognut',
'hogshead',
'hogtie',
'hogtied',
'hogtieing',
'hogtying',
'hogwash',
'hogweed',
'hoi',
'hoise',
'hoist',
'hoisted',
'hoister',
'hoisting',
'hoke',
'hokey',
'hokier',
'hokiest',
'hoking',
'hokum',
'hokypoky',
'hold',
'holdable',
'holdall',
'holdback',
'holden',
'holder',
'holdfast',
'holding',
'holdout',
'holdover',
'holdup',
'hole',
'holed',
'holeproof',
'holer',
'holey',
'holiday',
'holidayed',
'holidaying',
'holier',
'holiest',
'holily',
'holing',
'holism',
'holist',
'holistic',
'holland',
'hollandaise',
'hollander',
'holler',
'hollering',
'hollo',
'holloaing',
'hollooing',
'hollow',
'hollowed',
'hollower',
'hollowest',
'hollowing',
'hollowly',
'hollowware',
'holly',
'hollyhock',
'hollywood',
'holmium',
'holocaust',
'holocene',
'holocrine',
'hologram',
'holograph',
'holographic',
'holography',
'holstein',
'holster',
'holt',
'holy',
'holyday',
'holystone',
'holytide',
'homage',
'homager',
'homaging',
'hombre',
'homburg',
'home',
'homebody',
'homebound',
'homebuilding',
'homecoming',
'homed',
'homefolk',
'homegrown',
'homeland',
'homelier',
'homeliest',
'homelike',
'homely',
'homemade',
'homemaker',
'homemaking',
'homeopath',
'homeopathic',
'homeopathy',
'homeostatic',
'homeowner',
'homer',
'homeric',
'homering',
'homeroom',
'homesick',
'homesite',
'homespun',
'homestead',
'homesteader',
'homestretch',
'hometown',
'homeward',
'homework',
'homeworker',
'homey',
'homicidal',
'homicide',
'homier',
'homiest',
'homiletic',
'homilist',
'homily',
'hominem',
'homing',
'hominid',
'hominidae',
'hominized',
'hominoid',
'hominy',
'homo',
'homocentric',
'homoerotic',
'homoeroticism',
'homoerotism',
'homogeneity',
'homogeneously',
'homogenization',
'homogenize',
'homogenized',
'homogenizer',
'homogenizing',
'homograph',
'homographic',
'homolog',
'homologue',
'homology',
'homonym',
'homonymic',
'homonymy',
'homophile',
'homophone',
'homosexual',
'homosexuality',
'homotype',
'homunculi',
'homy',
'hon',
'honan',
'honcho',
'honda',
'honduran',
'hone',
'honer',
'honest',
'honester',
'honestest',
'honestly',
'honesty',
'honey',
'honeybee',
'honeybun',
'honeycomb',
'honeycombed',
'honeydew',
'honeyed',
'honeyful',
'honeying',
'honeymoon',
'honeymooner',
'honeymooning',
'honeysuckle',
'hongkong',
'honied',
'honing',
'honk',
'honked',
'honker',
'honkey',
'honkie',
'honking',
'honky',
'honolulu',
'honor',
'honorable',
'honorably',
'honoraria',
'honorarily',
'honorarium',
'honorary',
'honoree',
'honorer',
'honorific',
'honoring',
'honour',
'honourer',
'honouring',
'hooch',
'hood',
'hooding',
'hoodlum',
'hoodoo',
'hoodooed',
'hoodooing',
'hoodwink',
'hoodwinked',
'hoodwinking',
'hooey',
'hoof',
'hoofbeat',
'hoofbound',
'hoofed',
'hoofer',
'hoofing',
'hook',
'hooka',
'hookah',
'hooked',
'hookey',
'hookier',
'hooking',
'hooknose',
'hookup',
'hookworm',
'hooky',
'hooligan',
'hooliganism',
'hoop',
'hooped',
'hooper',
'hooping',
'hoopla',
'hoopster',
'hoorah',
'hoorahed',
'hoorahing',
'hooray',
'hoorayed',
'hooraying',
'hoosegow',
'hoosgow',
'hoosier',
'hoot',
'hootch',
'hooted',
'hootenanny',
'hooter',
'hooting',
'hoover',
'hop',
'hope',
'hoped',
'hopeful',
'hopefully',
'hopelessly',
'hoper',
'hophead',
'hopi',
'hoping',
'hoplite',
'hopper',
'hopping',
'hopsack',
'hopsacking',
'hopscotch',
'hoptoad',
'hor',
'hora',
'horace',
'horah',
'horal',
'horary',
'horde',
'hording',
'horehound',
'horizon',
'horizontal',
'hormonal',
'hormone',
'hormonic',
'horn',
'hornbeam',
'hornbill',
'hornbook',
'horned',
'horner',
'hornet',
'horning',
'hornlike',
'hornpipe',
'hornswoggle',
'hornswoggled',
'hornswoggling',
'horologe',
'horological',
'horologist',
'horology',
'horoscope',
'horrendously',
'horrible',
'horribly',
'horrid',
'horridly',
'horrific',
'horrified',
'horrify',
'horrifying',
'horripilation',
'horror',
'horse',
'horseback',
'horsecar',
'horsed',
'horseflesh',
'horsefly',
'horsehair',
'horsehide',
'horselaugh',
'horseman',
'horsemanship',
'horseplay',
'horseplayer',
'horsepower',
'horsepox',
'horseradish',
'horseshoe',
'horseshoer',
'horsetail',
'horsewhip',
'horsewhipping',
'horsewoman',
'horsey',
'horsier',
'horsiest',
'horsily',
'horsing',
'horst',
'horsy',
'hortative',
'hortatory',
'horticultural',
'horticulture',
'horticulturist',
'hosanna',
'hosannaed',
'hose',
'hosed',
'hosier',
'hosiery',
'hosing',
'hosp',
'hospice',
'hospitable',
'hospitably',
'hospital',
'hospitalism',
'hospitality',
'hospitalization',
'hospitalize',
'hospitalized',
'hospitalizing',
'hospitium',
'host',
'hostage',
'hosted',
'hostel',
'hosteled',
'hosteler',
'hosteling',
'hostelry',
'hostessed',
'hostessing',
'hostile',
'hostilely',
'hostility',
'hosting',
'hostler',
'hostly',
'hot',
'hotbed',
'hotblood',
'hotbox',
'hotcake',
'hotchpotch',
'hotdog',
'hotdogging',
'hotel',
'hotelier',
'hotelkeeper',
'hotelman',
'hotfoot',
'hotfooted',
'hotfooting',
'hothead',
'hothouse',
'hotkey',
'hotline',
'hotly',
'hotrod',
'hotshot',
'hotspur',
'hotted',
'hotter',
'hottest',
'hotting',
'hottish',
'hotzone',
'hound',
'hounder',
'hounding',
'hour',
'houri',
'hourly',
'house',
'houseboat',
'houseboy',
'housebreak',
'housebreaker',
'housebreaking',
'housebroken',
'houseclean',
'housecleaned',
'housecleaning',
'housecoat',
'housed',
'housefly',
'houseful',
'household',
'householder',
'househusband',
'housekeeper',
'housekeeping',
'housemaid',
'houseman',
'housemaster',
'housemother',
'housepaint',
'houser',
'housesat',
'housesit',
'housesitting',
'housetop',
'housewarming',
'housewife',
'housewifely',
'housewifery',
'housework',
'houseworker',
'housing',
'houston',
'hove',
'hovel',
'hovelling',
'hover',
'hovercraft',
'hoverer',
'hovering',
'how',
'howbeit',
'howdah',
'howdie',
'howdy',
'howe',
'however',
'howitzer',
'howl',
'howled',
'howler',
'howlet',
'howling',
'howsabout',
'howsoever',
'hoyden',
'hoydening',
'hoyle',
'huarache',
'hub',
'hubbub',
'hubby',
'hubcap',
'huck',
'huckleberry',
'huckster',
'huckstering',
'huddle',
'huddled',
'huddler',
'huddling',
'hudson',
'hue',
'hued',
'huff',
'huffed',
'huffier',
'huffiest',
'huffily',
'huffing',
'huffish',
'huffy',
'hug',
'huge',
'hugely',
'huger',
'hugest',
'huggable',
'hugger',
'huggermugger',
'hugging',
'huguenot',
'huh',
'hula',
'hulk',
'hulked',
'hulkier',
'hulking',
'hulky',
'hull',
'hullabaloo',
'hulled',
'huller',
'hulling',
'hullo',
'hulloaed',
'hulloaing',
'hulloed',
'hulloing',
'hum',
'human',
'humane',
'humanely',
'humaner',
'humanest',
'humanism',
'humanist',
'humanistic',
'humanitarian',
'humanitarianism',
'humanity',
'humanization',
'humanize',
'humanized',
'humanizer',
'humanizing',
'humankind',
'humanly',
'humanoid',
'humble',
'humbled',
'humbler',
'humblest',
'humbling',
'humbly',
'humbug',
'humbugger',
'humbugging',
'humdinger',
'humdrum',
'humectant',
'humeral',
'humeri',
'humid',
'humidfied',
'humidification',
'humidified',
'humidifier',
'humidify',
'humidifying',
'humidistat',
'humidity',
'humidly',
'humidor',
'humiliate',
'humiliation',
'humility',
'hummable',
'hummed',
'hummer',
'humming',
'hummingbird',
'hummock',
'hummocky',
'humor',
'humoral',
'humorer',
'humorful',
'humoring',
'humorist',
'humorlessly',
'humorously',
'humour',
'humouring',
'hump',
'humpback',
'humped',
'humph',
'humphed',
'humphing',
'humpier',
'humping',
'humpy',
'hun',
'hunch',
'hunchback',
'hunched',
'hunching',
'hundredfold',
'hundredth',
'hundredweight',
'hung',
'hungarian',
'hungary',
'hunger',
'hungering',
'hungrier',
'hungriest',
'hungrily',
'hungry',
'hunk',
'hunker',
'hunkering',
'hunky',
'hunnish',
'hunt',
'huntable',
'hunted',
'hunter',
'hunting',
'huntley',
'huntsman',
'hup',
'hurdle',
'hurdled',
'hurdler',
'hurdling',
'hurl',
'hurled',
'hurler',
'hurling',
'hurly',
'huron',
'hurrah',
'hurrahed',
'hurrahing',
'hurray',
'hurrayed',
'hurraying',
'hurricane',
'hurried',
'hurrier',
'hurry',
'hurrying',
'hurt',
'hurter',
'hurtful',
'hurting',
'hurtle',
'hurtled',
'hurtling',
'husband',
'husbander',
'husbanding',
'husbandlike',
'husbandly',
'husbandman',
'husbandry',
'hush',
'hushaby',
'hushed',
'hushful',
'hushing',
'husk',
'husked',
'husker',
'huskier',
'huskiest',
'huskily',
'husking',
'husky',
'hussar',
'hustle',
'hustled',
'hustler',
'hustling',
'hut',
'hutch',
'hutched',
'hutching',
'hutment',
'hutted',
'hutting',
'hutzpa',
'hutzpah',
'huzza',
'huzzaed',
'huzzah',
'huzzahed',
'huzzahing',
'huzzaing',
'hwy',
'hyacinth',
'hyacinthine',
'hyaena',
'hyaenic',
'hybrid',
'hybridism',
'hybridization',
'hybridize',
'hybridized',
'hybridizer',
'hybridizing',
'hyde',
'hydra',
'hydrae',
'hydrangea',
'hydrant',
'hydrargyrum',
'hydrate',
'hydration',
'hydraulic',
'hydric',
'hydride',
'hydro',
'hydrocarbon',
'hydrocephali',
'hydrocephalic',
'hydrocephaloid',
'hydrocephaly',
'hydrochloric',
'hydrochloride',
'hydrodynamic',
'hydroelectric',
'hydroelectricity',
'hydrofluoric',
'hydrofoil',
'hydrogen',
'hydrogenate',
'hydrogenation',
'hydrographer',
'hydrographic',
'hydrography',
'hydrologic',
'hydrological',
'hydrologist',
'hydrology',
'hydrolytic',
'hydrolyze',
'hydromassage',
'hydrometer',
'hydrophobia',
'hydrophobic',
'hydrophobicity',
'hydrophone',
'hydroplane',
'hydroponic',
'hydropower',
'hydrosphere',
'hydrostatic',
'hydrostatical',
'hydrotherapeutic',
'hydrotherapeutical',
'hydrotherapeutician',
'hydrotherapist',
'hydrotherapy',
'hydrothermal',
'hydrotropism',
'hydroxide',
'hydroxy',
'hydrozoan',
'hydrozoon',
'hyena',
'hygeist',
'hygiene',
'hygienic',
'hygienical',
'hygienist',
'hygrometer',
'hygrometry',
'hygroscope',
'hygroscopic',
'hying',
'hymenal',
'hymeneal',
'hymenoptera',
'hymenopteran',
'hymenopteron',
'hymn',
'hymnal',
'hymnary',
'hymnbook',
'hymned',
'hymning',
'hymnist',
'hymnody',
'hyoglossi',
'hype',
'hyped',
'hyper',
'hyperacid',
'hyperacidity',
'hyperactive',
'hyperactivity',
'hyperbaric',
'hyperbola',
'hyperbole',
'hyperbolic',
'hyperborean',
'hypercritical',
'hyperexcitable',
'hyperextension',
'hyperglycemia',
'hyperglycemic',
'hypericum',
'hyperinflation',
'hyperion',
'hyperirritable',
'hyperkinesia',
'hyperkinetic',
'hyperopia',
'hyperopic',
'hyperpituitary',
'hypersensitive',
'hypersensitivity',
'hypersensitize',
'hypersensitized',
'hypersensitizing',
'hypersexual',
'hypersexuality',
'hypersonic',
'hypertension',
'hypertensive',
'hyperthyroid',
'hyperthyroidism',
'hypertonicity',
'hypertrophic',
'hypertrophied',
'hypertrophy',
'hypertrophying',
'hyperventilation',
'hyphen',
'hyphenate',
'hyphenation',
'hyphened',
'hyphening',
'hyping',
'hypnic',
'hypnogogic',
'hypnoid',
'hypnoidal',
'hypnology',
'hypnophobia',
'hypnotherapy',
'hypnotic',
'hypnotism',
'hypnotist',
'hypnotizable',
'hypnotize',
'hypnotized',
'hypnotizing',
'hypo',
'hypocenter',
'hypochondria',
'hypochondriac',
'hypochondriacal',
'hypocrisy',
'hypocrite',
'hypocritic',
'hypocritical',
'hypoderm',
'hypodermic',
'hypoed',
'hypoergic',
'hypoglycemia',
'hypoglycemic',
'hypoing',
'hyposensitive',
'hyposensitivity',
'hyposensitize',
'hyposensitized',
'hyposensitizing',
'hypotension',
'hypotensive',
'hypotenuse',
'hypothecate',
'hypothermal',
'hypothermia',
'hypothermic',
'hypothesi',
'hypothesist',
'hypothesize',
'hypothesized',
'hypothesizer',
'hypothesizing',
'hypothetical',
'hypothyroid',
'hypothyroidism',
'hypotonic',
'hypoxemia',
'hypoxemic',
'hypoxia',
'hypoxic',
'hyrax',
'hyson',
'hyssop',
'hysterectomize',
'hysterectomized',
'hysterectomizing',
'hysterectomy',
'hysteria',
'hysteric',
'hysterical',
'iamb',
'iambi',
'iambic',
'iatrogenic',
'iberia',
'iberian',
'ibex',
'ibid',
'ibidem',
'ibm',
'ice',
'iceberg',
'iceboat',
'icebound',
'icebox',
'icebreaker',
'icecap',
'iced',
'icefall',
'icehouse',
'iceland',
'icelander',
'icelandic',
'iceman',
'ichor',
'ichthyic',
'ichthyism',
'ichthyoid',
'ichthyologist',
'ichthyology',
'ichthyosiform',
'icicle',
'icicled',
'icier',
'iciest',
'icily',
'icing',
'icker',
'ickier',
'ickiest',
'icky',
'icon',
'iconic',
'iconical',
'iconoclasm',
'iconoclast',
'iconoclastic',
'icy',
'id',
'idaho',
'idahoan',
'idea',
'ideal',
'idealism',
'idealist',
'idealistic',
'ideality',
'idealization',
'idealize',
'idealized',
'idealizing',
'idealogue',
'idealogy',
'ideate',
'ideation',
'ideational',
'idee',
'idem',
'identical',
'identifer',
'identifiability',
'identifiable',
'identifiably',
'identification',
'identified',
'identifier',
'identify',
'identifying',
'identity',
'ideo',
'ideogenetic',
'ideogram',
'ideograph',
'ideokinetic',
'ideologic',
'ideological',
'ideologist',
'ideologize',
'ideologized',
'ideologizing',
'ideologue',
'ideology',
'idiocratic',
'idiocy',
'idiogram',
'idiom',
'idiomatic',
'idiopathic',
'idiopathy',
'idiosyncracy',
'idiosyncrasy',
'idiosyncratic',
'idiot',
'idiotic',
'idiotical',
'idle',
'idled',
'idler',
'idlest',
'idling',
'idly',
'idol',
'idolater',
'idolatry',
'idolise',
'idolised',
'idoliser',
'idolism',
'idolization',
'idolize',
'idolized',
'idolizer',
'idolizing',
'idyl',
'idylist',
'idyll',
'idyllic',
'idyllist',
'ieee',
'if',
'iffier',
'iffiest',
'iffy',
'igloo',
'ignified',
'ignifying',
'ignitable',
'ignite',
'ignited',
'igniter',
'ignitible',
'igniting',
'ignition',
'ignobility',
'ignoble',
'ignobly',
'ignominiously',
'ignominy',
'ignorance',
'ignorant',
'ignorantly',
'ignore',
'ignorer',
'ignoring',
'iguana',
'ikebana',
'ikon',
'ileal',
'ileum',
'ilia',
'iliad',
'ilium',
'ilk',
'ill',
'illegal',
'illegality',
'illegalization',
'illegalize',
'illegalized',
'illegalizing',
'illegibility',
'illegible',
'illegibly',
'illegitimacy',
'illegitimate',
'illegitimately',
'illegitimation',
'iller',
'illest',
'illiberal',
'illicit',
'illicitly',
'illimitable',
'illimitably',
'illinoisan',
'illiteracy',
'illiterate',
'illiterately',
'illogic',
'illogical',
'illogicality',
'illume',
'illumed',
'illuminable',
'illuminance',
'illuminate',
'illumination',
'illuminative',
'illumine',
'illumined',
'illuming',
'illumining',
'illuminist',
'illusion',
'illusional',
'illusionary',
'illusionism',
'illusionist',
'illusive',
'illusory',
'illustrate',
'illustration',
'illustrative',
'illustriously',
'illy',
'image',
'imagery',
'imaginable',
'imaginably',
'imaginal',
'imaginarily',
'imaginary',
'imagination',
'imaginative',
'imagine',
'imagined',
'imaginer',
'imaging',
'imagining',
'imagism',
'imagist',
'imago',
'imam',
'imbalance',
'imbalm',
'imbalmed',
'imbalmer',
'imbalming',
'imbark',
'imbarked',
'imbecile',
'imbecilic',
'imbecility',
'imbed',
'imbedding',
'imbibe',
'imbibed',
'imbiber',
'imbibing',
'imbibition',
'imbibitional',
'imbody',
'imbricate',
'imbrication',
'imbrium',
'imbroglio',
'imbrue',
'imbrued',
'imbruing',
'imbue',
'imbued',
'imbuing',
'imburse',
'imitable',
'imitate',
'imitatee',
'imitation',
'imitational',
'imitative',
'immaculacy',
'immaculate',
'immaculately',
'immanence',
'immanency',
'immanent',
'immanently',
'immaterial',
'immateriality',
'immature',
'immaturely',
'immaturity',
'immeasurable',
'immeasurably',
'immediacy',
'immediate',
'immediately',
'immedicable',
'immemorial',
'immense',
'immensely',
'immenser',
'immensest',
'immensity',
'immerge',
'immerse',
'immersed',
'immersing',
'immersion',
'immesh',
'immeshing',
'immigrant',
'immigrate',
'immigration',
'imminence',
'imminent',
'imminently',
'immiscibility',
'immiscible',
'immitigable',
'immix',
'immixed',
'immixing',
'immobile',
'immobility',
'immobilization',
'immobilize',
'immobilized',
'immobilizer',
'immobilizing',
'immoderacy',
'immoderate',
'immoderately',
'immoderation',
'immodest',
'immodestly',
'immodesty',
'immolate',
'immolation',
'immoral',
'immorality',
'immortal',
'immortality',
'immortalize',
'immortalized',
'immortalizing',
'immotile',
'immotility',
'immovability',
'immovable',
'immovably',
'immoveable',
'immune',
'immunity',
'immunization',
'immunize',
'immunized',
'immunizing',
'immunochemistry',
'immunogen',
'immunoglobulin',
'immunologic',
'immunological',
'immunologist',
'immunology',
'immunopathology',
'immunoreactive',
'immunosuppressant',
'immunosuppressive',
'immunotherapy',
'immure',
'immuring',
'immutability',
'immutable',
'immutably',
'imp',
'impact',
'impacted',
'impacter',
'impacting',
'impaction',
'impainted',
'impair',
'impairer',
'impairing',
'impairment',
'impala',
'impale',
'impaled',
'impalement',
'impaler',
'impaling',
'impalpability',
'impalpable',
'impalpably',
'impanel',
'impaneled',
'impaneling',
'impanelled',
'impanelling',
'imparity',
'impart',
'imparted',
'imparter',
'impartial',
'impartiality',
'impartible',
'impartibly',
'imparting',
'impassability',
'impassable',
'impasse',
'impassibility',
'impassible',
'impassibly',
'impassion',
'impassionate',
'impassioning',
'impassive',
'impassivity',
'impasto',
'impatience',
'impatient',
'impatiently',
'impeach',
'impeachable',
'impeached',
'impeacher',
'impeaching',
'impeachment',
'impearl',
'impearled',
'impearling',
'impeccability',
'impeccable',
'impeccably',
'impecuniosity',
'impecuniously',
'imped',
'impedance',
'impede',
'impeder',
'impedient',
'impediment',
'impedimenta',
'impeding',
'impel',
'impelled',
'impeller',
'impelling',
'impellor',
'impend',
'impending',
'impenetrability',
'impenetrable',
'impenetrably',
'impenitence',
'impenitent',
'impenitently',
'imper',
'imperative',
'imperceivable',
'imperceptibility',
'imperceptible',
'imperceptibly',
'imperception',
'imperceptive',
'impercipient',
'imperfect',
'imperfectability',
'imperfection',
'imperfectly',
'imperforate',
'imperia',
'imperial',
'imperialism',
'imperialist',
'imperialistic',
'imperil',
'imperiled',
'imperiling',
'imperilled',
'imperilling',
'imperilment',
'imperiously',
'imperishable',
'imperishably',
'imperium',
'impermanence',
'impermanent',
'impermanently',
'impermeability',
'impermeable',
'impermeably',
'impermissible',
'impersonal',
'impersonality',
'impersonalize',
'impersonalized',
'impersonate',
'impersonation',
'impertinence',
'impertinency',
'impertinent',
'impertinently',
'imperturbability',
'imperturbable',
'imperturbably',
'imperviously',
'impetigo',
'impetuosity',
'impetuously',
'impiety',
'imping',
'impinge',
'impingement',
'impinger',
'impinging',
'impiously',
'impish',
'impishly',
'implacability',
'implacable',
'implacably',
'implacentalia',
'implant',
'implantation',
'implanted',
'implanter',
'implanting',
'implausibility',
'implausible',
'implausibly',
'implement',
'implementable',
'implementation',
'implemented',
'implementing',
'implicate',
'implication',
'implicit',
'implicitly',
'implied',
'implode',
'imploding',
'imploration',
'implore',
'implorer',
'imploring',
'implosion',
'implosive',
'imply',
'implying',
'impolite',
'impolitely',
'impolitic',
'impolitical',
'impoliticly',
'imponderability',
'imponderable',
'imponderably',
'import',
'importable',
'importance',
'important',
'importantly',
'importation',
'imported',
'importer',
'importing',
'importunate',
'importunately',
'importune',
'importuned',
'importuning',
'importunity',
'impose',
'imposed',
'imposer',
'imposing',
'imposition',
'impossibility',
'impossible',
'impossibly',
'impost',
'imposted',
'imposter',
'imposting',
'imposture',
'impotence',
'impotency',
'impotent',
'impotently',
'impound',
'impoundable',
'impounding',
'impoundment',
'impoverish',
'impoverished',
'impoverisher',
'impoverishing',
'impoverishment',
'impracticability',
'impracticable',
'impractical',
'impracticality',
'imprecate',
'imprecation',
'imprecise',
'imprecisely',
'imprecision',
'impregnability',
'impregnable',
'impregnably',
'impregnate',
'impregnation',
'impresario',
'impressed',
'impresser',
'impressibility',
'impressible',
'impressing',
'impression',
'impressionable',
'impressionably',
'impressionism',
'impressionist',
'impressionistic',
'impressive',
'impressment',
'imprest',
'imprimatur',
'imprint',
'imprinted',
'imprinter',
'imprinting',
'imprison',
'imprisoning',
'imprisonment',
'improbability',
'improbable',
'improbably',
'impromptu',
'improper',
'improperly',
'impropriety',
'improvability',
'improvable',
'improve',
'improved',
'improvement',
'improver',
'improvidence',
'improvident',
'improvidently',
'improving',
'improvisation',
'improvisational',
'improvise',
'improvised',
'improviser',
'improvising',
'improvisor',
'imprudence',
'imprudent',
'imprudently',
'impudence',
'impudent',
'impudently',
'impugn',
'impugnable',
'impugned',
'impugner',
'impugning',
'impugnment',
'impuissance',
'impulse',
'impulsed',
'impulsing',
'impulsion',
'impulsive',
'impunity',
'impure',
'impurely',
'impurity',
'imputable',
'imputation',
'impute',
'imputed',
'imputer',
'imputing',
'in',
'inability',
'inaccessibility',
'inaccessible',
'inaccuracy',
'inaccurate',
'inaction',
'inactivate',
'inactivation',
'inactive',
'inactivity',
'inadequacy',
'inadequate',
'inadequately',
'inadvertence',
'inadvertency',
'inadvertent',
'inadvertently',
'inadvisability',
'inadvisable',
'inadvisably',
'inane',
'inanely',
'inaner',
'inanimate',
'inanimately',
'inanity',
'inapplicability',
'inapplicable',
'inapplicably',
'inapposite',
'inappreciable',
'inappreciably',
'inappreciative',
'inapproachable',
'inappropriate',
'inappropriately',
'inapt',
'inaptitude',
'inaptly',
'inarguable',
'inarm',
'inarticulate',
'inarticulately',
'inartistic',
'inasmuch',
'inca',
'incalculable',
'incalculably',
'incandescence',
'incandescent',
'incandescently',
'incantation',
'incapability',
'incapable',
'incapably',
'incapacitant',
'incapacitate',
'incapacitation',
'incapacity',
'incarcerate',
'incarceration',
'incarnate',
'incarnation',
'incased',
'incautiously',
'incendiarism',
'incendiarist',
'incendiary',
'incense',
'incensed',
'incensing',
'incentive',
'incept',
'incepting',
'inception',
'inceptive',
'incertitude',
'incessant',
'incessantly',
'incest',
'incestuously',
'inch',
'inched',
'inching',
'inchoate',
'inchoately',
'inchworm',
'incidence',
'incident',
'incidental',
'incidently',
'incinerate',
'incineration',
'incipience',
'incipiency',
'incipient',
'incise',
'incised',
'incising',
'incision',
'incisive',
'incisor',
'incisory',
'incitant',
'incitation',
'incite',
'incited',
'incitement',
'inciter',
'inciting',
'incitive',
'incitory',
'incivil',
'incivility',
'inclemency',
'inclement',
'inclinable',
'inclination',
'incline',
'inclined',
'incliner',
'inclining',
'inclinometer',
'inclose',
'inclosed',
'incloser',
'inclosing',
'inclosure',
'include',
'including',
'inclusion',
'inclusive',
'incog',
'incognita',
'incognito',
'incognizant',
'incoherence',
'incoherent',
'incoherently',
'incoincidence',
'incoincident',
'incombustible',
'income',
'incoming',
'incommensurable',
'incommensurate',
'incommensurately',
'incommode',
'incommoding',
'incommunicable',
'incommunicably',
'incommunicado',
'incommunicative',
'incommutable',
'incommutably',
'incomparability',
'incomparable',
'incomparably',
'incompatibility',
'incompatible',
'incompatibly',
'incompensation',
'incompetence',
'incompetency',
'incompetent',
'incompetently',
'incomplete',
'incompletely',
'incompliance',
'incompliancy',
'incompliant',
'incomprehensible',
'incomprehensibly',
'incomprehension',
'incompressable',
'incompressibility',
'incompressible',
'incompressibly',
'incomputable',
'incomputably',
'inconcealable',
'inconceivability',
'inconceivable',
'inconceivably',
'inconclusive',
'incongruence',
'incongruent',
'incongruently',
'incongruity',
'incongruously',
'inconsequent',
'inconsequential',
'inconsiderable',
'inconsiderate',
'inconsiderately',
'inconsistency',
'inconsistent',
'inconsistently',
'inconsolable',
'inconsolably',
'inconsonant',
'inconspicuously',
'inconstancy',
'inconstant',
'inconstantly',
'inconsumable',
'inconsumably',
'incontestability',
'incontestable',
'incontestably',
'incontinence',
'incontinency',
'incontinent',
'incontinently',
'incontrovertible',
'incontrovertibly',
'inconvenience',
'inconvenienced',
'inconveniencing',
'inconvenient',
'inconveniently',
'inconvertibility',
'incoordination',
'incorporate',
'incorporation',
'incorporatorship',
'incorporeal',
'incorporeality',
'incorrect',
'incorrectly',
'incorrigibility',
'incorrigible',
'incorrigibly',
'incorrupt',
'incorrupted',
'incorruptibility',
'incorruptible',
'incorruptibly',
'incorruption',
'incorruptly',
'increasable',
'increase',
'increased',
'increaser',
'increasing',
'incredibility',
'incredible',
'incredibly',
'incredulity',
'incredulously',
'increment',
'incremental',
'incremented',
'incrementing',
'incretory',
'incriminate',
'incrimination',
'incriminatory',
'incrust',
'incrustation',
'incrusted',
'incrusting',
'incubate',
'incubation',
'incubational',
'incubative',
'incubi',
'inculcate',
'inculcation',
'inculpability',
'inculpable',
'inculpate',
'incumbency',
'incumbent',
'incumbently',
'incumber',
'incumbering',
'incumbrance',
'incunabula',
'incunabulum',
'incur',
'incurability',
'incurable',
'incurably',
'incuriously',
'incurrable',
'incurring',
'incursion',
'incurve',
'incurving',
'indebted',
'indecency',
'indecent',
'indecenter',
'indecently',
'indecipherable',
'indecision',
'indecisive',
'indecorously',
'indeed',
'indefatigability',
'indefatigable',
'indefatigably',
'indefeasible',
'indefeasibly',
'indefensibility',
'indefensible',
'indefensibly',
'indefinable',
'indefinably',
'indefinite',
'indefinitely',
'indelible',
'indelibly',
'indelicacy',
'indelicate',
'indelicately',
'indemnification',
'indemnificatory',
'indemnified',
'indemnifier',
'indemnify',
'indemnifying',
'indemnitee',
'indemnity',
'indemnization',
'indemonstrable',
'indent',
'indentation',
'indented',
'indenter',
'indenting',
'indention',
'indenture',
'indenturing',
'independence',
'independent',
'independently',
'indescribability',
'indescribable',
'indescribably',
'indestructibility',
'indestructible',
'indestructibly',
'indeterminable',
'indeterminacy',
'indeterminate',
'indeterminately',
'indetermination',
'index',
'indexable',
'indexation',
'indexed',
'indexer',
'indexing',
'india',
'indian',
'indiana',
'indianan',
'indianian',
'indicate',
'indication',
'indicative',
'indict',
'indictable',
'indictably',
'indicted',
'indictee',
'indicter',
'indicting',
'indictment',
'indifference',
'indifferent',
'indifferently',
'indigence',
'indigene',
'indigent',
'indigently',
'indigestibility',
'indigestibilty',
'indigestible',
'indigestion',
'indigestive',
'indign',
'indignant',
'indignantly',
'indignation',
'indignity',
'indigo',
'indirect',
'indirection',
'indirectly',
'indiscernible',
'indiscoverable',
'indiscreet',
'indiscreetly',
'indiscrete',
'indiscretion',
'indiscriminantly',
'indiscriminate',
'indiscriminately',
'indiscrimination',
'indispensability',
'indispensable',
'indispensably',
'indispensible',
'indisposed',
'indisposition',
'indisputable',
'indisputably',
'indissolubility',
'indissoluble',
'indissolubly',
'indistinct',
'indistinctly',
'indistinguishable',
'indite',
'indited',
'inditer',
'inditing',
'indium',
'individual',
'individualism',
'individualist',
'individualistic',
'individuality',
'individualization',
'individualize',
'individualized',
'individualizing',
'individuate',
'individuation',
'indivisibility',
'indivisible',
'indivisibly',
'indochina',
'indochinese',
'indoctrinate',
'indoctrination',
'indol',
'indolence',
'indolent',
'indolently',
'indomitable',
'indomitably',
'indonesia',
'indonesian',
'indoor',
'indorse',
'indorsed',
'indorsee',
'indorsement',
'indorser',
'indorsing',
'indorsor',
'indow',
'indowed',
'indraft',
'indrawn',
'indubitable',
'indubitably',
'induce',
'induced',
'inducement',
'inducer',
'inducible',
'inducing',
'induct',
'inductance',
'inducted',
'inductee',
'inducting',
'induction',
'inductive',
'indue',
'indued',
'indulge',
'indulgence',
'indulgent',
'indulgently',
'indulger',
'indulging',
'indurate',
'induration',
'indurative',
'industrial',
'industrialism',
'industrialist',
'industrialization',
'industrialize',
'industrialized',
'industrializing',
'industriously',
'industry',
'indwell',
'indwelling',
'indwelt',
'inearthed',
'inebriant',
'inebriate',
'inebriation',
'inebriety',
'inedible',
'inedited',
'ineducability',
'ineducable',
'ineffable',
'ineffably',
'ineffaceable',
'ineffective',
'ineffectual',
'inefficaciously',
'inefficacy',
'inefficiency',
'inefficient',
'inefficiently',
'inelastic',
'inelasticity',
'inelegance',
'inelegant',
'inelegantly',
'ineligibility',
'ineligible',
'ineligibly',
'ineloquent',
'ineloquently',
'ineluctable',
'ineluctably',
'inept',
'ineptitude',
'ineptly',
'inequable',
'inequality',
'inequitable',
'inequitably',
'inequity',
'ineradicable',
'inerrant',
'inert',
'inertia',
'inertial',
'inertly',
'inescapable',
'inescapably',
'inessential',
'inestimable',
'inestimably',
'inevitability',
'inevitable',
'inevitably',
'inexact',
'inexactitude',
'inexactly',
'inexcusability',
'inexcusable',
'inexcusably',
'inexecutable',
'inexecution',
'inexhaustible',
'inexhaustibly',
'inexorable',
'inexorably',
'inexpedient',
'inexpensive',
'inexperience',
'inexperienced',
'inexpert',
'inexpertly',
'inexpiable',
'inexplicable',
'inexplicably',
'inexpressibility',
'inexpressible',
'inexpressibly',
'inexpressive',
'inextinguishable',
'inextinguishably',
'inextricability',
'inextricable',
'inextricably',
'infallibility',
'infallible',
'infallibly',
'infamously',
'infamy',
'infancy',
'infant',
'infanticidal',
'infanticide',
'infantile',
'infantilism',
'infantility',
'infantry',
'infantryman',
'infarct',
'infarcted',
'infarction',
'infatuate',
'infatuation',
'infeasible',
'infect',
'infected',
'infecter',
'infecting',
'infection',
'infectiously',
'infective',
'infecund',
'infelicity',
'infeoffed',
'infer',
'inferable',
'inference',
'inferential',
'inferior',
'inferiority',
'infernal',
'inferno',
'inferrer',
'inferrible',
'inferring',
'infertile',
'infertilely',
'infertility',
'infest',
'infestation',
'infested',
'infester',
'infesting',
'infidel',
'infidelity',
'infield',
'infielder',
'infighter',
'infighting',
'infiltrate',
'infiltration',
'infinite',
'infinitely',
'infinitesimal',
'infinitive',
'infinitude',
'infinitum',
'infinity',
'infirm',
'infirmable',
'infirmary',
'infirmed',
'infirming',
'infirmity',
'infirmly',
'infix',
'infixed',
'inflame',
'inflamed',
'inflamer',
'inflaming',
'inflammability',
'inflammable',
'inflammation',
'inflammative',
'inflammatorily',
'inflammatory',
'inflatable',
'inflate',
'inflater',
'inflation',
'inflationary',
'inflationism',
'inflationist',
'inflect',
'inflected',
'inflecting',
'inflection',
'inflectional',
'inflexed',
'inflexibility',
'inflexible',
'inflexibly',
'inflict',
'inflictable',
'inflicted',
'inflicter',
'inflicting',
'infliction',
'inflictive',
'inflight',
'inflorescence',
'inflow',
'influence',
'influenceability',
'influenceable',
'influenced',
'influencer',
'influencing',
'influent',
'influential',
'influenza',
'influx',
'info',
'infold',
'infolder',
'infolding',
'inform',
'informal',
'informality',
'informant',
'information',
'informational',
'informative',
'informed',
'informer',
'informing',
'infra',
'infract',
'infracted',
'infraction',
'infrangible',
'infrasonic',
'infrastructure',
'infrequence',
'infrequency',
'infrequent',
'infrequently',
'infringe',
'infringement',
'infringer',
'infringing',
'infundibula',
'infundibular',
'infundibuliform',
'infundibulum',
'infuriate',
'infuriation',
'infuse',
'infused',
'infuser',
'infusibility',
'infusible',
'infusing',
'infusion',
'infusive',
'infusoria',
'ingate',
'ingather',
'ingeniously',
'ingenue',
'ingenuity',
'ingenuously',
'ingest',
'ingestant',
'ingested',
'ingestible',
'ingesting',
'ingestion',
'ingestive',
'ingle',
'ingloriously',
'ingoing',
'ingot',
'ingraft',
'ingrafted',
'ingrafting',
'ingrain',
'ingrained',
'ingraining',
'ingrate',
'ingratiate',
'ingratiation',
'ingratitude',
'ingredient',
'ingression',
'ingressive',
'ingroup',
'ingrowing',
'ingrown',
'inguinal',
'ingulf',
'ingulfing',
'inhabit',
'inhabitability',
'inhabitable',
'inhabitance',
'inhabitancy',
'inhabitant',
'inhabitation',
'inhabited',
'inhabiter',
'inhabiting',
'inhalant',
'inhalation',
'inhale',
'inhaled',
'inhaler',
'inhaling',
'inharmonic',
'inhaul',
'inhere',
'inherence',
'inherent',
'inherently',
'inhering',
'inherit',
'inheritability',
'inheritable',
'inheritably',
'inheritance',
'inherited',
'inheriting',
'inhibit',
'inhibited',
'inhibiter',
'inhibiting',
'inhibition',
'inhibitive',
'inhibitory',
'inholding',
'inhospitable',
'inhospitably',
'inhospitality',
'inhuman',
'inhumane',
'inhumanely',
'inhumanity',
'inhumanly',
'inhume',
'inhumed',
'inhumer',
'inimicability',
'inimical',
'inimitable',
'inimitably',
'iniquitously',
'iniquity',
'initial',
'initialed',
'initialing',
'initialization',
'initialize',
'initialized',
'initializing',
'initialled',
'initialling',
'initiate',
'initiation',
'initiative',
'initiatory',
'inject',
'injectant',
'injected',
'injecting',
'injection',
'injudiciously',
'injunction',
'injure',
'injurer',
'injuring',
'injuriously',
'injury',
'injustice',
'ink',
'inkblot',
'inked',
'inker',
'inkhorn',
'inkier',
'inkiest',
'inking',
'inkle',
'inkling',
'inkpot',
'inkstand',
'inkwell',
'inky',
'inlaid',
'inland',
'inlander',
'inlay',
'inlayer',
'inlaying',
'inlet',
'inletting',
'inlier',
'inly',
'inmate',
'inmesh',
'inmeshing',
'inmost',
'inn',
'innate',
'innately',
'inned',
'inner',
'innerly',
'innermost',
'innersole',
'innerspring',
'innervate',
'innervation',
'innervational',
'innerving',
'innholder',
'inning',
'innkeeper',
'innocence',
'innocency',
'innocent',
'innocenter',
'innocently',
'innocuously',
'innominate',
'innovate',
'innovation',
'innovative',
'innuendo',
'innumerable',
'inoculant',
'inoculate',
'inoculation',
'inoculative',
'inoffensive',
'inofficial',
'inoperable',
'inoperative',
'inopportune',
'inopportunely',
'inordinate',
'inordinately',
'inorganic',
'inpatient',
'inphase',
'inpouring',
'input',
'inputted',
'inputting',
'inquest',
'inquieting',
'inquietude',
'inquire',
'inquirer',
'inquiring',
'inquiry',
'inquisition',
'inquisitional',
'inquisitive',
'inquisitorial',
'inquisitory',
'inroad',
'inrush',
'inrushing',
'insalivation',
'insalubrity',
'insane',
'insanely',
'insaner',
'insanest',
'insanitary',
'insanitation',
'insanity',
'insatiability',
'insatiable',
'insatiably',
'insatiate',
'inscribe',
'inscribed',
'inscriber',
'inscribing',
'inscription',
'inscrutability',
'inscrutable',
'inscrutably',
'inseam',
'insect',
'insecticidal',
'insecticide',
'insectifuge',
'insecure',
'insecurely',
'insecurity',
'inseminate',
'insemination',
'insensate',
'insensately',
'insensibility',
'insensible',
'insensibly',
'insensitive',
'insensitivity',
'insentience',
'insentient',
'inseparability',
'inseparable',
'inseparably',
'insert',
'inserted',
'inserter',
'inserting',
'insertion',
'inset',
'insetting',
'insheathe',
'insheathed',
'insheathing',
'inshore',
'inshrined',
'inshrining',
'inside',
'insider',
'insidiously',
'insight',
'insightful',
'insigne',
'insignia',
'insignificance',
'insignificant',
'insincere',
'insincerely',
'insincerity',
'insinuate',
'insinuation',
'insipid',
'insipidity',
'insipidly',
'insist',
'insisted',
'insistence',
'insistency',
'insistent',
'insistently',
'insister',
'insisting',
'insobriety',
'insofar',
'insolation',
'insole',
'insolence',
'insolent',
'insolently',
'insolubility',
'insoluble',
'insolubly',
'insolvable',
'insolvency',
'insolvent',
'insomnia',
'insomniac',
'insomuch',
'insouciance',
'insouciant',
'insoul',
'inspect',
'inspected',
'inspecting',
'inspection',
'inspectorate',
'inspectorial',
'insphering',
'inspiration',
'inspirational',
'inspiratory',
'inspire',
'inspirer',
'inspiring',
'inspirit',
'inspirited',
'inspiriting',
'inst',
'instability',
'instal',
'install',
'installant',
'installation',
'installed',
'installer',
'installing',
'installment',
'instalment',
'instance',
'instanced',
'instancing',
'instant',
'instantaneously',
'instanter',
'instantly',
'instate',
'instatement',
'instead',
'instep',
'instigate',
'instigation',
'instigative',
'instil',
'instill',
'instillation',
'instilled',
'instiller',
'instilling',
'instillment',
'instinct',
'instinctive',
'instinctual',
'institute',
'instituted',
'instituter',
'instituting',
'institution',
'institutional',
'institutionalism',
'institutionalist',
'institutionalization',
'institutionalize',
'institutionalized',
'institutionalizing',
'instr',
'instruct',
'instructed',
'instructing',
'instruction',
'instructional',
'instructive',
'instructorship',
'instrument',
'instrumental',
'instrumentalist',
'instrumentality',
'instrumentary',
'instrumentation',
'instrumented',
'instrumenting',
'insubmissive',
'insubordinate',
'insubordinately',
'insubordination',
'insubstantial',
'insufferable',
'insufferably',
'insufficiency',
'insufficient',
'insufficiently',
'insular',
'insularity',
'insulate',
'insulation',
'insulin',
'insult',
'insulted',
'insulter',
'insulting',
'insuperable',
'insuperably',
'insupportable',
'insupportably',
'insuppressible',
'insurability',
'insurable',
'insurance',
'insurant',
'insure',
'insurer',
'insurgence',
'insurgency',
'insurgent',
'insurgescence',
'insuring',
'insurmountable',
'insurmountably',
'insurrect',
'insurrection',
'insurrectional',
'insurrectionary',
'insurrectionist',
'insusceptibility',
'insusceptible',
'int',
'intact',
'intagli',
'intaglio',
'intake',
'intangibility',
'intangible',
'intangibly',
'integer',
'integral',
'integrate',
'integration',
'integrationist',
'integrative',
'integrity',
'integument',
'integumental',
'integumentary',
'intel',
'intellect',
'intellectual',
'intellectualism',
'intellectualist',
'intellectualization',
'intellectualize',
'intellectualized',
'intellectualizing',
'intelligence',
'intelligent',
'intelligently',
'intelligentsia',
'intelligibility',
'intelligible',
'intelligibly',
'intemperance',
'intemperate',
'intemperately',
'intend',
'intender',
'intending',
'intendment',
'intense',
'intensely',
'intenser',
'intensest',
'intensification',
'intensified',
'intensifier',
'intensify',
'intensifying',
'intensity',
'intensive',
'intent',
'intention',
'intentional',
'intently',
'inter',
'interacademic',
'interact',
'interacted',
'interacting',
'interaction',
'interactive',
'interagency',
'interagent',
'interatomic',
'interbank',
'interbanking',
'interborough',
'interbranch',
'interbreed',
'interbreeding',
'intercalary',
'intercalate',
'intercalation',
'intercapillary',
'intercede',
'interceder',
'interceding',
'intercellular',
'intercept',
'intercepted',
'intercepting',
'interception',
'interceptive',
'intercession',
'intercessional',
'intercessor',
'intercessory',
'interchange',
'interchangeable',
'interchangeably',
'interchanging',
'intercity',
'intercollegiate',
'intercom',
'intercommunicate',
'intercommunication',
'intercompany',
'interconnect',
'interconnected',
'interconnecting',
'interconnection',
'intercontinental',
'intercostal',
'intercounty',
'intercourse',
'intercultural',
'interdenominational',
'interdepartmental',
'interdependence',
'interdependency',
'interdependent',
'interdict',
'interdicted',
'interdicting',
'interdiction',
'interdictive',
'interdictory',
'interdictum',
'interdisciplinary',
'interdistrict',
'interest',
'interested',
'interesting',
'interface',
'interfaced',
'interfacial',
'interfacing',
'interfactional',
'interfaith',
'interfere',
'interference',
'interferer',
'interfering',
'interferometer',
'interferometry',
'interferon',
'interfertile',
'interfile',
'interfiled',
'interfiling',
'interfirm',
'intergalactic',
'intergovernmental',
'intergroup',
'interhemispheric',
'interim',
'interior',
'interiorly',
'interject',
'interjected',
'interjecting',
'interjection',
'interjectional',
'interjectory',
'interlace',
'interlaced',
'interlacing',
'interlaid',
'interlard',
'interlarding',
'interleaf',
'interleave',
'interleaved',
'interleaving',
'interlibrary',
'interline',
'interlinear',
'interlined',
'interlining',
'interlock',
'interlocking',
'interlocution',
'interlocutory',
'interlocutrice',
'interlope',
'interloped',
'interloper',
'interloping',
'interlude',
'interlunar',
'intermarriage',
'intermarried',
'intermarry',
'intermarrying',
'intermediacy',
'intermediary',
'intermediate',
'intermediately',
'intermediation',
'intermediatory',
'intermenstrual',
'interment',
'intermesh',
'intermeshed',
'intermeshing',
'intermezzi',
'intermezzo',
'interminable',
'interminably',
'intermingle',
'intermingled',
'intermingling',
'intermission',
'intermit',
'intermitted',
'intermittence',
'intermittency',
'intermittent',
'intermittently',
'intermitting',
'intermix',
'intermixed',
'intermixing',
'intermixture',
'intermolecular',
'intermuscular',
'intern',
'internal',
'internality',
'internalization',
'internalize',
'internalized',
'internalizing',
'international',
'internationalism',
'internationalist',
'internationalization',
'internationalize',
'internationalized',
'internationalizing',
'internecine',
'interned',
'internee',
'interning',
'internist',
'internment',
'internodal',
'internode',
'internship',
'internuclear',
'internuncio',
'interoceanic',
'interoffice',
'interorbital',
'interpersonal',
'interphone',
'interplanetary',
'interplant',
'interplay',
'interplead',
'interpol',
'interpolar',
'interpolate',
'interpolation',
'interpose',
'interposed',
'interposer',
'interposing',
'interposition',
'interpret',
'interpretable',
'interpretation',
'interpretational',
'interpretative',
'interpreted',
'interpreter',
'interpreting',
'interpretive',
'interprofessional',
'interrace',
'interracial',
'interregional',
'interregna',
'interregnal',
'interregnum',
'interrelate',
'interrelation',
'interrelationship',
'interring',
'interrogable',
'interrogant',
'interrogate',
'interrogation',
'interrogational',
'interrogative',
'interrogatorily',
'interrogatory',
'interrogee',
'interrupt',
'interrupted',
'interrupter',
'interrupting',
'interruption',
'interruptive',
'interscholastic',
'interschool',
'intersect',
'intersected',
'intersecting',
'intersection',
'intersectional',
'intersession',
'intersex',
'intersexual',
'intersexualism',
'intersexuality',
'intersocietal',
'intersperse',
'interspersed',
'interspersing',
'interspersion',
'interstate',
'interstellar',
'interstice',
'intersticial',
'interstitial',
'intertangle',
'intertangled',
'intertangling',
'interterritorial',
'intertidal',
'intertribal',
'intertropical',
'intertwine',
'intertwined',
'intertwinement',
'intertwining',
'interuniversity',
'interurban',
'interval',
'intervarsity',
'intervene',
'intervened',
'intervener',
'intervening',
'intervention',
'interventionism',
'interventionist',
'intervertebral',
'interview',
'interviewed',
'interviewee',
'interviewer',
'interviewing',
'intervocalic',
'interweave',
'interweaved',
'interweaving',
'interwove',
'interwoven',
'interwrought',
'intestacy',
'intestate',
'intestinal',
'intestine',
'intimacy',
'intimate',
'intimately',
'intimater',
'intimation',
'intimidate',
'intimidation',
'intimidatory',
'intitling',
'intl',
'into',
'intolerable',
'intolerably',
'intolerance',
'intolerant',
'intomb',
'intombing',
'intonation',
'intone',
'intoner',
'intoning',
'intoxicant',
'intoxicate',
'intoxication',
'intoxicative',
'intr',
'intra',
'intracity',
'intractable',
'intradermal',
'intramolecular',
'intramural',
'intransigence',
'intransigent',
'intransigently',
'intransitive',
'intrastate',
'intrauterine',
'intravaginal',
'intravenously',
'intrench',
'intrenched',
'intrepid',
'intrepidity',
'intrepidly',
'intricacy',
'intricate',
'intricately',
'intrigue',
'intrigued',
'intriguer',
'intriguing',
'intrinsic',
'intro',
'introduce',
'introduced',
'introducer',
'introducible',
'introducing',
'introduction',
'introductory',
'introit',
'introject',
'introjection',
'intromission',
'intromit',
'intromitted',
'intromittent',
'intromitter',
'intromitting',
'introspection',
'introspective',
'introversion',
'introversive',
'introvert',
'introverted',
'intrude',
'intruder',
'intruding',
'intrusion',
'intrusive',
'intrust',
'intrusted',
'intrusting',
'intuit',
'intuited',
'intuiting',
'intuition',
'intuitive',
'intuito',
'intumesce',
'inturn',
'inturned',
'intwined',
'intwining',
'intwisted',
'inundant',
'inundate',
'inundation',
'inure',
'inurement',
'inuring',
'inurn',
'inutile',
'invadable',
'invade',
'invader',
'invading',
'invagination',
'invalid',
'invalidate',
'invalidation',
'invaliding',
'invalidism',
'invalidity',
'invalidly',
'invaluable',
'invaluably',
'invariability',
'invariable',
'invariably',
'invariant',
'invasion',
'invasive',
'invected',
'invective',
'inveigh',
'inveighed',
'inveighing',
'inveigle',
'inveigled',
'inveiglement',
'inveigler',
'inveigling',
'invent',
'invented',
'inventer',
'inventing',
'invention',
'inventive',
'inventoried',
'inventory',
'inventorying',
'inverse',
'inversely',
'inversion',
'inversive',
'invert',
'invertase',
'invertebrate',
'inverted',
'inverter',
'invertible',
'inverting',
'invest',
'investable',
'invested',
'investible',
'investigatable',
'investigate',
'investigation',
'investigational',
'investigative',
'investigatory',
'investing',
'investiture',
'investment',
'inveteracy',
'inveterate',
'inveterately',
'inviable',
'inviably',
'invidiously',
'invigorate',
'invigoration',
'invincibility',
'invincible',
'invincibly',
'inviolability',
'inviolable',
'inviolably',
'inviolacy',
'inviolate',
'inviolately',
'invisibility',
'invisible',
'invisibly',
'invitation',
'invitational',
'invite',
'invited',
'invitee',
'inviter',
'inviting',
'invocable',
'invocate',
'invocation',
'invocational',
'invoice',
'invoiced',
'invoicing',
'invoke',
'invoked',
'invoker',
'invoking',
'involucre',
'involuntarily',
'involuntary',
'involute',
'involuted',
'involuting',
'involution',
'involve',
'involved',
'involvement',
'involver',
'involving',
'invulnerability',
'invulnerable',
'invulnerably',
'inward',
'inwardly',
'inweave',
'inweaved',
'inweaving',
'inwinding',
'inwrought',
'iodide',
'iodin',
'iodine',
'iodize',
'iodized',
'iodizer',
'iodizing',
'iodoform',
'ion',
'ionic',
'ionicity',
'ionise',
'ionised',
'ionising',
'ionium',
'ionizable',
'ionization',
'ionize',
'ionized',
'ionizer',
'ionizing',
'ionosphere',
'ionospheric',
'iota',
'iou',
'iowa',
'iowan',
'ipecac',
'ipso',
'ira',
'iran',
'iranian',
'iraq',
'iraqi',
'irascibility',
'irascible',
'irate',
'irately',
'irater',
'iratest',
'ire',
'ireful',
'irefully',
'ireland',
'irene',
'irenic',
'iridescence',
'iridescent',
'iridic',
'iridium',
'iring',
'irised',
'irish',
'irishman',
'irishwoman',
'irising',
'irk',
'irked',
'irking',
'irksome',
'irksomely',
'iron',
'ironbark',
'ironbound',
'ironclad',
'ironer',
'ironic',
'ironical',
'ironing',
'ironist',
'ironside',
'ironstone',
'ironware',
'ironweed',
'ironwood',
'ironwork',
'ironworker',
'irony',
'iroquoian',
'irradiant',
'irradiate',
'irradiation',
'irrational',
'irrationality',
'irreal',
'irrebuttable',
'irreclaimable',
'irreclaimably',
'irreconcilability',
'irreconcilable',
'irreconcilably',
'irrecoverable',
'irrecoverably',
'irredeemability',
'irredeemable',
'irredeemably',
'irredentism',
'irredentist',
'irreducibility',
'irreducible',
'irreducibly',
'irreformable',
'irrefragable',
'irrefutability',
'irrefutable',
'irrefutably',
'irregular',
'irregularity',
'irregularly',
'irrelevance',
'irrelevancy',
'irrelevant',
'irrelevantly',
'irremediable',
'irremediably',
'irremovable',
'irremovably',
'irreparable',
'irreparably',
'irrepatriable',
'irreplaceable',
'irreplaceably',
'irrepressible',
'irrepressibly',
'irreproachable',
'irreproachably',
'irresistible',
'irresistibly',
'irresolute',
'irresolutely',
'irresolution',
'irrespective',
'irresponsibility',
'irresponsible',
'irresponsibly',
'irresuscitable',
'irretrievability',
'irretrievable',
'irretrievably',
'irreverence',
'irreverent',
'irreverently',
'irreversibility',
'irreversible',
'irreversibly',
'irrevocability',
'irrevocable',
'irrevocably',
'irrigable',
'irrigate',
'irrigation',
'irritability',
'irritable',
'irritably',
'irritancy',
'irritant',
'irritate',
'irritation',
'irritative',
'irrupt',
'irrupted',
'irrupting',
'irruption',
'irruptive',
'isaac',
'isaiah',
'iscariot',
'iscose',
'islam',
'islamic',
'island',
'islander',
'islanding',
'isle',
'isled',
'islet',
'isling',
'ism',
'isobar',
'isobaric',
'isocline',
'isogamy',
'isogon',
'isolable',
'isolate',
'isolation',
'isolationism',
'isolationist',
'isolog',
'isomer',
'isomeric',
'isomerism',
'isomerization',
'isomerize',
'isomerizing',
'isometric',
'isometrical',
'isometry',
'isomorph',
'isomorphism',
'isopod',
'isoprene',
'isopropanol',
'isopropyl',
'isostasy',
'isostatic',
'isotherm',
'isothermal',
'isotonic',
'isotope',
'isotopic',
'isotopy',
'isotropic',
'israel',
'israeli',
'israelite',
'issei',
'issuable',
'issuably',
'issuance',
'issuant',
'issue',
'issued',
'issuer',
'issuing',
'istanbul',
'isthmi',
'isthmian',
'isthmic',
'istle',
'it',
'ital',
'italian',
'italic',
'italicize',
'italicized',
'italicizing',
'italy',
'itch',
'itched',
'itchier',
'itchiest',
'itching',
'itchy',
'item',
'itemed',
'iteming',
'itemization',
'itemize',
'itemized',
'itemizer',
'itemizing',
'iterant',
'iterate',
'iteration',
'iterative',
'itinerant',
'itinerary',
'itself',
'iud',
'ivied',
'ivory',
'ivy',
'ixia',
'izar',
'izzard',
'jab',
'jabbed',
'jabber',
'jabberer',
'jabbering',
'jabbing',
'jabot',
'jacal',
'jacaranda',
'jacinth',
'jacinthe',
'jack',
'jackal',
'jackboot',
'jackdaw',
'jacker',
'jackeroo',
'jacket',
'jacketed',
'jacketing',
'jackfish',
'jackhammer',
'jackie',
'jacking',
'jackknife',
'jackknifed',
'jackknifing',
'jackleg',
'jackpot',
'jackrabbit',
'jackroll',
'jackscrew',
'jackson',
'jacksonian',
'jacksonville',
'jackstraw',
'jacky',
'jacob',
'jacobean',
'jacobin',
'jacquard',
'jacqueline',
'jade',
'jadeite',
'jading',
'jadish',
'jadishly',
'jag',
'jaggeder',
'jaggedest',
'jagger',
'jaggery',
'jaggier',
'jaggiest',
'jagging',
'jaggy',
'jaguar',
'jai',
'jail',
'jailbait',
'jailbird',
'jailbreak',
'jailbreaker',
'jailed',
'jailer',
'jailhouse',
'jailing',
'jailkeeper',
'jailor',
'jakarta',
'jake',
'jalap',
'jaloppy',
'jalopy',
'jalousie',
'jam',
'jamaica',
'jamaican',
'jamb',
'jambed',
'jambing',
'jamboree',
'jamestown',
'jammed',
'jammer',
'jamming',
'jane',
'janeiro',
'janet',
'jangle',
'jangled',
'jangler',
'jangling',
'jangly',
'janisary',
'janitorial',
'janizary',
'january',
'jap',
'japan',
'japanese',
'japanize',
'japanized',
'japanizing',
'japanned',
'japanner',
'japanning',
'jape',
'japed',
'japer',
'japery',
'japing',
'japonica',
'jar',
'jardiniere',
'jarful',
'jargon',
'jargoning',
'jargonize',
'jargonized',
'jargonizing',
'jarring',
'jarsful',
'jasmine',
'jason',
'jasper',
'jaspery',
'jato',
'jaundice',
'jaundiced',
'jaundicing',
'jaunt',
'jaunted',
'jauntier',
'jauntiest',
'jauntily',
'jaunting',
'jaunty',
'java',
'javanese',
'javelin',
'javelined',
'jaw',
'jawbone',
'jawboning',
'jawbreaker',
'jawed',
'jawing',
'jawline',
'jay',
'jaybird',
'jaycee',
'jaygee',
'jayvee',
'jaywalk',
'jaywalked',
'jaywalker',
'jaywalking',
'jazz',
'jazzed',
'jazzer',
'jazzier',
'jazziest',
'jazzily',
'jazzing',
'jazzman',
'jazzy',
'jealously',
'jealousy',
'jean',
'jeannette',
'jeep',
'jeer',
'jeerer',
'jeering',
'jeez',
'jefe',
'jefferson',
'jeffersonian',
'jehad',
'jejunal',
'jejune',
'jejunely',
'jejunity',
'jejunum',
'jekyll',
'jell',
'jelled',
'jellied',
'jellified',
'jellify',
'jellifying',
'jelling',
'jelly',
'jellybean',
'jellyfish',
'jellying',
'jellylike',
'jemmied',
'jemmy',
'jennet',
'jenny',
'jeopard',
'jeopardied',
'jeoparding',
'jeopardize',
'jeopardized',
'jeopardizing',
'jeopardy',
'jerboa',
'jeremiad',
'jeremiah',
'jerk',
'jerked',
'jerker',
'jerkier',
'jerkiest',
'jerkily',
'jerkin',
'jerking',
'jerkwater',
'jerky',
'jeroboam',
'jerry',
'jerrycan',
'jersey',
'jerseyed',
'jerseyite',
'jerusalem',
'jesse',
'jessed',
'jest',
'jested',
'jester',
'jestful',
'jesting',
'jesuit',
'jesuitic',
'jesuitical',
'jesuitry',
'jet',
'jetliner',
'jetport',
'jetsam',
'jetsom',
'jetted',
'jettied',
'jetting',
'jettison',
'jettisoning',
'jetty',
'jettying',
'jeu',
'jeux',
'jew',
'jewed',
'jewel',
'jeweled',
'jeweler',
'jeweling',
'jewelled',
'jeweller',
'jewelling',
'jewelry',
'jewelweed',
'jewfish',
'jewing',
'jewish',
'jewry',
'jezebel',
'jib',
'jibbed',
'jibber',
'jibbing',
'jibe',
'jibed',
'jiber',
'jibing',
'jiff',
'jiffy',
'jig',
'jigaboo',
'jigger',
'jigging',
'jiggle',
'jiggled',
'jigglier',
'jiggliest',
'jiggling',
'jiggly',
'jigsaw',
'jigsawed',
'jigsawing',
'jigsawn',
'jihad',
'jill',
'jillion',
'jilt',
'jilted',
'jilter',
'jilting',
'jim',
'jiminy',
'jimmied',
'jimminy',
'jimmy',
'jimmying',
'jimsonweed',
'jingle',
'jingled',
'jingler',
'jinglier',
'jingliest',
'jingling',
'jingo',
'jingoish',
'jingoism',
'jingoist',
'jingoistic',
'jinn',
'jinnee',
'jinni',
'jinrikisha',
'jinx',
'jinxed',
'jinxing',
'jitney',
'jitter',
'jitterbug',
'jitterbugging',
'jittering',
'jittery',
'jiujitsu',
'jiujutsu',
'jive',
'jived',
'jiving',
'jnana',
'job',
'jobbed',
'jobber',
'jobbing',
'jobholder',
'jock',
'jockey',
'jockeyed',
'jockeying',
'jocko',
'jockstrap',
'jocose',
'jocosely',
'jocosity',
'jocular',
'jocularity',
'jocund',
'jocundity',
'jocundly',
'jodhpur',
'joe',
'joey',
'jog',
'jogger',
'jogging',
'joggle',
'joggled',
'joggler',
'joggling',
'johannesburg',
'john',
'johnnie',
'johnny',
'johnson',
'joie',
'join',
'joinable',
'joined',
'joiner',
'joinery',
'joining',
'joint',
'jointed',
'jointer',
'jointing',
'jointly',
'jointure',
'jointuring',
'joist',
'joisted',
'joisting',
'jojoba',
'joke',
'joked',
'joker',
'jokester',
'joking',
'jollied',
'jollier',
'jolliest',
'jollification',
'jollified',
'jollify',
'jollifying',
'jollily',
'jollity',
'jolly',
'jollying',
'jolt',
'jolted',
'jolter',
'joltier',
'joltily',
'jolting',
'jolty',
'jonah',
'jonathan',
'jongleur',
'jonquil',
'joram',
'jordan',
'jordanian',
'jorum',
'jose',
'joseph',
'josephine',
'josh',
'joshed',
'josher',
'joshing',
'joshua',
'jostle',
'jostled',
'jostler',
'jostling',
'jot',
'jota',
'jotted',
'jotter',
'jotting',
'jotty',
'joule',
'jounce',
'jounced',
'jouncier',
'jounciest',
'jouncing',
'jouncy',
'jour',
'journal',
'journalese',
'journalism',
'journalist',
'journalistic',
'journalize',
'journalized',
'journalizing',
'journey',
'journeyed',
'journeyer',
'journeying',
'journeyman',
'joust',
'jousted',
'jouster',
'jousting',
'jovial',
'joviality',
'jowl',
'jowled',
'jowlier',
'jowliest',
'jowly',
'joy',
'joyance',
'joyce',
'joyed',
'joyful',
'joyfuller',
'joyfullest',
'joyfully',
'joying',
'joyously',
'joyridden',
'joyride',
'joyrider',
'joyriding',
'joyrode',
'joystick',
'juan',
'jubilant',
'jubilantly',
'jubilate',
'jubilation',
'jubile',
'jubilee',
'judaic',
'judaica',
'judaical',
'judaism',
'judder',
'judge',
'judgelike',
'judgement',
'judger',
'judgeship',
'judging',
'judgmatic',
'judgment',
'judgmental',
'judicatory',
'judicature',
'judice',
'judicial',
'judicialized',
'judicializing',
'judiciary',
'judiciously',
'judith',
'judo',
'judoist',
'judy',
'jug',
'jugful',
'juggernaut',
'jugging',
'juggle',
'juggled',
'juggler',
'jugglery',
'juggling',
'jughead',
'jugsful',
'jugula',
'jugular',
'jugulate',
'juice',
'juiced',
'juicer',
'juicier',
'juiciest',
'juicily',
'juicing',
'juicy',
'jujitsu',
'juju',
'jujube',
'jujuism',
'jujuist',
'jujutsu',
'juke',
'jukebox',
'juked',
'juking',
'julep',
'julienne',
'july',
'jumble',
'jumbled',
'jumbler',
'jumbling',
'jumbo',
'jumbuck',
'jump',
'jumpable',
'jumped',
'jumper',
'jumpier',
'jumpiest',
'jumpily',
'jumping',
'jumpoff',
'jumpy',
'junco',
'junction',
'junctional',
'juncture',
'june',
'juneau',
'jungian',
'jungle',
'junglier',
'jungliest',
'jungly',
'junior',
'juniper',
'junk',
'junked',
'junker',
'junket',
'junketed',
'junketeer',
'junketer',
'junketing',
'junkie',
'junkier',
'junkiest',
'junking',
'junkman',
'junky',
'junkyard',
'juno',
'junta',
'junto',
'jupe',
'jupiter',
'jurassic',
'juratory',
'jure',
'juridic',
'juridical',
'jurisdiction',
'jurisdictional',
'jurisdictive',
'jurisprudence',
'jurisprudent',
'jurisprudential',
'jurist',
'juristic',
'juror',
'jury',
'juryman',
'jurywoman',
'just',
'justed',
'juster',
'justest',
'justice',
'justiceship',
'justiciable',
'justiciary',
'justifiable',
'justifiably',
'justification',
'justified',
'justifier',
'justify',
'justifying',
'justing',
'justinian',
'justle',
'justly',
'jut',
'jute',
'jutted',
'jutting',
'jutty',
'juvenal',
'juvenile',
'juvenility',
'juxta',
'juxtapose',
'juxtaposed',
'juxtaposing',
'juxtaposition',
'kabala',
'kabbala',
'kabbalah',
'kabob',
'kabuki',
'kachina',
'kaddish',
'kadish',
'kadishim',
'kaffir',
'kafir',
'kafka',
'kaftan',
'kahuna',
'kaiak',
'kaiser',
'kajeput',
'kaka',
'kakemono',
'kakistocracy',
'kakogenic',
'kale',
'kaleidoscope',
'kaleidoscopic',
'kalif',
'kalifate',
'kalimba',
'kaliph',
'kalium',
'kalpa',
'kamaaina',
'kame',
'kamikaze',
'kampuchea',
'kangaroo',
'kanji',
'kansan',
'kantian',
'kaolin',
'kapok',
'kappa',
'kaput',
'kaputt',
'karakul',
'karat',
'karate',
'karen',
'karma',
'karmic',
'karst',
'kart',
'karyocyte',
'karyotype',
'kasha',
'kashmir',
'katabolism',
'katakana',
'katharine',
'kathartic',
'katherine',
'kathy',
'katrina',
'katydid',
'katzenjammer',
'kayak',
'kayaker',
'kayo',
'kayoed',
'kayoing',
'kazoo',
'kebab',
'kebob',
'kedge',
'kedging',
'keel',
'keelage',
'keeled',
'keeler',
'keelhaul',
'keelhauled',
'keeling',
'keen',
'keened',
'keener',
'keenest',
'keening',
'keenly',
'keep',
'keepable',
'keeper',
'keeping',
'keepsake',
'keester',
'kefir',
'keg',
'kegler',
'keister',
'keloid',
'keloidal',
'kelp',
'kelped',
'kelpie',
'kelping',
'kelpy',
'keltic',
'kelvin',
'kempt',
'ken',
'kendo',
'kenned',
'kennedy',
'kennel',
'kenneled',
'kenneling',
'kennelled',
'kennelling',
'kenning',
'kenny',
'keno',
'kent',
'kentuckian',
'kentucky',
'kenya',
'kepi',
'kept',
'keratin',
'keratoid',
'keratotic',
'kerb',
'kerbed',
'kerbing',
'kerchief',
'kerchoo',
'kerf',
'kerfed',
'kerfing',
'kern',
'kerned',
'kernel',
'kerneled',
'kerneling',
'kernelled',
'kernelling',
'kerning',
'kerosene',
'kerosine',
'kerplunk',
'kerry',
'kestrel',
'ketch',
'ketchup',
'ketone',
'ketonuria',
'kettle',
'kettledrum',
'key',
'keyage',
'keyboard',
'keyed',
'keyhole',
'keying',
'keyman',
'keynote',
'keynoted',
'keynoter',
'keynoting',
'keypad',
'keypunch',
'keypunched',
'keypuncher',
'keypunching',
'keyset',
'keyster',
'keystone',
'keystroke',
'keyway',
'keyword',
'khaki',
'khalif',
'khalifa',
'khan',
'khanate',
'khartoum',
'khedive',
'kibble',
'kibbled',
'kibbling',
'kibbutz',
'kibbutzim',
'kibitz',
'kibitzed',
'kibitzer',
'kibitzing',
'kibosh',
'kiboshed',
'kiboshing',
'kick',
'kickback',
'kicker',
'kickier',
'kickiest',
'kicking',
'kickoff',
'kickshaw',
'kickstand',
'kickup',
'kicky',
'kid',
'kidder',
'kiddie',
'kidding',
'kiddish',
'kiddo',
'kiddy',
'kidnap',
'kidnaped',
'kidnapee',
'kidnaper',
'kidnaping',
'kidnapper',
'kidnapping',
'kidney',
'kidskin',
'kidvid',
'kielbasa',
'kielbasy',
'kieselguhr',
'kiester',
'kiev',
'kike',
'kill',
'killdee',
'killdeer',
'killed',
'killer',
'killing',
'killjoy',
'kiln',
'kilned',
'kilning',
'kilo',
'kilobar',
'kilobit',
'kilobyte',
'kilocycle',
'kilogram',
'kilohertz',
'kiloliter',
'kilometer',
'kilorad',
'kiloton',
'kilovolt',
'kilowatt',
'kilt',
'kilted',
'kilter',
'kiltie',
'kilting',
'kilty',
'kimono',
'kimonoed',
'kin',
'kinaestheic',
'kinaesthesia',
'kinaesthetic',
'kind',
'kinder',
'kindergarten',
'kindergartner',
'kindest',
'kindhearted',
'kindle',
'kindled',
'kindler',
'kindlier',
'kindliest',
'kindling',
'kindly',
'kindredship',
'kine',
'kinema',
'kinematic',
'kinematical',
'kinematograph',
'kineplasty',
'kinescope',
'kinesic',
'kinesiologic',
'kinesiological',
'kinesiology',
'kinesthesia',
'kinesthetic',
'kinetic',
'kinfolk',
'king',
'kingdom',
'kingfish',
'kingfisher',
'kinging',
'kinglet',
'kinglier',
'kingliest',
'kingpin',
'kingship',
'kingside',
'kingwood',
'kinhin',
'kink',
'kinkajou',
'kinked',
'kinkier',
'kinkiest',
'kinkily',
'kinking',
'kinky',
'kinsfolk',
'kinship',
'kinsman',
'kinsmanship',
'kinspeople',
'kinswoman',
'kiosk',
'kiowa',
'kip',
'kipper',
'kippering',
'kippur',
'kirigami',
'kirk',
'kirkman',
'kirned',
'kirsch',
'kirtle',
'kirtled',
'kishka',
'kismet',
'kismetic',
'kissable',
'kissably',
'kissed',
'kisser',
'kissing',
'kist',
'kit',
'kitchen',
'kitchenette',
'kitchenware',
'kite',
'kited',
'kiter',
'kith',
'kithara',
'kithing',
'kiting',
'kitling',
'kitsch',
'kitschy',
'kitted',
'kitten',
'kittened',
'kittening',
'kittenish',
'kittenishly',
'kitting',
'kitty',
'kiwi',
'klanism',
'klatch',
'klatsch',
'klaxon',
'kleig',
'kleptomania',
'kleptomaniac',
'klieg',
'kludge',
'kludging',
'klutz',
'klutzier',
'klutziest',
'klutzy',
'klystron',
'knack',
'knacker',
'knackery',
'knacking',
'knackwurst',
'knapper',
'knapping',
'knapsack',
'knave',
'knavery',
'knavish',
'knavishly',
'knead',
'kneader',
'kneading',
'knee',
'kneecap',
'kneecapping',
'kneed',
'kneehole',
'kneeing',
'kneel',
'kneeled',
'kneeler',
'kneeling',
'kneepad',
'kneepan',
'knell',
'knelled',
'knelling',
'knelt',
'knew',
'knickknack',
'knife',
'knifed',
'knifer',
'knifing',
'knight',
'knighted',
'knighthood',
'knighting',
'knightly',
'knish',
'knit',
'knitted',
'knitter',
'knitting',
'knitwear',
'knob',
'knobbed',
'knobbier',
'knobbiest',
'knobby',
'knock',
'knockdown',
'knocker',
'knocking',
'knockoff',
'knockout',
'knockwurst',
'knoll',
'knolly',
'knot',
'knothole',
'knotted',
'knotter',
'knottier',
'knottiest',
'knottily',
'knotting',
'knotty',
'knotweed',
'knout',
'knouted',
'knouting',
'know',
'knowable',
'knower',
'knowhow',
'knowing',
'knowinger',
'knowingest',
'knowledge',
'knowledgeability',
'knowledgeable',
'knowledgeably',
'known',
'knox',
'knoxville',
'knuckle',
'knuckleball',
'knucklebone',
'knuckled',
'knucklehead',
'knuckler',
'knucklier',
'knuckliest',
'knuckling',
'knuckly',
'knurl',
'knurled',
'knurlier',
'knurliest',
'knurling',
'knurly',
'koala',
'koan',
'kobold',
'kodak',
'kodiak',
'kohl',
'kohlrabi',
'kola',
'kolinsky',
'kolkhoz',
'kong',
'kook',
'kookaburra',
'kookie',
'kookier',
'kookiest',
'kooky',
'kopeck',
'kopek',
'kopje',
'koran',
'korea',
'korean',
'korsakoff',
'korsakow',
'koruna',
'koruny',
'kosher',
'koshering',
'koto',
'kowtow',
'kowtowed',
'kowtower',
'kowtowing',
'kraal',
'kraft',
'krait',
'kraken',
'kraut',
'kremlin',
'kremlinologist',
'kremlinology',
'kreutzer',
'krill',
'krishna',
'krona',
'krone',
'kronen',
'kroner',
'kronor',
'kronur',
'krypton',
'kryptonite',
'kuchen',
'kudo',
'kudu',
'kudzu',
'kulak',
'kultur',
'kumquat',
'kumshaw',
'kung',
'kuwait',
'kvetch',
'kvetched',
'kvetching',
'kwacha',
'kwashiorkor',
'kyanising',
'kyanizing',
'kyat',
'kymograph',
'kynurenic',
'kyoto',
'kyrie',
'laager',
'lab',
'label',
'labeled',
'labeler',
'labeling',
'labella',
'labelled',
'labeller',
'labelling',
'labia',
'labial',
'labiate',
'labile',
'labium',
'labor',
'laboratorial',
'laboratorian',
'laboratory',
'laborer',
'laboring',
'laboriously',
'laborite',
'laborsaving',
'labour',
'labourer',
'labouring',
'labrador',
'labradorite',
'laburnum',
'labyrinth',
'labyrinthine',
'lac',
'laccolith',
'lace',
'laced',
'laceier',
'lacer',
'lacerable',
'lacerate',
'laceration',
'lacerative',
'lacewing',
'lacework',
'lacey',
'lachrymal',
'lachrymation',
'lachrymatory',
'lachrymose',
'lacier',
'laciest',
'lacily',
'lacing',
'lack',
'lackadaisical',
'lackaday',
'lacker',
'lackey',
'lackeyed',
'lackeying',
'lacking',
'lackluster',
'laconic',
'laconism',
'lacquer',
'lacquerer',
'lacquering',
'lacrimal',
'lacrimation',
'lacrimatory',
'lacrosse',
'lactate',
'lactation',
'lactational',
'lacteal',
'lactic',
'lactobacilli',
'lactoprotein',
'lactose',
'lactovegetarian',
'lacuna',
'lacunae',
'lacunal',
'lacunar',
'lacunary',
'lacy',
'lad',
'ladanum',
'ladder',
'laddering',
'laddie',
'lade',
'laden',
'ladened',
'lader',
'lading',
'ladle',
'ladled',
'ladleful',
'ladler',
'ladling',
'ladron',
'ladrone',
'lady',
'ladybird',
'ladybug',
'ladyfinger',
'ladyish',
'ladykin',
'ladylike',
'ladylove',
'ladyship',
'laetrile',
'lafayette',
'lag',
'lager',
'laggard',
'laggardly',
'lagger',
'lagging',
'lagniappe',
'lagoon',
'lagoonal',
'laguna',
'lahore',
'laical',
'laicized',
'laicizing',
'laid',
'lain',
'lair',
'laird',
'lairdly',
'lairing',
'laissez',
'lait',
'laity',
'lake',
'laked',
'lakeport',
'laker',
'lakeside',
'lakier',
'lakiest',
'laking',
'laky',
'lallygag',
'lallygagging',
'lam',
'lama',
'lamaism',
'lamasery',
'lamb',
'lambast',
'lambaste',
'lambasted',
'lambasting',
'lambda',
'lambed',
'lambency',
'lambent',
'lambently',
'lamber',
'lambert',
'lambie',
'lambing',
'lambkin',
'lambskin',
'lame',
'lamebrain',
'lamed',
'lamella',
'lamellae',
'lamely',
'lament',
'lamentable',
'lamentably',
'lamentation',
'lamented',
'lamenter',
'lamenting',
'lamer',
'lamest',
'lamia',
'lamina',
'laminae',
'laminal',
'laminar',
'laminary',
'laminate',
'lamination',
'laming',
'lammed',
'lamming',
'lamp',
'lampblack',
'lamped',
'lamping',
'lamplight',
'lamplighter',
'lampoon',
'lampooner',
'lampoonery',
'lampooning',
'lampoonist',
'lamppost',
'lamprey',
'lanai',
'lance',
'lanced',
'lancelot',
'lancer',
'lancet',
'lanceted',
'lancinate',
'lancing',
'land',
'landau',
'lander',
'landfall',
'landfill',
'landform',
'landholder',
'landholding',
'landing',
'landlady',
'landlord',
'landlordism',
'landlordly',
'landlordship',
'landlubber',
'landmark',
'landowner',
'landownership',
'landowning',
'landright',
'landsat',
'landscape',
'landscaped',
'landscaper',
'landscaping',
'landslid',
'landslide',
'landslip',
'landsman',
'landward',
'lane',
'langauge',
'langley',
'language',
'languid',
'languidly',
'languish',
'languished',
'languisher',
'languishing',
'languor',
'languorously',
'langur',
'laniard',
'lank',
'lanker',
'lankest',
'lankier',
'lankiest',
'lankily',
'lankly',
'lanky',
'lanolin',
'lanoline',
'lansing',
'lantana',
'lantern',
'lanthanum',
'lanyard',
'laotian',
'lap',
'laparorrhaphy',
'laparoscope',
'laparotomy',
'lapboard',
'lapdog',
'lapel',
'lapful',
'lapidary',
'lapin',
'lapinized',
'lapland',
'laplander',
'lapp',
'lapper',
'lappering',
'lappet',
'lapping',
'lapse',
'lapsed',
'lapser',
'lapsing',
'laptop',
'lapwing',
'larboard',
'larcenable',
'larcener',
'larcenist',
'larcenously',
'larceny',
'larch',
'lard',
'larder',
'lardier',
'lardiest',
'larding',
'lardy',
'large',
'largehearted',
'largely',
'larger',
'largesse',
'largest',
'largish',
'largo',
'lariat',
'lark',
'larked',
'larker',
'larkier',
'larking',
'larkspur',
'larky',
'larrup',
'larruped',
'larruper',
'larruping',
'larry',
'larva',
'larvae',
'larval',
'larvicide',
'laryngal',
'laryngeal',
'laryngectomize',
'laryngectomy',
'laryngitic',
'laryngology',
'laryngoscope',
'laryngoscopy',
'laryngotracheal',
'larynx',
'lasagna',
'lasagne',
'lascar',
'lasciviously',
'lased',
'laser',
'laserdisk',
'laserjet',
'lash',
'lashed',
'lasher',
'lashing',
'lasing',
'lassie',
'lassitude',
'lasso',
'lassoed',
'lassoer',
'lassoing',
'last',
'lasted',
'laster',
'lasting',
'lastly',
'latch',
'latched',
'latching',
'latchkey',
'latchstring',
'late',
'latecomer',
'lateen',
'lately',
'laten',
'latency',
'latened',
'latening',
'latent',
'latently',
'later',
'lateral',
'lateraled',
'latest',
'latex',
'lath',
'lathe',
'lathed',
'lather',
'latherer',
'lathering',
'lathery',
'lathier',
'lathing',
'lathwork',
'lathy',
'latin',
'latinize',
'latinized',
'latinizing',
'latino',
'latish',
'latissimi',
'latitude',
'latitudinal',
'latitudinarian',
'latitudinarianism',
'latrine',
'latten',
'latter',
'latterly',
'lattice',
'latticed',
'latticework',
'latticing',
'latvia',
'latvian',
'laud',
'laudability',
'laudable',
'laudably',
'laudanum',
'laudation',
'laudatorily',
'laudatory',
'laude',
'lauder',
'lauderdale',
'lauding',
'laugh',
'laughable',
'laughably',
'laughed',
'laugher',
'laughing',
'laughingstock',
'laughter',
'launch',
'launched',
'launcher',
'launching',
'launder',
'launderer',
'launderette',
'laundering',
'laundromat',
'laundry',
'laundryman',
'laundrywoman',
'laura',
'laureate',
'laureateship',
'laurel',
'laureled',
'laureling',
'laurelled',
'laurelling',
'lava',
'lavabo',
'lavage',
'lavalava',
'lavalier',
'lavaliere',
'lavation',
'lavatory',
'lave',
'laved',
'lavender',
'laver',
'laving',
'lavish',
'lavished',
'lavisher',
'lavishest',
'lavishing',
'lavishly',
'law',
'lawbook',
'lawbreaker',
'lawbreaking',
'lawcourt',
'lawed',
'lawful',
'lawfully',
'lawgiver',
'lawgiving',
'lawing',
'lawlessly',
'lawmaker',
'lawmaking',
'lawman',
'lawn',
'lawnmower',
'lawny',
'lawrence',
'lawrencium',
'lawsuit',
'lawyer',
'lawyering',
'lawyerlike',
'lawyerly',
'lax',
'laxative',
'laxer',
'laxest',
'laxity',
'laxly',
'lay',
'layabout',
'layaway',
'layed',
'layer',
'layering',
'layette',
'laying',
'layman',
'layoff',
'layout',
'layover',
'laywoman',
'lazar',
'lazaret',
'lazarette',
'lazaretto',
'laze',
'lazed',
'lazied',
'lazier',
'laziest',
'lazily',
'lazing',
'lazuli',
'lazy',
'lazying',
'lazyish',
'lea',
'leach',
'leached',
'leacher',
'leachier',
'leachiest',
'leaching',
'leachy',
'lead',
'leaden',
'leadenly',
'leader',
'leadership',
'leadier',
'leading',
'leadoff',
'leady',
'leaf',
'leafage',
'leafed',
'leafhopper',
'leafier',
'leafiest',
'leafing',
'leaflet',
'leafstalk',
'leafworm',
'leafy',
'league',
'leagued',
'leaguer',
'leaguering',
'leaguing',
'leak',
'leakage',
'leaked',
'leaker',
'leakier',
'leakiest',
'leakily',
'leaking',
'leaky',
'leal',
'lean',
'leaned',
'leaner',
'leanest',
'leaning',
'leanly',
'leant',
'leap',
'leaped',
'leaper',
'leapfrog',
'leapfrogging',
'leaping',
'leapt',
'lear',
'learn',
'learnable',
'learned',
'learner',
'learning',
'learnt',
'leary',
'leasable',
'lease',
'leaseback',
'leased',
'leasehold',
'leaseholder',
'leaser',
'leash',
'leashed',
'leashing',
'leasing',
'least',
'leastwise',
'leather',
'leathering',
'leathern',
'leatherneck',
'leathery',
'leave',
'leaved',
'leaven',
'leavened',
'leavening',
'leaver',
'leavier',
'leaving',
'lebanese',
'lebanon',
'lech',
'lechayim',
'lecher',
'lechering',
'lecherously',
'lechery',
'lecithin',
'lect',
'lectern',
'lecture',
'lecturer',
'lectureship',
'lecturing',
'led',
'ledge',
'ledger',
'ledgier',
'ledgy',
'lee',
'leeboard',
'leech',
'leeched',
'leeching',
'leek',
'leer',
'leerier',
'leeriest',
'leerily',
'leering',
'leery',
'leeward',
'leewardly',
'leeway',
'left',
'lefter',
'leftest',
'leftism',
'leftist',
'leftover',
'leftward',
'leftwing',
'lefty',
'leg',
'legacy',
'legal',
'legalese',
'legalism',
'legalist',
'legalistic',
'legality',
'legalization',
'legalize',
'legalized',
'legalizing',
'legate',
'legatee',
'legateship',
'legation',
'legationary',
'legato',
'legend',
'legendarily',
'legendary',
'legendry',
'leger',
'legerdemain',
'leggier',
'leggiest',
'legging',
'leggy',
'leghorn',
'legibility',
'legible',
'legibly',
'legion',
'legionary',
'legionnaire',
'legislate',
'legislation',
'legislative',
'legislatorial',
'legislatorship',
'legislatrix',
'legislature',
'legit',
'legitimacy',
'legitimate',
'legitimately',
'legitimation',
'legitimatize',
'legitimatized',
'legitimatizing',
'legitimism',
'legitimist',
'legitimization',
'legitimize',
'legitimized',
'legitimizer',
'legitimizing',
'legman',
'legroom',
'legume',
'legwork',
'lehayim',
'lei',
'leipzig',
'leister',
'leisure',
'leisurely',
'leitmotif',
'lek',
'leman',
'lemma',
'lemming',
'lemon',
'lemonade',
'lemonish',
'lemony',
'lempira',
'lemur',
'lend',
'lender',
'lending',
'length',
'lengthen',
'lengthened',
'lengthener',
'lengthening',
'lengthier',
'lengthiest',
'lengthily',
'lengthwise',
'lengthy',
'lenience',
'leniency',
'lenient',
'leniently',
'lenin',
'leningrad',
'leninism',
'leninist',
'lenitive',
'lenity',
'lense',
'lensed',
'lent',
'lentando',
'lenten',
'lentic',
'lenticular',
'lentiform',
'lentil',
'lento',
'leo',
'leon',
'leonard',
'leonardo',
'leone',
'leonine',
'leopard',
'leotard',
'leper',
'lepidoptera',
'lepidopteran',
'leprechaun',
'leprosaria',
'leprosarium',
'leprose',
'leprosy',
'lepton',
'leptonic',
'lesbian',
'lesbianism',
'lese',
'lesion',
'lessee',
'lessen',
'lessened',
'lessening',
'lesser',
'lesson',
'lessoning',
'lessor',
'lest',
'let',
'letch',
'letdown',
'lethal',
'lethality',
'lethargic',
'lethargy',
'lethe',
'lethean',
'letted',
'letter',
'letterer',
'letterhead',
'lettering',
'letterman',
'letting',
'lettuce',
'letup',
'leu',
'leucocyte',
'leucoma',
'leukaemia',
'leukaemic',
'leukemia',
'leukemic',
'leukemoid',
'leukocyte',
'leukoma',
'lev',
'leva',
'levant',
'levee',
'leveed',
'leveeing',
'level',
'leveled',
'leveler',
'leveling',
'levelled',
'leveller',
'levelling',
'levelly',
'lever',
'leverage',
'leveraging',
'leveret',
'levering',
'levi',
'leviathan',
'levied',
'levier',
'levin',
'levitate',
'levitation',
'levitical',
'levity',
'levo',
'levulose',
'levy',
'levying',
'lewd',
'lewder',
'lewdest',
'lewdly',
'lex',
'lexical',
'lexicographer',
'lexicographic',
'lexicographical',
'lexicography',
'lexicon',
'ley',
'liability',
'liable',
'liaise',
'liaised',
'liaising',
'liaison',
'liana',
'liar',
'lib',
'libation',
'libationary',
'libbed',
'libber',
'libbing',
'libel',
'libelant',
'libeled',
'libelee',
'libeler',
'libeling',
'libelist',
'libellant',
'libelled',
'libellee',
'libeller',
'libelling',
'libellously',
'libelously',
'liber',
'liberal',
'liberalism',
'liberality',
'liberalization',
'liberalize',
'liberalized',
'liberalizing',
'liberate',
'liberation',
'liberationist',
'liberia',
'liberian',
'libertarian',
'libertarianism',
'libertine',
'liberty',
'libidinal',
'libidinization',
'libidinized',
'libidinizing',
'libidinously',
'libido',
'libitum',
'libra',
'librarian',
'library',
'librate',
'libre',
'libretti',
'librettist',
'libretto',
'libya',
'lice',
'licence',
'licencing',
'licensable',
'license',
'licensed',
'licensee',
'licenser',
'licensing',
'licensor',
'licensure',
'licentiate',
'licentiously',
'lichee',
'lichen',
'lichened',
'lichening',
'lichenoid',
'lichi',
'licht',
'lichting',
'licit',
'licitation',
'licitly',
'lick',
'licker',
'lickety',
'licking',
'licorice',
'lid',
'lidar',
'lidding',
'lido',
'lie',
'liechtenstein',
'lied',
'lieder',
'lief',
'liefer',
'liefest',
'liefly',
'liege',
'liegeman',
'lien',
'lienable',
'lienal',
'lienee',
'lienholder',
'lienor',
'lier',
'lieu',
'lieut',
'lieutenancy',
'lieutenant',
'life',
'lifeblood',
'lifeboat',
'lifebuoy',
'lifeful',
'lifeguard',
'lifelessly',
'lifelike',
'lifeline',
'lifelong',
'lifer',
'lifesaver',
'lifesaving',
'lifespan',
'lifestyle',
'lifetime',
'lifeway',
'lifework',
'lift',
'liftable',
'lifted',
'lifter',
'lifting',
'liftman',
'liftoff',
'ligament',
'ligamentary',
'ligate',
'ligation',
'ligature',
'ligaturing',
'liger',
'light',
'lighted',
'lighten',
'lightened',
'lightener',
'lightening',
'lighter',
'lighterage',
'lightering',
'lightest',
'lightface',
'lightfaced',
'lightfooted',
'lightful',
'lighthearted',
'lighthouse',
'lighting',
'lightish',
'lightly',
'lightning',
'lightship',
'lightsome',
'lightweight',
'lignification',
'lignified',
'lignify',
'lignifying',
'lignin',
'lignite',
'lignitic',
'lignum',
'likability',
'likable',
'like',
'likeable',
'liked',
'likelier',
'likeliest',
'likelihood',
'likely',
'liken',
'likened',
'likening',
'liker',
'likest',
'likewise',
'liking',
'lilac',
'lilied',
'lilliput',
'lilliputian',
'lilly',
'lilt',
'lilted',
'lilting',
'lily',
'lim',
'lima',
'limb',
'limbeck',
'limbed',
'limber',
'limberer',
'limberest',
'limbering',
'limberly',
'limbic',
'limbier',
'limbing',
'limbo',
'limburger',
'limby',
'lime',
'limeade',
'limed',
'limekiln',
'limelight',
'limerick',
'limestone',
'limewater',
'limey',
'limier',
'limiest',
'liminal',
'liming',
'limit',
'limitable',
'limitation',
'limitative',
'limited',
'limiter',
'limiting',
'limitlessly',
'limn',
'limned',
'limner',
'limning',
'limo',
'limonite',
'limonitic',
'limousine',
'limp',
'limped',
'limper',
'limpest',
'limpet',
'limpid',
'limpidity',
'limpidly',
'limping',
'limply',
'limy',
'linable',
'linac',
'linage',
'linchpin',
'lincoln',
'linda',
'lindane',
'linden',
'lindy',
'line',
'lineable',
'lineage',
'lineal',
'lineament',
'linear',
'linearly',
'lineate',
'linebacker',
'linecut',
'lined',
'linefeed',
'lineman',
'linen',
'lineny',
'liner',
'linesman',
'lineup',
'liney',
'ling',
'lingam',
'linger',
'lingerer',
'lingerie',
'lingering',
'lingier',
'lingo',
'lingua',
'lingual',
'linguine',
'linguini',
'linguist',
'linguistic',
'lingula',
'linier',
'liniest',
'liniment',
'lining',
'link',
'linkable',
'linkage',
'linkboy',
'linked',
'linker',
'linking',
'linkman',
'linkup',
'linky',
'linnet',
'lino',
'linoleum',
'linotype',
'linseed',
'linsey',
'lint',
'lintel',
'linter',
'lintier',
'lintiest',
'linty',
'linum',
'liny',
'lion',
'lionhearted',
'lionise',
'lionization',
'lionize',
'lionized',
'lionizer',
'lionizing',
'lip',
'lipase',
'lipid',
'lipoprotein',
'liposoluble',
'lipper',
'lippier',
'lippiest',
'lipping',
'lippy',
'lipreading',
'lipstick',
'liq',
'liquate',
'liquefacient',
'liquefaction',
'liquefactive',
'liquefiable',
'liquefied',
'liquefier',
'liquefy',
'liquefying',
'liquescent',
'liqueur',
'liquid',
'liquidate',
'liquidation',
'liquidity',
'liquidize',
'liquidized',
'liquidizing',
'liquidly',
'liquify',
'liquor',
'liquorice',
'liquoring',
'lira',
'lire',
'lisbon',
'lisle',
'lisp',
'lisped',
'lisper',
'lisping',
'lissom',
'lissome',
'lissomely',
'lissomly',
'list',
'listable',
'listed',
'listen',
'listened',
'listener',
'listening',
'lister',
'listing',
'listlessly',
'liszt',
'lit',
'litany',
'litchi',
'lite',
'liter',
'literacy',
'literal',
'literalism',
'literary',
'literate',
'literately',
'literati',
'literatim',
'literature',
'lith',
'lithe',
'lithely',
'lither',
'lithesome',
'lithest',
'lithic',
'lithium',
'litho',
'lithograph',
'lithographed',
'lithographer',
'lithographic',
'lithographing',
'lithography',
'lithologic',
'lithology',
'lithosphere',
'lithotome',
'lithotomy',
'lithuania',
'lithuanian',
'litigable',
'litigant',
'litigate',
'litigation',
'litigiosity',
'litigiously',
'litoral',
'litre',
'litten',
'litter',
'litterateur',
'litterbug',
'litterer',
'littering',
'littery',
'little',
'littleneck',
'littler',
'littlest',
'littlish',
'littoral',
'liturgic',
'liturgical',
'liturgist',
'liturgy',
'livability',
'livable',
'live',
'liveability',
'liveable',
'lived',
'livelier',
'liveliest',
'livelihood',
'livelily',
'livelong',
'liven',
'livened',
'livener',
'livening',
'liver',
'liveried',
'liverish',
'liverpool',
'liverwort',
'liverwurst',
'livery',
'liveryman',
'livest',
'livestock',
'livetrap',
'livid',
'lividity',
'lividly',
'living',
'livlihood',
'livre',
'lizard',
'llama',
'llano',
'lo',
'loach',
'load',
'loadable',
'loader',
'loading',
'loadstar',
'loadstone',
'loaf',
'loafed',
'loafer',
'loafing',
'loam',
'loamed',
'loamier',
'loamiest',
'loaming',
'loamy',
'loan',
'loanable',
'loaned',
'loaner',
'loaning',
'loanshark',
'loansharking',
'loanword',
'loath',
'loathe',
'loathed',
'loather',
'loathful',
'loathing',
'loathly',
'loathsome',
'loathsomely',
'lob',
'lobar',
'lobbed',
'lobber',
'lobbied',
'lobbing',
'lobby',
'lobbyer',
'lobbying',
'lobbyism',
'lobbyist',
'lobe',
'lobed',
'lobefin',
'lobelia',
'loblolly',
'lobo',
'lobotomize',
'lobotomized',
'lobotomizing',
'lobotomy',
'lobster',
'lobular',
'lobule',
'loc',
'local',
'locale',
'localising',
'localism',
'localist',
'localite',
'locality',
'localization',
'localize',
'localized',
'localizer',
'localizing',
'locate',
'locater',
'location',
'locative',
'loch',
'loci',
'lock',
'lockable',
'lockage',
'lockbox',
'locker',
'locket',
'locking',
'lockjaw',
'locknut',
'lockout',
'locksmith',
'lockstep',
'lockup',
'loco',
'locoed',
'locoing',
'locoism',
'locomote',
'locomoted',
'locomoting',
'locomotion',
'locomotive',
'locoweed',
'locust',
'locution',
'locutory',
'lode',
'loden',
'lodestar',
'lodestone',
'lodge',
'lodgeable',
'lodgement',
'lodger',
'lodging',
'lodgment',
'loessial',
'loft',
'lofted',
'lofter',
'loftier',
'loftiest',
'loftily',
'lofting',
'lofty',
'log',
'logan',
'loganberry',
'logarithm',
'logarithmic',
'logarithmical',
'logbook',
'loge',
'logger',
'loggerhead',
'loggia',
'loggie',
'loggier',
'logging',
'loggy',
'logia',
'logic',
'logical',
'logician',
'logicize',
'logicized',
'logicizing',
'logier',
'logiest',
'logily',
'logistic',
'logistical',
'logistician',
'logjam',
'logo',
'logogram',
'logorrhea',
'logotype',
'logroll',
'logrolled',
'logrolling',
'logway',
'logwood',
'logy',
'loin',
'loincloth',
'loiter',
'loiterer',
'loitering',
'loll',
'lolled',
'loller',
'lolling',
'lollipop',
'lollop',
'lolloped',
'lolloping',
'lolly',
'lollygag',
'lollypop',
'london',
'londoner',
'lone',
'lonelier',
'loneliest',
'lonelily',
'lonely',
'loner',
'lonesome',
'lonesomely',
'long',
'longboat',
'longbow',
'longer',
'longest',
'longevity',
'longhair',
'longhand',
'longhorn',
'longing',
'longish',
'longitude',
'longitudinal',
'longline',
'longly',
'longrun',
'longship',
'longshoreman',
'longshot',
'longstanding',
'longsuffering',
'longtime',
'longue',
'longwise',
'loo',
'loofa',
'loofah',
'look',
'looked',
'looker',
'looking',
'lookout',
'lookup',
'loom',
'loomed',
'looming',
'loon',
'looney',
'loonier',
'looniest',
'loony',
'loop',
'looped',
'looper',
'loophole',
'loopholing',
'loopier',
'looping',
'loopy',
'loose',
'loosed',
'loosely',
'loosen',
'loosened',
'loosener',
'loosening',
'looser',
'loosest',
'loosing',
'loot',
'looted',
'looter',
'looting',
'lop',
'lope',
'loped',
'loper',
'loping',
'lopper',
'loppier',
'lopping',
'loppy',
'loquaciously',
'loquacity',
'loquat',
'loran',
'lord',
'lording',
'lordlier',
'lordliest',
'lordling',
'lordly',
'lordship',
'lore',
'lorgnette',
'lorn',
'lorry',
'lory',
'losable',
'lose',
'loser',
'losing',
'lossy',
'lost',
'lot',
'loth',
'lothario',
'lothsome',
'lotion',
'lotted',
'lottery',
'lotting',
'lotto',
'loud',
'louden',
'loudened',
'loudening',
'louder',
'loudest',
'loudish',
'loudlier',
'loudliest',
'loudly',
'loudmouth',
'loudmouthed',
'loudspeaker',
'lough',
'louie',
'louise',
'louisiana',
'louisianan',
'louisianian',
'louisville',
'lounge',
'lounger',
'lounging',
'loungy',
'loup',
'loupe',
'louped',
'louping',
'lour',
'loury',
'louse',
'loused',
'lousier',
'lousiest',
'lousily',
'lousing',
'lousy',
'lout',
'louted',
'louting',
'loutish',
'loutishly',
'louver',
'louvre',
'lovable',
'lovably',
'lovage',
'love',
'loveable',
'loveably',
'lovebird',
'loved',
'lovelessly',
'lovelier',
'loveliest',
'lovelily',
'lovelorn',
'lovemaking',
'lover',
'loverly',
'lovesick',
'loving',
'low',
'lowborn',
'lowboy',
'lowbrow',
'lowdown',
'lowed',
'lower',
'lowercase',
'lowerclassman',
'lowering',
'lowermost',
'lowery',
'lowest',
'lowing',
'lowish',
'lowland',
'lowlander',
'lowlier',
'lowliest',
'lowlife',
'lowly',
'lox',
'loxing',
'loyal',
'loyaler',
'loyalest',
'loyalism',
'loyalist',
'loyalty',
'lozenge',
'luau',
'lubber',
'lubberly',
'lube',
'lubricant',
'lubricate',
'lubrication',
'lubricity',
'lucence',
'lucency',
'lucent',
'lucently',
'lucern',
'lucerne',
'lucia',
'lucid',
'lucidity',
'lucidly',
'lucifer',
'lucille',
'lucite',
'luck',
'luckie',
'luckier',
'luckiest',
'luckily',
'lucking',
'lucky',
'lucrative',
'lucre',
'lucubrate',
'lucubration',
'lucy',
'ludicrously',
'ludwig',
'luff',
'luffed',
'luffing',
'lug',
'luge',
'luggage',
'lugger',
'lugging',
'lugubriously',
'luke',
'lukewarm',
'lukewarmly',
'lull',
'lullabied',
'lullaby',
'lullabying',
'lulled',
'lulling',
'lulu',
'lumbago',
'lumbar',
'lumber',
'lumberer',
'lumbering',
'lumberjack',
'lumberman',
'lumberyard',
'lumina',
'luminal',
'luminance',
'luminary',
'luminesce',
'luminesced',
'luminescence',
'luminescent',
'luminescing',
'luminosity',
'luminously',
'lummox',
'lump',
'lumped',
'lumpen',
'lumper',
'lumpfish',
'lumpier',
'lumpiest',
'lumpily',
'lumping',
'lumpish',
'lumpy',
'luna',
'lunacy',
'lunar',
'lunaria',
'lunarian',
'lunate',
'lunatic',
'lunation',
'lunch',
'lunched',
'luncheon',
'luncheonette',
'luncher',
'lunching',
'lunchroom',
'lunchtime',
'lune',
'lunet',
'lunette',
'lung',
'lunge',
'lungee',
'lunger',
'lungfish',
'lunging',
'lunier',
'luniest',
'lunk',
'lunker',
'lunkhead',
'luny',
'lupin',
'lupine',
'lurch',
'lurched',
'lurcher',
'lurching',
'lure',
'lurer',
'lurid',
'luridly',
'luring',
'lurk',
'lurked',
'lurker',
'lurking',
'lusciously',
'lush',
'lushed',
'lusher',
'lushest',
'lushing',
'lushly',
'lust',
'lusted',
'luster',
'lustering',
'lustful',
'lustfully',
'lustier',
'lustiest',
'lustily',
'lusting',
'lustral',
'lustre',
'lustring',
'lustrum',
'lusty',
'lutanist',
'lute',
'luteal',
'luted',
'lutenist',
'lutetium',
'luteum',
'luther',
'lutheran',
'lutheranism',
'luting',
'lutist',
'lux',
'luxe',
'luxembourg',
'luxuriance',
'luxuriant',
'luxuriantly',
'luxuriate',
'luxuriation',
'luxuriously',
'luxury',
'lycanthrope',
'lycanthropy',
'lycee',
'lyceum',
'lychee',
'lye',
'lying',
'lymph',
'lymphatic',
'lymphocyte',
'lymphocytic',
'lymphoid',
'lymphosarcoma',
'lynch',
'lynched',
'lyncher',
'lynching',
'lynx',
'lyonnaise',
'lyrate',
'lyrately',
'lyre',
'lyrebird',
'lyric',
'lyrical',
'lyricism',
'lyricist',
'lyricize',
'lyricized',
'lyricizing',
'lyriform',
'lyrism',
'lyrist',
'lysed',
'lysergic',
'lysin',
'lysine',
'lysing',
'ma',
'mac',
'macabre',
'macadam',
'macadamize',
'macadamized',
'macadamizing',
'macaque',
'macaroni',
'macaroon',
'macaw',
'mace',
'maced',
'macedonia',
'macedonian',
'macer',
'macerate',
'macerater',
'maceration',
'mach',
'machete',
'machiavellian',
'machiavellianism',
'machicolation',
'machina',
'machinability',
'machinable',
'machinate',
'machination',
'machine',
'machineable',
'machined',
'machinelike',
'machinery',
'machining',
'machinist',
'machinize',
'machinized',
'machinizing',
'machismo',
'macho',
'machree',
'macing',
'macintosh',
'mack',
'mackerel',
'mackinaw',
'mackintosh',
'macle',
'macrame',
'macro',
'macrobiotic',
'macrocephalic',
'macrocephaly',
'macrocosm',
'macrocosmic',
'macrocyte',
'macroeconomic',
'macromania',
'macromolecule',
'macron',
'macroscopic',
'macroscopical',
'macrostructural',
'macrostructure',
'macula',
'macular',
'maculate',
'maculation',
'mad',
'madagascar',
'madam',
'madame',
'madcap',
'madcaply',
'madden',
'maddened',
'maddening',
'madder',
'maddest',
'madding',
'maddish',
'made',
'madeira',
'mademoiselle',
'madhouse',
'madison',
'madly',
'madman',
'madonna',
'madre',
'madrid',
'madrigal',
'madrone',
'madwoman',
'madwort',
'maelstrom',
'maenad',
'maenadic',
'maenadism',
'maestoso',
'maestri',
'maestro',
'maffia',
'mafia',
'mafiosi',
'mafioso',
'mag',
'magazine',
'magdalen',
'magdalene',
'mage',
'magellan',
'magenta',
'maggie',
'maggot',
'maggoty',
'magi',
'magic',
'magical',
'magician',
'magicking',
'magister',
'magisterial',
'magistery',
'magistracy',
'magistral',
'magistrate',
'magistrateship',
'magistrature',
'magma',
'magmatic',
'magnanimity',
'magnanimously',
'magnate',
'magnateship',
'magnesia',
'magnesian',
'magnesic',
'magnesium',
'magnet',
'magnetic',
'magnetism',
'magnetite',
'magnetizable',
'magnetization',
'magnetize',
'magnetized',
'magnetizer',
'magnetizing',
'magneto',
'magnetometer',
'magneton',
'magnific',
'magnification',
'magnificence',
'magnificent',
'magnificently',
'magnifico',
'magnified',
'magnifier',
'magnify',
'magnifying',
'magniloquence',
'magniloquent',
'magnitude',
'magnolia',
'magnum',
'magpie',
'maguey',
'magyar',
'maharaja',
'maharajah',
'maharanee',
'maharani',
'maharishi',
'mahatma',
'mahjong',
'mahjongg',
'mahogany',
'mahomet',
'mahonia',
'mahout',
'maid',
'maiden',
'maidenhair',
'maidenhead',
'maidenhood',
'maidenly',
'maidhood',
'maidish',
'maidservant',
'mail',
'mailability',
'mailable',
'mailbag',
'mailbox',
'mailed',
'mailer',
'mailing',
'maillot',
'mailman',
'mailwoman',
'maim',
'maimed',
'maimer',
'maiming',
'main',
'maine',
'mainframe',
'mainland',
'mainlander',
'mainline',
'mainlined',
'mainliner',
'mainlining',
'mainly',
'mainmast',
'mainsail',
'mainspring',
'mainstay',
'mainstream',
'maintain',
'maintainability',
'maintainable',
'maintained',
'maintainer',
'maintaining',
'maintenance',
'maintop',
'maisonette',
'maist',
'maitre',
'maize',
'majestic',
'majestical',
'majesty',
'majolica',
'major',
'majora',
'majorem',
'majorette',
'majoring',
'majority',
'majuscule',
'makable',
'make',
'makeable',
'maker',
'makeshift',
'makeup',
'makeweight',
'makework',
'making',
'mal',
'mala',
'malachite',
'maladaptation',
'maladapted',
'maladjusted',
'maladjustive',
'maladjustment',
'maladminister',
'maladministering',
'maladministration',
'maladministrative',
'maladroit',
'maladroitly',
'malady',
'malagasy',
'malaise',
'malamute',
'malapert',
'malapertly',
'malaprop',
'malapropism',
'malaria',
'malarial',
'malarian',
'malarkey',
'malarky',
'malathion',
'malawi',
'malay',
'malaya',
'malayalam',
'malayan',
'malaysia',
'malaysian',
'malconduct',
'malconstruction',
'malcontent',
'male',
'maledict',
'maledicted',
'malediction',
'maledictive',
'maledictory',
'malefaction',
'malefic',
'maleficence',
'maleficent',
'maleficently',
'maleficio',
'malevolence',
'malevolent',
'malevolently',
'malfeasance',
'malfeasant',
'malfeasantly',
'malformation',
'malformed',
'malfunction',
'malfunctioning',
'mali',
'malice',
'maliciously',
'malign',
'malignance',
'malignancy',
'malignant',
'malignantly',
'maligned',
'maligner',
'maligning',
'malignity',
'malignly',
'maline',
'malinger',
'malingerer',
'malingering',
'malinvestment',
'mall',
'mallard',
'malleability',
'malleable',
'malleably',
'malled',
'mallei',
'mallet',
'mallow',
'malnourished',
'malnourishment',
'malnutrition',
'malocclusion',
'malodor',
'malodorously',
'malpractice',
'malpracticed',
'malpracticing',
'malpractitioner',
'malpresentation',
'malt',
'malta',
'maltase',
'malted',
'maltese',
'malthusian',
'malthusianism',
'maltier',
'malting',
'maltose',
'maltreat',
'maltreatment',
'malty',
'mama',
'mamba',
'mambo',
'mamboed',
'mamboing',
'mamie',
'mamma',
'mammae',
'mammal',
'mammalia',
'mammalian',
'mammary',
'mammate',
'mammee',
'mammey',
'mammie',
'mammiform',
'mammogram',
'mammographic',
'mammography',
'mammon',
'mammoth',
'mammotomy',
'mammy',
'man',
'manacle',
'manacled',
'manacling',
'manage',
'manageability',
'manageable',
'manageably',
'management',
'managemental',
'manager',
'managerial',
'managership',
'managing',
'manana',
'manatee',
'manchester',
'manchu',
'manchuria',
'manchurian',
'mandala',
'mandalic',
'mandarin',
'mandate',
'mandatee',
'mandatorily',
'mandatory',
'mandible',
'mandibular',
'mandolin',
'mandolinist',
'mandragora',
'mandrake',
'mandrel',
'mandril',
'mandrill',
'mane',
'maned',
'manege',
'maneuver',
'maneuverability',
'maneuverable',
'maneuverer',
'maneuvering',
'manful',
'manfully',
'manganese',
'manganesian',
'mange',
'manger',
'mangey',
'mangier',
'mangiest',
'mangily',
'mangle',
'mangled',
'mangler',
'mangling',
'mango',
'mangrove',
'mangy',
'manhandle',
'manhandled',
'manhandling',
'manhattan',
'manhole',
'manhood',
'manhunt',
'mania',
'maniac',
'maniacal',
'manic',
'manicure',
'manicuring',
'manicurist',
'manifest',
'manifestable',
'manifestation',
'manifestative',
'manifested',
'manifesting',
'manifestly',
'manifesto',
'manifestoed',
'manifold',
'manifolding',
'manifoldly',
'manikin',
'manila',
'manilla',
'manioc',
'maniple',
'manipulability',
'manipulable',
'manipulatable',
'manipulate',
'manipulation',
'manipulative',
'manipulatory',
'manitoba',
'manitou',
'mankind',
'manlier',
'manliest',
'manlike',
'manly',
'manmade',
'manna',
'manned',
'mannequin',
'manner',
'mannerism',
'mannerly',
'mannikin',
'manning',
'mannish',
'mannishly',
'manoeuver',
'manoeuvering',
'manoeuvre',
'manoeuvreing',
'manometer',
'manometric',
'manometry',
'manor',
'manorial',
'manorialism',
'manpack',
'manpower',
'manque',
'manrope',
'mansard',
'manse',
'manservant',
'mansion',
'manslaughter',
'manslayer',
'mansuetude',
'manta',
'mantel',
'mantelet',
'mantelpiece',
'mantic',
'mantid',
'mantilla',
'mantissa',
'mantle',
'mantled',
'mantlepiece',
'mantlet',
'mantling',
'mantra',
'mantrap',
'mantua',
'manual',
'manubrial',
'manubrium',
'manuever',
'manueverable',
'manufactory',
'manufacturable',
'manufacture',
'manufacturer',
'manufacturing',
'manumission',
'manumit',
'manumitted',
'manumitting',
'manure',
'manurer',
'manuring',
'manuscript',
'manuscription',
'manward',
'manwise',
'manx',
'many',
'manyfold',
'mao',
'maoism',
'maoist',
'maori',
'map',
'maple',
'mapmaker',
'mappable',
'mapper',
'mapping',
'maquette',
'maqui',
'mar',
'marabou',
'maraca',
'maraschino',
'marathon',
'maraud',
'marauder',
'marauding',
'marble',
'marbled',
'marbleization',
'marbleize',
'marbleized',
'marbleizing',
'marbler',
'marblier',
'marbliest',
'marbling',
'marbly',
'marc',
'marcel',
'marcelled',
'march',
'marched',
'marcher',
'marchesa',
'marching',
'mardi',
'mare',
'margaret',
'margarine',
'marge',
'margent',
'margented',
'margin',
'marginal',
'marginalia',
'marginality',
'marginate',
'margined',
'margining',
'margrave',
'marguerite',
'maria',
'mariachi',
'marie',
'marigold',
'marihuana',
'marijuana',
'marilyn',
'marimba',
'marina',
'marinade',
'marinading',
'marinara',
'marinate',
'marine',
'mariner',
'marionette',
'mariposa',
'marish',
'marital',
'maritime',
'marjoram',
'marjorie',
'mark',
'markdown',
'marked',
'marker',
'market',
'marketability',
'marketable',
'marketed',
'marketeer',
'marketer',
'marketing',
'marketplace',
'marketwise',
'marking',
'markka',
'markkaa',
'marksman',
'marksmanship',
'markswoman',
'markup',
'marl',
'marled',
'marlier',
'marlin',
'marline',
'marlinespike',
'marling',
'marmalade',
'marmite',
'marmoreal',
'marmoset',
'marmot',
'maroon',
'marooning',
'marque',
'marquee',
'marquetry',
'marquise',
'marquisette',
'marrer',
'marriage',
'marriageability',
'marriageable',
'married',
'marrier',
'marring',
'marron',
'marrow',
'marrowbone',
'marrowed',
'marrowing',
'marrowy',
'marry',
'marrying',
'marse',
'marseillaise',
'marseille',
'marsh',
'marshal',
'marshalcy',
'marshaled',
'marshaling',
'marshall',
'marshalled',
'marshalling',
'marshier',
'marshiest',
'marshmallow',
'marshy',
'marsupia',
'marsupial',
'marsupialization',
'marsupialize',
'marsupializing',
'marsupium',
'mart',
'marted',
'marten',
'martha',
'martial',
'martialed',
'martialing',
'martialism',
'martialist',
'martialled',
'martialling',
'martian',
'martin',
'martinet',
'martinez',
'marting',
'martingale',
'martini',
'martyr',
'martyrdom',
'martyring',
'martyry',
'marvel',
'marveled',
'marveling',
'marvelled',
'marvelling',
'marvelously',
'marx',
'marxian',
'marxism',
'marxist',
'mary',
'maryland',
'marylander',
'marzipan',
'mascara',
'maschera',
'mascon',
'mascot',
'masculine',
'masculinely',
'masculinity',
'masculinization',
'masculinize',
'masculinized',
'masculinizing',
'maser',
'mash',
'mashed',
'masher',
'mashie',
'mashing',
'mashy',
'mask',
'maskable',
'masked',
'masker',
'masking',
'masochism',
'masochist',
'masochistic',
'mason',
'masonic',
'masonry',
'masonwork',
'masque',
'masquer',
'masquerade',
'masquerader',
'masquerading',
'massa',
'massacre',
'massacrer',
'massacring',
'massage',
'massager',
'massaging',
'massagist',
'masscult',
'masse',
'massed',
'masseur',
'masseuse',
'massier',
'massiest',
'massif',
'massing',
'massive',
'massy',
'mast',
'mastectomy',
'masted',
'master',
'masterful',
'masterfully',
'mastering',
'masterly',
'mastermind',
'masterminding',
'masterpiece',
'masterwork',
'mastery',
'masthead',
'mastic',
'masticate',
'mastication',
'masticatory',
'mastiff',
'mastodon',
'mastodonic',
'mastoid',
'mastoidal',
'mat',
'matador',
'match',
'matchable',
'matchbook',
'matchbox',
'matched',
'matcher',
'matching',
'matchlessly',
'matchlock',
'matchmaker',
'matchmaking',
'mate',
'mater',
'materia',
'material',
'materialism',
'materialist',
'materialistic',
'materiality',
'materialization',
'materialize',
'materialized',
'materializing',
'materiel',
'maternal',
'maternalism',
'maternity',
'mateship',
'matey',
'math',
'mathematic',
'mathematical',
'mathematician',
'matilda',
'matin',
'matinal',
'matinee',
'matriarch',
'matriarchal',
'matriarchy',
'matricidal',
'matricide',
'matriculant',
'matriculate',
'matriculation',
'matriline',
'matrilineage',
'matrilineal',
'matrilinear',
'matrilinearly',
'matriliny',
'matrimonial',
'matrimony',
'matrix',
'matrixing',
'matron',
'matronal',
'matronly',
'matt',
'matte',
'matted',
'matter',
'mattering',
'mattery',
'matthew',
'matting',
'mattock',
'maturate',
'maturation',
'maturational',
'maturative',
'mature',
'maturely',
'maturer',
'maturest',
'maturing',
'maturity',
'matutinal',
'matzo',
'matzoh',
'matzoth',
'maudlin',
'maudlinly',
'maul',
'mauled',
'mauler',
'mauling',
'maunder',
'maunderer',
'maundering',
'maundy',
'maupassant',
'mauritania',
'mauritanian',
'mausolea',
'mausoleum',
'maut',
'mauve',
'maven',
'maverick',
'mavin',
'maw',
'mawkish',
'mawkishly',
'max',
'maxi',
'maxilla',
'maxillae',
'maxillary',
'maxim',
'maxima',
'maximal',
'maximin',
'maximite',
'maximization',
'maximize',
'maximized',
'maximizer',
'maximizing',
'maximum',
'maxixe',
'maxwell',
'may',
'maya',
'mayan',
'mayapple',
'maybe',
'mayday',
'mayest',
'mayflower',
'mayfly',
'mayhap',
'mayhem',
'mayhemming',
'maying',
'mayo',
'mayonnaise',
'mayor',
'mayoral',
'mayoralty',
'mayorship',
'maypole',
'maypop',
'mayst',
'mayvin',
'mayweed',
'maze',
'mazed',
'mazel',
'mazer',
'mazier',
'maziest',
'mazily',
'mazing',
'mazuma',
'mazurka',
'mazy',
'mcdonald',
'me',
'mea',
'mead',
'meadow',
'meadowland',
'meadowlark',
'meadowsweet',
'meadowy',
'meager',
'meagerly',
'meal',
'mealie',
'mealier',
'mealiest',
'mealtime',
'mealworm',
'mealy',
'mealybug',
'mealymouthed',
'mean',
'meander',
'meanderer',
'meandering',
'meaner',
'meanest',
'meanie',
'meaning',
'meaningful',
'meaningfully',
'meanly',
'meanspirited',
'meant',
'meantime',
'meanwhile',
'meany',
'measle',
'measled',
'measlier',
'measliest',
'measly',
'measurability',
'measurable',
'measurably',
'measurage',
'measure',
'measurement',
'measurer',
'measuring',
'meat',
'meatball',
'meathead',
'meatier',
'meatiest',
'meatily',
'meaty',
'mecca',
'mech',
'mechanic',
'mechanical',
'mechanism',
'mechanist',
'mechanistic',
'mechanization',
'mechanize',
'mechanized',
'mechanizer',
'mechanizing',
'mechanoreception',
'mechanoreceptive',
'mechanotherapist',
'mechanotheraputic',
'mechanotherapy',
'mecum',
'medal',
'medaled',
'medalist',
'medalling',
'medallion',
'meddle',
'meddled',
'meddler',
'meddlesome',
'meddlesomely',
'meddling',
'medevac',
'media',
'mediacy',
'medial',
'median',
'medianly',
'mediate',
'mediately',
'mediation',
'mediational',
'mediative',
'mediatorial',
'mediatorship',
'medic',
'medicable',
'medicably',
'medicaid',
'medical',
'medicament',
'medicant',
'medicare',
'medicate',
'medication',
'medicative',
'medicinable',
'medicinal',
'medicine',
'medicined',
'medicining',
'medico',
'medieval',
'medievalism',
'medievalist',
'mediocre',
'mediocrity',
'meditate',
'meditatio',
'meditation',
'meditative',
'mediterranean',
'medium',
'mediumistic',
'medley',
'medulla',
'medullae',
'medullar',
'medullary',
'medusa',
'medusan',
'medusoid',
'meed',
'meek',
'meeker',
'meekest',
'meekly',
'meerschaum',
'meet',
'meeter',
'meeting',
'meetinghouse',
'meetly',
'meg',
'megabar',
'megabit',
'megabuck',
'megabyte',
'megacolon',
'megacycle',
'megadeath',
'megadyne',
'megahertz',
'megakaryocytic',
'megalith',
'megalithic',
'megalomania',
'megalomaniac',
'megalomaniacal',
'megaphone',
'megapod',
'megaton',
'megavitamin',
'megavolt',
'megawatt',
'megillah',
'megohm',
'mein',
'meiotic',
'mekong',
'melamine',
'melancholia',
'melancholiac',
'melancholic',
'melancholy',
'melanesia',
'melanesian',
'melange',
'melanic',
'melanin',
'melanism',
'melanized',
'melanocarcinoma',
'melanogen',
'melanoma',
'melanomata',
'melanophore',
'melanotic',
'melba',
'melbourne',
'melchizedek',
'meld',
'melder',
'melding',
'melee',
'meliorate',
'melioration',
'meliorative',
'mellific',
'mellifluent',
'mellifluously',
'mellow',
'mellowed',
'mellower',
'mellowest',
'mellowing',
'mellowly',
'melodeon',
'melodic',
'melodiously',
'melodist',
'melodize',
'melodized',
'melodizing',
'melodrama',
'melodramatic',
'melodramatist',
'melody',
'melon',
'melt',
'meltable',
'meltage',
'meltdown',
'melted',
'melter',
'melting',
'melton',
'meltwater',
'member',
'membership',
'membranal',
'membrane',
'membranously',
'memento',
'memo',
'memoir',
'memorabilia',
'memorability',
'memorable',
'memorably',
'memoranda',
'memorandum',
'memorial',
'memorialist',
'memorialize',
'memorialized',
'memorializing',
'memorization',
'memorize',
'memorized',
'memorizer',
'memorizing',
'memory',
'memsahib',
'menace',
'menaced',
'menacer',
'menacing',
'menage',
'menagerie',
'menarche',
'mend',
'mendable',
'mendaciously',
'mendacity',
'mendel',
'mendelevium',
'mendelian',
'mendelianism',
'mendelianist',
'mendelism',
'mendelist',
'mendelize',
'mendelssohn',
'mender',
'mendicancy',
'mendicant',
'mending',
'menfolk',
'menhaden',
'menhir',
'menial',
'meningeal',
'meningism',
'meningitic',
'meninx',
'meniscal',
'meniscectomy',
'menisci',
'meniscoid',
'mennonite',
'menopausal',
'menopause',
'menorah',
'menorrhea',
'mensal',
'mensch',
'menschen',
'mensed',
'mensing',
'menstrual',
'menstruant',
'menstruate',
'menstruation',
'menstruum',
'mensurability',
'mensurable',
'mensural',
'mensuration',
'mensurative',
'menswear',
'mental',
'mentalist',
'mentality',
'mentation',
'menthe',
'menthol',
'mention',
'mentionable',
'mentioner',
'mentioning',
'menu',
'meow',
'meowed',
'meowing',
'mephitic',
'meprobamate',
'mer',
'mercantile',
'mercantilism',
'mercantilistic',
'mercaptan',
'mercenarily',
'mercenary',
'mercer',
'mercerize',
'mercerized',
'mercerizing',
'mercery',
'merchandisable',
'merchandise',
'merchandised',
'merchandiser',
'merchandising',
'merchandized',
'merchant',
'merchantability',
'merchantable',
'merchanted',
'merchantman',
'merchantry',
'merci',
'merciful',
'mercifully',
'mercilessly',
'mercurial',
'mercurialism',
'mercurialize',
'mercuric',
'mercurochrome',
'mercury',
'mercy',
'mere',
'merely',
'merengue',
'merer',
'merest',
'meretriciously',
'merganser',
'merge',
'mergence',
'merger',
'merging',
'meridian',
'meridiem',
'meringue',
'merino',
'merit',
'meritable',
'merited',
'meriting',
'meritocracy',
'meritoriously',
'merlin',
'merlon',
'mermaid',
'merman',
'merrier',
'merriest',
'merrily',
'merriment',
'merry',
'merrymaker',
'merrymaking',
'mesa',
'mesalliance',
'mescal',
'mescaline',
'mescalism',
'meseemed',
'mesentery',
'mesh',
'meshed',
'meshier',
'meshing',
'meshwork',
'meshy',
'mesmeric',
'mesmerism',
'mesmerist',
'mesmerization',
'mesmerize',
'mesmerized',
'mesmerizer',
'mesmerizing',
'mesomorph',
'mesomorphic',
'meson',
'mesonic',
'mesopotamia',
'mesopotamian',
'mesosphere',
'mesospheric',
'mesozoa',
'mesozoan',
'mesozoic',
'mesquit',
'mesquite',
'message',
'messed',
'messenger',
'messiah',
'messianic',
'messier',
'messiest',
'messily',
'messing',
'messman',
'messmate',
'messy',
'mestiza',
'mestizo',
'met',
'meta',
'metabolic',
'metabolical',
'metabolism',
'metabolite',
'metabolizability',
'metabolizable',
'metabolize',
'metabolized',
'metabolizing',
'metacarpal',
'metacarpi',
'metagalaxy',
'metal',
'metalaw',
'metaled',
'metaling',
'metalist',
'metalize',
'metalized',
'metalizing',
'metalled',
'metallic',
'metalling',
'metalloenzyme',
'metalloid',
'metalloidal',
'metallurgic',
'metallurgical',
'metallurgist',
'metallurgy',
'metalware',
'metalwork',
'metalworker',
'metalworking',
'metamer',
'metameric',
'metamorphic',
'metamorphism',
'metamorphose',
'metamorphosed',
'metamorphosing',
'metaphase',
'metaphor',
'metaphoric',
'metaphorical',
'metaphysical',
'metaphysician',
'metastasize',
'metastasized',
'metastasizing',
'metastatic',
'metatarsal',
'metatarsi',
'metazoa',
'metazoan',
'metazoic',
'mete',
'meted',
'meteor',
'meteoric',
'meteorism',
'meteorite',
'meteoritic',
'meteoroid',
'meteorological',
'meteorologist',
'meteorology',
'meter',
'meterage',
'metering',
'meterological',
'methacrylate',
'methadone',
'methamphetamine',
'methane',
'methanol',
'methaqualone',
'method',
'methodic',
'methodical',
'methodism',
'methodist',
'methodize',
'methodized',
'methodizing',
'methodological',
'methodology',
'methought',
'methyl',
'methylene',
'methylparaben',
'meticulosity',
'meticulously',
'metier',
'meting',
'metonym',
'metonymy',
'metre',
'metric',
'metrical',
'metricate',
'metrication',
'metricize',
'metricized',
'metricizing',
'metrified',
'metrify',
'metrifying',
'metring',
'metrist',
'metro',
'metrography',
'metroliner',
'metrology',
'metronome',
'metronomic',
'metropolitan',
'metropolitanize',
'metropolitanized',
'mettle',
'mettled',
'mettlesome',
'meuniere',
'mew',
'mewed',
'mewing',
'mewl',
'mewled',
'mewler',
'mewling',
'mexican',
'mexico',
'mezcal',
'mezquit',
'mezquite',
'mezuza',
'mezuzah',
'mezzanine',
'mezzo',
'miami',
'miaou',
'miaoued',
'miaouing',
'miaow',
'miaowed',
'miaowing',
'miasm',
'miasma',
'miasmal',
'miasmata',
'miasmatic',
'miasmic',
'miaul',
'miauled',
'mica',
'mice',
'michael',
'michelangelo',
'michigan',
'mick',
'mickey',
'mickle',
'micro',
'microanalytic',
'microanalytical',
'microbe',
'microbial',
'microbian',
'microbic',
'microbicidal',
'microbicide',
'microbiologic',
'microbiological',
'microbiologist',
'microbiology',
'microbiotic',
'microcephalic',
'microcephaly',
'microchemistry',
'microclimate',
'microclimatological',
'microclimatology',
'microcomputer',
'microcopy',
'microcosm',
'microcosmic',
'microcosmical',
'microdissection',
'microelectronic',
'microfiche',
'microfilm',
'microfilmed',
'microfilmer',
'microfilming',
'microform',
'microgram',
'microgramme',
'micrograph',
'micrography',
'microgroove',
'microhm',
'microinstruction',
'microlith',
'micrologic',
'micrology',
'micromeli',
'micrometer',
'micromillimeter',
'microminiature',
'microminiaturization',
'microminiaturize',
'microminiaturized',
'micron',
'micronesia',
'micronesian',
'micronutrient',
'microorganism',
'microphone',
'microphotograph',
'microphotographed',
'microphotographic',
'microphotographing',
'microphotography',
'micropipette',
'microprocessing',
'microprocessor',
'microprogram',
'microprogrammed',
'microprogramming',
'microradiographical',
'microradiography',
'microscope',
'microscopic',
'microscopical',
'microscopist',
'microscopy',
'microsecond',
'microspace',
'microspacing',
'microstate',
'microstructural',
'microstructure',
'microsurgeon',
'microsurgery',
'microsurgical',
'microtome',
'microtomy',
'microvasculature',
'microvolt',
'microwave',
'microzoon',
'micturate',
'mid',
'midair',
'midbody',
'midbrain',
'midchannel',
'midday',
'midden',
'middle',
'middlebrow',
'middlebrowism',
'middled',
'middleman',
'middlemost',
'middler',
'middleweight',
'middling',
'middy',
'mideast',
'midfield',
'midge',
'midget',
'midgut',
'midi',
'midiron',
'midland',
'midleg',
'midline',
'midmonth',
'midmorning',
'midmost',
'midnight',
'midpoint',
'midrange',
'midrib',
'midriff',
'midsection',
'midship',
'midshipman',
'midst',
'midstream',
'midsummer',
'midterm',
'midtown',
'midway',
'midweek',
'midweekly',
'midwest',
'midwestern',
'midwesterner',
'midwife',
'midwifed',
'midwifery',
'midwifing',
'midwinter',
'midwived',
'midwiving',
'midyear',
'mien',
'miff',
'miffed',
'miffing',
'miffy',
'mig',
'might',
'mightier',
'mightiest',
'mightily',
'mighty',
'mignon',
'mignonette',
'mignonne',
'migraine',
'migrant',
'migrate',
'migration',
'migrational',
'migratory',
'mikado',
'mike',
'mikvah',
'mikveh',
'mil',
'milady',
'milage',
'milan',
'milanese',
'milch',
'mild',
'milden',
'mildened',
'mildening',
'milder',
'mildest',
'mildew',
'mildewed',
'mildewing',
'mildewy',
'mildly',
'mile',
'mileage',
'milepost',
'miler',
'milestone',
'milfoil',
'milieu',
'milieux',
'militancy',
'militant',
'militantly',
'militarily',
'militarism',
'militarist',
'militaristic',
'militarize',
'militarized',
'militarizing',
'military',
'militate',
'militia',
'militiaman',
'milk',
'milked',
'milker',
'milkier',
'milkiest',
'milkily',
'milking',
'milkmaid',
'milkman',
'milksop',
'milkweed',
'milkwood',
'milkwort',
'milky',
'mill',
'millable',
'millage',
'milldam',
'mille',
'milled',
'millennia',
'millennial',
'millennium',
'miller',
'millet',
'milliammeter',
'milliampere',
'milliard',
'millibar',
'millier',
'milligram',
'milliliter',
'millimeter',
'millimetric',
'millimicron',
'milliner',
'millinery',
'milling',
'million',
'millionaire',
'millionth',
'millipede',
'millirem',
'millisecond',
'millivolt',
'millpond',
'millrace',
'millrun',
'millstone',
'millstream',
'millwork',
'millwright',
'milord',
'milquetoast',
'milt',
'miltiest',
'milton',
'milwaukee',
'mime',
'mimed',
'mimeo',
'mimeoed',
'mimeograph',
'mimeographed',
'mimeographing',
'mimeoing',
'mimer',
'mimetic',
'mimic',
'mimical',
'mimicker',
'mimicking',
'mimicry',
'miming',
'mimosa',
'min',
'minable',
'minacity',
'minaret',
'minatory',
'mince',
'minced',
'mincemeat',
'mincer',
'mincier',
'mincing',
'mincy',
'mind',
'minder',
'mindful',
'mindfully',
'minding',
'mindlessly',
'mine',
'mineable',
'mined',
'minelayer',
'miner',
'mineral',
'mineralization',
'mineralize',
'mineralized',
'mineralizing',
'mineralogic',
'mineralogical',
'mineralogist',
'mineralogy',
'minerva',
'minestrone',
'minesweeper',
'ming',
'mingle',
'mingled',
'mingler',
'mingling',
'mingy',
'mini',
'miniature',
'miniaturist',
'miniaturization',
'miniaturize',
'miniaturized',
'miniaturizing',
'minibike',
'minicab',
'minicar',
'minicomputer',
'minidisk',
'minifloppy',
'minify',
'minifying',
'minikin',
'minim',
'minima',
'minimal',
'minimalist',
'minimax',
'minimization',
'minimize',
'minimized',
'minimizer',
'minimizing',
'minimum',
'mining',
'minion',
'miniscule',
'miniskirt',
'miniskirted',
'ministate',
'minister',
'ministerial',
'ministering',
'ministrant',
'ministration',
'ministry',
'mink',
'minnesinger',
'minnesota',
'minnesotan',
'minnie',
'minnow',
'minny',
'minor',
'minora',
'minorca',
'minoring',
'minority',
'minster',
'minstrel',
'minstrelsy',
'mint',
'mintage',
'minted',
'minter',
'mintier',
'mintiest',
'minting',
'mintmark',
'minty',
'minuend',
'minuet',
'minuscule',
'minute',
'minuted',
'minutely',
'minuteman',
'minuter',
'minutest',
'minutia',
'minutiae',
'minutial',
'minuting',
'minx',
'minxish',
'minyan',
'minyanim',
'miocene',
'miotic',
'mirabile',
'miracle',
'miraculously',
'mirage',
'mire',
'miriam',
'mirier',
'miriest',
'miring',
'mirk',
'mirkest',
'mirkier',
'mirkily',
'mirky',
'mirror',
'mirroring',
'mirth',
'mirthful',
'mirthfully',
'mirv',
'miry',
'misact',
'misadd',
'misaddressed',
'misaddressing',
'misadjust',
'misadjusted',
'misadjusting',
'misadministration',
'misadventure',
'misadvise',
'misadvised',
'misadvising',
'misaim',
'misaimed',
'misaligned',
'misalignment',
'misalleging',
'misalliance',
'misalphabetize',
'misalphabetized',
'misalphabetizing',
'misanthrope',
'misanthropic',
'misanthropical',
'misanthropist',
'misanthropy',
'misapplication',
'misapplied',
'misapplier',
'misapply',
'misapplying',
'misapprehend',
'misapprehending',
'misapprehension',
'misappropriate',
'misappropriation',
'misarrange',
'misarrangement',
'misarranging',
'misbeget',
'misbegetting',
'misbegot',
'misbegotten',
'misbehave',
'misbehaved',
'misbehaver',
'misbehaving',
'misbehavior',
'misbelief',
'misbestow',
'misbestowed',
'misbestowing',
'misbiasing',
'misbiassed',
'misbilling',
'misc',
'miscalculate',
'miscalculation',
'miscall',
'miscalled',
'miscalling',
'miscarriage',
'miscarried',
'miscarry',
'miscarrying',
'miscast',
'miscasting',
'miscegenation',
'miscegenational',
'miscellaneously',
'miscellany',
'mischance',
'mischarge',
'mischarging',
'mischief',
'mischievously',
'miscibility',
'miscible',
'misclassification',
'misclassified',
'misclassify',
'misclassifying',
'miscognizant',
'misconceive',
'misconceived',
'misconceiving',
'misconception',
'misconduct',
'misconstruction',
'misconstrue',
'misconstrued',
'misconstruing',
'miscontinuance',
'miscopied',
'miscopy',
'miscopying',
'miscount',
'miscounted',
'miscounting',
'miscreant',
'miscue',
'miscued',
'miscuing',
'miscut',
'misdeal',
'misdealing',
'misdealt',
'misdeed',
'misdefine',
'misdefined',
'misdefining',
'misdemeanant',
'misdemeanor',
'misdescription',
'misdescriptive',
'misdiagnose',
'misdiagnosed',
'misdiagnosing',
'misdid',
'misdirect',
'misdirected',
'misdirecting',
'misdirection',
'misdo',
'misdoer',
'misdoing',
'misdone',
'misdoubt',
'misdoubted',
'misdrawn',
'mise',
'miseducate',
'miseducation',
'misemploy',
'misemployed',
'misemploying',
'misemployment',
'miser',
'miserabilia',
'miserable',
'miserably',
'misericordia',
'miserly',
'misery',
'misfeasance',
'misfeasor',
'misfile',
'misfiled',
'misfiling',
'misfire',
'misfiring',
'misfit',
'misfitted',
'misformed',
'misfortune',
'misgive',
'misgiving',
'misgovern',
'misgoverned',
'misgoverning',
'misgovernment',
'misguidance',
'misguide',
'misguider',
'misguiding',
'mishandle',
'mishandled',
'mishandling',
'mishap',
'mishear',
'misheard',
'mishearing',
'mishmash',
'mishmosh',
'misidentification',
'misidentified',
'misidentify',
'misidentifying',
'misinform',
'misinformant',
'misinformation',
'misinformed',
'misinforming',
'misinstruct',
'misinstructed',
'misinstructing',
'misinstruction',
'misintelligence',
'misinterpret',
'misinterpretation',
'misinterpreted',
'misinterpreting',
'misjudge',
'misjudging',
'misjudgment',
'mislabel',
'mislabeled',
'mislabeling',
'mislabelled',
'mislabelling',
'mislaid',
'mislain',
'mislay',
'mislayer',
'mislaying',
'mislead',
'misleader',
'misleading',
'misled',
'mislike',
'mismanage',
'mismanagement',
'mismanager',
'mismanaging',
'mismark',
'mismarked',
'mismarriage',
'mismatch',
'mismatched',
'mismatching',
'mismate',
'mismeeting',
'misname',
'misnamed',
'misnaming',
'misnomer',
'misnumber',
'misnumbering',
'miso',
'misogamist',
'misogamy',
'misogynic',
'misogynist',
'misogynistic',
'misogyny',
'misplace',
'misplaced',
'misplacement',
'misplacing',
'misplay',
'misplayed',
'misplaying',
'misprint',
'misprinted',
'misprinting',
'misprision',
'misprize',
'mispronounce',
'mispronounced',
'mispronouncing',
'mispronunciation',
'misproportion',
'mispunctuate',
'misquotation',
'misquote',
'misquoted',
'misquoting',
'misread',
'misreading',
'misreport',
'misreported',
'misreporting',
'misrepresent',
'misrepresentation',
'misrepresented',
'misrepresentee',
'misrepresenter',
'misrepresenting',
'misrule',
'misruled',
'misruling',
'missaid',
'missal',
'missed',
'misshape',
'misshaped',
'misshapen',
'misshaping',
'missile',
'missilery',
'missilry',
'missing',
'mission',
'missionary',
'mississippi',
'mississippian',
'missive',
'missort',
'missorted',
'missorting',
'missouri',
'missourian',
'misspeak',
'misspell',
'misspelled',
'misspelling',
'misspelt',
'misspend',
'misspending',
'misspent',
'misspoke',
'misstate',
'misstatement',
'misstep',
'missy',
'mist',
'mistakable',
'mistake',
'mistaken',
'mistakenly',
'mistaker',
'mistaking',
'mistaught',
'mistbow',
'misted',
'mister',
'misterm',
'mistermed',
'misterming',
'mistier',
'mistiest',
'mistily',
'mistime',
'mistimed',
'mistiming',
'misting',
'mistitle',
'mistitled',
'mistitling',
'mistletoe',
'mistook',
'mistral',
'mistranscribed',
'mistranscribing',
'mistranscription',
'mistranslate',
'mistranslation',
'mistreat',
'mistreatment',
'mistrial',
'mistrust',
'mistrusted',
'mistrustful',
'mistrustfully',
'mistrusting',
'mistune',
'mistuned',
'mistuning',
'misty',
'mistype',
'mistyped',
'mistyping',
'misunderstand',
'misunderstanding',
'misunderstood',
'misusage',
'misuse',
'misused',
'misuser',
'misusing',
'miswording',
'mite',
'miter',
'miterer',
'mitering',
'mitier',
'mitiest',
'mitigate',
'mitigation',
'mitigative',
'mitigatory',
'mitochondria',
'mitochondrion',
'mitotic',
'mitral',
'mitre',
'mitring',
'mitt',
'mitten',
'mitzvah',
'mix',
'mixable',
'mixed',
'mixer',
'mixing',
'mixology',
'mixt',
'mixture',
'mixup',
'mizzen',
'mizzenmast',
'mizzle',
'mizzly',
'mnemic',
'mnemonic',
'mo',
'moan',
'moaned',
'moanful',
'moaning',
'moat',
'mob',
'mobbed',
'mobber',
'mobbing',
'mobbish',
'mobcap',
'mobil',
'mobile',
'mobilia',
'mobility',
'mobilization',
'mobilize',
'mobilized',
'mobilizer',
'mobilizing',
'mobster',
'moccasin',
'mocha',
'mock',
'mockable',
'mocker',
'mockery',
'mocking',
'mockingbird',
'mockup',
'mod',
'modal',
'modality',
'mode',
'model',
'modeled',
'modeler',
'modeling',
'modelled',
'modeller',
'modelling',
'modem',
'moderate',
'moderately',
'moderation',
'moderato',
'moderatorial',
'moderatorship',
'modern',
'moderner',
'modernest',
'modernism',
'modernist',
'modernistic',
'modernity',
'modernization',
'modernize',
'modernized',
'modernizer',
'modernizing',
'modernly',
'modest',
'modester',
'modestest',
'modestly',
'modesty',
'modi',
'modicum',
'modifiable',
'modification',
'modified',
'modifier',
'modify',
'modifying',
'modish',
'modishly',
'modiste',
'modo',
'modula',
'modular',
'modularity',
'modulate',
'modulation',
'modulative',
'modulatory',
'module',
'modulo',
'mogul',
'mohair',
'mohammed',
'mohawk',
'moi',
'moiety',
'moil',
'moiled',
'moiler',
'moiling',
'moire',
'moist',
'moisten',
'moistened',
'moistener',
'moistening',
'moister',
'moistest',
'moistful',
'moistly',
'moisture',
'moistureproof',
'moisturize',
'moisturized',
'moisturizer',
'moisturizing',
'molar',
'mold',
'moldable',
'moldboard',
'molder',
'moldering',
'moldier',
'moldiest',
'molding',
'moldy',
'mole',
'molecular',
'molecularly',
'molecule',
'molehill',
'moleskin',
'molest',
'molestation',
'molested',
'molester',
'molesting',
'moliere',
'moline',
'moll',
'mollie',
'mollification',
'mollified',
'mollifier',
'mollify',
'mollifying',
'mollusc',
'molluscan',
'mollusk',
'molly',
'mollycoddle',
'mollycoddled',
'mollycoddler',
'mollycoddling',
'moloch',
'molt',
'molted',
'molten',
'moltenly',
'molter',
'molting',
'molto',
'moly',
'molybdenum',
'molybdic',
'mom',
'moment',
'momentarily',
'momentary',
'momently',
'momento',
'momentously',
'momentum',
'momism',
'momma',
'mommy',
'mon',
'monaco',
'monad',
'monadal',
'monadic',
'monadism',
'monarch',
'monarchial',
'monarchic',
'monarchical',
'monarchism',
'monarchist',
'monarchistic',
'monarchy',
'monasterial',
'monastery',
'monastic',
'monastical',
'monasticism',
'monatomic',
'monaural',
'monaxonic',
'monday',
'monde',
'mondo',
'monetarily',
'monetarism',
'monetarist',
'monetary',
'monetize',
'monetized',
'monetizing',
'money',
'moneybag',
'moneychanger',
'moneyed',
'moneyer',
'moneylender',
'moneymaker',
'moneymaking',
'mongeese',
'monger',
'mongering',
'mongol',
'mongolia',
'mongolian',
'mongolianism',
'mongolism',
'mongoloid',
'mongoose',
'mongrel',
'mongst',
'monicker',
'monied',
'moniker',
'monish',
'monism',
'monist',
'monistic',
'monistical',
'monition',
'monitoring',
'monitory',
'monk',
'monkery',
'monkey',
'monkeyed',
'monkeying',
'monkeyshine',
'monkhood',
'monkish',
'monkishly',
'monkshood',
'mono',
'monocellular',
'monochromatic',
'monochromaticity',
'monochrome',
'monocle',
'monocled',
'monocot',
'monocotyledon',
'monocrat',
'monocular',
'monocularly',
'monocyte',
'monodic',
'monodist',
'monody',
'monofilament',
'monogamic',
'monogamist',
'monogamistic',
'monogamously',
'monogamy',
'monogram',
'monogramed',
'monogrammed',
'monogramming',
'monograph',
'monographer',
'monographic',
'monogyny',
'monolingual',
'monolith',
'monolithic',
'monolog',
'monologist',
'monologue',
'monologuist',
'monology',
'monomania',
'monomaniac',
'monomaniacal',
'monomer',
'monomeric',
'monomial',
'monomolecular',
'monomolecularly',
'monophobia',
'monophonic',
'monoplane',
'monoploid',
'monopole',
'monopolism',
'monopolist',
'monopolistic',
'monopolization',
'monopolize',
'monopolized',
'monopolizer',
'monopolizing',
'monopoly',
'monorail',
'monosaccharide',
'monosexuality',
'monosodium',
'monosyllabic',
'monosyllable',
'monotheism',
'monotheist',
'monotheistic',
'monotone',
'monotonously',
'monotony',
'monotremata',
'monotreme',
'monoxide',
'monozygotic',
'monroe',
'monseigneur',
'monsieur',
'monsignor',
'monsignori',
'monsoon',
'monsoonal',
'monster',
'monstrance',
'monstrosity',
'monstrously',
'montage',
'montaging',
'montana',
'montanan',
'montane',
'monte',
'monterey',
'montessori',
'montevideo',
'montezuma',
'montgomery',
'month',
'monthly',
'montpelier',
'montreal',
'monument',
'monumental',
'mony',
'moo',
'mooch',
'mooched',
'moocher',
'mooching',
'mood',
'moodier',
'moodiest',
'moodily',
'moody',
'mooed',
'mooing',
'moola',
'moolah',
'moon',
'moonbeam',
'moonbow',
'mooncalf',
'moonfish',
'moonie',
'moonier',
'mooniest',
'moonily',
'mooning',
'moonish',
'moonlet',
'moonlight',
'moonlighted',
'moonlighter',
'moonlighting',
'moonlit',
'moonrise',
'moonscape',
'moonset',
'moonshine',
'moonshined',
'moonshiner',
'moonshining',
'moonshot',
'moonstone',
'moonstruck',
'moonwalk',
'moonward',
'moony',
'moor',
'moorage',
'moore',
'moorier',
'mooring',
'moorish',
'moorland',
'moory',
'moose',
'moot',
'mooted',
'mooter',
'mooting',
'mop',
'mope',
'moped',
'mopeder',
'moper',
'mopey',
'mopier',
'mopiest',
'moping',
'mopish',
'mopishly',
'mopper',
'moppet',
'mopping',
'mopy',
'moraine',
'moral',
'morale',
'moralism',
'moralist',
'moralistic',
'morality',
'moralization',
'moralize',
'moralized',
'moralizer',
'moralizing',
'morassy',
'moratoria',
'moratorium',
'moray',
'morbid',
'morbidity',
'morbidly',
'mordancy',
'mordant',
'mordanted',
'mordanting',
'mordantly',
'mordent',
'more',
'morel',
'moreover',
'morgan',
'morganatic',
'morgue',
'moribund',
'moribundity',
'moribundly',
'mormon',
'mormonism',
'morn',
'morning',
'morningstar',
'moroccan',
'morocco',
'moron',
'moronic',
'moronism',
'morose',
'morosely',
'morph',
'morpheme',
'morphemic',
'morphia',
'morphic',
'morphin',
'morphine',
'morphinic',
'morpho',
'morphogenetic',
'morphogenic',
'morphologic',
'morphological',
'morphologist',
'morphology',
'morrow',
'morse',
'morsel',
'morseling',
'morselled',
'mort',
'mortal',
'mortality',
'mortar',
'mortarboard',
'mortaring',
'mortary',
'mortem',
'mortgage',
'mortgageable',
'mortgagee',
'mortgager',
'mortgaging',
'mortgagor',
'mortice',
'mortician',
'mortification',
'mortified',
'mortify',
'mortifying',
'mortise',
'mortised',
'mortiser',
'mortising',
'mortuary',
'mosaic',
'mosaicism',
'moscow',
'mosey',
'moseyed',
'moseying',
'moslem',
'mosque',
'mosquito',
'mossback',
'mossed',
'mosser',
'mossier',
'mossiest',
'mossy',
'most',
'mostly',
'mot',
'mote',
'motel',
'motet',
'motey',
'moth',
'mothball',
'mothballed',
'mother',
'motherboard',
'motherhood',
'mothering',
'motherland',
'motherly',
'mothery',
'mothier',
'mothproof',
'mothy',
'motif',
'motile',
'motility',
'motion',
'motional',
'motioner',
'motioning',
'motionlessly',
'motivate',
'motivation',
'motivational',
'motive',
'motived',
'motivic',
'motley',
'motleyer',
'motleyest',
'motlier',
'motliest',
'motorbike',
'motorboat',
'motorcade',
'motorcar',
'motorcycle',
'motorcyclist',
'motordrome',
'motoric',
'motoring',
'motorist',
'motorization',
'motorize',
'motorized',
'motorizing',
'motorman',
'motorship',
'motortruck',
'motorway',
'mottle',
'mottled',
'mottler',
'mottling',
'motto',
'moue',
'moujik',
'mould',
'moulder',
'mouldering',
'mouldier',
'mouldiest',
'moulding',
'mouldy',
'moulin',
'moult',
'moulted',
'moulter',
'moulting',
'mound',
'mounding',
'mount',
'mountable',
'mountain',
'mountaineer',
'mountaineering',
'mountainside',
'mountaintop',
'mountebank',
'mountebankery',
'mounted',
'mounter',
'mountie',
'mounting',
'mourn',
'mourned',
'mourner',
'mournful',
'mournfully',
'mourning',
'mouse',
'moused',
'mouser',
'mousetrap',
'mousey',
'mousier',
'mousiest',
'mousily',
'mousing',
'moussaka',
'mousse',
'moustache',
'mousy',
'mouth',
'mouthed',
'mouther',
'mouthful',
'mouthier',
'mouthiest',
'mouthily',
'mouthing',
'mouthpart',
'mouthpiece',
'mouthwash',
'mouthy',
'mouton',
'movability',
'movable',
'movably',
'move',
'moveability',
'moveable',
'moveably',
'moved',
'movement',
'mover',
'movie',
'moviedom',
'moving',
'mow',
'mowed',
'mower',
'mowing',
'mown',
'moxa',
'moxibustion',
'moxie',
'mozambique',
'mozart',
'mozzarella',
'mph',
'mr',
'msec',
'msg',
'much',
'mucilage',
'mucilaginously',
'muck',
'mucker',
'muckier',
'muckiest',
'muckily',
'mucking',
'muckluck',
'muckrake',
'muckraked',
'muckraker',
'muckraking',
'mucky',
'mucosity',
'mud',
'mudcap',
'mudcapping',
'mudder',
'muddied',
'muddier',
'muddiest',
'muddily',
'mudding',
'muddle',
'muddled',
'muddler',
'muddling',
'muddy',
'muddying',
'mudfish',
'mudguard',
'mudlark',
'mudra',
'mudsill',
'mudslinger',
'mudslinging',
'muenster',
'muezzin',
'muff',
'muffed',
'muffin',
'muffing',
'muffle',
'muffled',
'muffler',
'muffling',
'mufti',
'mug',
'mugger',
'muggering',
'muggier',
'muggiest',
'muggily',
'mugging',
'muggy',
'mugwort',
'mugwump',
'mujik',
'mukluk',
'mulatto',
'mulberry',
'mulch',
'mulched',
'mulching',
'mulct',
'mulcted',
'mulcting',
'mule',
'muled',
'muleteer',
'muley',
'mulier',
'muling',
'mulish',
'mulishly',
'mull',
'mulla',
'mullah',
'mulled',
'mullein',
'mullen',
'muller',
'mullet',
'mulligan',
'mulligatawny',
'mulling',
'mullion',
'mullioning',
'multi',
'multicellular',
'multicellularity',
'multichannel',
'multidimensional',
'multidirectional',
'multiengined',
'multiethnic',
'multifaced',
'multifaceted',
'multifactorial',
'multifamily',
'multifariously',
'multiform',
'multifunction',
'multijet',
'multilateral',
'multilayer',
'multilevel',
'multilineal',
'multilingual',
'multimedia',
'multimillion',
'multimillionaire',
'multimolecular',
'multinational',
'multipartite',
'multiparty',
'multiphasic',
'multiple',
'multiplex',
'multiplexed',
'multiplexer',
'multiplexing',
'multiplicand',
'multiplication',
'multiplicational',
'multiplicity',
'multiplied',
'multiplier',
'multiply',
'multiplying',
'multipolar',
'multipurpose',
'multiracial',
'multiradial',
'multistage',
'multistory',
'multitasking',
'multitude',
'multitudinously',
'multivalence',
'multivalent',
'multivariate',
'multiversity',
'multivitamin',
'multo',
'mum',
'mumble',
'mumbled',
'mumbler',
'mumbletypeg',
'mumbling',
'mumbo',
'mumm',
'mummed',
'mummer',
'mummery',
'mummied',
'mummification',
'mummified',
'mummify',
'mummifying',
'mumming',
'mummy',
'mummying',
'mump',
'mumped',
'mumper',
'munch',
'munched',
'muncher',
'munching',
'munchy',
'mundane',
'mundanely',
'mungoose',
'munich',
'municipal',
'municipality',
'munificence',
'munificent',
'munificently',
'munition',
'munster',
'muon',
'muonic',
'mural',
'muralist',
'murder',
'murderee',
'murderer',
'murdering',
'murderously',
'murex',
'muriate',
'muriatic',
'murine',
'muring',
'murk',
'murker',
'murkest',
'murkier',
'murkiest',
'murkily',
'murkly',
'murky',
'murmur',
'murmurer',
'murmuring',
'murphy',
'murrain',
'murther',
'muscat',
'muscatel',
'muscle',
'musclebound',
'muscled',
'muscling',
'muscly',
'muscovite',
'muscular',
'muscularity',
'muscularly',
'musculation',
'musculature',
'musculoskeletal',
'muse',
'mused',
'museful',
'muser',
'musette',
'museum',
'mush',
'mushed',
'musher',
'mushier',
'mushiest',
'mushily',
'mushing',
'mushroom',
'mushroomed',
'mushrooming',
'mushy',
'music',
'musical',
'musicale',
'musician',
'musicianly',
'musicianship',
'musicological',
'musicologist',
'musicology',
'musicotherapy',
'musing',
'musk',
'muskeg',
'muskellunge',
'musket',
'musketeer',
'musketry',
'muskie',
'muskier',
'muskiest',
'muskily',
'muskmelon',
'muskrat',
'musky',
'muslim',
'muslin',
'mussed',
'mussel',
'mussier',
'mussiest',
'mussily',
'mussing',
'mussolini',
'mussy',
'must',
'mustache',
'mustached',
'mustachio',
'mustachioed',
'mustang',
'mustard',
'musted',
'muster',
'mustering',
'mustier',
'mustiest',
'mustily',
'musting',
'musty',
'mutability',
'mutable',
'mutably',
'mutagen',
'mutagenic',
'mutagenicity',
'mutant',
'mutate',
'mutation',
'mutational',
'mutative',
'mute',
'muted',
'mutely',
'muter',
'mutest',
'mutilate',
'mutilation',
'mutilative',
'mutineer',
'muting',
'mutinied',
'mutining',
'mutinously',
'mutiny',
'mutinying',
'mutism',
'mutt',
'mutter',
'mutterer',
'muttering',
'mutton',
'muttony',
'mutual',
'mutualism',
'mutualist',
'mutuality',
'mutualization',
'mutuel',
'muumuu',
'mux',
'muzhik',
'muzzier',
'muzziest',
'muzzily',
'muzzle',
'muzzled',
'muzzler',
'muzzling',
'muzzy',
'my',
'myasthenia',
'myasthenic',
'mycelial',
'mycelium',
'mycobacterium',
'mycological',
'mycologist',
'mycology',
'mycotoxic',
'mycotoxin',
'myeloma',
'mylar',
'myna',
'mynah',
'mynheer',
'myocardia',
'myocardial',
'myope',
'myopia',
'myopic',
'myopy',
'myosin',
'myriad',
'myriapod',
'myrmidon',
'myrrh',
'myrrhic',
'myrtle',
'myself',
'mysteriously',
'mystery',
'mystic',
'mystical',
'mysticism',
'mysticly',
'mystification',
'mystified',
'mystifier',
'mystify',
'mystifying',
'mystique',
'myth',
'mythic',
'mythical',
'mythologic',
'mythological',
'mythologist',
'mythology',
'nab',
'nabbed',
'nabbing',
'nabob',
'nabobery',
'nabobism',
'nacelle',
'nacre',
'nadir',
'nae',
'nag',
'nagasaki',
'nagger',
'nagging',
'nahuatl',
'naiad',
'naif',
'nail',
'nailed',
'nailer',
'nailhead',
'nailing',
'nailset',
'nainsook',
'nairobi',
'naive',
'naivest',
'naivete',
'naivety',
'naked',
'nakeder',
'nakedest',
'nam',
'namable',
'name',
'nameable',
'named',
'namelessly',
'namely',
'nameplate',
'namer',
'namesake',
'naming',
'nan',
'nance',
'nancy',
'nankeen',
'nanking',
'nannie',
'nanny',
'nanosecond',
'nanowatt',
'nap',
'napalm',
'napalmed',
'napalming',
'nape',
'napery',
'naphtha',
'naphthalene',
'napkin',
'napoleon',
'napoleonic',
'napper',
'nappie',
'nappier',
'napping',
'nappy',
'narc',
'narcissi',
'narcissism',
'narcissist',
'narcissistic',
'narco',
'narcolepsy',
'narcoleptic',
'narcomania',
'narcomata',
'narcotherapy',
'narcotic',
'narcotine',
'narcotism',
'narcotization',
'narcotize',
'narcotized',
'narcotizing',
'nard',
'nark',
'narked',
'narking',
'narrate',
'narrater',
'narration',
'narrative',
'narrow',
'narrowed',
'narrower',
'narrowest',
'narrowing',
'narrowish',
'narrowly',
'narthex',
'narwal',
'narwhal',
'nary',
'nasa',
'nasal',
'nasalise',
'nasality',
'nasalization',
'nasalize',
'nasalized',
'nasalizing',
'nascence',
'nascency',
'nascent',
'nashville',
'nasoscope',
'nastier',
'nastiest',
'nastily',
'nasturtium',
'nasty',
'natal',
'natality',
'natant',
'natantly',
'natation',
'natatory',
'nation',
'national',
'nationalism',
'nationalist',
'nationalistic',
'nationality',
'nationalization',
'nationalize',
'nationalized',
'nationalizing',
'nationhood',
'nationwide',
'native',
'nativism',
'nativist',
'nativity',
'natl',
'nato',
'natron',
'natter',
'nattering',
'nattier',
'nattiest',
'nattily',
'natty',
'natural',
'naturalism',
'naturalist',
'naturalistic',
'naturalization',
'naturalize',
'naturalized',
'naturalizing',
'nature',
'naturel',
'natureopathy',
'naturopathic',
'naturopathy',
'naugahyde',
'naught',
'naughtier',
'naughtiest',
'naughtily',
'naughty',
'nausea',
'nauseam',
'nauseate',
'nauseation',
'nauseously',
'naut',
'nautch',
'nautical',
'nautili',
'navaho',
'navajo',
'naval',
'nave',
'navel',
'navigability',
'navigable',
'navigably',
'navigate',
'navigation',
'navigational',
'navvy',
'navy',
'nay',
'nazareth',
'nazi',
'nazified',
'nazify',
'nazifying',
'nazism',
'neanderthal',
'neap',
'neapolitan',
'near',
'nearby',
'nearer',
'nearest',
'nearing',
'nearliest',
'nearly',
'nearsighted',
'neat',
'neaten',
'neatened',
'neatening',
'neater',
'neatest',
'neath',
'neatherd',
'neatly',
'neb',
'nebbish',
'nebraska',
'nebraskan',
'nebula',
'nebulae',
'nebular',
'nebule',
'nebulise',
'nebulize',
'nebulized',
'nebulizer',
'nebulizing',
'nebulosity',
'nebulously',
'necessarily',
'necessary',
'necessitate',
'necessitously',
'necessity',
'neck',
'neckband',
'neckerchief',
'necking',
'necklace',
'neckline',
'necktie',
'neckwear',
'necrology',
'necromancer',
'necromancy',
'necrophile',
'necrophilia',
'necrophilic',
'necrophilism',
'necrophobia',
'necrose',
'necrotic',
'necrotize',
'nectar',
'nectarine',
'nectary',
'nee',
'need',
'needer',
'needful',
'needier',
'neediest',
'needily',
'needing',
'needle',
'needled',
'needlepoint',
'needler',
'needlessly',
'needlework',
'needleworker',
'needling',
'needy',
'nefariously',
'negate',
'negater',
'negation',
'negative',
'negatived',
'negativing',
'negativism',
'negativistic',
'negativity',
'neglect',
'neglected',
'neglecter',
'neglectful',
'neglectfully',
'neglecting',
'negligee',
'negligence',
'negligent',
'negligently',
'negligible',
'negligibly',
'negotiability',
'negotiable',
'negotiant',
'negotiate',
'negotiation',
'negotiatory',
'negotiatrix',
'negritude',
'nehemiah',
'nehru',
'neigh',
'neighbor',
'neighborhood',
'neighboring',
'neighborly',
'neighed',
'neighing',
'neither',
'nelson',
'nematode',
'nembutal',
'neoclassic',
'neoclassical',
'neoclassicism',
'neocolonial',
'neocolonialism',
'neocolonialist',
'neodymium',
'neolith',
'neologic',
'neologism',
'neology',
'neomycin',
'neon',
'neonatal',
'neonate',
'neonatology',
'neophobia',
'neophobic',
'neophyte',
'neoplasia',
'neoplasm',
'neoplastic',
'neoprene',
'neoteny',
'neoteric',
'nepal',
'nepalese',
'nepenthe',
'nephew',
'nephrectomy',
'nephrite',
'nephritic',
'nephron',
'nepotic',
'nepotism',
'nepotist',
'nepotistic',
'nepotistical',
'neptune',
'neptunian',
'neptunium',
'nerd',
'nereid',
'nertz',
'nervate',
'nervation',
'nerve',
'nerved',
'nervelessly',
'nervier',
'nerviest',
'nervily',
'nervine',
'nerving',
'nervosa',
'nervosity',
'nervously',
'nervy',
'nescient',
'nest',
'nested',
'nester',
'nesting',
'nestle',
'nestled',
'nestler',
'nestlike',
'nestling',
'net',
'nether',
'nethermost',
'netlike',
'netsuke',
'nettable',
'nettably',
'netted',
'netter',
'nettier',
'netting',
'nettle',
'nettled',
'nettler',
'nettlesome',
'nettlier',
'nettliest',
'nettling',
'nettly',
'netty',
'network',
'networked',
'networking',
'neural',
'neuralgia',
'neuralgic',
'neurasthenia',
'neurasthenic',
'neuritic',
'neurobiology',
'neurogram',
'neurological',
'neurologist',
'neurologize',
'neurologized',
'neurology',
'neuromuscular',
'neuron',
'neuronal',
'neurone',
'neuronic',
'neuropath',
'neuropathy',
'neurophysiologic',
'neurophysiological',
'neurophysiology',
'neuropsychiatric',
'neuropsychiatry',
'neuropsychology',
'neuroscience',
'neurosensory',
'neurosurgeon',
'neurosurgery',
'neurosurgical',
'neurotic',
'neuroticism',
'neurotoxic',
'neurotoxicity',
'neurotoxin',
'neurotransmitter',
'neurovascular',
'neuter',
'neutering',
'neutral',
'neutralism',
'neutralist',
'neutralistic',
'neutrality',
'neutralization',
'neutralize',
'neutralized',
'neutralizer',
'neutralizing',
'neutrino',
'neutron',
'neutrophil',
'nevada',
'nevadan',
'never',
'nevermore',
'nevi',
'nevoid',
'new',
'newark',
'newborn',
'newcastle',
'newcomer',
'newel',
'newer',
'newest',
'newfangled',
'newfound',
'newfoundland',
'newish',
'newly',
'newlywed',
'newmown',
'newport',
'newsboy',
'newsbreak',
'newscast',
'newscaster',
'newsdealer',
'newsgirl',
'newsier',
'newsiest',
'newsletter',
'newsman',
'newspaper',
'newspaperman',
'newspaperwoman',
'newspeak',
'newsprint',
'newsreel',
'newsstand',
'newsweek',
'newswoman',
'newsworthy',
'newsy',
'newt',
'newton',
'newtonian',
'next',
'nextdoor',
'nextly',
'niacin',
'niacinamide',
'niagara',
'nib',
'nibbed',
'nibble',
'nibbled',
'nibbler',
'nibbling',
'niblick',
'nicaragua',
'nicaraguan',
'nice',
'nicely',
'nicer',
'nicest',
'nicety',
'niche',
'niched',
'niching',
'nick',
'nickel',
'nickeled',
'nickeling',
'nickelled',
'nickelodeon',
'nicker',
'nickering',
'nicking',
'nickle',
'nicknack',
'nickname',
'nicknamed',
'nicknaming',
'nicotine',
'nicotinic',
'nictate',
'nictation',
'nictitate',
'nictitation',
'niece',
'nielsen',
'nietzsche',
'niftier',
'niftiest',
'nifty',
'nigeria',
'nigerian',
'nigh',
'nighed',
'nigher',
'nighest',
'nighing',
'night',
'nightcap',
'nightclub',
'nightcrawler',
'nighter',
'nightfall',
'nightgown',
'nighthawk',
'nightie',
'nightingale',
'nightjar',
'nightlong',
'nightly',
'nightman',
'nightmare',
'nightmarish',
'nightrider',
'nightshade',
'nightshirt',
'nightspot',
'nightstand',
'nightstick',
'nighttime',
'nightwalker',
'nightwear',
'nighty',
'nigritude',
'nihil',
'nihilism',
'nihilist',
'nihilistic',
'nihility',
'nijinsky',
'nil',
'nile',
'nill',
'nilled',
'nilling',
'nim',
'nimbi',
'nimble',
'nimbler',
'nimblest',
'nimbly',
'nimbused',
'nincompoop',
'nine',
'ninefold',
'ninepin',
'nineteen',
'nineteenth',
'ninetieth',
'ninety',
'ninny',
'ninnyish',
'ninon',
'ninth',
'ninthly',
'niobium',
'nip',
'nipper',
'nippier',
'nippiest',
'nippily',
'nipping',
'nipple',
'nippon',
'nipponese',
'nippy',
'nirvana',
'nirvanic',
'nisei',
'nisi',
'nit',
'niter',
'nitpick',
'nitpicker',
'nitpicking',
'nitrate',
'nitration',
'nitre',
'nitric',
'nitride',
'nitrification',
'nitrified',
'nitrify',
'nitrifying',
'nitrile',
'nitrite',
'nitritoid',
'nitro',
'nitrocellulose',
'nitrocellulosic',
'nitrogen',
'nitroglycerin',
'nitroglycerine',
'nittier',
'nitty',
'nitwit',
'nix',
'nixed',
'nixie',
'nixing',
'nixon',
'nixy',
'no',
'noah',
'nob',
'nobbier',
'nobbily',
'nobble',
'nobbled',
'nobbler',
'nobbling',
'nobby',
'nobel',
'nobelist',
'nobelium',
'nobility',
'noble',
'nobleman',
'nobler',
'noblesse',
'noblest',
'noblewoman',
'nobly',
'nobody',
'nock',
'nocking',
'noctambulation',
'noctambulism',
'noctambulist',
'noctambulistic',
'nocturn',
'nocturnal',
'nocturne',
'nod',
'nodal',
'nodder',
'nodding',
'noddle',
'noddy',
'node',
'nodular',
'nodule',
'noel',
'noetic',
'nog',
'noggin',
'nohow',
'noir',
'noire',
'noise',
'noised',
'noiselessly',
'noisemaker',
'noisier',
'noisiest',
'noisily',
'noising',
'noisome',
'noisomely',
'noisy',
'nolle',
'nolo',
'nom',
'nomad',
'nomadic',
'nomadism',
'nome',
'nomenclature',
'nominal',
'nominate',
'nominately',
'nomination',
'nominative',
'nominee',
'nomism',
'nomogram',
'nomograph',
'nomography',
'non',
'nonabrasive',
'nonabsolute',
'nonabsolutely',
'nonabsorbable',
'nonabsorbent',
'nonabstainer',
'nonacademic',
'nonacceptance',
'nonacid',
'nonactive',
'nonadaptive',
'nonaddicting',
'nonaddictive',
'nonadhesive',
'nonadjacent',
'nonadjustable',
'nonadministrative',
'nonadmission',
'nonadult',
'nonadvantageously',
'nonage',
'nonagenarian',
'nonaggression',
'nonagon',
'nonagreement',
'nonagricultural',
'nonalcoholic',
'nonaligned',
'nonalignment',
'nonallergenic',
'nonanalytic',
'nonappearance',
'nonapplicable',
'nonaquatic',
'nonassertive',
'nonassimilation',
'nonathletic',
'nonattendance',
'nonattributive',
'nonauthoritative',
'nonautomatic',
'nonbasic',
'nonbeing',
'nonbeliever',
'nonbelligerent',
'nonbending',
'nonbreakable',
'noncancellable',
'noncasual',
'noncausal',
'nonce',
'noncelestial',
'noncellular',
'noncentral',
'nonchalance',
'nonchalant',
'nonchalantly',
'nonchargeable',
'noncivilized',
'nonclassical',
'nonclerical',
'nonclinical',
'noncohesive',
'noncollapsable',
'noncollapsible',
'noncollectible',
'noncom',
'noncombat',
'noncombatant',
'noncombining',
'noncombustible',
'noncommercial',
'noncommittal',
'noncommunicable',
'noncommunicative',
'noncommunist',
'noncompeting',
'noncompetitive',
'noncompliance',
'noncomplying',
'noncompulsory',
'nonconciliatory',
'nonconclusive',
'nonconcurrence',
'nonconcurrent',
'nonconcurrently',
'nonconducting',
'nonconductive',
'nonconfidence',
'nonconfidential',
'nonconflicting',
'nonconforming',
'nonconformism',
'nonconformist',
'nonconformity',
'noncongealing',
'nonconnective',
'nonconsecutive',
'nonconsenting',
'nonconstructive',
'nonconsumption',
'noncontemporary',
'noncontiguously',
'noncontinuance',
'noncontinuation',
'noncontraband',
'noncontradictory',
'noncontrastable',
'noncontributing',
'noncontributory',
'noncontrollable',
'noncontrollably',
'noncontroversial',
'nonconventional',
'nonconvergent',
'nonconversant',
'nonconvertible',
'noncooperation',
'noncooperative',
'noncorroborative',
'noncorroding',
'noncorrosive',
'noncreative',
'noncriminal',
'noncritical',
'noncrystalline',
'noncumulative',
'noncyclical',
'nondairy',
'nondeductible',
'nondelivery',
'nondemocratic',
'nondemonstrable',
'nondenominational',
'nondepartmental',
'nondependence',
'nondescript',
'nondescriptive',
'nondestructive',
'nondetachable',
'nondevelopment',
'nondifferentiation',
'nondiplomatic',
'nondirectional',
'nondisciplinary',
'nondisclosure',
'nondiscrimination',
'nondiscriminatory',
'nondistribution',
'nondivisible',
'nondramatic',
'nondrinker',
'nondrying',
'none',
'noneducable',
'noneducational',
'noneffective',
'noneffervescent',
'noneffervescently',
'nonego',
'nonelastic',
'nonelection',
'nonelective',
'nonelectric',
'noneligible',
'nonemotional',
'nonempirical',
'nonempty',
'nonenforceable',
'nonenforcement',
'nonentity',
'nonequal',
'nonequivalent',
'nonessential',
'nonesuch',
'nonethical',
'nonevent',
'nonexchangeable',
'nonexclusive',
'nonexempt',
'nonexistence',
'nonexistent',
'nonexisting',
'nonexpendable',
'nonexplosive',
'nonexportable',
'nonextant',
'nonextraditable',
'nonfactual',
'nonfascist',
'nonfat',
'nonfatal',
'nonfederal',
'nonfiction',
'nonfictional',
'nonfilterable',
'nonflammable',
'nonflexible',
'nonflowering',
'nonfood',
'nonforfeitable',
'nonforfeiture',
'nonformation',
'nonfreezing',
'nonfulfillment',
'nonfunctional',
'nongovernmental',
'nonhabitable',
'nonhabitual',
'nonhereditary',
'nonhero',
'nonhistoric',
'nonhuman',
'nonidentical',
'nonidentity',
'nonideological',
'nonidiomatic',
'nonimmunity',
'noninclusive',
'nonindependent',
'noninductive',
'nonindulgence',
'nonindustrial',
'noninflammable',
'noninflammatory',
'noninflected',
'noninflectional',
'noninformative',
'noninhabitable',
'noninheritable',
'noninjuriously',
'noninstinctive',
'noninstinctual',
'noninstitutional',
'nonintellectual',
'noninterchangeable',
'noninterfaced',
'noninterference',
'nonintersecting',
'nonintervention',
'noninterventional',
'noninterventionist',
'nonintoxicant',
'nonirritant',
'nonjudicial',
'nonkosher',
'nonlegal',
'nonlethal',
'nonlife',
'nonlinear',
'nonliterary',
'nonliturgical',
'nonliving',
'nonlogical',
'nonmagnetic',
'nonmaliciously',
'nonmalignant',
'nonman',
'nonmaterial',
'nonmaterialistic',
'nonmathematical',
'nonmeasurable',
'nonmechanical',
'nonmechanistic',
'nonmember',
'nonmembership',
'nonmetal',
'nonmetallic',
'nonmigratory',
'nonmilitant',
'nonmilitantly',
'nonmilitarily',
'nonmilitary',
'nonmoral',
'nonmotile',
'nonmystical',
'nonmythical',
'nonnative',
'nonnatural',
'nonnavigable',
'nonnegotiable',
'nonnumeric',
'nonobedience',
'nonobjective',
'nonobligatory',
'nonobservance',
'nonoccurrence',
'nonofficial',
'nonoperable',
'nonoperative',
'nonorganic',
'nonorthodox',
'nonowner',
'nonparallel',
'nonparametric',
'nonparasitic',
'nonpareil',
'nonparliamentary',
'nonparticipant',
'nonparticipation',
'nonpartisan',
'nonpasserine',
'nonpaying',
'nonpayment',
'nonperformance',
'nonperishable',
'nonpermanent',
'nonpermeable',
'nonphysical',
'nonphysiological',
'nonpigmented',
'nonplused',
'nonplusing',
'nonplussed',
'nonplussing',
'nonpoetic',
'nonpolitical',
'nonpossession',
'nonpossessive',
'nonpredatory',
'nonpredictable',
'nonprejudicial',
'nonprescriptive',
'nonpreservable',
'nonprocedural',
'nonproduction',
'nonproductive',
'nonprofessional',
'nonprofit',
'nonprofitable',
'nonproliferation',
'nonproportional',
'nonproprietary',
'nonprotective',
'nonproven',
'nonpunishable',
'nonracial',
'nonradical',
'nonradioactive',
'nonrational',
'nonreactive',
'nonreader',
'nonrealistic',
'nonreciprocal',
'nonrecognition',
'nonrecoverable',
'nonrecurrent',
'nonrecurring',
'nonredeemable',
'nonrefillable',
'nonreflective',
'nonregimented',
'nonrelational',
'nonremunerative',
'nonrenewable',
'nonrepresentational',
'nonrepresentative',
'nonresidence',
'nonresident',
'nonresidential',
'nonresidual',
'nonresistant',
'nonrestricted',
'nonrestrictive',
'nonreturnable',
'nonreversible',
'nonrhythmic',
'nonrigid',
'nonsalable',
'nonsalaried',
'nonscheduled',
'nonscholastic',
'nonscientific',
'nonseasonal',
'nonsecret',
'nonsecretly',
'nonsectarian',
'nonsecular',
'nonselective',
'nonsense',
'nonsensical',
'nonsensitive',
'nonsexist',
'nonsexual',
'nonsignificant',
'nonsinkable',
'nonsked',
'nonskid',
'nonskilled',
'nonslip',
'nonsmoker',
'nonsmoking',
'nonsocial',
'nonspeaking',
'nonspecialist',
'nonspecialized',
'nonspecific',
'nonspiritual',
'nonsporting',
'nonstable',
'nonstaining',
'nonstandard',
'nonstandardized',
'nonstick',
'nonstop',
'nonstrategic',
'nonstriker',
'nonstriking',
'nonstructural',
'nonsubmissive',
'nonsubscriber',
'nonsuccessive',
'nonsupport',
'nonsuppression',
'nonsupression',
'nonsurgical',
'nonsusceptibility',
'nonsusceptible',
'nonsustaining',
'nonsymbolic',
'nonsystematic',
'nontaxable',
'nontechnical',
'nontemporal',
'nontenure',
'nontheatrical',
'nonthinking',
'nontoxic',
'nontraditional',
'nontransferable',
'nontransparent',
'nontropical',
'nontypical',
'nonunified',
'nonuniform',
'nonunion',
'nonunionist',
'nonunited',
'nonuple',
'nonuser',
'nonvascular',
'nonvascularly',
'nonverbal',
'nonviable',
'nonviolation',
'nonviolence',
'nonviolent',
'nonviolently',
'nonvirulent',
'nonvisible',
'nonvisual',
'nonvocal',
'nonvocational',
'nonvolatile',
'nonvoluntary',
'nonvoter',
'nonvoting',
'nonwhite',
'nonworker',
'nonworking',
'nonyielding',
'nonzebra',
'nonzero',
'noodle',
'noodled',
'noodling',
'nook',
'nooky',
'noon',
'noonday',
'nooning',
'noontide',
'noontime',
'noose',
'noosed',
'nooser',
'noosing',
'nope',
'nor',
'nordic',
'norfolk',
'norm',
'norma',
'normal',
'normalacy',
'normalcy',
'normality',
'normalization',
'normalize',
'normalized',
'normalizer',
'normalizing',
'norman',
'normandy',
'normative',
'normed',
'norse',
'norseman',
'north',
'northbound',
'northeast',
'northeaster',
'northeasterly',
'northeastern',
'northeasterner',
'northeastward',
'northeastwardly',
'norther',
'northerly',
'northern',
'northerner',
'northernmost',
'northward',
'northwardly',
'northwest',
'northwesterly',
'northwestern',
'northwestward',
'northwestwardly',
'norway',
'norwegian',
'nose',
'nosebag',
'nosebleed',
'nosed',
'nosedive',
'nosegay',
'nosepiece',
'nosey',
'nosh',
'noshed',
'nosher',
'noshing',
'nosier',
'nosiest',
'nosily',
'nosing',
'nosology',
'nostalgia',
'nostalgic',
'noster',
'nostril',
'nostrum',
'nosy',
'not',
'nota',
'notability',
'notable',
'notably',
'notal',
'notandum',
'notarial',
'notarization',
'notarize',
'notarized',
'notarizing',
'notary',
'notaryship',
'notate',
'notation',
'notational',
'notch',
'notched',
'notcher',
'notching',
'notchy',
'note',
'notebook',
'noted',
'notepad',
'notepaper',
'noter',
'noteworthily',
'noteworthy',
'nothing',
'notice',
'noticeable',
'noticeably',
'noticed',
'noticing',
'notifiable',
'notification',
'notified',
'notifier',
'notify',
'notifying',
'noting',
'notion',
'notional',
'notochord',
'notochordal',
'notoriety',
'notoriously',
'notre',
'notwithstanding',
'nougat',
'nought',
'noumena',
'noumenal',
'noumenon',
'noun',
'nounal',
'nourish',
'nourished',
'nourisher',
'nourishing',
'nourishment',
'nouveau',
'nouveaux',
'nouvelle',
'nova',
'novae',
'novel',
'novelette',
'novelising',
'novelist',
'novelistic',
'novelization',
'novelize',
'novelized',
'novelizing',
'novella',
'novelle',
'novelly',
'novelty',
'november',
'novena',
'novenae',
'novice',
'novitiate',
'novo',
'novocain',
'novocaine',
'now',
'noway',
'nowhere',
'nowise',
'noxiously',
'nozzle',
'nuance',
'nuanced',
'nub',
'nubbier',
'nubbiest',
'nubbin',
'nubble',
'nubblier',
'nubbly',
'nubby',
'nubia',
'nubile',
'nubility',
'nucleal',
'nuclear',
'nucleate',
'nucleation',
'nuclei',
'nucleic',
'nuclein',
'nucleolar',
'nucleoli',
'nucleon',
'nucleonic',
'nucleoplasm',
'nucleoplasmatic',
'nucleoprotein',
'nude',
'nudely',
'nuder',
'nudest',
'nudge',
'nudger',
'nudging',
'nudie',
'nudism',
'nudist',
'nudity',
'nudnick',
'nudnik',
'nudum',
'nugatory',
'nugget',
'nuggety',
'nuisance',
'nuke',
'null',
'nulled',
'nullification',
'nullified',
'nullifier',
'nullify',
'nullifying',
'nulling',
'nullity',
'nullo',
'numb',
'numbed',
'number',
'numberable',
'numberer',
'numbering',
'numbest',
'numbing',
'numbly',
'numbskull',
'numerable',
'numerably',
'numeral',
'numerary',
'numerate',
'numeration',
'numeric',
'numerical',
'numerologist',
'numerology',
'numerously',
'numismatic',
'numismatist',
'nummary',
'nummular',
'numskull',
'nun',
'nuncio',
'nuncle',
'nuncupative',
'nunnery',
'nunnish',
'nunquam',
'nuptial',
'nurse',
'nursed',
'nurseling',
'nursemaid',
'nurser',
'nursery',
'nurserymaid',
'nurseryman',
'nursing',
'nursling',
'nurture',
'nurturer',
'nurturing',
'nut',
'nutcracker',
'nuthatch',
'nuthouse',
'nutlet',
'nutlike',
'nutmeat',
'nutmeg',
'nutpick',
'nutria',
'nutrient',
'nutriment',
'nutrimental',
'nutrition',
'nutritional',
'nutritionist',
'nutritiously',
'nutritive',
'nutshell',
'nutted',
'nutter',
'nuttier',
'nuttiest',
'nuttily',
'nutting',
'nutty',
'nuzzle',
'nuzzled',
'nuzzler',
'nuzzling',
'nybble',
'nybblize',
'nylon',
'nymph',
'nymphal',
'nymphet',
'nympho',
'nympholeptic',
'nymphomania',
'nymphomaniac',
'nymphomaniacal',
'oaf',
'oafish',
'oafishly',
'oak',
'oaken',
'oakland',
'oakum',
'oar',
'oaring',
'oarlock',
'oarsman',
'oarsmanship',
'oat',
'oatcake',
'oaten',
'oater',
'oath',
'oatmeal',
'obbligati',
'obbligato',
'obduction',
'obduracy',
'obdurate',
'obdurately',
'obduration',
'obeah',
'obedience',
'obedient',
'obediential',
'obediently',
'obeisance',
'obeisant',
'obeli',
'obelisk',
'obese',
'obesely',
'obesity',
'obey',
'obeyable',
'obeyed',
'obeyer',
'obeying',
'obfuscable',
'obfuscate',
'obfuscation',
'obfuscatory',
'obi',
'obit',
'obiter',
'obituary',
'object',
'objectant',
'objected',
'objecting',
'objection',
'objectionability',
'objectionable',
'objectional',
'objective',
'objectivity',
'objicient',
'objuration',
'objurgate',
'objurgation',
'oblate',
'oblately',
'oblation',
'oblational',
'obligability',
'obligable',
'obligate',
'obligation',
'obligational',
'obligato',
'obligatorily',
'obligatory',
'oblige',
'obligee',
'obligement',
'obliger',
'obliging',
'oblique',
'obliqued',
'obliquely',
'obliquity',
'obliterate',
'obliteration',
'obliterative',
'oblivion',
'obliviously',
'oblong',
'oblongata',
'oblongatae',
'oblongish',
'oblongly',
'obloquy',
'obnoxiety',
'obnoxiously',
'oboe',
'oboist',
'obol',
'obovate',
'obovoid',
'obscene',
'obscenely',
'obscener',
'obscenest',
'obscenity',
'obscura',
'obscurant',
'obscuranticism',
'obscurantism',
'obscurantist',
'obscuration',
'obscurative',
'obscure',
'obscurely',
'obscurement',
'obscurer',
'obscurest',
'obscuring',
'obscurity',
'obsequiously',
'obsequy',
'observable',
'observably',
'observance',
'observant',
'observation',
'observational',
'observatory',
'observe',
'observed',
'observer',
'observing',
'obsessed',
'obsessing',
'obsession',
'obsessional',
'obsessive',
'obsessor',
'obsidian',
'obsolescence',
'obsolescent',
'obsolescently',
'obsolete',
'obsoleted',
'obsoletely',
'obsoleting',
'obstacle',
'obstetric',
'obstetrical',
'obstetrician',
'obstinacy',
'obstinate',
'obstinately',
'obstreperously',
'obstruct',
'obstructed',
'obstructer',
'obstructing',
'obstruction',
'obstructionism',
'obstructionist',
'obstructive',
'obtain',
'obtainable',
'obtained',
'obtainer',
'obtaining',
'obtainment',
'obtrude',
'obtruder',
'obtruding',
'obtrusion',
'obtrusive',
'obtuse',
'obtusely',
'obtuser',
'obtusest',
'obverse',
'obverting',
'obviate',
'obviation',
'obviously',
'ocarina',
'occasion',
'occasional',
'occasioning',
'occident',
'occidental',
'occipital',
'occlude',
'occluding',
'occlusal',
'occlusion',
'occlusive',
'occult',
'occulted',
'occulter',
'occulting',
'occultism',
'occultist',
'occultly',
'occupance',
'occupancy',
'occupant',
'occupation',
'occupational',
'occupative',
'occupiable',
'occupied',
'occupier',
'occupy',
'occupying',
'occur',
'occurrence',
'occurrent',
'occurring',
'ocean',
'oceanarium',
'oceanaut',
'oceangoing',
'oceanic',
'oceanid',
'oceanographer',
'oceanographic',
'oceanography',
'oceanologist',
'oceanology',
'oceanside',
'ocelot',
'ocher',
'ochery',
'ochre',
'ochring',
'ochroid',
'octad',
'octagon',
'octagonal',
'octal',
'octane',
'octangle',
'octant',
'octaval',
'octave',
'octavo',
'octet',
'octette',
'october',
'octogenarian',
'octopi',
'octopod',
'octoroon',
'octothorpe',
'octuple',
'octupled',
'octuplet',
'octupling',
'octuply',
'octyl',
'ocular',
'ocularly',
'oculi',
'oculist',
'odalisk',
'odalisque',
'odd',
'oddball',
'odder',
'oddest',
'oddish',
'oddity',
'oddly',
'oddment',
'ode',
'odeon',
'odessa',
'odic',
'odin',
'odiously',
'odium',
'odometer',
'odor',
'odorant',
'odorful',
'odoriferously',
'odorize',
'odorized',
'odorizing',
'odorously',
'odour',
'odourful',
'odyl',
'odyssey',
'oedipal',
'oenology',
'oenomel',
'oenophile',
'oersted',
'oeuvre',
'of',
'ofay',
'off',
'offal',
'offbeat',
'offcast',
'offcut',
'offed',
'offence',
'offend',
'offender',
'offending',
'offense',
'offensive',
'offer',
'offerable',
'offeree',
'offerer',
'offering',
'offeror',
'offertory',
'offhand',
'office',
'officeholder',
'officer',
'officering',
'official',
'officialdom',
'officialism',
'officiality',
'officiant',
'officiary',
'officiate',
'officiation',
'officinal',
'officio',
'officiously',
'offing',
'offish',
'offload',
'offloading',
'offpay',
'offprint',
'offset',
'offsetting',
'offshoot',
'offshore',
'offside',
'offspring',
'offstage',
'offtrack',
'oft',
'often',
'oftener',
'oftenest',
'ofter',
'oftest',
'ogee',
'ogham',
'oghamic',
'ogive',
'ogle',
'ogled',
'ogler',
'ogling',
'ogre',
'ogreish',
'ogreism',
'ogrish',
'ogrishly',
'oh',
'ohed',
'ohing',
'ohio',
'ohioan',
'ohm',
'ohmage',
'ohmic',
'ohmmeter',
'oho',
'oidium',
'oil',
'oilcan',
'oilcloth',
'oilcup',
'oiled',
'oiler',
'oilhole',
'oilier',
'oiliest',
'oilily',
'oiling',
'oilman',
'oilseed',
'oilskin',
'oilstone',
'oilway',
'oily',
'oink',
'oinked',
'oinking',
'ointment',
'ojibwa',
'ok',
'okapi',
'okay',
'okayed',
'okaying',
'okeydoke',
'okie',
'okinawa',
'oklahoma',
'oklahoman',
'okra',
'old',
'olden',
'older',
'oldest',
'oldie',
'oldish',
'oldsmobile',
'oldster',
'ole',
'oleander',
'oleo',
'oleomargarine',
'oleoresin',
'olfaction',
'olfactology',
'olfactometer',
'olfactometric',
'olfactometry',
'olfactory',
'oligarch',
'oligarchic',
'oligarchical',
'oligarchy',
'oligocene',
'oligopoly',
'olio',
'olive',
'oliver',
'olivia',
'olivine',
'olivinic',
'olla',
'ologist',
'olograph',
'ology',
'olympia',
'olympiad',
'olympian',
'olympic',
'omaha',
'ombre',
'ombudsman',
'omega',
'omelet',
'omelette',
'omened',
'omicron',
'omikron',
'ominously',
'omissible',
'omission',
'omissive',
'omit',
'omittance',
'omitted',
'omitting',
'omnicompetence',
'omnicompetent',
'omnific',
'omnipotence',
'omnipotent',
'omnipotently',
'omnipresence',
'omnipresent',
'omniscience',
'omniscient',
'omnisciently',
'omnium',
'omnivore',
'omnivorously',
'omphali',
'on',
'onager',
'onanism',
'onanist',
'onanistic',
'onboard',
'once',
'oncogenic',
'oncograph',
'oncologic',
'oncological',
'oncology',
'oncoming',
'one',
'onefold',
'oneida',
'onerosity',
'onerously',
'onery',
'oneself',
'onetime',
'ongoing',
'onion',
'onionskin',
'onlooker',
'only',
'onomatopoeia',
'onomatopoeic',
'onomatopoetic',
'onondaga',
'onrush',
'onrushing',
'onset',
'onshore',
'onside',
'onslaught',
'onstage',
'ontario',
'onto',
'ontogenetic',
'ontogenic',
'ontogeny',
'ontological',
'ontology',
'onward',
'onyx',
'oocyte',
'ooh',
'oohed',
'oohing',
'oolite',
'oolith',
'oology',
'oolong',
'oomph',
'ooze',
'oozed',
'oozier',
'ooziest',
'oozily',
'oozing',
'oozy',
'opacification',
'opacified',
'opacify',
'opacifying',
'opacity',
'opal',
'opalesced',
'opalescence',
'opalescent',
'opalescing',
'opaline',
'opaque',
'opaqued',
'opaquely',
'opaquer',
'opaquest',
'opaquing',
'ope',
'opec',
'open',
'openable',
'opened',
'opener',
'openest',
'openhearted',
'opening',
'openly',
'openmouthed',
'openwork',
'opera',
'operability',
'operable',
'operably',
'operand',
'operandi',
'operant',
'operate',
'operatic',
'operation',
'operational',
'operative',
'operetta',
'ophidian',
'ophthalmic',
'ophthalmologic',
'ophthalmological',
'ophthalmologist',
'ophthalmology',
'ophthalmometer',
'ophthalmometry',
'ophthalmoscope',
'ophthalmoscopic',
'ophthalmoscopy',
'opiate',
'opine',
'opined',
'opiner',
'opining',
'opinion',
'opium',
'opossum',
'opp',
'opponent',
'opportune',
'opportunely',
'opportunism',
'opportunist',
'opportunistic',
'opportunity',
'opposability',
'opposable',
'oppose',
'opposed',
'opposer',
'opposing',
'opposite',
'oppositely',
'opposition',
'oppositional',
'oppositionist',
'oppressed',
'oppressing',
'oppression',
'oppressive',
'oppressor',
'opprobriate',
'opprobriously',
'opprobrium',
'oppugn',
'opt',
'optative',
'opted',
'optic',
'optical',
'optician',
'opticist',
'opticopupillary',
'optima',
'optimal',
'optimeter',
'optimise',
'optimism',
'optimist',
'optimistic',
'optimistical',
'optimization',
'optimize',
'optimized',
'optimizing',
'optimum',
'opting',
'option',
'optional',
'optioning',
'optometer',
'optometric',
'optometrical',
'optometrist',
'optometry',
'opulence',
'opulency',
'opulent',
'opulently',
'or',
'oracle',
'oracular',
'oracularly',
'oral',
'orality',
'oralogy',
'orang',
'orange',
'orangeade',
'orangery',
'orangey',
'orangier',
'orangiest',
'orangish',
'orangutan',
'orangy',
'orate',
'oration',
'oratorian',
'oratorical',
'oratorio',
'oratory',
'oratrix',
'orb',
'orbed',
'orbicular',
'orbing',
'orbit',
'orbital',
'orbited',
'orbiter',
'orbiting',
'orc',
'orca',
'orch',
'orchard',
'orchardist',
'orchardman',
'orchectomy',
'orchestra',
'orchestral',
'orchestrate',
'orchestration',
'orchid',
'ordain',
'ordained',
'ordainer',
'ordaining',
'ordainment',
'ordeal',
'order',
'orderer',
'ordering',
'orderly',
'ordinal',
'ordinance',
'ordinarier',
'ordinarily',
'ordinary',
'ordinate',
'ordination',
'ordnance',
'ordo',
'ordonnance',
'ordure',
'ore',
'oread',
'oregano',
'oregon',
'oregonian',
'organ',
'organa',
'organdie',
'organdy',
'organelle',
'organic',
'organism',
'organismal',
'organismic',
'organist',
'organization',
'organizational',
'organize',
'organized',
'organizer',
'organizing',
'organophosphate',
'organza',
'orgasm',
'orgasmic',
'orgastic',
'orgeat',
'orgiac',
'orgiastic',
'orgiastical',
'orgic',
'orgy',
'oriel',
'orient',
'oriental',
'orientate',
'orientation',
'oriented',
'orienting',
'orifice',
'orificial',
'orig',
'origami',
'origin',
'original',
'originality',
'originate',
'origination',
'oriole',
'orion',
'orison',
'orlon',
'ormolu',
'ornament',
'ornamental',
'ornamentation',
'ornamented',
'ornamenting',
'ornate',
'ornately',
'ornerier',
'orneriest',
'ornery',
'ornithological',
'ornithologist',
'ornithology',
'orogenic',
'orogeny',
'orotund',
'orotundity',
'orphan',
'orphanage',
'orphaned',
'orphanhood',
'orphaning',
'orphic',
'orrery',
'orrisroot',
'ort',
'orth',
'ortho',
'orthodontia',
'orthodontic',
'orthodontist',
'orthodox',
'orthodoxy',
'orthoepist',
'orthoepy',
'orthographic',
'orthography',
'orthomolecular',
'orthopaedic',
'orthopaedist',
'orthopedic',
'orthopedist',
'ortolan',
'orwell',
'orwellian',
'oryx',
'osage',
'osaka',
'oscar',
'oscillate',
'oscillation',
'oscillatory',
'oscillogram',
'oscillograph',
'oscillographic',
'oscillography',
'oscillometer',
'oscillometric',
'oscillometry',
'oscilloscope',
'oscilloscopic',
'oscula',
'osculant',
'oscular',
'osculate',
'osculation',
'oscule',
'osculum',
'osier',
'oslo',
'osmic',
'osmium',
'osmose',
'osmosed',
'osmosing',
'osmotic',
'osprey',
'ossea',
'osseously',
'ossia',
'ossification',
'ossificatory',
'ossified',
'ossifier',
'ossify',
'ossifying',
'ossuary',
'osteal',
'osteitic',
'ostensibility',
'ostensible',
'ostensibly',
'ostensive',
'ostentation',
'ostentatiously',
'osteoarthritic',
'osteological',
'osteologist',
'osteology',
'osteopath',
'osteopathic',
'osteopathist',
'osteopathy',
'osteosclerotic',
'osteotome',
'osteotomy',
'ostia',
'ostinato',
'ostium',
'ostler',
'ostmark',
'ostomy',
'ostracism',
'ostracize',
'ostracized',
'ostracizing',
'ostrich',
'oswego',
'other',
'otherwise',
'otherworldly',
'otic',
'otiose',
'otiosely',
'otiosity',
'otolaryngologist',
'otolaryngology',
'otolith',
'otolithic',
'otologic',
'otological',
'otologist',
'otology',
'otoscope',
'otoscopic',
'otoscopy',
'ottawa',
'otter',
'otto',
'ottoman',
'oubliette',
'ouch',
'ought',
'oughted',
'oui',
'ouija',
'ounce',
'our',
'ourself',
'ousel',
'oust',
'ousted',
'ouster',
'ousting',
'out',
'outage',
'outargue',
'outargued',
'outarguing',
'outback',
'outbalance',
'outbalanced',
'outbalancing',
'outbargain',
'outbargained',
'outbargaining',
'outbid',
'outbidden',
'outbidding',
'outbluff',
'outbluffed',
'outbluffing',
'outboard',
'outboast',
'outboasted',
'outboasting',
'outbound',
'outbox',
'outboxed',
'outboxing',
'outbreak',
'outbuilding',
'outburst',
'outcast',
'outcaste',
'outchiding',
'outclassed',
'outclassing',
'outcome',
'outcried',
'outcrop',
'outcropping',
'outcry',
'outdate',
'outdid',
'outdistance',
'outdistanced',
'outdistancing',
'outdo',
'outdodge',
'outdodging',
'outdoer',
'outdoing',
'outdone',
'outdoor',
'outdraw',
'outdrew',
'outed',
'outer',
'outermost',
'outface',
'outfaced',
'outfacing',
'outfield',
'outfielder',
'outfielding',
'outfight',
'outfighting',
'outfit',
'outfitted',
'outfitter',
'outfitting',
'outflank',
'outflanked',
'outflanker',
'outflanking',
'outflew',
'outflow',
'outflowed',
'outflowing',
'outfought',
'outfox',
'outfoxed',
'outfoxing',
'outgassed',
'outgassing',
'outgo',
'outgoing',
'outgrew',
'outgrow',
'outgrowing',
'outgrown',
'outgrowth',
'outguessed',
'outguessing',
'outgun',
'outgunned',
'outgunning',
'outhit',
'outhitting',
'outhouse',
'outing',
'outjutting',
'outland',
'outlandish',
'outlandishly',
'outlast',
'outlasted',
'outlasting',
'outlaw',
'outlawed',
'outlawing',
'outlawry',
'outlay',
'outlaying',
'outleap',
'outleaped',
'outleaping',
'outleapt',
'outlet',
'outlie',
'outlier',
'outline',
'outlined',
'outlining',
'outlive',
'outlived',
'outliver',
'outliving',
'outlook',
'outlying',
'outmaneuver',
'outmaneuvering',
'outmarch',
'outmarched',
'outmarching',
'outmode',
'outmoved',
'outnumber',
'outnumbering',
'outpace',
'outpaced',
'outpacing',
'outpatient',
'outpayment',
'outperform',
'outperformed',
'outperforming',
'outplay',
'outplayed',
'outplaying',
'outpost',
'outpour',
'outpouring',
'outproduce',
'outproduced',
'outproducing',
'output',
'outputted',
'outputting',
'outrace',
'outraced',
'outracing',
'outrage',
'outrageously',
'outraging',
'outran',
'outrange',
'outranging',
'outrank',
'outranked',
'outranking',
'outre',
'outreach',
'outreached',
'outreaching',
'outreason',
'outreasoning',
'outrider',
'outriding',
'outrigger',
'outright',
'outrooted',
'outrooting',
'outrun',
'outrunning',
'outrush',
'outscore',
'outscoring',
'outsell',
'outselling',
'outset',
'outshine',
'outshined',
'outshining',
'outshone',
'outshout',
'outshouted',
'outshouting',
'outside',
'outsider',
'outsize',
'outsized',
'outskirt',
'outsmart',
'outsmarted',
'outsmarting',
'outsold',
'outspell',
'outspelled',
'outspelling',
'outspoke',
'outspoken',
'outspokenly',
'outspread',
'outspreading',
'outstand',
'outstanding',
'outstare',
'outstaring',
'outstation',
'outstay',
'outstayed',
'outstaying',
'outstretch',
'outstretched',
'outstretching',
'outstrip',
'outstripping',
'outstroke',
'outswam',
'outswim',
'outswimming',
'outswum',
'outthink',
'outtrumped',
'outvote',
'outvoted',
'outvoting',
'outwait',
'outwaited',
'outwalk',
'outwalked',
'outwalking',
'outward',
'outwardly',
'outwear',
'outwearing',
'outweigh',
'outweighed',
'outweighing',
'outwit',
'outwitted',
'outwitting',
'outwore',
'outwork',
'outworked',
'outworker',
'outworking',
'outworn',
'outyell',
'outyelled',
'outyelling',
'ouzel',
'ouzo',
'ova',
'oval',
'ovality',
'ovarial',
'ovarian',
'ovary',
'ovate',
'ovately',
'ovation',
'oven',
'ovenbird',
'ovenware',
'over',
'overabound',
'overabounding',
'overabundance',
'overabundant',
'overachieve',
'overachieved',
'overachiever',
'overachieving',
'overact',
'overacted',
'overacting',
'overactive',
'overadorned',
'overage',
'overaggressive',
'overall',
'overambitiously',
'overanalyze',
'overanalyzed',
'overanalyzing',
'overapprehensive',
'overarched',
'overargumentative',
'overarm',
'overassertive',
'overassessment',
'overate',
'overattached',
'overattentive',
'overawe',
'overawed',
'overawing',
'overbake',
'overbaked',
'overbaking',
'overbalance',
'overbalanced',
'overbalancing',
'overbear',
'overbearing',
'overbid',
'overbidden',
'overbidding',
'overbite',
'overblown',
'overboard',
'overbold',
'overbooked',
'overbore',
'overborne',
'overbought',
'overburden',
'overburdened',
'overburdening',
'overburdensome',
'overbuy',
'overbuying',
'overcame',
'overcapacity',
'overcapitalize',
'overcapitalized',
'overcapitalizing',
'overcareful',
'overcast',
'overcasual',
'overcautiously',
'overcharge',
'overcharging',
'overcloud',
'overclouding',
'overcoat',
'overcome',
'overcoming',
'overcommon',
'overcompensate',
'overcompensation',
'overcompetitive',
'overcomplacency',
'overcomplacent',
'overconcern',
'overconfidence',
'overconfident',
'overconfidently',
'overconservative',
'overconsiderate',
'overcook',
'overcooked',
'overcooking',
'overcool',
'overcooled',
'overcooling',
'overcorrection',
'overcritical',
'overcrowd',
'overcrowding',
'overdecorate',
'overdefensive',
'overdelicate',
'overdependence',
'overdependent',
'overdetailed',
'overdevelop',
'overdeveloped',
'overdeveloping',
'overdevelopment',
'overdid',
'overdiligent',
'overdiligently',
'overdiversification',
'overdiversified',
'overdiversify',
'overdiversifying',
'overdiversity',
'overdo',
'overdoing',
'overdone',
'overdosage',
'overdose',
'overdosed',
'overdosing',
'overdraft',
'overdramatize',
'overdramatized',
'overdramatizing',
'overdrank',
'overdraw',
'overdrawing',
'overdrawn',
'overdressed',
'overdressing',
'overdrew',
'overdrink',
'overdrinking',
'overdrive',
'overdrunk',
'overdue',
'overeager',
'overearnest',
'overeasy',
'overeat',
'overeaten',
'overeducate',
'overelaborate',
'overembellish',
'overembellished',
'overembellishing',
'overemotional',
'overemphasize',
'overemphasized',
'overemphasizing',
'overemphatic',
'overenthusiastic',
'overestimate',
'overestimation',
'overexcitable',
'overexcitably',
'overexcite',
'overexcited',
'overexciting',
'overexercise',
'overexercised',
'overexercising',
'overexert',
'overexerted',
'overexerting',
'overexpand',
'overexpanding',
'overexpansion',
'overexpectant',
'overexplicit',
'overexpose',
'overexposed',
'overexposing',
'overexposure',
'overextend',
'overextending',
'overextension',
'overfamiliar',
'overfamiliarity',
'overfanciful',
'overfatigue',
'overfatigued',
'overfatiguing',
'overfed',
'overfeed',
'overfeeding',
'overfill',
'overfilled',
'overfilling',
'overflew',
'overflight',
'overflow',
'overflowed',
'overflowing',
'overflown',
'overfly',
'overflying',
'overfond',
'overfull',
'overfurnish',
'overfurnished',
'overfurnishing',
'overgarment',
'overgeneralization',
'overgeneralize',
'overgeneralized',
'overgeneralizing',
'overglaze',
'overgraze',
'overgrazed',
'overgrazing',
'overgrew',
'overgrow',
'overgrowing',
'overgrown',
'overgrowth',
'overhand',
'overhang',
'overhanging',
'overhastily',
'overhasty',
'overhaul',
'overhauled',
'overhauling',
'overhead',
'overheaped',
'overhear',
'overheard',
'overhearing',
'overheat',
'overhung',
'overhurried',
'overidealistic',
'overimaginative',
'overimpressed',
'overimpressing',
'overincline',
'overinclined',
'overinclining',
'overindulge',
'overindulgence',
'overindulgent',
'overindulging',
'overindustrialize',
'overindustrialized',
'overindustrializing',
'overinflate',
'overinfluential',
'overinsistence',
'overinsistent',
'overinsistently',
'overinsure',
'overinsuring',
'overintellectual',
'overintense',
'overintensely',
'overinterest',
'overinvest',
'overinvested',
'overinvesting',
'overissue',
'overjoy',
'overjoyed',
'overjoying',
'overkill',
'overkilled',
'overladen',
'overlaid',
'overlain',
'overland',
'overlap',
'overlapping',
'overlarge',
'overlavish',
'overlay',
'overlaying',
'overleaf',
'overleap',
'overleaped',
'overleaping',
'overleapt',
'overlie',
'overload',
'overloading',
'overlong',
'overlook',
'overlooked',
'overlooking',
'overlord',
'overlordship',
'overly',
'overlying',
'overmagnification',
'overmagnified',
'overmagnify',
'overmagnifying',
'overman',
'overmaster',
'overmastering',
'overmatch',
'overmatched',
'overmatching',
'overmodest',
'overmodestly',
'overmodified',
'overmodify',
'overmodifying',
'overmuch',
'overnice',
'overnight',
'overoptimism',
'overpaid',
'overparticular',
'overpassed',
'overpast',
'overpay',
'overpaying',
'overpayment',
'overpessimistic',
'overplay',
'overplayed',
'overplaying',
'overpopulate',
'overpopulation',
'overpower',
'overpowerful',
'overpowering',
'overpraise',
'overpraised',
'overpraising',
'overprecise',
'overprecisely',
'overprice',
'overpriced',
'overpricing',
'overprint',
'overprinted',
'overprinting',
'overproduce',
'overproduced',
'overproducing',
'overproduction',
'overprominent',
'overprompt',
'overpromptly',
'overproportion',
'overprotect',
'overprotected',
'overprotecting',
'overprotection',
'overproud',
'overqualified',
'overran',
'overrank',
'overrate',
'overreach',
'overreached',
'overreacher',
'overreaching',
'overreact',
'overreacted',
'overreacting',
'overreaction',
'overrefine',
'overrefined',
'overrefinement',
'overrefining',
'overridden',
'override',
'overriding',
'overrighteously',
'overrigid',
'overripe',
'overroast',
'overroasted',
'overroasting',
'overrode',
'overrule',
'overruled',
'overruling',
'overrun',
'overrunning',
'oversalt',
'oversalted',
'oversalting',
'oversaw',
'overscrupulously',
'oversea',
'oversee',
'overseeing',
'overseen',
'overseer',
'overseership',
'oversell',
'overselling',
'oversensitive',
'oversensitivity',
'oversevere',
'oversexed',
'overshadow',
'overshadowed',
'overshadowing',
'oversharp',
'overshoe',
'overshoot',
'overshooting',
'overshot',
'oversight',
'oversimple',
'oversimplification',
'oversimplified',
'oversimplify',
'oversimplifying',
'oversize',
'oversized',
'overskeptical',
'overskirt',
'oversleep',
'oversleeping',
'overslept',
'overslipt',
'oversold',
'oversolicitously',
'oversoul',
'oversparing',
'overspecialization',
'overspecialize',
'overspecialized',
'overspecializing',
'overspend',
'overspending',
'overspent',
'overspread',
'overspreading',
'overstate',
'overstatement',
'overstay',
'overstayed',
'overstaying',
'overstep',
'overstepping',
'overstimulate',
'overstimulation',
'overstock',
'overstocking',
'overstrain',
'overstretch',
'overstretched',
'overstretching',
'overstrict',
'overstrike',
'overstuff',
'overstuffed',
'oversubscribe',
'oversubscribed',
'oversubscribing',
'oversubscription',
'oversubtle',
'oversubtlety',
'oversupplied',
'oversupply',
'oversupplying',
'oversystematic',
'overt',
'overtake',
'overtaken',
'overtaking',
'overtax',
'overtaxed',
'overtaxing',
'overtechnical',
'overthrew',
'overthrow',
'overthrower',
'overthrowing',
'overthrown',
'overtime',
'overtire',
'overtiring',
'overtly',
'overtone',
'overtook',
'overtop',
'overtopping',
'overtrain',
'overtrained',
'overtraining',
'overture',
'overturing',
'overturn',
'overturned',
'overturning',
'overuse',
'overused',
'overusing',
'overvalue',
'overvalued',
'overvaluing',
'overview',
'overviolent',
'overwealthy',
'overween',
'overweening',
'overweigh',
'overweighed',
'overweighing',
'overweight',
'overwhelm',
'overwhelmed',
'overwhelming',
'overwilling',
'overwise',
'overwork',
'overworked',
'overworking',
'overwound',
'overwrite',
'overwriting',
'overwritten',
'overwrote',
'overwrought',
'overzealously',
'ovid',
'oviduct',
'oviform',
'ovine',
'oviparity',
'oviparously',
'ovoid',
'ovoidal',
'ovolo',
'ovular',
'ovulary',
'ovulate',
'ovulation',
'ovulatory',
'ovule',
'ovum',
'owe',
'owed',
'owing',
'owl',
'owlet',
'owlish',
'owlishly',
'owllike',
'own',
'ownable',
'owned',
'owner',
'ownership',
'owning',
'ox',
'oxalic',
'oxblood',
'oxbow',
'oxcart',
'oxen',
'oxeye',
'oxford',
'oxgall',
'oxheart',
'oxidant',
'oxidate',
'oxidation',
'oxidative',
'oxide',
'oxidic',
'oxidise',
'oxidizable',
'oxidization',
'oxidize',
'oxidized',
'oxidizer',
'oxidizing',
'oxlip',
'oxtail',
'oxter',
'oxtongue',
'oxy',
'oxyacetylene',
'oxygen',
'oxygenate',
'oxygenation',
'oxygenic',
'oxygenize',
'oxygenizing',
'oxyhydrogen',
'oxymoron',
'oyer',
'oyez',
'oyster',
'oysterer',
'oystering',
'oysterman',
'oysterwoman',
'oz',
'ozone',
'ozonic',
'ozonise',
'ozonization',
'ozonize',
'ozonized',
'ozonizer',
'ozonizing',
'pablum',
'pabulum',
'pac',
'pace',
'paced',
'pacemaker',
'pacemaking',
'pacer',
'pacesetter',
'pacesetting',
'pachisi',
'pachyderm',
'pachysandra',
'pacifiable',
'pacific',
'pacifica',
'pacification',
'pacified',
'pacifier',
'pacifism',
'pacifist',
'pacify',
'pacifying',
'pacing',
'pack',
'packable',
'package',
'packager',
'packaging',
'packer',
'packet',
'packeted',
'packeting',
'packhorse',
'packing',
'packinghouse',
'packman',
'packsack',
'packsaddle',
'packthread',
'pact',
'pacta',
'pad',
'padding',
'paddle',
'paddled',
'paddler',
'paddling',
'paddock',
'paddocking',
'paddy',
'padishah',
'padlock',
'padlocking',
'padre',
'padri',
'padrone',
'padshah',
'paean',
'paella',
'pagan',
'pagandom',
'paganish',
'paganism',
'paganist',
'paganize',
'paganized',
'paganizer',
'paganizing',
'page',
'pageant',
'pageantry',
'pageboy',
'pagesize',
'paginal',
'paginate',
'pagination',
'paging',
'pagoda',
'paid',
'pail',
'pailful',
'pailsful',
'pain',
'paine',
'pained',
'painful',
'painfuller',
'painfully',
'paining',
'painkiller',
'painkilling',
'painlessly',
'painstaking',
'paint',
'paintbrush',
'painted',
'painter',
'paintier',
'paintiest',
'painting',
'painty',
'pair',
'pairing',
'paisan',
'paisano',
'paisley',
'pajama',
'pajamaed',
'pakistan',
'pakistani',
'pal',
'palace',
'palaced',
'paladin',
'palanquin',
'palatability',
'palatable',
'palatably',
'palatal',
'palate',
'palatial',
'palatinate',
'palatine',
'palaver',
'palavering',
'palazzi',
'palazzo',
'pale',
'paled',
'paleface',
'palely',
'paleocene',
'paleographer',
'paleographic',
'paleographical',
'paleography',
'paleontologist',
'paleontology',
'paleozoic',
'paler',
'palest',
'palestine',
'palestinian',
'palette',
'palfrey',
'palier',
'palimpsest',
'palindrome',
'palindromic',
'paling',
'palinode',
'palisade',
'palisading',
'palish',
'pall',
'palladia',
'palladium',
'pallbearer',
'palled',
'pallet',
'pallette',
'palliate',
'palliation',
'palliative',
'pallid',
'pallidly',
'pallier',
'palling',
'pallor',
'palm',
'palmate',
'palmature',
'palmed',
'palmer',
'palmetto',
'palmier',
'palmiest',
'palming',
'palmist',
'palmistry',
'palmitate',
'palmy',
'palmyra',
'palomino',
'palooka',
'palpability',
'palpable',
'palpably',
'palpal',
'palpate',
'palpation',
'palpitate',
'palpitation',
'palsied',
'palsy',
'palsying',
'palter',
'paltering',
'paltrier',
'paltriest',
'paltrily',
'paltry',
'pampa',
'pampean',
'pamper',
'pamperer',
'pampering',
'pamphlet',
'pamphleteer',
'pan',
'panacea',
'panacean',
'panache',
'panama',
'panamanian',
'panatella',
'pancake',
'pancaked',
'pancaking',
'panchromatic',
'pancreatic',
'panda',
'pandemic',
'pandemonium',
'pander',
'panderer',
'pandering',
'pandit',
'pandora',
'pandowdy',
'pane',
'paned',
'panegyric',
'panegyrical',
'panegyrist',
'panegyrize',
'panegyrized',
'panegyrizing',
'panel',
'paneled',
'paneling',
'panelist',
'panelled',
'panelling',
'panful',
'pang',
'panga',
'panging',
'pangolin',
'panhandle',
'panhandled',
'panhandler',
'panhandling',
'panic',
'panickier',
'panickiest',
'panicking',
'panicky',
'panicle',
'panicled',
'panier',
'panjandrum',
'panned',
'pannier',
'pannikin',
'panning',
'panocha',
'panoply',
'panorama',
'panoramic',
'panpipe',
'pansy',
'pant',
'panted',
'pantheism',
'pantheist',
'pantheistic',
'pantheistical',
'pantheon',
'panther',
'pantie',
'panting',
'pantomime',
'pantomimed',
'pantomimic',
'pantomiming',
'pantomimist',
'pantry',
'pantsuit',
'panty',
'pantywaist',
'panzer',
'pap',
'papa',
'papacy',
'papain',
'papal',
'papaw',
'papaya',
'papayan',
'paper',
'paperback',
'paperboard',
'paperboy',
'paperer',
'paperhanger',
'paperhanging',
'papering',
'paperweight',
'paperwork',
'papery',
'papier',
'papilla',
'papillae',
'papillary',
'papillate',
'papist',
'papistry',
'papoose',
'pappy',
'paprika',
'papua',
'papuan',
'papular',
'papule',
'papyral',
'papyri',
'par',
'para',
'parable',
'parabola',
'parabolic',
'parachute',
'parachuted',
'parachuting',
'parachutist',
'parade',
'parader',
'paradigm',
'parading',
'paradisal',
'paradise',
'paradisiacal',
'paradox',
'paradoxical',
'paraffin',
'paraffine',
'paraffined',
'paraffinic',
'parafoil',
'paragon',
'paragoning',
'paragraph',
'paragraphed',
'paragraphing',
'paraguay',
'paraguayan',
'parakeet',
'paralegal',
'parallax',
'parallel',
'paralleled',
'paralleling',
'parallelism',
'parallelled',
'parallelling',
'parallelogram',
'paralyse',
'paralytic',
'paralytica',
'paralytical',
'paralyzant',
'paralyzation',
'paralyze',
'paralyzed',
'paralyzer',
'paralyzing',
'paramecia',
'paramecium',
'paramedic',
'paramedical',
'parameter',
'parameterization',
'parametric',
'paramilitary',
'paramount',
'paramountly',
'paramour',
'paranoia',
'paranoiac',
'paranoid',
'paranormal',
'paranormality',
'parapet',
'paraphernalia',
'paraphrase',
'paraphrased',
'paraphraser',
'paraphrasing',
'paraplegia',
'paraplegic',
'paraprofessional',
'parapsychologist',
'parapsychology',
'paraquat',
'parasite',
'parasitic',
'parasitical',
'parasiticidal',
'parasiticide',
'parasiticidic',
'parasitism',
'parasitization',
'parasitize',
'parasitized',
'parasitizing',
'parasitologic',
'parasitological',
'parasitologist',
'parasol',
'parasympathetic',
'parathion',
'parathyroid',
'parathyroidal',
'paratroop',
'paratrooper',
'paratyphoid',
'paratypic',
'parboil',
'parboiled',
'parboiling',
'parcel',
'parceled',
'parceling',
'parcelled',
'parcelling',
'parch',
'parched',
'parching',
'parchment',
'pard',
'pardner',
'pardon',
'pardonable',
'pardonably',
'pardoner',
'pardoning',
'pare',
'paregoric',
'parent',
'parentage',
'parental',
'parented',
'parenthesize',
'parenthetic',
'parenthetical',
'parenthood',
'parenticide',
'parenting',
'parer',
'paretic',
'pareve',
'parfait',
'pargetting',
'pariah',
'parietal',
'parimutuel',
'paring',
'parish',
'parishioner',
'parisian',
'parity',
'park',
'parka',
'parked',
'parker',
'parking',
'parkinson',
'parkinsonian',
'parkinsonism',
'parkland',
'parkway',
'parlance',
'parlay',
'parlayed',
'parlayer',
'parlaying',
'parley',
'parleyed',
'parleyer',
'parleying',
'parliament',
'parliamentarian',
'parliamentary',
'parlor',
'parlour',
'parlously',
'parmesan',
'parmigiana',
'parochial',
'parochialism',
'parodic',
'parodied',
'parodist',
'parody',
'parodying',
'parolable',
'parole',
'paroled',
'parolee',
'paroler',
'paroling',
'paroxysm',
'paroxysmal',
'paroxysmic',
'parquet',
'parqueted',
'parqueting',
'parquetry',
'parrakeet',
'parricidal',
'parricide',
'parried',
'parring',
'parrot',
'parroted',
'parroter',
'parroting',
'parroty',
'parry',
'parrying',
'parsable',
'parse',
'parsec',
'parsed',
'parser',
'parsimoniously',
'parsimony',
'parsing',
'parsley',
'parsnip',
'parson',
'parsonage',
'part',
'partake',
'partaken',
'partaker',
'partaking',
'parte',
'parted',
'parterre',
'parthenogenetic',
'parthenogenic',
'parthenon',
'parti',
'partial',
'partiality',
'partible',
'participant',
'participate',
'participation',
'participatory',
'participial',
'participle',
'particle',
'particular',
'particularity',
'particularize',
'particularized',
'particularizing',
'particularly',
'particulate',
'partied',
'parting',
'partisan',
'partisanship',
'partita',
'partition',
'partitioning',
'partitive',
'partly',
'partner',
'partnering',
'partnership',
'partook',
'partridge',
'parturition',
'partway',
'party',
'partying',
'parve',
'parvenu',
'parvenue',
'pasadena',
'pascal',
'paschal',
'paseo',
'pasha',
'paso',
'pasquinade',
'passable',
'passably',
'passage',
'passageway',
'passaging',
'passant',
'passbook',
'passe',
'passed',
'passee',
'passel',
'passenger',
'passer',
'passerby',
'passerine',
'passersby',
'passible',
'passim',
'passing',
'passion',
'passionate',
'passionately',
'passive',
'passivity',
'passkey',
'passover',
'passport',
'passway',
'password',
'past',
'pasta',
'paste',
'pasteboard',
'pasted',
'pastel',
'pastelist',
'pastellist',
'paster',
'pastern',
'pasteur',
'pasteurization',
'pasteurize',
'pasteurized',
'pasteurizer',
'pasteurizing',
'pastiche',
'pastier',
'pastiest',
'pastille',
'pastime',
'pastina',
'pasting',
'pastoral',
'pastorale',
'pastoralism',
'pastoralist',
'pastorate',
'pastoring',
'pastorship',
'pastrami',
'pastry',
'pasturage',
'pastural',
'pasture',
'pasturer',
'pasturing',
'pasty',
'pat',
'patch',
'patchable',
'patched',
'patcher',
'patchier',
'patchiest',
'patchily',
'patching',
'patchwork',
'patchy',
'pate',
'patella',
'patellae',
'patellar',
'patellate',
'paten',
'patency',
'patent',
'patentability',
'patentable',
'patentably',
'patented',
'patentee',
'patenting',
'patently',
'pater',
'paternal',
'paternalism',
'paternalistic',
'paternity',
'paternoster',
'path',
'pathetic',
'pathfinder',
'pathogen',
'pathogenetic',
'pathogenic',
'pathogenicity',
'pathogeny',
'pathologic',
'pathological',
'pathologist',
'pathology',
'pathway',
'patience',
'patient',
'patienter',
'patientest',
'patiently',
'patina',
'patio',
'patly',
'patriarch',
'patriarchal',
'patriarchate',
'patriarchy',
'patricia',
'patrician',
'patricidal',
'patricide',
'patrick',
'patrilineal',
'patrilinear',
'patriliny',
'patrimonial',
'patrimonium',
'patrimony',
'patriot',
'patriotic',
'patriotism',
'patristic',
'patrol',
'patrolled',
'patroller',
'patrolling',
'patrolman',
'patrolwoman',
'patron',
'patronage',
'patronal',
'patronize',
'patronized',
'patronizer',
'patronizing',
'patronly',
'patronymic',
'patroon',
'patsy',
'patted',
'pattee',
'patter',
'patterer',
'pattering',
'pattern',
'patterned',
'patterning',
'pattie',
'patting',
'patty',
'pattypan',
'paucity',
'paul',
'pauline',
'paunch',
'paunchier',
'paunchiest',
'paunchy',
'pauper',
'paupering',
'pauperism',
'pauperization',
'pauperize',
'pauperized',
'pauperizing',
'pause',
'paused',
'pauser',
'pausing',
'pavan',
'pavane',
'pave',
'paved',
'pavement',
'paver',
'pavilion',
'paving',
'pavlov',
'pavlovian',
'paw',
'pawed',
'pawer',
'pawing',
'pawky',
'pawl',
'pawn',
'pawnable',
'pawnbroker',
'pawnbroking',
'pawned',
'pawnee',
'pawner',
'pawning',
'pawnor',
'pawnshop',
'pawpaw',
'pax',
'pay',
'payability',
'payable',
'payably',
'payback',
'paycheck',
'payday',
'payed',
'payee',
'payer',
'paying',
'payload',
'paymaster',
'payment',
'paynim',
'payoff',
'payola',
'payout',
'payroll',
'pea',
'peace',
'peaceable',
'peaceably',
'peaced',
'peaceful',
'peacefully',
'peacekeeper',
'peacekeeping',
'peacemaker',
'peacemaking',
'peacetime',
'peach',
'peached',
'peacher',
'peachier',
'peachiest',
'peachy',
'peacing',
'peacoat',
'peacock',
'peacockier',
'peacocking',
'peafowl',
'peahen',
'peak',
'peaked',
'peakier',
'peakiest',
'peaking',
'peakish',
'peaky',
'peal',
'pealed',
'pealing',
'pean',
'peanut',
'pear',
'pearl',
'pearled',
'pearler',
'pearlier',
'pearliest',
'pearling',
'pearlite',
'pearly',
'peart',
'pearter',
'peartly',
'peasant',
'peasantry',
'pease',
'peashooter',
'peat',
'peatier',
'peatiest',
'peaty',
'peavey',
'peavy',
'pebble',
'pebbled',
'pebblier',
'pebbliest',
'pebbling',
'pebbly',
'pecan',
'peccable',
'peccadillo',
'peccary',
'peccavi',
'peck',
'pecker',
'peckier',
'pecking',
'pecky',
'pectic',
'pectin',
'pectoral',
'peculate',
'peculation',
'peculiar',
'peculiarity',
'peculiarly',
'pecuniarily',
'pecuniary',
'ped',
'pedagog',
'pedagogic',
'pedagogical',
'pedagogue',
'pedagogy',
'pedal',
'pedaled',
'pedaling',
'pedalled',
'pedalling',
'pedant',
'pedantic',
'pedantry',
'peddlar',
'peddle',
'peddled',
'peddler',
'peddlery',
'peddling',
'pederast',
'pederastic',
'pederasty',
'pedestal',
'pedestaled',
'pedestrian',
'pedestrianism',
'pediatric',
'pediatrician',
'pedicab',
'pedicure',
'pedicuring',
'pedicurist',
'pedigree',
'pedigreed',
'pediment',
'pedlar',
'pedler',
'pedometer',
'pedophile',
'pedophilia',
'pedophiliac',
'pedophilic',
'pedro',
'peduncle',
'pee',
'peed',
'peeing',
'peek',
'peekaboo',
'peeked',
'peeking',
'peel',
'peelable',
'peeled',
'peeler',
'peeling',
'peen',
'peened',
'peening',
'peep',
'peeped',
'peeper',
'peephole',
'peeping',
'peepshow',
'peer',
'peerage',
'peering',
'peerlessly',
'peery',
'peeve',
'peeved',
'peeving',
'peevish',
'peevishly',
'peewee',
'peewit',
'peg',
'pegboard',
'pegbox',
'pegging',
'peggy',
'pegmatite',
'pegmatitic',
'peignoir',
'peiping',
'pejoration',
'pejorative',
'peke',
'pekin',
'pekinese',
'peking',
'pekingese',
'pekoe',
'pelage',
'pelagic',
'pelf',
'pelican',
'pellagra',
'pellet',
'pelleted',
'pelleting',
'pelletize',
'pelletized',
'pelletizing',
'pellmell',
'pellucid',
'pellucidly',
'pelt',
'pelted',
'pelter',
'pelting',
'pelvic',
'pemmican',
'pen',
'penal',
'penalization',
'penalize',
'penalized',
'penalizing',
'penalty',
'penance',
'penancing',
'penang',
'pence',
'penchant',
'pencil',
'penciled',
'penciler',
'penciling',
'pencilled',
'pencilling',
'pend',
'pendant',
'pendency',
'pendent',
'pendently',
'pending',
'pendular',
'pendulum',
'peneplain',
'penetrable',
'penetrably',
'penetrate',
'penetration',
'penetrative',
'penguin',
'penholder',
'penicillin',
'penicillinic',
'penicillium',
'penile',
'peninsula',
'peninsular',
'penitence',
'penitent',
'penitential',
'penitentiary',
'penitently',
'penknife',
'penlight',
'penlite',
'penman',
'penmanship',
'penna',
'pennae',
'penname',
'pennant',
'pennate',
'penned',
'penner',
'penney',
'penning',
'pennon',
'pennsylvania',
'pennsylvanian',
'penny',
'pennyroyal',
'pennyweight',
'penologist',
'penology',
'penpoint',
'pense',
'pension',
'pensionable',
'pensionary',
'pensione',
'pensioner',
'pensioning',
'pensive',
'penstock',
'pent',
'pentacle',
'pentad',
'pentadactyl',
'pentadactylate',
'pentadactylism',
'pentagon',
'pentagonal',
'pentameter',
'pentarch',
'pentateuchal',
'pentathlon',
'pentecost',
'pentecostal',
'penthouse',
'pentobarbital',
'pentobarbitone',
'pentothal',
'penuche',
'penult',
'penultimate',
'penumbra',
'penumbrae',
'penuriously',
'penury',
'peon',
'peonage',
'peonism',
'peony',
'people',
'peopled',
'peopler',
'peopling',
'pep',
'peplum',
'pepper',
'pepperbox',
'peppercorn',
'pepperer',
'peppering',
'peppermint',
'pepperoni',
'peppertree',
'peppery',
'peppier',
'peppiest',
'peppily',
'pepping',
'peppy',
'pepsi',
'pepsin',
'pepsine',
'peptic',
'peptide',
'per',
'peradventure',
'perambulate',
'perambulation',
'percale',
'perceivable',
'perceivably',
'perceive',
'perceived',
'perceiver',
'perceiving',
'percent',
'percentage',
'percenter',
'percentile',
'percept',
'perceptibility',
'perceptible',
'perceptibly',
'perception',
'perceptive',
'perceptivity',
'perceptual',
'perch',
'perchance',
'perched',
'percher',
'perching',
'percipience',
'percipient',
'percolate',
'percolation',
'percussed',
'percussing',
'percussion',
'percussional',
'percussionist',
'percussor',
'perdition',
'perdu',
'perdue',
'perdurability',
'perdurable',
'perdy',
'pere',
'peregrinate',
'peregrination',
'peremption',
'peremptorily',
'peremptory',
'perennial',
'perfect',
'perfectability',
'perfected',
'perfecter',
'perfectest',
'perfectibility',
'perfectible',
'perfecting',
'perfection',
'perfectionism',
'perfectionist',
'perfectly',
'perfecto',
'perfidiously',
'perfidy',
'perforate',
'perforation',
'perforce',
'perform',
'performable',
'performance',
'performed',
'performer',
'performing',
'perfume',
'perfumed',
'perfumer',
'perfumery',
'perfuming',
'perfunctorily',
'perfunctory',
'perfusing',
'perfusion',
'pergola',
'pericardia',
'pericardial',
'pericardium',
'pericynthion',
'peridot',
'perigee',
'perihelia',
'perihelial',
'perihelion',
'peril',
'periled',
'periling',
'perilled',
'perilling',
'perilously',
'perilune',
'perimeter',
'perimetry',
'perinea',
'perineal',
'perineum',
'period',
'periodic',
'periodical',
'periodicity',
'periodontal',
'periodontia',
'periodontic',
'periodontist',
'periodontology',
'peripatetic',
'peripheral',
'periphery',
'perique',
'periscope',
'perish',
'perishability',
'perishable',
'perishably',
'perished',
'perishing',
'peristaltic',
'peristylar',
'peristyle',
'peritonea',
'peritoneal',
'peritoneum',
'peritonital',
'peritonitic',
'periwig',
'periwinkle',
'perjure',
'perjurer',
'perjuring',
'perjuriously',
'perjury',
'perk',
'perked',
'perkier',
'perkiest',
'perkily',
'perking',
'perkish',
'perky',
'perlitic',
'perm',
'permafrost',
'permanence',
'permanency',
'permanent',
'permanently',
'permeability',
'permeable',
'permeably',
'permeate',
'permeation',
'permian',
'permissable',
'permissibility',
'permissible',
'permissibly',
'permission',
'permissive',
'permit',
'permitted',
'permittee',
'permitting',
'permutation',
'permutational',
'permutationist',
'permute',
'permuted',
'permuting',
'perniciously',
'peroration',
'peroxide',
'peroxiding',
'perpendicular',
'perpendicularity',
'perpendicularly',
'perpetrate',
'perpetration',
'perpetual',
'perpetuate',
'perpetuation',
'perpetuity',
'perpetuum',
'perplex',
'perplexed',
'perplexing',
'perplexity',
'perquisite',
'perry',
'persecute',
'persecuted',
'persecutee',
'persecuting',
'persecution',
'perseverance',
'persevere',
'persevering',
'persia',
'persian',
'persiflage',
'persimmon',
'persist',
'persistance',
'persisted',
'persistence',
'persistency',
'persistent',
'persistently',
'persister',
'persisting',
'persnickety',
'person',
'persona',
'personable',
'personably',
'personae',
'personage',
'personal',
'personalism',
'personality',
'personalization',
'personalize',
'personalized',
'personalizing',
'personalty',
'personate',
'personation',
'personative',
'personification',
'personified',
'personifier',
'personify',
'personifying',
'personnel',
'perspective',
'perspicaciously',
'perspicacity',
'perspicuity',
'perspicuously',
'perspiration',
'perspiratory',
'perspire',
'perspiring',
'perspiry',
'persuadable',
'persuadably',
'persuade',
'persuader',
'persuading',
'persuasion',
'persuasive',
'pert',
'pertain',
'pertained',
'pertaining',
'perter',
'pertest',
'pertinacity',
'pertinence',
'pertinency',
'pertinent',
'pertinently',
'pertly',
'perturb',
'perturbable',
'perturbation',
'perturbational',
'perturbed',
'perturbing',
'peru',
'peruke',
'perusal',
'peruse',
'perused',
'peruser',
'perusing',
'peruvian',
'pervade',
'pervader',
'pervading',
'pervasion',
'pervasive',
'perverse',
'perversely',
'perversion',
'perversity',
'perversive',
'pervert',
'perverted',
'perverter',
'perverting',
'peseta',
'peskier',
'peskiest',
'peskily',
'pesky',
'peso',
'pessimism',
'pessimist',
'pessimistic',
'pest',
'pester',
'pesterer',
'pestering',
'pesthole',
'pesticidal',
'pesticide',
'pestiferously',
'pestilence',
'pestilent',
'pestilential',
'pestilently',
'pestle',
'pestled',
'pet',
'petal',
'petaled',
'petalled',
'petard',
'petcock',
'peter',
'petering',
'petersburg',
'petiolate',
'petiole',
'petit',
'petite',
'petition',
'petitional',
'petitionee',
'petitioner',
'petitioning',
'petnapping',
'petrel',
'petri',
'petrifaction',
'petrification',
'petrified',
'petrify',
'petrifying',
'petro',
'petrochemical',
'petrochemistry',
'petrographer',
'petrographic',
'petrographical',
'petrography',
'petrol',
'petrolatum',
'petroleum',
'petrologic',
'petrological',
'petrologist',
'petrology',
'petted',
'petter',
'petticoat',
'pettier',
'pettiest',
'pettifog',
'pettifogger',
'pettifoggery',
'pettifogging',
'pettily',
'petting',
'pettish',
'pettishly',
'petty',
'petulance',
'petulancy',
'petulant',
'petulantly',
'petunia',
'peugeot',
'pew',
'pewee',
'pewit',
'pewter',
'pewterer',
'peyote',
'peyotl',
'peyotyl',
'pfennig',
'phaeton',
'phage',
'phagocyte',
'phagosome',
'phalange',
'phalanx',
'phalarope',
'phalli',
'phallic',
'phallism',
'phallist',
'phalloid',
'phantasied',
'phantasm',
'phantasmagoria',
'phantasmagoric',
'phantasmagorical',
'phantasmagory',
'phantast',
'phantasy',
'phantom',
'phantomlike',
'pharaoh',
'pharisaic',
'pharisaical',
'pharisee',
'pharm',
'pharmaceutic',
'pharmaceutical',
'pharmacist',
'pharmacologic',
'pharmacological',
'pharmacologist',
'pharmacology',
'pharmacopeia',
'pharmacopoeia',
'pharmacy',
'pharyngal',
'pharyngeal',
'pharyngectomy',
'pharynx',
'phase',
'phaseal',
'phased',
'phaseout',
'phaser',
'phasic',
'phasing',
'pheasant',
'phenacetin',
'phenix',
'phenobarbital',
'phenocopy',
'phenol',
'phenolic',
'phenological',
'phenolphthalein',
'phenomena',
'phenomenal',
'phenomenon',
'phenothiazine',
'phenotype',
'phenotypic',
'phenotypical',
'phenylketonuria',
'phenylketonuric',
'pheromonal',
'pheromone',
'phew',
'phi',
'phial',
'philadelphia',
'philadelphian',
'philander',
'philanderer',
'philandering',
'philanthropic',
'philanthropist',
'philanthropy',
'philatelic',
'philatelist',
'philately',
'philharmonic',
'philip',
'philippic',
'philippine',
'philistine',
'philodendron',
'philol',
'philological',
'philologist',
'philology',
'philomel',
'philoprogenitive',
'philosopher',
'philosophic',
'philosophical',
'philosophize',
'philosophized',
'philosophizing',
'philosophy',
'philter',
'philtering',
'philtre',
'phiz',
'phlebotomy',
'phlegm',
'phlegmatic',
'phlegmatical',
'phlegmier',
'phlegmiest',
'phlegmy',
'phloem',
'phlox',
'phobia',
'phobic',
'phocomeli',
'phoebe',
'phoenician',
'phoenix',
'phonal',
'phone',
'phoneme',
'phonemic',
'phonetic',
'phonetician',
'phoney',
'phonic',
'phonier',
'phoniest',
'phonily',
'phoning',
'phono',
'phonogram',
'phonogrammic',
'phonograph',
'phonographic',
'phonological',
'phonologist',
'phonology',
'phonomania',
'phonophotography',
'phonoreception',
'phony',
'phooey',
'phosgene',
'phosphate',
'phosphatic',
'phosphene',
'phosphor',
'phosphorescence',
'phosphorescent',
'phosphorescently',
'phosphoric',
'photic',
'photo',
'photocatalyst',
'photocell',
'photochemical',
'photochemist',
'photochemistry',
'photocompose',
'photocomposed',
'photocomposing',
'photocomposition',
'photocopied',
'photocopier',
'photocopy',
'photocopying',
'photoed',
'photoelectric',
'photoelectricity',
'photoelectron',
'photoengrave',
'photoengraved',
'photoengraver',
'photoengraving',
'photoflash',
'photog',
'photogenic',
'photograph',
'photographed',
'photographer',
'photographic',
'photographing',
'photography',
'photoinduced',
'photoing',
'photojournalism',
'photojournalist',
'photoluminescent',
'photoluminescently',
'photomap',
'photomechanical',
'photometer',
'photometric',
'photometry',
'photomicrogram',
'photomicrograph',
'photomicrographic',
'photomicrography',
'photomural',
'photon',
'photonegative',
'photonic',
'photophilic',
'photophobia',
'photophobic',
'photoplay',
'photoreception',
'photoreceptive',
'photoreduction',
'photosensitive',
'photosensitivity',
'photosensitization',
'photosensitize',
'photosensitized',
'photosensitizer',
'photosensitizing',
'photosphere',
'photospheric',
'photostat',
'photostatic',
'photosynthesize',
'photosynthesized',
'photosynthesizing',
'photosynthetic',
'phototherapy',
'phototrophic',
'phototropic',
'phototropism',
'photovoltaic',
'phrasal',
'phrase',
'phrased',
'phraseology',
'phrasing',
'phren',
'phrenetic',
'phrenic',
'phrenologic',
'phrenological',
'phrenologist',
'phrenology',
'phrensy',
'phycomycete',
'phyla',
'phylactery',
'phylae',
'phylogeny',
'phylum',
'physic',
'physical',
'physician',
'physicianly',
'physicist',
'physicochemical',
'physiognomic',
'physiognomical',
'physiognomist',
'physiognomy',
'physiographic',
'physiography',
'physiologic',
'physiological',
'physiologist',
'physiology',
'physiopathologic',
'physiopathological',
'physiotherapist',
'physiotherapy',
'physique',
'pi',
'pianic',
'pianissimo',
'pianist',
'piano',
'pianoforte',
'piaster',
'piastre',
'piazadora',
'piazza',
'piazze',
'pibroch',
'pica',
'picador',
'picaresque',
'picaro',
'picaroon',
'picasso',
'picayune',
'piccalilli',
'piccolo',
'pick',
'pickaback',
'pickaninny',
'pickax',
'pickaxe',
'pickaxed',
'pickaxing',
'picker',
'pickerel',
'picket',
'picketed',
'picketer',
'picketing',
'pickier',
'pickiest',
'picking',
'pickle',
'pickled',
'pickling',
'picklock',
'pickpocket',
'pickup',
'pickwickian',
'picky',
'picnic',
'picnicker',
'picnicking',
'picnicky',
'picosecond',
'picot',
'picquet',
'pictograph',
'pictographic',
'pictorial',
'picture',
'picturephone',
'picturer',
'picturesque',
'picturesquely',
'picturing',
'piddle',
'piddled',
'piddler',
'piddling',
'pidgin',
'pie',
'piebald',
'piece',
'pieced',
'piecemeal',
'piecer',
'piecework',
'pieceworker',
'piecing',
'piecrust',
'pied',
'piedmont',
'pieing',
'pieplant',
'pier',
'pierce',
'pierced',
'piercer',
'piercing',
'pierre',
'pierrot',
'pieta',
'pietism',
'pietist',
'piety',
'piezochemistry',
'piezoelectric',
'piezoelectricity',
'piezometric',
'piffle',
'piffled',
'piffling',
'pig',
'pigeon',
'pigeonhole',
'pigeonholed',
'pigeonholing',
'piggery',
'piggie',
'piggier',
'piggiest',
'piggin',
'pigging',
'piggish',
'piggy',
'piggyback',
'piglet',
'pigment',
'pigmentation',
'pigmented',
'pigmenting',
'pigmy',
'pignet',
'pignut',
'pigpen',
'pigskin',
'pigsty',
'pigtail',
'pigweed',
'pike',
'piked',
'pikeman',
'piker',
'pikestaff',
'piking',
'pilaf',
'pilaff',
'pilar',
'pilaster',
'pilate',
'pilchard',
'pile',
'pileate',
'piled',
'pileup',
'pilfer',
'pilferage',
'pilferer',
'pilfering',
'pilgrim',
'pilgrimage',
'piling',
'pill',
'pillage',
'pillager',
'pillaging',
'pillar',
'pillaring',
'pillbox',
'pilled',
'pilling',
'pillion',
'pilloried',
'pillory',
'pillorying',
'pillow',
'pillowcase',
'pillowed',
'pillowing',
'pillowslip',
'pillowy',
'pilose',
'pilot',
'pilotage',
'piloted',
'pilothouse',
'piloting',
'pilsener',
'pilsner',
'pima',
'pimento',
'pimiento',
'pimp',
'pimped',
'pimpernel',
'pimping',
'pimple',
'pimpled',
'pimplier',
'pimpliest',
'pimpling',
'pimply',
'pin',
'pinafore',
'pinata',
'pinball',
'pincer',
'pinch',
'pinched',
'pincher',
'pinching',
'pinchpenny',
'pincushion',
'pine',
'pineal',
'pineapple',
'pinecone',
'pined',
'pinesap',
'pinewood',
'piney',
'pinfeather',
'pinfold',
'pinfolding',
'ping',
'pinger',
'pinging',
'pinhead',
'pinhole',
'pinier',
'piniest',
'pining',
'pinion',
'pinioning',
'pink',
'pinked',
'pinker',
'pinkest',
'pinkeye',
'pinkie',
'pinking',
'pinkish',
'pinkly',
'pinko',
'pinky',
'pinna',
'pinnace',
'pinnacle',
'pinnacled',
'pinnacling',
'pinnae',
'pinnal',
'pinnate',
'pinnately',
'pinned',
'pinner',
'pinning',
'pinocchio',
'pinochle',
'pinocle',
'pinole',
'pinon',
'pinpoint',
'pinpointed',
'pinpointing',
'pinprick',
'pinscher',
'pinsetter',
'pinspotter',
'pinstripe',
'pinstriped',
'pint',
'pinta',
'pintail',
'pinto',
'pintsize',
'pinup',
'pinwheel',
'pinworm',
'piny',
'pinyon',
'pion',
'pioneer',
'pioneering',
'pionic',
'piosity',
'piously',
'pip',
'pipage',
'pipe',
'piped',
'pipedream',
'pipefish',
'pipeful',
'pipeline',
'pipelined',
'pipelining',
'piper',
'pipestem',
'pipet',
'pipette',
'pipetted',
'pipetting',
'pipier',
'piping',
'pipit',
'pipkin',
'pippin',
'pipsqueak',
'pipy',
'piquancy',
'piquant',
'piquantly',
'pique',
'piqued',
'piquet',
'piquing',
'piracy',
'pirana',
'piranha',
'pirate',
'piratic',
'piratical',
'pirog',
'piroghi',
'pirogi',
'pirogue',
'pirojki',
'piroshki',
'pirouette',
'pirouetted',
'pirouetting',
'pirozhki',
'pisa',
'piscatorial',
'piscicide',
'piscine',
'pish',
'pished',
'pishing',
'pismire',
'pissant',
'pissed',
'pissing',
'pissoir',
'pistache',
'pistachio',
'pistil',
'pistillate',
'pistol',
'pistole',
'pistoling',
'pistolled',
'pistolling',
'piston',
'pit',
'pita',
'pitapat',
'pitch',
'pitchblende',
'pitched',
'pitcher',
'pitchfork',
'pitchier',
'pitchiest',
'pitchily',
'pitching',
'pitchman',
'pitchy',
'piteously',
'pitfall',
'pith',
'pithed',
'pithier',
'pithiest',
'pithily',
'pithing',
'pithy',
'pitiable',
'pitiably',
'pitied',
'pitier',
'pitiful',
'pitifuller',
'pitifully',
'pitilessly',
'pitman',
'piton',
'pitsaw',
'pittance',
'pitted',
'pitter',
'pitting',
'pituitary',
'pity',
'pitying',
'pivot',
'pivotal',
'pivoted',
'pivoting',
'pix',
'pixel',
'pixie',
'pixieish',
'pixy',
'pixyish',
'pizazz',
'pizza',
'pizzazz',
'pizzeria',
'pizzicato',
'pizzle',
'pkg',
'pkwy',
'placability',
'placable',
'placably',
'placard',
'placarder',
'placarding',
'placate',
'placater',
'placation',
'place',
'placeable',
'placebo',
'placed',
'placeholder',
'placement',
'placenta',
'placentae',
'placental',
'placentation',
'placentography',
'placentomata',
'placer',
'placid',
'placidity',
'placidly',
'placing',
'plack',
'placket',
'placoid',
'placque',
'plagal',
'plagiarism',
'plagiarist',
'plagiaristic',
'plagiarize',
'plagiarized',
'plagiarizer',
'plagiarizing',
'plagiary',
'plague',
'plagued',
'plaguer',
'plaguey',
'plaguily',
'plaguing',
'plaguy',
'plaice',
'plaid',
'plain',
'plainclothesman',
'plainer',
'plainest',
'plaining',
'plainly',
'plainsman',
'plainsong',
'plainspoken',
'plaint',
'plaintiff',
'plaintive',
'plait',
'plaited',
'plaiter',
'plaiting',
'plan',
'planar',
'planaria',
'planarian',
'planarity',
'plane',
'planed',
'planeload',
'planer',
'planet',
'planetaria',
'planetarium',
'planetary',
'planetesimal',
'planetoid',
'planetologist',
'planetology',
'plangency',
'plangent',
'planigraphy',
'planing',
'planish',
'planishing',
'plank',
'planked',
'planking',
'plankton',
'planktonic',
'planned',
'planner',
'planning',
'plant',
'plantain',
'plantar',
'plantation',
'planted',
'planter',
'planting',
'plaque',
'plash',
'plashed',
'plasher',
'plashiest',
'plashy',
'plasm',
'plasma',
'plasmatic',
'plasmic',
'plaster',
'plasterboard',
'plasterer',
'plastering',
'plasterwork',
'plastery',
'plastic',
'plasticity',
'plasticize',
'plasticized',
'plasticizer',
'plasticizing',
'plastron',
'plat',
'plate',
'plateau',
'plateaued',
'plateauing',
'plateaux',
'plateful',
'platelet',
'platen',
'plater',
'platesful',
'platform',
'platier',
'platinic',
'platinum',
'platitude',
'platitudinously',
'plato',
'platonic',
'platoon',
'platooning',
'platted',
'platter',
'platting',
'platy',
'platypi',
'plaudit',
'plausibility',
'plausible',
'plausibly',
'plausive',
'play',
'playa',
'playable',
'playact',
'playacted',
'playacting',
'playback',
'playbill',
'playbook',
'playboy',
'played',
'player',
'playfellow',
'playful',
'playfully',
'playgirl',
'playgoer',
'playground',
'playhouse',
'playing',
'playland',
'playlet',
'playmate',
'playoff',
'playpen',
'playroom',
'playsuit',
'plaything',
'playtime',
'playwear',
'playwright',
'plaza',
'plea',
'plead',
'pleadable',
'pleader',
'pleading',
'pleasant',
'pleasanter',
'pleasantly',
'pleasantry',
'please',
'pleased',
'pleaser',
'pleasing',
'pleasurable',
'pleasurably',
'pleasure',
'pleasureful',
'pleasuring',
'pleat',
'pleater',
'plebe',
'plebeian',
'plebescite',
'plebian',
'plebiscite',
'plectra',
'plectrum',
'pled',
'pledge',
'pledgee',
'pledgeholder',
'pledger',
'pledging',
'pleistocene',
'plena',
'plenarily',
'plenary',
'plenipotentiary',
'plenished',
'plenitude',
'plentiful',
'plentifully',
'plentitude',
'plenty',
'plenum',
'plethora',
'plethoric',
'pleura',
'pleural',
'pleurisy',
'pliability',
'pliable',
'pliably',
'pliancy',
'pliant',
'pliantly',
'plied',
'plier',
'plight',
'plighted',
'plighter',
'plighting',
'plink',
'plinked',
'plinker',
'plinth',
'pliocene',
'plisse',
'plod',
'plodder',
'plodding',
'plonk',
'plonked',
'plonking',
'plop',
'plopping',
'plosive',
'plot',
'plottage',
'plotted',
'plotter',
'plottier',
'plottiest',
'plotting',
'plough',
'ploughed',
'plougher',
'ploughing',
'ploughman',
'plover',
'plow',
'plowable',
'plowboy',
'plowed',
'plower',
'plowing',
'plowman',
'plowshare',
'ploy',
'ployed',
'ploying',
'pluck',
'plucker',
'pluckier',
'pluckiest',
'pluckily',
'plucking',
'plucky',
'plug',
'plugger',
'plugging',
'plugugly',
'plum',
'plumage',
'plumb',
'plumbable',
'plumbed',
'plumber',
'plumbery',
'plumbing',
'plumbism',
'plume',
'plumed',
'plumelet',
'plumier',
'plumiest',
'pluming',
'plummet',
'plummeted',
'plummeting',
'plummier',
'plummiest',
'plummy',
'plump',
'plumped',
'plumpened',
'plumpening',
'plumper',
'plumpest',
'plumping',
'plumpish',
'plumply',
'plumy',
'plunder',
'plunderable',
'plunderage',
'plunderer',
'plundering',
'plunge',
'plunger',
'plunging',
'plunk',
'plunked',
'plunker',
'plunking',
'pluperfect',
'plural',
'pluralism',
'plurality',
'pluralization',
'pluralize',
'pluralized',
'pluralizing',
'plush',
'plusher',
'plushest',
'plushier',
'plushiest',
'plushily',
'plushly',
'plushy',
'plutarch',
'pluto',
'plutocracy',
'plutocrat',
'plutocratic',
'pluton',
'plutonic',
'plutonism',
'plutonium',
'pluvial',
'ply',
'plyer',
'plying',
'plymouth',
'plywood',
'pneuma',
'pneumatic',
'pneumaticity',
'pneumococcal',
'pneumococci',
'pneumococcic',
'pneumonia',
'pneumonic',
'poach',
'poached',
'poacher',
'poachier',
'poachiest',
'poaching',
'poachy',
'pock',
'pocket',
'pocketbook',
'pocketed',
'pocketer',
'pocketful',
'pocketing',
'pocketknife',
'pockier',
'pockily',
'pocking',
'pockmark',
'pockmarked',
'pocky',
'poco',
'pod',
'podgier',
'podgily',
'podgy',
'podia',
'podiatric',
'podiatrist',
'podiatry',
'podium',
'poem',
'poesy',
'poet',
'poetaster',
'poetic',
'poetical',
'poetise',
'poetize',
'poetized',
'poetizer',
'poetizing',
'poetry',
'pogrom',
'pogromed',
'pogroming',
'poi',
'poignancy',
'poignant',
'poignantly',
'poilu',
'poinciana',
'poinsettia',
'point',
'pointblank',
'pointe',
'pointed',
'pointer',
'pointier',
'pointiest',
'pointillism',
'pointillist',
'pointing',
'pointlessly',
'pointman',
'pointy',
'poise',
'poised',
'poiser',
'poising',
'poison',
'poisoner',
'poisoning',
'poisonously',
'poke',
'poked',
'poker',
'pokeweed',
'pokey',
'pokier',
'pokiest',
'pokily',
'poking',
'poky',
'pol',
'poland',
'polar',
'polarimeter',
'polarimetric',
'polarimetry',
'polariscope',
'polariscopic',
'polarity',
'polarization',
'polarize',
'polarized',
'polarizer',
'polarizing',
'polarographic',
'polarography',
'polaroid',
'polder',
'pole',
'poleax',
'poleaxe',
'poleaxed',
'poleaxing',
'polecat',
'poled',
'polemic',
'polemical',
'polemicist',
'polemist',
'polemize',
'polemized',
'polemizing',
'polenta',
'poler',
'polestar',
'poleward',
'police',
'policed',
'policeman',
'policewoman',
'policing',
'policy',
'policyholder',
'poling',
'polio',
'poliomyelitic',
'polish',
'polished',
'polisher',
'polishing',
'polit',
'politburo',
'polite',
'politely',
'politer',
'politesse',
'politest',
'politic',
'political',
'politician',
'politicize',
'politicized',
'politicizing',
'politick',
'politicking',
'politico',
'polity',
'polk',
'polka',
'polkaed',
'polkaing',
'poll',
'pollack',
'pollard',
'pollarding',
'pollbook',
'polled',
'pollee',
'pollen',
'pollened',
'poller',
'pollinate',
'pollination',
'polling',
'pollist',
'polliwog',
'polloi',
'pollster',
'pollutant',
'pollute',
'polluted',
'polluter',
'polluting',
'pollution',
'pollywog',
'polo',
'poloist',
'polonaise',
'polonium',
'poltergeist',
'poltroon',
'poltroonery',
'poly',
'polyandric',
'polyandrist',
'polyandry',
'polychromatic',
'polychromia',
'polyclinic',
'polydactylism',
'polydactyly',
'polyester',
'polyethylene',
'polygamic',
'polygamist',
'polygamy',
'polyglot',
'polygon',
'polygonal',
'polygony',
'polygram',
'polygraph',
'polygraphic',
'polyhedra',
'polyhedral',
'polyhedron',
'polymath',
'polymer',
'polymeric',
'polymerization',
'polymerize',
'polymerized',
'polymerizing',
'polymorph',
'polymorphic',
'polymorphism',
'polymorphously',
'polynesia',
'polynesian',
'polynomial',
'polyp',
'polyphonic',
'polyphony',
'polyploid',
'polypod',
'polypoid',
'polysaccharide',
'polysorbate',
'polystyrene',
'polysyllabic',
'polysyllable',
'polytechnic',
'polytheism',
'polytheist',
'polytheistic',
'polyvinyl',
'pomade',
'pomading',
'pomander',
'pome',
'pomegranate',
'pomeranian',
'pommel',
'pommeled',
'pommeling',
'pommelled',
'pommelling',
'pomp',
'pompadour',
'pompano',
'pompom',
'pompon',
'pomposity',
'pompously',
'ponce',
'poncho',
'pond',
'ponder',
'ponderable',
'ponderer',
'pondering',
'ponderosa',
'ponderously',
'pondweed',
'pone',
'pong',
'pongee',
'pongid',
'poniard',
'ponied',
'pontiac',
'pontiff',
'pontifical',
'pontificate',
'ponton',
'pontoon',
'pony',
'ponying',
'ponytail',
'pooch',
'poodle',
'pooh',
'poohed',
'poohing',
'pool',
'pooled',
'poolhall',
'pooling',
'poolroom',
'poop',
'pooped',
'pooping',
'poopsie',
'poor',
'poorer',
'poorest',
'poorhouse',
'poorish',
'poorly',
'pop',
'popcorn',
'pope',
'popedom',
'popery',
'popeye',
'popeyed',
'popgun',
'popinjay',
'popish',
'popishly',
'poplar',
'poplin',
'popover',
'poppa',
'popper',
'poppet',
'poppied',
'popping',
'poppy',
'poppycock',
'populace',
'popular',
'popularity',
'popularization',
'popularize',
'popularized',
'popularizing',
'popularly',
'populate',
'population',
'populi',
'populism',
'populist',
'porcelain',
'porch',
'porcine',
'porcupine',
'pore',
'porgy',
'poring',
'pork',
'porker',
'porkier',
'porkiest',
'porkpie',
'porky',
'porn',
'porno',
'pornographer',
'pornographic',
'pornography',
'porose',
'porosity',
'porously',
'porphyritic',
'porphyry',
'porpoise',
'porridge',
'porringer',
'port',
'portability',
'portable',
'portably',
'portage',
'portaging',
'portal',
'portaled',
'portalled',
'ported',
'portend',
'portending',
'portent',
'portentously',
'porter',
'porterhouse',
'portfolio',
'porthole',
'portico',
'porticoed',
'portiere',
'porting',
'portion',
'portioner',
'portioning',
'portland',
'portlier',
'portliest',
'portly',
'portmanteau',
'portmanteaux',
'portrait',
'portraitist',
'portraiture',
'portray',
'portrayal',
'portrayed',
'portraying',
'portugal',
'portuguese',
'portulaca',
'pose',
'posed',
'poseidon',
'poser',
'poseur',
'posh',
'posher',
'poshest',
'poshly',
'posing',
'posit',
'posited',
'positing',
'position',
'positional',
'positioning',
'positive',
'positiver',
'positivest',
'positron',
'posology',
'posse',
'possessable',
'possessed',
'possessible',
'possessing',
'possession',
'possessive',
'possessor',
'possessory',
'possibility',
'possible',
'possibler',
'possiblest',
'possibly',
'possum',
'post',
'postage',
'postal',
'postaxial',
'postbag',
'postbellum',
'postbox',
'postboy',
'postcard',
'postcardinal',
'postclassical',
'postcoital',
'postconsonantal',
'postconvalescent',
'postdate',
'postdigestive',
'postdoctoral',
'posted',
'postelection',
'poster',
'posterior',
'posteriority',
'posteriorly',
'posterity',
'postern',
'postfix',
'postfixed',
'postfixing',
'postformed',
'postglacial',
'postgraduate',
'posthaste',
'posthole',
'posthumously',
'posthypnotic',
'postilion',
'posting',
'postlude',
'postman',
'postmark',
'postmarked',
'postmarking',
'postmaster',
'postmenopausal',
'postmenstrual',
'postmillennial',
'postmortem',
'postnasal',
'postnatal',
'postnuptial',
'postoffice',
'postoperative',
'postorbital',
'postpaid',
'postpartum',
'postpone',
'postponement',
'postponing',
'postprandial',
'postprocessing',
'postscript',
'postseason',
'postseasonal',
'posttraumatic',
'posttreatment',
'postulant',
'postulate',
'postulation',
'postural',
'posture',
'posturer',
'posturing',
'postwar',
'posy',
'pot',
'potability',
'potable',
'potage',
'potash',
'potassium',
'potation',
'potato',
'potbellied',
'potbelly',
'potboiled',
'potboiler',
'potboiling',
'potboy',
'poteen',
'potence',
'potency',
'potent',
'potentate',
'potential',
'potentiality',
'potentiate',
'potentiation',
'potentiometer',
'potentiometric',
'potently',
'potful',
'pothead',
'pother',
'potherb',
'potholder',
'pothole',
'potholed',
'pothook',
'pothouse',
'potion',
'potlach',
'potlatch',
'potluck',
'potman',
'potomac',
'potpie',
'potpourri',
'potshard',
'potsherd',
'potshot',
'potsie',
'potsy',
'pottage',
'potted',
'potteen',
'potter',
'potterer',
'pottering',
'pottery',
'pottier',
'potting',
'potty',
'pouch',
'pouched',
'pouchiest',
'pouching',
'pouchy',
'pouf',
'poufed',
'pouff',
'pouffe',
'pouffed',
'poult',
'poultice',
'poulticed',
'poulticing',
'poultry',
'pounce',
'pounced',
'pouncer',
'pouncing',
'pound',
'poundage',
'pounder',
'pounding',
'poundkeeper',
'pour',
'pourable',
'pourboire',
'pourer',
'pouring',
'pout',
'pouted',
'pouter',
'poutier',
'poutiest',
'pouting',
'pouty',
'poverty',
'pow',
'powder',
'powderer',
'powdering',
'powdery',
'power',
'powerboat',
'powerful',
'powerfully',
'powerhouse',
'powering',
'powerlessly',
'powwow',
'powwowed',
'powwowing',
'pox',
'poxed',
'poxing',
'practicability',
'practicable',
'practicably',
'practical',
'practicality',
'practice',
'practiced',
'practicing',
'practising',
'practitioner',
'praecox',
'praesidia',
'praetorian',
'pragmatic',
'pragmatical',
'pragmatism',
'pragmatist',
'prague',
'prairie',
'praise',
'praised',
'praiser',
'praiseworthily',
'praiseworthy',
'praising',
'praline',
'pram',
'prana',
'prance',
'pranced',
'prancer',
'prancing',
'prandial',
'prank',
'pranked',
'prankish',
'prankster',
'praseodymium',
'prat',
'prate',
'prater',
'pratfall',
'pratique',
'prattle',
'prattled',
'prattler',
'prattling',
'prawn',
'prawned',
'prawner',
'prawning',
'praxeological',
'pray',
'prayed',
'prayer',
'prayerful',
'prayerfully',
'praying',
'pre',
'preaccept',
'preacceptance',
'preaccepted',
'preaccepting',
'preaccustom',
'preaccustomed',
'preaccustoming',
'preach',
'preached',
'preacher',
'preachier',
'preachiest',
'preaching',
'preachment',
'preachy',
'preadapt',
'preadapted',
'preadapting',
'preadjust',
'preadjustable',
'preadjusted',
'preadjusting',
'preadjustment',
'preadmit',
'preadolescence',
'preadolescent',
'preadult',
'preaffirm',
'preaffirmation',
'preaffirmed',
'preaffirming',
'preallot',
'preallotted',
'preallotting',
'preamble',
'preamp',
'preamplifier',
'preanesthetic',
'preannounce',
'preannounced',
'preannouncement',
'preannouncing',
'preappearance',
'preapplication',
'preappoint',
'preappointed',
'preappointing',
'prearm',
'prearmed',
'prearming',
'prearrange',
'prearrangement',
'prearranging',
'preascertain',
'preascertained',
'preascertaining',
'preascertainment',
'preassemble',
'preassembled',
'preassembling',
'preassembly',
'preassign',
'preassigned',
'preassigning',
'preaxial',
'prebend',
'prebendary',
'prebill',
'prebilled',
'prebilling',
'preblessed',
'preblessing',
'preboil',
'preboiled',
'preboiling',
'precalculate',
'precalculation',
'precambrian',
'precancel',
'precanceled',
'precanceling',
'precancelled',
'precancelling',
'precapitalistic',
'precariously',
'precast',
'precaution',
'precautionary',
'precedable',
'precede',
'precedence',
'precedent',
'preceding',
'preceeding',
'precelebration',
'precented',
'precept',
'precessed',
'precessing',
'precession',
'precessional',
'prechill',
'prechilled',
'prechilling',
'precinct',
'preciosity',
'preciously',
'precipice',
'precipiced',
'precipitability',
'precipitable',
'precipitancy',
'precipitant',
'precipitate',
'precipitately',
'precipitation',
'precipitously',
'precise',
'precised',
'precisely',
'preciser',
'precisest',
'precisian',
'precising',
'precision',
'precivilization',
'preclean',
'precleaned',
'precleaning',
'preclude',
'precluding',
'preclusion',
'precociously',
'precocity',
'precognition',
'precognitive',
'precollege',
'precollegiate',
'preconceal',
'preconcealed',
'preconcealing',
'preconcealment',
'preconceive',
'preconceived',
'preconceiving',
'preconception',
'preconcession',
'precondemn',
'precondemnation',
'precondemned',
'precondemning',
'precondition',
'preconditioning',
'preconsideration',
'preconstruct',
'preconstructed',
'preconstructing',
'preconstruction',
'preconsultation',
'precontrive',
'precontrived',
'precontriving',
'precook',
'precooked',
'precooking',
'precooled',
'precooling',
'precox',
'precursor',
'precursory',
'precut',
'predacity',
'predate',
'predation',
'predatorial',
'predatory',
'predawn',
'predecease',
'predeceased',
'predeceasing',
'predecessor',
'predefined',
'predefining',
'predepression',
'predesignate',
'predesignation',
'predestinarian',
'predestinate',
'predestination',
'predestine',
'predestined',
'predestining',
'predetermination',
'predetermine',
'predetermined',
'predetermining',
'prediagnostic',
'predicable',
'predicament',
'predicate',
'predication',
'predicative',
'predicatory',
'predict',
'predictability',
'predictable',
'predictably',
'predicted',
'predicting',
'prediction',
'predictive',
'predigest',
'predigested',
'predigesting',
'predigestion',
'predilection',
'predispose',
'predisposed',
'predisposing',
'predisposition',
'predominance',
'predominant',
'predominantly',
'predominate',
'predominately',
'predomination',
'preelection',
'preemie',
'preeminence',
'preeminent',
'preeminently',
'preempt',
'preempted',
'preempting',
'preemption',
'preemptive',
'preemptory',
'preen',
'preened',
'preener',
'preengage',
'preengaging',
'preening',
'preenlistment',
'preestablish',
'preestablished',
'preestablishing',
'preestimate',
'preexamination',
'preexamine',
'preexamined',
'preexamining',
'preexist',
'preexisted',
'preexisting',
'preexpose',
'preexposed',
'preexposing',
'preexposure',
'prefab',
'prefabbed',
'prefabbing',
'prefabricate',
'prefabrication',
'preface',
'prefaced',
'prefacer',
'prefacing',
'prefatory',
'prefect',
'prefecture',
'prefer',
'preferability',
'preferable',
'preferably',
'preference',
'preferential',
'preferment',
'preferrer',
'preferring',
'prefigure',
'prefiguring',
'prefix',
'prefixal',
'prefixed',
'prefixing',
'prefixion',
'preform',
'preformed',
'preforming',
'pregame',
'preglacial',
'pregnancy',
'pregnant',
'pregnantly',
'preharden',
'prehardened',
'prehardening',
'preheat',
'prehensile',
'prehensility',
'prehistoric',
'prehistorical',
'prehistory',
'prehuman',
'preinaugural',
'preindustrial',
'preinsert',
'preinserted',
'preinserting',
'preinstruct',
'preinstructed',
'preinstructing',
'preinstruction',
'preintimation',
'prejudge',
'prejudger',
'prejudging',
'prejudgment',
'prejudice',
'prejudiced',
'prejudicial',
'prejudicing',
'prekindergarten',
'prelacy',
'prelate',
'prelatic',
'prelim',
'preliminarily',
'preliminary',
'prelimit',
'prelimited',
'prelimiting',
'preliterate',
'prelude',
'preluder',
'premarital',
'premature',
'prematurely',
'premed',
'premedical',
'premeditate',
'premeditation',
'premeditative',
'premenstrual',
'premie',
'premier',
'premiere',
'premiering',
'premiership',
'premise',
'premised',
'premising',
'premium',
'premix',
'premixed',
'premixing',
'premolar',
'premonition',
'premonitory',
'prename',
'prenatal',
'prentice',
'prenticed',
'prenticing',
'prenuptial',
'preoccupation',
'preoccupied',
'preoccupy',
'preoccupying',
'preoperative',
'preordain',
'preordained',
'preordaining',
'preordination',
'preorganization',
'prep',
'prepack',
'prepackage',
'prepackaging',
'prepacking',
'prepaid',
'preparation',
'preparatorily',
'preparatory',
'prepare',
'preparer',
'preparing',
'prepay',
'prepaying',
'prepayment',
'preplan',
'preplanned',
'preplanning',
'preponderance',
'preponderant',
'preponderantly',
'preponderate',
'preposition',
'prepositional',
'prepossessed',
'prepossessing',
'prepossession',
'preposterously',
'preppie',
'prepping',
'preprint',
'preprinted',
'preprocessing',
'preprocessor',
'preprogrammed',
'prepsychotic',
'prepubescence',
'prepubescent',
'prepublication',
'prepuce',
'prepunch',
'prerecord',
'prerecording',
'preregister',
'preregistering',
'preregistration',
'prereproductive',
'prerequisite',
'prerogative',
'presage',
'presager',
'presaging',
'presanctified',
'presbyope',
'presbyopia',
'presbyopic',
'presbyter',
'presbyterian',
'presbyterianism',
'preschool',
'preschooler',
'prescience',
'prescient',
'prescientific',
'prescore',
'prescoring',
'prescribable',
'prescribe',
'prescribed',
'prescriber',
'prescribing',
'prescript',
'prescription',
'prescriptive',
'preseason',
'preselect',
'preselected',
'preselecting',
'presell',
'presence',
'present',
'presentability',
'presentable',
'presentably',
'presentation',
'presented',
'presentence',
'presenter',
'presentiment',
'presenting',
'presently',
'presentment',
'preservable',
'preservation',
'preservative',
'preserve',
'preserved',
'preserver',
'preserving',
'preset',
'presetting',
'preshape',
'preshaped',
'preshrunk',
'preside',
'presidency',
'president',
'presidential',
'presider',
'presiding',
'presidio',
'presidium',
'presift',
'presifted',
'presifting',
'preslavery',
'presley',
'presoak',
'presoaked',
'presoaking',
'presold',
'pressed',
'presser',
'pressing',
'pressman',
'pressmark',
'pressor',
'pressosensitive',
'pressroom',
'pressrun',
'pressure',
'pressuring',
'pressurization',
'pressurize',
'pressurized',
'pressurizer',
'pressurizing',
'presswork',
'prest',
'prestamp',
'prestidigitation',
'prestige',
'prestigeful',
'prestigiously',
'presto',
'prestressed',
'presumable',
'presumably',
'presume',
'presumed',
'presumer',
'presuming',
'presumption',
'presumptive',
'presumptuously',
'presuppose',
'presupposed',
'presupposing',
'presupposition',
'presurgical',
'pretaste',
'preteen',
'pretence',
'pretend',
'pretender',
'pretending',
'pretense',
'pretensed',
'pretension',
'pretention',
'pretentiously',
'preterit',
'preterminal',
'preternatural',
'pretest',
'pretested',
'pretesting',
'pretext',
'pretoria',
'pretrial',
'prettied',
'prettier',
'prettiest',
'prettification',
'prettified',
'prettifier',
'prettify',
'prettifying',
'prettily',
'pretty',
'prettying',
'pretzel',
'preunion',
'prevail',
'prevailed',
'prevailer',
'prevailing',
'prevalence',
'prevalent',
'prevalently',
'prevaricate',
'prevarication',
'prevent',
'preventability',
'preventable',
'preventative',
'prevented',
'preventible',
'preventing',
'prevention',
'preventive',
'preventorium',
'preview',
'previewed',
'previewing',
'previously',
'prevocational',
'prevue',
'prevued',
'prevuing',
'prewar',
'prewarm',
'prewarmed',
'prewarming',
'prewarned',
'prewash',
'prewashed',
'prewashing',
'prexy',
'prey',
'preyed',
'preyer',
'preying',
'priapic',
'priapism',
'price',
'priced',
'pricer',
'pricey',
'pricier',
'priciest',
'pricing',
'prick',
'pricker',
'prickier',
'prickiest',
'pricking',
'prickle',
'prickled',
'pricklier',
'prickliest',
'prickling',
'prickly',
'pricky',
'pricy',
'pride',
'prideful',
'pridefully',
'priding',
'pried',
'priedieux',
'prier',
'priest',
'priested',
'priesthood',
'priesting',
'priestlier',
'priestly',
'prig',
'priggery',
'priggish',
'priggishly',
'prim',
'prima',
'primacy',
'primal',
'primarily',
'primary',
'primate',
'primatial',
'prime',
'primed',
'primely',
'primer',
'primero',
'primeval',
'primigenial',
'priming',
'primitive',
'primitivism',
'primitivity',
'primly',
'primmed',
'primmer',
'primmest',
'primming',
'primo',
'primogeniture',
'primordial',
'primp',
'primped',
'primping',
'primrose',
'prince',
'princedom',
'princelier',
'princeling',
'princely',
'princeton',
'principal',
'principality',
'principle',
'principled',
'prink',
'prinked',
'prinking',
'print',
'printable',
'printed',
'printer',
'printery',
'printing',
'printout',
'prior',
'priorate',
'priori',
'priority',
'priory',
'prise',
'prised',
'prism',
'prismatic',
'prismoid',
'prison',
'prisoner',
'prisoning',
'prissier',
'prissiest',
'prissily',
'prissy',
'pristine',
'prithee',
'privacy',
'private',
'privateer',
'privately',
'privater',
'privatest',
'privation',
'privatized',
'privatizing',
'privet',
'privier',
'priviest',
'privilege',
'privileging',
'privily',
'privity',
'privy',
'prix',
'prize',
'prized',
'prizefight',
'prizefighter',
'prizefighting',
'prizer',
'prizewinner',
'prizewinning',
'prizing',
'pro',
'proabortion',
'proadministration',
'proadoption',
'proalliance',
'proamendment',
'proapproval',
'probability',
'probable',
'probably',
'probate',
'probation',
'probational',
'probationary',
'probationer',
'probative',
'probe',
'probeable',
'probed',
'prober',
'probing',
'probity',
'problem',
'problematic',
'problematical',
'proboycott',
'proc',
'procaine',
'procapitalist',
'procathedral',
'procedural',
'procedure',
'proceed',
'proceeder',
'proceeding',
'processed',
'processing',
'procession',
'processional',
'processor',
'prochurch',
'proclaim',
'proclaimed',
'proclaimer',
'proclaiming',
'proclamation',
'proclerical',
'proclivity',
'procommunism',
'procommunist',
'procompromise',
'proconservation',
'proconsul',
'proconsular',
'proconsulate',
'proconsulship',
'procrastinate',
'procrastination',
'procreate',
'procreation',
'procreative',
'procreativity',
'procrustean',
'proctologic',
'proctological',
'proctologist',
'proctology',
'proctorial',
'proctoring',
'proctorship',
'proctoscope',
'proctoscopic',
'proctoscopy',
'procurable',
'procural',
'procuration',
'procure',
'procurement',
'procurer',
'procuring',
'prod',
'prodder',
'prodding',
'prodemocratic',
'prodigal',
'prodigality',
'prodigiously',
'prodigy',
'prodisarmament',
'produce',
'produced',
'producer',
'producible',
'producing',
'product',
'production',
'productive',
'productivity',
'proem',
'proenforcement',
'prof',
'profanation',
'profanatory',
'profane',
'profaned',
'profanely',
'profaner',
'profaning',
'profanity',
'profascist',
'profeminist',
'professed',
'professing',
'profession',
'professional',
'professionalism',
'professionalist',
'professionalize',
'professor',
'professorate',
'professorial',
'professoriate',
'professorship',
'proffer',
'profferer',
'proffering',
'proficiency',
'proficient',
'proficiently',
'profile',
'profiled',
'profiler',
'profiling',
'profit',
'profitability',
'profitable',
'profitably',
'profited',
'profiteer',
'profiteering',
'profiter',
'profiting',
'profligacy',
'profligate',
'profligately',
'proforma',
'profound',
'profounder',
'profoundest',
'profoundly',
'profundity',
'profuse',
'profusely',
'profusion',
'progenitive',
'progeny',
'prognose',
'prognosed',
'prognostic',
'prognosticate',
'prognostication',
'progovernment',
'program',
'programable',
'programed',
'programer',
'programing',
'programmability',
'programmable',
'programmata',
'programmatic',
'programme',
'programmed',
'programmer',
'programming',
'progressed',
'progressing',
'progression',
'progressional',
'progressionist',
'progressive',
'prohibit',
'prohibited',
'prohibiting',
'prohibition',
'prohibitionist',
'prohibitive',
'prohibitory',
'proindustry',
'prointegration',
'prointervention',
'project',
'projected',
'projectile',
'projecting',
'projection',
'projectionist',
'prolabor',
'prolapse',
'prolapsed',
'prolapsing',
'prolate',
'prole',
'prolegomena',
'prolegomenon',
'proletarian',
'proletarianize',
'proletariat',
'proletariate',
'proliferate',
'proliferation',
'proliferative',
'proliferously',
'prolific',
'prolix',
'prolixity',
'prolixly',
'prolog',
'prologing',
'prologue',
'prologued',
'prologuing',
'prolong',
'prolongation',
'prolonging',
'prom',
'promenade',
'promenader',
'promenading',
'promethean',
'promethium',
'promilitary',
'prominence',
'prominent',
'prominently',
'promiscuity',
'promiscuously',
'promise',
'promised',
'promisee',
'promiser',
'promising',
'promisor',
'promissory',
'promodern',
'promonarchist',
'promontory',
'promotable',
'promote',
'promoted',
'promoter',
'promoting',
'promotion',
'promotional',
'prompt',
'promptbook',
'prompted',
'prompter',
'promptest',
'prompting',
'promptitude',
'promptly',
'promulgate',
'promulgation',
'promulging',
'pron',
'pronate',
'pronation',
'pronationalist',
'prone',
'pronely',
'prong',
'pronghorn',
'pronging',
'pronominal',
'pronoun',
'pronounce',
'pronounceable',
'pronounced',
'pronouncement',
'pronouncing',
'pronto',
'pronuclear',
'pronunciamento',
'pronunciation',
'proof',
'proofed',
'proofer',
'proofing',
'proofread',
'proofreader',
'proofreading',
'prop',
'propaganda',
'propagandist',
'propagandistic',
'propagandize',
'propagandized',
'propagandizing',
'propagate',
'propagation',
'propagational',
'propagative',
'propane',
'propanol',
'propel',
'propellant',
'propelled',
'propellent',
'propeller',
'propelling',
'propensity',
'proper',
'properer',
'properest',
'properitoneal',
'properly',
'propertied',
'property',
'prophase',
'prophecy',
'prophesied',
'prophesier',
'prophesy',
'prophesying',
'prophet',
'prophetic',
'prophetical',
'prophylactic',
'propinquity',
'propitiate',
'propitiation',
'propitiatory',
'propitiously',
'propjet',
'propman',
'proponent',
'proponing',
'proportion',
'proportional',
'proportionality',
'proportionate',
'proportionately',
'proportioning',
'proposal',
'propose',
'proposed',
'proposer',
'proposing',
'proposition',
'propositional',
'propound',
'propounder',
'propounding',
'propping',
'propranolol',
'proprietary',
'proprietorial',
'proprietorship',
'propriety',
'proprioception',
'proprioceptive',
'propulsion',
'propulsive',
'propyl',
'propylene',
'prorate',
'prorater',
'proration',
'proreform',
'prorestoration',
'prorevolutionary',
'prorogation',
'prorogue',
'prorogued',
'proroguing',
'prosaic',
'proscenia',
'proscenium',
'proscribe',
'proscribed',
'proscribing',
'proscription',
'proscriptive',
'prose',
'prosecutable',
'prosecute',
'prosecuted',
'prosecuting',
'prosecution',
'prosecutive',
'prosecutorial',
'prosecutory',
'prosecutrix',
'prosed',
'proselyte',
'proselyted',
'proselyting',
'proselytism',
'proselytize',
'proselytized',
'proselytizer',
'proselytizing',
'prosequi',
'proser',
'prosier',
'prosiest',
'prosily',
'prosing',
'prosit',
'proslavery',
'prosodic',
'prosody',
'prospect',
'prospected',
'prospecting',
'prospective',
'prosper',
'prospering',
'prosperity',
'prosperously',
'prostaglandin',
'prostate',
'prostatectomy',
'prostatic',
'prosthetic',
'prosthetist',
'prosthodontia',
'prosthodontist',
'prostitute',
'prostituted',
'prostituting',
'prostitution',
'prostrate',
'prostration',
'prostyle',
'prosuffrage',
'prosy',
'protactinium',
'protagonist',
'protea',
'protean',
'protect',
'protected',
'protecting',
'protection',
'protectional',
'protectionism',
'protectionist',
'protective',
'protectorate',
'protege',
'protegee',
'protein',
'protest',
'protestable',
'protestant',
'protestantism',
'protestation',
'protested',
'protester',
'protesting',
'prothalamia',
'prothalamion',
'protist',
'protista',
'protoactinium',
'protocol',
'proton',
'protonic',
'protoplasm',
'protoplasmal',
'protoplasmatic',
'protoplasmic',
'prototype',
'prototypic',
'prototypical',
'protozoa',
'protozoal',
'protozoan',
'protozoic',
'protozoology',
'protozoon',
'protract',
'protracted',
'protractile',
'protracting',
'protraction',
'protrude',
'protruding',
'protrusile',
'protrusion',
'protrusive',
'protuberance',
'protuberant',
'proud',
'prouder',
'proudest',
'proudly',
'prounion',
'provability',
'provable',
'provably',
'prove',
'proved',
'proven',
'provenance',
'provencal',
'provence',
'provender',
'provenly',
'prover',
'proverb',
'proverbed',
'proverbial',
'proverbing',
'provide',
'providence',
'provident',
'providential',
'providently',
'provider',
'providing',
'province',
'provincial',
'provincialism',
'provinciality',
'proving',
'provision',
'provisional',
'proviso',
'provocateur',
'provocation',
'provocative',
'provoke',
'provoked',
'provoker',
'provoking',
'provolone',
'provost',
'prow',
'prowar',
'prowl',
'prowled',
'prowler',
'prowling',
'proxima',
'proximal',
'proximate',
'proximately',
'proximity',
'proximo',
'proxy',
'prude',
'prudence',
'prudent',
'prudential',
'prudently',
'prudery',
'prudish',
'prudishly',
'prunable',
'prune',
'pruned',
'pruner',
'pruning',
'prurience',
'prurient',
'pruriently',
'prussia',
'prussian',
'prussic',
'pry',
'pryer',
'prying',
'prythee',
'psalm',
'psalmed',
'psalmic',
'psalming',
'psalmist',
'psalmody',
'psalter',
'psaltery',
'psaltry',
'pschent',
'pseud',
'pseudo',
'pseudoaristocratic',
'pseudoartistic',
'pseudobiographical',
'pseudoclassic',
'pseudoclassical',
'pseudoclassicism',
'pseudoephedrine',
'pseudohistoric',
'pseudohistorical',
'pseudointellectual',
'pseudolegendary',
'pseudoliberal',
'pseudoliterary',
'pseudomodern',
'pseudonym',
'pseudophilosophical',
'pseudopod',
'pseudopodia',
'pseudopodium',
'pseudoprofessional',
'pseudoscholarly',
'pseudoscientific',
'pshaw',
'pshawed',
'pshawing',
'psi',
'psilocybin',
'psst',
'psych',
'psyche',
'psyched',
'psychedelic',
'psychiatric',
'psychiatrical',
'psychiatrist',
'psychiatry',
'psychic',
'psychical',
'psyching',
'psycho',
'psychoactive',
'psychoanalyst',
'psychoanalytic',
'psychoanalytical',
'psychoanalyze',
'psychoanalyzed',
'psychoanalyzing',
'psychobiology',
'psychodrama',
'psychodynamic',
'psychogenic',
'psychokinesia',
'psychol',
'psychologic',
'psychological',
'psychologism',
'psychologist',
'psychologize',
'psychologized',
'psychologizing',
'psychology',
'psychometry',
'psychoneurotic',
'psychopath',
'psychopathia',
'psychopathic',
'psychopathologic',
'psychopathological',
'psychopathology',
'psychopathy',
'psychophysical',
'psychophysiology',
'psychosensory',
'psychosexual',
'psychosexuality',
'psychosocial',
'psychosomatic',
'psychotherapist',
'psychotherapy',
'psychotic',
'psychotogen',
'psychotogenic',
'psychotomimetic',
'psychotoxic',
'psychotropic',
'ptarmigan',
'pterodactyl',
'ptolemaic',
'ptolemy',
'ptomain',
'ptomaine',
'ptomainic',
'pub',
'pubertal',
'puberty',
'pubescence',
'pubescent',
'pubic',
'public',
'publican',
'publication',
'publicist',
'publicity',
'publicize',
'publicized',
'publicizing',
'publicly',
'publish',
'publishable',
'published',
'publisher',
'publishing',
'puccini',
'puce',
'puck',
'pucker',
'puckerer',
'puckerier',
'puckering',
'puckery',
'puckish',
'pud',
'pudding',
'puddle',
'puddled',
'puddler',
'puddlier',
'puddliest',
'puddling',
'puddly',
'pudenda',
'pudendum',
'pudgier',
'pudgiest',
'pudgily',
'pudgy',
'pueblo',
'puerile',
'puerilely',
'puerility',
'puerperal',
'puerto',
'puff',
'puffball',
'puffed',
'puffer',
'puffery',
'puffier',
'puffiest',
'puffily',
'puffin',
'puffing',
'puffy',
'pug',
'puggish',
'puggy',
'pugilism',
'pugilist',
'pugilistic',
'pugnaciously',
'pugnacity',
'puissance',
'puissant',
'puissantly',
'puke',
'puked',
'puking',
'pukka',
'pulchritude',
'pule',
'puled',
'puler',
'puling',
'pulitzer',
'pull',
'pullback',
'pulldown',
'pulled',
'puller',
'pullet',
'pulley',
'pulling',
'pullman',
'pullout',
'pullover',
'pulmonary',
'pulmonic',
'pulp',
'pulped',
'pulper',
'pulpier',
'pulpiest',
'pulpily',
'pulping',
'pulpit',
'pulpital',
'pulpwood',
'pulpy',
'pulque',
'pulsar',
'pulsate',
'pulsation',
'pulsatory',
'pulse',
'pulsed',
'pulsejet',
'pulser',
'pulsing',
'pulverization',
'pulverize',
'pulverized',
'pulverizing',
'puma',
'pumice',
'pumiced',
'pumicer',
'pumicing',
'pummel',
'pummeled',
'pummeling',
'pummelled',
'pummelling',
'pump',
'pumped',
'pumper',
'pumpernickel',
'pumping',
'pumpkin',
'pun',
'punch',
'punched',
'puncheon',
'puncher',
'punchier',
'punchiest',
'punching',
'punchy',
'punctilio',
'punctiliously',
'punctual',
'punctuality',
'punctuate',
'punctuation',
'puncture',
'puncturing',
'pundit',
'punditic',
'punditry',
'pungency',
'pungent',
'pungently',
'punier',
'puniest',
'punily',
'punish',
'punishability',
'punishable',
'punishably',
'punished',
'punisher',
'punishing',
'punishment',
'punitive',
'punk',
'punker',
'punkest',
'punkey',
'punkie',
'punkier',
'punkin',
'punky',
'punned',
'punner',
'punnier',
'punning',
'punny',
'punster',
'punt',
'punted',
'punter',
'punting',
'punty',
'puny',
'pup',
'pupa',
'pupae',
'pupal',
'pupate',
'pupation',
'pupfish',
'pupil',
'pupilar',
'pupillary',
'puppet',
'puppeteer',
'puppetry',
'pupping',
'puppy',
'puppyish',
'purblind',
'purchasable',
'purchase',
'purchaseable',
'purchased',
'purchaser',
'purchasing',
'purdah',
'pure',
'puree',
'pureed',
'pureeing',
'purely',
'purer',
'purest',
'purgation',
'purgative',
'purgatorial',
'purgatory',
'purge',
'purger',
'purging',
'purification',
'purificatory',
'purified',
'purifier',
'purify',
'purifying',
'purim',
'purine',
'purism',
'purist',
'puristic',
'puritan',
'puritanical',
'puritanism',
'purity',
'purl',
'purled',
'purlieu',
'purling',
'purloin',
'purloined',
'purloiner',
'purloining',
'purple',
'purpled',
'purpler',
'purplest',
'purpling',
'purplish',
'purply',
'purport',
'purported',
'purporting',
'purpose',
'purposed',
'purposeful',
'purposefully',
'purposelessly',
'purposely',
'purposing',
'purposive',
'purpresture',
'purr',
'purring',
'purse',
'pursed',
'purser',
'pursier',
'pursily',
'pursing',
'purslane',
'pursuable',
'pursuance',
'pursuant',
'pursue',
'pursued',
'pursuer',
'pursuing',
'pursuit',
'pursy',
'purulence',
'purulency',
'purulent',
'purulently',
'puruloid',
'purvey',
'purveyance',
'purveyed',
'purveying',
'purveyor',
'purview',
'push',
'pushcart',
'pushed',
'pusher',
'pushier',
'pushiest',
'pushily',
'pushing',
'pushover',
'pushpin',
'pushup',
'pushy',
'pusillanimity',
'pusillanimously',
'puslike',
'pussier',
'pussiest',
'pussycat',
'pussyfoot',
'pussyfooted',
'pussyfooting',
'pustular',
'pustulation',
'pustule',
'pustuled',
'pustuliform',
'put',
'putative',
'putdown',
'putoff',
'puton',
'putout',
'putrefaction',
'putrefactive',
'putrefied',
'putrefy',
'putrefying',
'putrescence',
'putrescent',
'putrid',
'putridity',
'putridly',
'putsch',
'putt',
'putted',
'puttee',
'putter',
'putterer',
'puttering',
'puttied',
'puttier',
'putting',
'putty',
'puttying',
'puzzle',
'puzzled',
'puzzlement',
'puzzler',
'puzzling',
'pygmalionism',
'pygmoid',
'pygmy',
'pygmyish',
'pygmyism',
'pylon',
'pylori',
'pyloric',
'pyongyang',
'pyorrhea',
'pyorrhoea',
'pyramid',
'pyramidal',
'pyramiding',
'pyre',
'pyrethrin',
'pyrethrum',
'pyrex',
'pyric',
'pyrimidine',
'pyrite',
'pyritic',
'pyrogen',
'pyromania',
'pyromaniac',
'pyromaniacal',
'pyrometer',
'pyrotechnic',
'pyrotechnical',
'pyrrhic',
'pyruvic',
'pythagorean',
'python',
'pyx',
'pyxie',
'qaid',
'qatar',
'qed',
'qiana',
'qoph',
'qty',
'qua',
'quaalude',
'quack',
'quackery',
'quackier',
'quackiest',
'quacking',
'quackish',
'quackishly',
'quackism',
'quacksalver',
'quackster',
'quacky',
'quad',
'quadrangle',
'quadrangular',
'quadrant',
'quadrantal',
'quadraphonic',
'quadrat',
'quadrate',
'quadratic',
'quadrennial',
'quadrennium',
'quadric',
'quadricentennial',
'quadriennium',
'quadrigamist',
'quadrilateral',
'quadrille',
'quadrillion',
'quadrillionth',
'quadripartite',
'quadriplegia',
'quadriplegic',
'quadrivium',
'quadroon',
'quadrumvirate',
'quadruped',
'quadrupedal',
'quadruple',
'quadrupled',
'quadruplet',
'quadruplicate',
'quadruplication',
'quadrupling',
'quae',
'quaff',
'quaffed',
'quaffer',
'quaffing',
'quag',
'quagga',
'quaggier',
'quaggiest',
'quaggy',
'quagmire',
'quagmiry',
'quahaug',
'quahog',
'quai',
'quail',
'quailed',
'quailing',
'quaint',
'quainter',
'quaintest',
'quaintly',
'quake',
'quaked',
'quaker',
'quakerism',
'quakier',
'quakiest',
'quakily',
'quaking',
'quaky',
'qual',
'quale',
'qualification',
'qualified',
'qualifier',
'qualify',
'qualifying',
'qualitative',
'quality',
'qualm',
'qualmier',
'qualmiest',
'qualmish',
'qualmishly',
'qualmy',
'quam',
'quandary',
'quando',
'quant',
'quanta',
'quantal',
'quanted',
'quanti',
'quantic',
'quantified',
'quantify',
'quantifying',
'quantimeter',
'quantitative',
'quantity',
'quantize',
'quantized',
'quantizing',
'quantum',
'quarantinable',
'quarantine',
'quarantined',
'quarantining',
'quark',
'quarrel',
'quarreled',
'quarreler',
'quarreling',
'quarrelled',
'quarreller',
'quarrelling',
'quarrelsome',
'quarried',
'quarrier',
'quarry',
'quarrying',
'quart',
'quartan',
'quarte',
'quarter',
'quarterback',
'quarterdeck',
'quarterfinal',
'quarterfinalist',
'quartering',
'quarterly',
'quartermaster',
'quarterstaff',
'quartet',
'quartic',
'quartile',
'quarto',
'quartz',
'quartzite',
'quasar',
'quash',
'quashed',
'quashing',
'quasi',
'quat',
'quaternary',
'quatorze',
'quatrain',
'quatre',
'quatrefoil',
'quaver',
'quaverer',
'quavering',
'quavery',
'quay',
'quayage',
'quayside',
'que',
'quean',
'queasier',
'queasiest',
'queasily',
'queasy',
'queaziest',
'queazy',
'quebec',
'queen',
'queened',
'queening',
'queenlier',
'queenliest',
'queenly',
'queer',
'queerer',
'queerest',
'queering',
'queerish',
'queerly',
'quell',
'quelled',
'queller',
'quelling',
'quem',
'quench',
'quenchable',
'quenched',
'quencher',
'quenching',
'queried',
'querier',
'querist',
'quern',
'querulously',
'query',
'querying',
'quest',
'quested',
'quester',
'questing',
'question',
'questionability',
'questionable',
'questionably',
'questioner',
'questioning',
'questionnaire',
'quetzal',
'queue',
'queued',
'queueing',
'queuer',
'queuing',
'quey',
'quezal',
'qui',
'quia',
'quibble',
'quibbled',
'quibbler',
'quibbling',
'quiche',
'quick',
'quicken',
'quickened',
'quickening',
'quicker',
'quickest',
'quickie',
'quicklime',
'quickly',
'quicksand',
'quicksilver',
'quickstep',
'quid',
'quiddity',
'quidnunc',
'quiescence',
'quiescency',
'quiescent',
'quiet',
'quieta',
'quieted',
'quieten',
'quietened',
'quietening',
'quieter',
'quietest',
'quieti',
'quieting',
'quietism',
'quietist',
'quietly',
'quietude',
'quill',
'quilled',
'quilt',
'quilted',
'quilter',
'quilting',
'quince',
'quincunx',
'quinic',
'quinin',
'quinine',
'quinone',
'quinquina',
'quinsy',
'quint',
'quintain',
'quintal',
'quintan',
'quintar',
'quintessence',
'quintessential',
'quintet',
'quintette',
'quintic',
'quintile',
'quintillion',
'quintillionth',
'quintin',
'quintuple',
'quintupled',
'quintuplet',
'quintuplicate',
'quintupling',
'quip',
'quipping',
'quippish',
'quipster',
'quipu',
'quire',
'quiring',
'quirk',
'quirked',
'quirkier',
'quirkiest',
'quirkily',
'quirking',
'quirky',
'quirt',
'quirted',
'quisling',
'quit',
'quitclaim',
'quitclaimed',
'quitclaiming',
'quite',
'quito',
'quittance',
'quitted',
'quitter',
'quitting',
'quiver',
'quiverer',
'quivering',
'quivery',
'quixote',
'quixotic',
'quixotry',
'quiz',
'quizzed',
'quizzer',
'quizzical',
'quizzicality',
'quizzing',
'quo',
'quod',
'quoin',
'quoined',
'quoit',
'quoited',
'quondam',
'quonset',
'quorum',
'quota',
'quotable',
'quotably',
'quotation',
'quotational',
'quote',
'quoted',
'quoter',
'quoth',
'quotha',
'quotidian',
'quotient',
'quoting',
'qursh',
'qurush',
'rabbet',
'rabbeted',
'rabbeting',
'rabbi',
'rabbinate',
'rabbinic',
'rabbinical',
'rabbit',
'rabbiting',
'rabble',
'rabelaisian',
'rabic',
'rabid',
'rabidity',
'rabidly',
'raccoon',
'race',
'racecourse',
'raced',
'racehorse',
'raceme',
'racemose',
'racer',
'racetrack',
'raceway',
'rachitic',
'racial',
'racialism',
'racialist',
'racialistic',
'racier',
'raciest',
'racily',
'racing',
'racism',
'racist',
'rack',
'racker',
'racket',
'racketed',
'racketeer',
'racketeering',
'racketier',
'racketiest',
'racketing',
'rackety',
'racking',
'raconteur',
'racoon',
'racquet',
'racquetball',
'racy',
'rad',
'radar',
'radarman',
'radarscope',
'raddle',
'raddled',
'raddling',
'radial',
'radian',
'radiance',
'radiancy',
'radiant',
'radiantly',
'radiate',
'radiation',
'radiative',
'radical',
'radicalism',
'radicalization',
'radicalize',
'radicalized',
'radicalizing',
'radio',
'radioactive',
'radioactivity',
'radiobiologic',
'radiobiology',
'radiobroadcast',
'radiobroadcaster',
'radiocarbon',
'radiocast',
'radiocaster',
'radiochemical',
'radiochemist',
'radiochemistry',
'radioed',
'radioelement',
'radiogenic',
'radiogram',
'radiograph',
'radiographer',
'radiographic',
'radiography',
'radioing',
'radioisotope',
'radioisotopic',
'radiologic',
'radiological',
'radiologist',
'radiology',
'radiolucency',
'radioman',
'radiometer',
'radiometric',
'radiometry',
'radiophone',
'radioscopic',
'radioscopical',
'radioscopy',
'radiosensitive',
'radiosensitivity',
'radiosonde',
'radiotelegraph',
'radiotelegraphic',
'radiotelegraphy',
'radiotelemetric',
'radiotelemetry',
'radiotelephone',
'radiotelephonic',
'radiotelephony',
'radiotherapist',
'radiotherapy',
'radish',
'radium',
'radix',
'radome',
'radon',
'raffia',
'raffish',
'raffishly',
'raffle',
'raffled',
'raffler',
'raffling',
'raft',
'raftage',
'rafted',
'rafter',
'rafting',
'raftsman',
'rag',
'raga',
'ragamuffin',
'ragbag',
'rage',
'raggeder',
'raggedest',
'raggedy',
'ragging',
'raggle',
'raggy',
'raging',
'raglan',
'ragman',
'ragout',
'ragouting',
'ragtag',
'ragtime',
'ragweed',
'ragwort',
'rah',
'raid',
'raider',
'raiding',
'rail',
'railbird',
'railed',
'railer',
'railhead',
'railing',
'raillery',
'railroad',
'railroader',
'railroading',
'railside',
'railway',
'raiment',
'rain',
'rainbow',
'raincoat',
'raindrop',
'rained',
'rainfall',
'rainier',
'rainiest',
'rainily',
'raining',
'rainmaker',
'rainmaking',
'rainout',
'rainproof',
'rainstorm',
'rainwater',
'rainwear',
'rainy',
'raisable',
'raise',
'raised',
'raiser',
'raisin',
'raising',
'raisiny',
'raison',
'raja',
'rajah',
'rake',
'raked',
'rakehell',
'rakeoff',
'raker',
'raking',
'rakish',
'rakishly',
'rallied',
'rallier',
'rallye',
'rallying',
'rallyist',
'ralph',
'ram',
'ramble',
'rambled',
'rambler',
'rambling',
'ramekin',
'ramie',
'ramification',
'ramified',
'ramify',
'ramifying',
'ramjet',
'rammed',
'rammer',
'ramming',
'rammish',
'ramp',
'rampage',
'rampager',
'rampaging',
'rampancy',
'rampant',
'rampart',
'ramparted',
'ramparting',
'ramped',
'ramping',
'rampion',
'ramrod',
'ramshackle',
'ramshorn',
'ran',
'ranch',
'ranched',
'rancher',
'ranchero',
'ranching',
'ranchman',
'rancho',
'rancid',
'rancidification',
'rancidified',
'rancidifying',
'rancidity',
'rancor',
'rancorously',
'rancour',
'rand',
'randier',
'randiest',
'random',
'randomization',
'randomize',
'randomized',
'randomizing',
'randomly',
'randy',
'ranee',
'rang',
'range',
'ranger',
'rangier',
'rangiest',
'ranging',
'rangoon',
'rangy',
'rani',
'rank',
'ranked',
'ranker',
'rankest',
'ranking',
'rankish',
'rankle',
'rankled',
'rankling',
'rankly',
'ransack',
'ransacker',
'ransacking',
'ransom',
'ransomable',
'ransomed',
'ransomer',
'ransoming',
'rant',
'ranted',
'ranter',
'ranting',
'rap',
'rapaciously',
'rapacity',
'rape',
'raped',
'raper',
'rapeseed',
'raphael',
'rapid',
'rapider',
'rapidest',
'rapidity',
'rapidly',
'rapier',
'rapine',
'raping',
'rapist',
'rappel',
'rappelled',
'rappelling',
'rapper',
'rapping',
'rapport',
'rapporteur',
'rapprochement',
'rapscallion',
'rapt',
'rapter',
'raptest',
'raptly',
'raptorial',
'rapture',
'rapturing',
'rapturously',
'rara',
'rare',
'rarebit',
'rarefaction',
'rarefied',
'rarefier',
'rarefy',
'rarefying',
'rarely',
'rarer',
'rarest',
'rarified',
'rarify',
'rarifying',
'raring',
'rarity',
'rascal',
'rascality',
'rase',
'rased',
'raser',
'rash',
'rasher',
'rashest',
'rashly',
'rasing',
'rasp',
'raspberry',
'rasped',
'rasper',
'raspier',
'raspiest',
'rasping',
'raspish',
'raspy',
'rassle',
'rassled',
'rassling',
'rastafarian',
'raster',
'rat',
'rata',
'ratability',
'ratable',
'ratably',
'ratatat',
'ratch',
'ratchet',
'rate',
'rateable',
'rateably',
'ratepayer',
'rater',
'ratfink',
'ratfish',
'rather',
'rathole',
'rathskeller',
'ratification',
'ratified',
'ratifier',
'ratify',
'ratifying',
'ratio',
'ratiocinate',
'ratiocination',
'ratiocinative',
'ration',
'rational',
'rationale',
'rationalism',
'rationalist',
'rationalistic',
'rationality',
'rationalization',
'rationalize',
'rationalized',
'rationalizer',
'rationalizing',
'rationing',
'ratline',
'ratsbane',
'rattail',
'rattan',
'ratted',
'ratter',
'rattier',
'rattiest',
'ratting',
'rattish',
'rattle',
'rattlebrain',
'rattlebrained',
'rattled',
'rattler',
'rattlesnake',
'rattletrap',
'rattling',
'rattly',
'rattooning',
'rattrap',
'ratty',
'raucously',
'raunchier',
'raunchiest',
'raunchy',
'rauwolfia',
'ravage',
'ravager',
'ravaging',
'rave',
'raved',
'ravel',
'raveled',
'raveler',
'raveling',
'ravelled',
'raveller',
'ravelling',
'ravelly',
'raven',
'ravened',
'ravener',
'ravening',
'ravenously',
'raver',
'ravine',
'ravined',
'raving',
'ravioli',
'ravish',
'ravished',
'ravisher',
'ravishing',
'ravishment',
'raw',
'rawer',
'rawest',
'rawhide',
'rawhiding',
'rawish',
'rawly',
'ray',
'rayed',
'raying',
'rayon',
'raze',
'razed',
'razee',
'razer',
'razing',
'razor',
'razorback',
'razorbill',
'razoring',
'razz',
'razzed',
'razzing',
'razzmatazz',
'reabandon',
'reabandoning',
'reabsorb',
'reabsorbed',
'reabsorbing',
'reabsorption',
'reaccede',
'reacceding',
'reaccent',
'reaccented',
'reaccenting',
'reaccept',
'reaccepted',
'reaccepting',
'reaccession',
'reacclimate',
'reaccommodate',
'reaccompanied',
'reaccompany',
'reaccompanying',
'reaccredit',
'reaccredited',
'reaccrediting',
'reaccuse',
'reaccused',
'reaccusing',
'reaccustom',
'reaccustomed',
'reaccustoming',
'reach',
'reachable',
'reached',
'reacher',
'reaching',
'reacquaint',
'reacquaintance',
'reacquainted',
'reacquainting',
'reacquire',
'reacquiring',
'reacquisition',
'react',
'reactance',
'reactant',
'reacted',
'reacting',
'reaction',
'reactionary',
'reactivate',
'reactivation',
'reactive',
'reactivity',
'read',
'readability',
'readable',
'readably',
'readapt',
'readaptation',
'readapted',
'readapting',
'readd',
'readdicted',
'readdressed',
'readdressing',
'reader',
'readership',
'readied',
'readier',
'readiest',
'readily',
'reading',
'readjourn',
'readjourned',
'readjourning',
'readjournment',
'readjust',
'readjustable',
'readjusted',
'readjusting',
'readjustment',
'readmission',
'readmit',
'readmittance',
'readmitted',
'readmitting',
'readopt',
'readopted',
'readopting',
'readout',
'ready',
'readying',
'reaffirm',
'reaffirmation',
'reaffirmed',
'reaffirming',
'reagan',
'reagent',
'real',
'realer',
'realest',
'realign',
'realigned',
'realigning',
'realignment',
'realise',
'realising',
'realism',
'realist',
'realistic',
'reality',
'realizability',
'realizable',
'realization',
'realize',
'realized',
'realizer',
'realizing',
'reallocate',
'reallocation',
'reallotment',
'reallotting',
'realm',
'realpolitik',
'realty',
'ream',
'reamed',
'reamer',
'reaming',
'reanalyze',
'reanalyzed',
'reanalyzing',
'reanimate',
'reanimation',
'reannex',
'reannexed',
'reannexing',
'reap',
'reapable',
'reaped',
'reaper',
'reaping',
'reappear',
'reappearance',
'reappearing',
'reapplication',
'reapplied',
'reapplier',
'reapply',
'reapplying',
'reappoint',
'reappointed',
'reappointing',
'reappointment',
'reapportion',
'reapportioning',
'reapportionment',
'reappraisal',
'reappraise',
'reappraised',
'reappraisement',
'reappraiser',
'reappraising',
'reappropriation',
'rear',
'rearer',
'reargue',
'reargued',
'rearguing',
'rearing',
'rearm',
'rearmament',
'rearmed',
'rearming',
'rearmost',
'rearousal',
'rearouse',
'rearoused',
'rearousing',
'rearrange',
'rearrangement',
'rearranging',
'rearrest',
'rearrested',
'rearresting',
'rearward',
'reascend',
'reascending',
'reascent',
'reason',
'reasonability',
'reasonable',
'reasonably',
'reasoner',
'reasoning',
'reassemble',
'reassembled',
'reassembling',
'reassembly',
'reassert',
'reasserted',
'reasserting',
'reassertion',
'reassessed',
'reassessing',
'reassessment',
'reassign',
'reassigned',
'reassigning',
'reassignment',
'reassimilate',
'reassimilation',
'reassociation',
'reassort',
'reassorted',
'reassorting',
'reassortment',
'reassume',
'reassumed',
'reassuming',
'reassumption',
'reassurance',
'reassure',
'reassuring',
'reattach',
'reattached',
'reattaching',
'reattachment',
'reattain',
'reattained',
'reattaining',
'reattainment',
'reattempt',
'reattempted',
'reattempting',
'reave',
'reaved',
'reaver',
'reavow',
'reavowed',
'reavowing',
'reawake',
'reawaked',
'reawaken',
'reawakened',
'reawakening',
'reawaking',
'reawoke',
'reb',
'rebait',
'rebaptism',
'rebaptize',
'rebaptized',
'rebaptizing',
'rebate',
'rebater',
'rebbe',
'rebec',
'rebeck',
'rebel',
'rebelled',
'rebelling',
'rebellion',
'rebelliously',
'rebid',
'rebidding',
'rebill',
'rebilled',
'rebilling',
'rebind',
'rebinding',
'rebirth',
'reblooming',
'reboarding',
'reboil',
'reboiled',
'reboiling',
'reboot',
'rebop',
'reborn',
'rebound',
'rebounding',
'rebroadcast',
'rebroadcasted',
'rebroadcasting',
'rebroaden',
'rebroadened',
'rebroadening',
'rebuff',
'rebuffed',
'rebuffing',
'rebuild',
'rebuilding',
'rebuilt',
'rebuke',
'rebuked',
'rebuker',
'rebuking',
'reburial',
'reburied',
'rebury',
'reburying',
'rebut',
'rebuttable',
'rebuttably',
'rebuttal',
'rebutted',
'rebutter',
'rebutting',
'rebutton',
'rebuttoning',
'rec',
'recalcitrance',
'recalcitrancy',
'recalcitrant',
'recalculate',
'recalculation',
'recall',
'recallable',
'recalled',
'recaller',
'recalling',
'recane',
'recaning',
'recant',
'recantation',
'recanted',
'recanter',
'recanting',
'recap',
'recapitalize',
'recapitalized',
'recapitalizing',
'recapitulate',
'recapitulation',
'recapitulative',
'recappable',
'recapping',
'recapture',
'recapturing',
'recast',
'recasting',
'recd',
'recede',
'receding',
'receipt',
'receipted',
'receipting',
'receivability',
'receivable',
'receive',
'received',
'receiver',
'receivership',
'receiving',
'recelebrate',
'recency',
'recension',
'recent',
'recenter',
'recentest',
'recently',
'recept',
'receptacle',
'reception',
'receptionist',
'receptive',
'receptivity',
'recessed',
'recessing',
'recession',
'recessional',
'recessionary',
'recessive',
'recharge',
'rechargeable',
'recharging',
'rechart',
'recharted',
'recharter',
'rechartering',
'recharting',
'recheck',
'rechecking',
'recherche',
'rechristen',
'rechristened',
'rechristening',
'recidivism',
'recidivist',
'recidivistic',
'recipe',
'recipient',
'reciprocal',
'reciprocality',
'reciprocate',
'reciprocation',
'reciprocative',
'reciprocatory',
'reciprocity',
'recirculate',
'recirculation',
'recital',
'recitalist',
'recitation',
'recitative',
'recite',
'recited',
'reciter',
'reciting',
'recklessly',
'reckon',
'reckoner',
'reckoning',
'reclad',
'reclaim',
'reclaimable',
'reclaimant',
'reclaimed',
'reclaiming',
'reclamation',
'reclassification',
'reclassified',
'reclassify',
'reclassifying',
'reclean',
'recleaned',
'recleaning',
'recline',
'reclined',
'recliner',
'reclining',
'reclothe',
'reclothed',
'reclothing',
'recluse',
'reclusive',
'recognition',
'recognitive',
'recognitory',
'recognizability',
'recognizable',
'recognizably',
'recognizance',
'recognize',
'recognized',
'recognizer',
'recognizing',
'recoil',
'recoiled',
'recoiler',
'recoiling',
'recoin',
'recoinage',
'recoined',
'recoining',
'recollect',
'recollected',
'recollecting',
'recollection',
'recolonization',
'recolonize',
'recolonized',
'recolonizing',
'recolor',
'recoloration',
'recoloring',
'recomb',
'recombed',
'recombinant',
'recombination',
'recombine',
'recombined',
'recombing',
'recombining',
'recommence',
'recommenced',
'recommencement',
'recommencing',
'recommend',
'recommendable',
'recommendation',
'recommendatory',
'recommender',
'recommending',
'recommission',
'recommissioning',
'recommit',
'recommitted',
'recommitting',
'recomparison',
'recompensable',
'recompensation',
'recompensatory',
'recompense',
'recompensed',
'recompenser',
'recompensing',
'recompensive',
'recompilation',
'recompiled',
'recompiling',
'recompose',
'recomposed',
'recomposing',
'recomposition',
'recompound',
'recompounding',
'recompression',
'recompute',
'recon',
'reconcentrate',
'reconcentration',
'reconcilability',
'reconcilable',
'reconcilably',
'reconcile',
'reconciled',
'reconcilement',
'reconciler',
'reconciliate',
'reconciliation',
'reconciliatory',
'reconciling',
'recondensation',
'recondense',
'recondensed',
'recondensing',
'recondite',
'reconditely',
'recondition',
'reconditioning',
'reconfigurable',
'reconfiguration',
'reconfigure',
'reconfirm',
'reconfirmation',
'reconfirmed',
'reconfirming',
'reconfiscation',
'reconnaissance',
'reconnect',
'reconnected',
'reconnecting',
'reconnoiter',
'reconnoitering',
'reconquer',
'reconquering',
'reconquest',
'reconsecrate',
'reconsecration',
'reconsider',
'reconsideration',
'reconsidering',
'reconsign',
'reconsigned',
'reconsigning',
'reconsignment',
'reconsolidate',
'reconsolidation',
'reconstitute',
'reconstituted',
'reconstituting',
'reconstitution',
'reconstruct',
'reconstructed',
'reconstructible',
'reconstructing',
'reconstruction',
'reconstructive',
'recontamination',
'recontest',
'recontested',
'recontesting',
'recontinuance',
'recontract',
'recontracted',
'recontracting',
'recontrolling',
'reconvene',
'reconvened',
'reconvening',
'reconversion',
'reconvert',
'reconverted',
'reconverting',
'reconvey',
'reconveyance',
'reconveyed',
'reconveying',
'reconviction',
'recook',
'recooked',
'recooking',
'recopied',
'recopy',
'recopying',
'record',
'recordable',
'recorder',
'recordership',
'recording',
'recordist',
'recount',
'recounted',
'recounting',
'recoup',
'recouped',
'recouping',
'recourse',
'recover',
'recoverability',
'recoverable',
'recoveree',
'recoverer',
'recovering',
'recovery',
'recrate',
'recreance',
'recreancy',
'recreant',
'recreantly',
'recreate',
'recreation',
'recreational',
'recreative',
'recriminate',
'recrimination',
'recriminative',
'recriminatory',
'recrossed',
'recrossing',
'recrown',
'recrowned',
'recrowning',
'recrudesce',
'recrudesced',
'recrudescence',
'recrudescent',
'recrudescing',
'recruit',
'recruited',
'recruiter',
'recruiting',
'recruitment',
'recrystallize',
'recrystallized',
'recrystallizing',
'recta',
'rectal',
'rectangle',
'rectangular',
'rectangularity',
'rectangularly',
'recti',
'rectifiable',
'rectification',
'rectified',
'rectifier',
'rectify',
'rectifying',
'rectilinear',
'rectitude',
'recto',
'rectorate',
'rectorial',
'rectory',
'rectum',
'recumbent',
'recuperate',
'recuperation',
'recuperative',
'recur',
'recurrence',
'recurrent',
'recurrently',
'recurring',
'recurve',
'recurving',
'recuse',
'recused',
'recusing',
'recut',
'recutting',
'recyclability',
'recyclable',
'recycle',
'recycled',
'recycling',
'redact',
'redacted',
'redacting',
'redactional',
'redbird',
'redbreast',
'redbud',
'redbug',
'redcap',
'redcoat',
'redden',
'reddened',
'reddening',
'redder',
'reddest',
'reddish',
'reddle',
'redecorate',
'redecoration',
'rededicate',
'rededication',
'redeem',
'redeemability',
'redeemable',
'redeemed',
'redeemer',
'redeeming',
'redefine',
'redefined',
'redefining',
'redefinition',
'redeliberation',
'redeliver',
'redelivering',
'redemand',
'redemanding',
'redemonstrate',
'redemonstration',
'redemptible',
'redemption',
'redemptional',
'redemptioner',
'redemptive',
'redemptory',
'redeploy',
'redeployed',
'redeploying',
'redeposit',
'redeposited',
'redepositing',
'redescribe',
'redescribed',
'redescribing',
'redesign',
'redesigned',
'redesigning',
'redetermination',
'redetermine',
'redetermined',
'redetermining',
'redevelop',
'redeveloped',
'redeveloper',
'redeveloping',
'redevelopment',
'redeye',
'redfin',
'redhead',
'redid',
'redigest',
'redigested',
'redigesting',
'redigestion',
'reding',
'redip',
'redirect',
'redirected',
'redirecting',
'redirection',
'rediscount',
'rediscounted',
'rediscounting',
'rediscover',
'rediscovering',
'rediscovery',
'redissolve',
'redissolved',
'redissolving',
'redistill',
'redistilled',
'redistilling',
'redistribute',
'redistributed',
'redistributing',
'redistribution',
'redistrict',
'redistricted',
'redistricting',
'redivide',
'redividing',
'redline',
'redlined',
'redlining',
'redneck',
'redo',
'redoing',
'redolence',
'redolency',
'redolent',
'redolently',
'redone',
'redouble',
'redoubled',
'redoubling',
'redoubt',
'redoubtable',
'redoubtably',
'redound',
'redounding',
'redout',
'redox',
'redraft',
'redrafted',
'redrafting',
'redraw',
'redrawing',
'redrawn',
'redressed',
'redresser',
'redressing',
'redressment',
'redrew',
'redried',
'redrill',
'redrilled',
'redrilling',
'redry',
'redrying',
'redskin',
'reduce',
'reduced',
'reducer',
'reducibility',
'reducible',
'reducibly',
'reducing',
'reductio',
'reduction',
'reductional',
'reductionism',
'reductionist',
'reductive',
'redundance',
'redundancy',
'redundant',
'redundantly',
'reduplicate',
'reduplication',
'reduplicative',
'redux',
'redwing',
'redwood',
'redye',
'redyed',
'redyeing',
'reecho',
'reechoed',
'reechoing',
'reed',
'reedier',
'reediest',
'reeding',
'reedit',
'reedited',
'reediting',
'reeducate',
'reeducation',
'reedy',
'reef',
'reefed',
'reefer',
'reefier',
'reefing',
'reefy',
'reek',
'reeked',
'reeker',
'reekier',
'reeking',
'reeky',
'reel',
'reelect',
'reelected',
'reelecting',
'reelection',
'reeled',
'reeler',
'reeling',
'reembark',
'reembarkation',
'reembarked',
'reembarking',
'reembodied',
'reembody',
'reembodying',
'reemerge',
'reemergence',
'reemerging',
'reemphasize',
'reemphasized',
'reemphasizing',
'reemploy',
'reemployed',
'reemploying',
'reemployment',
'reenact',
'reenacted',
'reenacting',
'reenactment',
'reenclose',
'reenclosed',
'reenclosing',
'reencounter',
'reencountering',
'reendow',
'reendowed',
'reendowing',
'reenforce',
'reenforced',
'reenforcing',
'reengage',
'reengaging',
'reenjoy',
'reenjoyed',
'reenjoying',
'reenlarge',
'reenlargement',
'reenlarging',
'reenlighted',
'reenlighten',
'reenlightened',
'reenlightening',
'reenlist',
'reenlisted',
'reenlisting',
'reenlistment',
'reenslave',
'reenslaved',
'reenslaving',
'reenter',
'reentering',
'reentrance',
'reentrant',
'reentry',
'reenunciation',
'reequip',
'reequipping',
'reerect',
'reerected',
'reerecting',
'reestablish',
'reestablished',
'reestablishing',
'reestablishment',
'reevaluate',
'reevaluation',
'reeve',
'reeved',
'reeving',
'reexamination',
'reexamine',
'reexamined',
'reexamining',
'reexchange',
'reexchanging',
'reexhibit',
'reexhibited',
'reexhibiting',
'reexperience',
'reexperienced',
'reexperiencing',
'reexport',
'reexported',
'reexporting',
'reexpressed',
'reexpressing',
'reexpression',
'ref',
'refashion',
'refashioning',
'refasten',
'refastened',
'refastening',
'refection',
'refectory',
'refed',
'refer',
'referable',
'referee',
'refereed',
'refereeing',
'reference',
'referenced',
'referencing',
'referenda',
'referendum',
'referent',
'referral',
'referrer',
'referring',
'reffed',
'reffing',
'refigure',
'refiguring',
'refile',
'refiled',
'refiling',
'refill',
'refillable',
'refilled',
'refilling',
'refilm',
'refilmed',
'refilming',
'refilter',
'refiltering',
'refinance',
'refinanced',
'refinancing',
'refine',
'refined',
'refinement',
'refiner',
'refinery',
'refining',
'refinish',
'refinished',
'refinishing',
'refire',
'refiring',
'refit',
'refitted',
'refitting',
'refix',
'reflect',
'reflected',
'reflecting',
'reflection',
'reflective',
'reflex',
'reflexed',
'reflexive',
'reflexologist',
'reflexology',
'reflow',
'reflowed',
'reflower',
'reflowering',
'reflowing',
'reflux',
'refly',
'refocused',
'refocusing',
'refocussed',
'refocussing',
'refold',
'refolding',
'reforest',
'reforestation',
'reforested',
'reforesting',
'reforge',
'reforging',
'reform',
'reformability',
'reformable',
'reformat',
'reformation',
'reformational',
'reformative',
'reformatory',
'reformatted',
'reformatting',
'reformed',
'reformer',
'reforming',
'reformulate',
'reformulation',
'refortified',
'refortify',
'refortifying',
'refract',
'refracted',
'refracting',
'refraction',
'refractionist',
'refractive',
'refractivity',
'refractometer',
'refractometry',
'refractorily',
'refractory',
'refracture',
'refracturing',
'refrain',
'refrained',
'refraining',
'refrainment',
'reframe',
'reframed',
'reframing',
'refrangibility',
'refreeze',
'refreezing',
'refresh',
'refreshed',
'refresher',
'refreshing',
'refreshment',
'refried',
'refrigerant',
'refrigerate',
'refrigeration',
'refroze',
'refrozen',
'refry',
'refrying',
'reft',
'refuel',
'refueled',
'refueling',
'refuelled',
'refuelling',
'refuge',
'refugee',
'refuging',
'refulgence',
'refulgent',
'refulgently',
'refund',
'refundable',
'refunder',
'refunding',
'refurbish',
'refurbished',
'refurbishing',
'refurbishment',
'refurnish',
'refurnished',
'refurnishing',
'refusal',
'refuse',
'refused',
'refuser',
'refusing',
'refutability',
'refutable',
'refutably',
'refutation',
'refutatory',
'refute',
'refuted',
'refuter',
'refuting',
'reg',
'regain',
'regained',
'regainer',
'regaining',
'regal',
'regale',
'regaled',
'regalement',
'regalia',
'regaling',
'regality',
'regard',
'regardful',
'regarding',
'regather',
'regathering',
'regatta',
'regauge',
'regauging',
'regear',
'regearing',
'regency',
'regeneracy',
'regenerate',
'regeneration',
'regenerative',
'regent',
'regerminate',
'regermination',
'regerminative',
'reggae',
'regia',
'regicidal',
'regicide',
'regild',
'regilding',
'regilt',
'regime',
'regiment',
'regimental',
'regimentation',
'regimented',
'regimenting',
'regina',
'reginal',
'region',
'regional',
'regionalism',
'regionalist',
'regionalistic',
'register',
'registerable',
'registerer',
'registering',
'registership',
'registrability',
'registrable',
'registrant',
'registrar',
'registrarship',
'registration',
'registrational',
'registry',
'reglaze',
'reglazed',
'reglazing',
'reglossed',
'reglossing',
'reglue',
'reglued',
'regluing',
'regnal',
'regnancy',
'regnant',
'regnum',
'regrade',
'regrading',
'regrafting',
'regranting',
'regressed',
'regressing',
'regression',
'regressive',
'regressor',
'regret',
'regretful',
'regretfully',
'regrettable',
'regrettably',
'regretted',
'regretter',
'regretting',
'regrew',
'regrooved',
'regroup',
'regrouped',
'regrouping',
'regrow',
'regrowing',
'regrown',
'regrowth',
'regulable',
'regular',
'regularity',
'regularization',
'regularize',
'regularized',
'regularizer',
'regularizing',
'regularly',
'regulatable',
'regulate',
'regulation',
'regulative',
'regulatory',
'regurgitant',
'regurgitate',
'regurgitation',
'regurgitative',
'rehabilitant',
'rehabilitate',
'rehabilitation',
'rehabilitative',
'rehabilitee',
'rehandle',
'rehandled',
'rehandling',
'rehang',
'rehanging',
'reharden',
'rehardened',
'rehardening',
'reharmonization',
'rehash',
'rehashed',
'rehashing',
'rehear',
'reheard',
'rehearing',
'rehearsal',
'rehearse',
'rehearsed',
'rehearser',
'rehearsing',
'reheat',
'reheater',
'reheel',
'reheeled',
'reheeling',
'rehem',
'rehemmed',
'rehemming',
'rehinge',
'rehinging',
'rehire',
'rehiring',
'rehung',
'rehydrate',
'rehydration',
'reich',
'reified',
'reifier',
'reify',
'reifying',
'reign',
'reigned',
'reigning',
'reignite',
'reignited',
'reigniting',
'reimbursable',
'reimburse',
'reimburseable',
'reimbursed',
'reimbursement',
'reimbursing',
'reimported',
'reimpose',
'reimposed',
'reimposing',
'reimprison',
'reimprisoning',
'rein',
'reincarnate',
'reincarnation',
'reincarnationist',
'reinciting',
'reincorporate',
'reincur',
'reincurring',
'reindeer',
'reindexed',
'reinduce',
'reinduced',
'reinducing',
'reinduct',
'reinducted',
'reinducting',
'reinduction',
'reined',
'reinfect',
'reinfected',
'reinfecting',
'reinfection',
'reinflame',
'reinflamed',
'reinflaming',
'reinforce',
'reinforced',
'reinforcement',
'reinforcer',
'reinforcing',
'reinform',
'reinformed',
'reinforming',
'reinfuse',
'reinfused',
'reinfusing',
'reinfusion',
'reining',
'reinjuring',
'reinoculate',
'reinoculation',
'reinscribe',
'reinscribed',
'reinscribing',
'reinsert',
'reinserted',
'reinserting',
'reinsertion',
'reinsman',
'reinspect',
'reinspected',
'reinspecting',
'reinspection',
'reinstall',
'reinstallation',
'reinstalled',
'reinstalling',
'reinstallment',
'reinstate',
'reinstatement',
'reinstitution',
'reinstruct',
'reinstructed',
'reinstructing',
'reinsure',
'reinsuring',
'reintegrate',
'reintegration',
'reinter',
'reinterpret',
'reinterpretation',
'reinterpreted',
'reinterpreting',
'reinterring',
'reinterrogate',
'reinterrogation',
'reintrench',
'reintrenched',
'reintrenching',
'reintrenchment',
'reintroduce',
'reintroduced',
'reintroducing',
'reintroduction',
'reinvent',
'reinvented',
'reinventing',
'reinvest',
'reinvested',
'reinvestigate',
'reinvestigation',
'reinvesting',
'reinvestment',
'reinvigorate',
'reinvigoration',
'reinvitation',
'reinvite',
'reinvited',
'reinviting',
'reinvoke',
'reinvoked',
'reinvoking',
'reinvolve',
'reinvolved',
'reinvolvement',
'reinvolving',
'reissue',
'reissued',
'reissuer',
'reissuing',
'reiterate',
'reiteration',
'reiterative',
'reiving',
'reject',
'rejectable',
'rejected',
'rejectee',
'rejecter',
'rejecting',
'rejection',
'rejoice',
'rejoiced',
'rejoicer',
'rejoicing',
'rejoin',
'rejoinder',
'rejoined',
'rejoining',
'rejudge',
'rejudging',
'rejuvenate',
'rejuvenation',
'rejuvenescence',
'rejuvenescent',
'rekey',
'rekeyed',
'rekeying',
'rekindle',
'rekindled',
'rekindling',
'relabel',
'relabeled',
'relabeling',
'relabelled',
'relabelling',
'relapse',
'relapsed',
'relapser',
'relapsing',
'relatable',
'relate',
'relater',
'relation',
'relational',
'relatione',
'relationship',
'relative',
'relativistic',
'relativity',
'relaunder',
'relaundering',
'relax',
'relaxant',
'relaxation',
'relaxed',
'relaxer',
'relaxing',
'relay',
'relayed',
'relaying',
'relearn',
'relearned',
'relearning',
'relearnt',
'releasability',
'releasable',
'release',
'released',
'releaser',
'releasibility',
'releasible',
'releasing',
'relegable',
'relegate',
'relegation',
'relent',
'relented',
'relenting',
'relentlessly',
'relet',
'reletter',
'relettering',
'reletting',
'relevance',
'relevancy',
'relevant',
'relevantly',
'reliability',
'reliable',
'reliably',
'reliance',
'reliant',
'reliantly',
'relic',
'relicense',
'relicensed',
'relicensing',
'relict',
'relied',
'relief',
'relieve',
'relieved',
'reliever',
'relieving',
'relight',
'relighted',
'relighting',
'religion',
'religionist',
'religiosity',
'religiously',
'reline',
'relined',
'relining',
'relinked',
'relinquish',
'relinquished',
'relinquisher',
'relinquishing',
'relinquishment',
'reliquary',
'relique',
'reliquidate',
'reliquidation',
'relish',
'relishable',
'relished',
'relishing',
'relist',
'relisted',
'relisting',
'relit',
'relive',
'relived',
'reliving',
'reload',
'reloader',
'reloading',
'reloan',
'reloaned',
'reloaning',
'relocate',
'relocation',
'reluctance',
'reluctancy',
'reluctant',
'reluctantly',
'rely',
'relying',
'rem',
'remade',
'remail',
'remailed',
'remailing',
'remain',
'remainder',
'remaindering',
'remained',
'remaining',
'remake',
'remaking',
'reman',
'remand',
'remanding',
'remandment',
'remanufacture',
'remanufacturing',
'remap',
'remark',
'remarkable',
'remarkably',
'remarked',
'remarker',
'remarking',
'remarque',
'remarriage',
'remarried',
'remarry',
'remarrying',
'rematch',
'rematched',
'rematching',
'rembrandt',
'remeasure',
'remeasurement',
'remeasuring',
'remediable',
'remedial',
'remedied',
'remedy',
'remedying',
'remelt',
'remelted',
'remelting',
'remember',
'rememberable',
'rememberer',
'remembering',
'remembrance',
'remend',
'remending',
'remet',
'remigrate',
'remigration',
'remilitarization',
'remilitarize',
'remilitarized',
'remilitarizing',
'remind',
'reminder',
'reminding',
'reminisce',
'reminisced',
'reminiscence',
'reminiscent',
'reminiscently',
'reminiscing',
'remission',
'remissly',
'remit',
'remittable',
'remittal',
'remittance',
'remitted',
'remittee',
'remittent',
'remittently',
'remitter',
'remitting',
'remix',
'remixed',
'remixing',
'remnant',
'remodel',
'remodeled',
'remodeler',
'remodeling',
'remodelled',
'remodelling',
'remodification',
'remodified',
'remodify',
'remodifying',
'remold',
'remolding',
'remonetization',
'remonetize',
'remonetized',
'remonetizing',
'remonstrance',
'remonstrant',
'remonstrantly',
'remonstrate',
'remonstration',
'remonstrative',
'remora',
'remorse',
'remorseful',
'remorsefully',
'remorselessly',
'remortgage',
'remortgaging',
'remote',
'remotely',
'remoter',
'remotest',
'remount',
'remounted',
'remounting',
'removable',
'removal',
'remove',
'removed',
'remover',
'removing',
'remunerate',
'remuneration',
'remunerative',
'remuneratory',
'renaissance',
'renal',
'rename',
'renamed',
'renaming',
'renascence',
'renascent',
'rencounter',
'rend',
'render',
'renderer',
'rendering',
'rendezvoused',
'rendezvousing',
'rending',
'rendition',
'renegade',
'renegading',
'renege',
'reneger',
'reneging',
'renegotiable',
'renegotiate',
'renegotiation',
'renew',
'renewability',
'renewable',
'renewal',
'renewed',
'renewer',
'renewing',
'renig',
'rennet',
'rennin',
'reno',
'renoir',
'renominate',
'renomination',
'renotification',
'renotified',
'renotify',
'renotifying',
'renounce',
'renounceable',
'renounced',
'renouncement',
'renouncer',
'renouncing',
'renovate',
'renovation',
'renown',
'renowned',
'rent',
'rentability',
'rentable',
'rentage',
'rental',
'rented',
'renter',
'renting',
'renumber',
'renumbering',
'renunciation',
'renunciatory',
'reobtain',
'reobtainable',
'reobtained',
'reobtaining',
'reoccupation',
'reoccupied',
'reoccupy',
'reoccupying',
'reoccur',
'reoccurrence',
'reoccurring',
'reoil',
'reopen',
'reopened',
'reopener',
'reopening',
'reordain',
'reorder',
'reordering',
'reorganization',
'reorganize',
'reorganized',
'reorganizer',
'reorganizing',
'reorient',
'reorientation',
'reoriented',
'reorienting',
'rep',
'repacified',
'repacify',
'repacifying',
'repack',
'repackage',
'repackaging',
'repacking',
'repaginate',
'repagination',
'repaid',
'repaint',
'repainted',
'repainting',
'repair',
'repairable',
'repairer',
'repairing',
'repairman',
'repapering',
'reparable',
'reparation',
'reparative',
'reparatory',
'repartee',
'repartition',
'repassed',
'repassing',
'repast',
'repasted',
'repasting',
'repatriate',
'repatriation',
'repave',
'repaved',
'repaving',
'repay',
'repayable',
'repaying',
'repayment',
'repeal',
'repealable',
'repealed',
'repealer',
'repealing',
'repeat',
'repeatability',
'repeatable',
'repeater',
'repel',
'repellant',
'repelled',
'repellency',
'repellent',
'repellently',
'repeller',
'repelling',
'repent',
'repentance',
'repentant',
'repentantly',
'repented',
'repenter',
'repenting',
'repeople',
'repeopled',
'repeopling',
'repercussion',
'repercussive',
'repertoire',
'repertorial',
'repertory',
'repetition',
'repetitiously',
'repetitive',
'rephrase',
'rephrased',
'rephrasing',
'repin',
'repine',
'repined',
'repiner',
'repining',
'repinned',
'repinning',
'replace',
'replaceable',
'replaced',
'replacement',
'replacer',
'replacing',
'replan',
'replanned',
'replanning',
'replant',
'replanted',
'replanting',
'replay',
'replayed',
'replaying',
'replenish',
'replenished',
'replenisher',
'replenishing',
'replenishment',
'replete',
'repletion',
'replica',
'replicate',
'replication',
'replicative',
'replied',
'replier',
'reply',
'replying',
'repopulate',
'repopulation',
'report',
'reportable',
'reportage',
'reported',
'reporter',
'reporting',
'reportorial',
'repose',
'reposed',
'reposeful',
'reposer',
'reposing',
'reposition',
'repositioning',
'repository',
'repossessed',
'repossessing',
'repossession',
'repossessor',
'repowering',
'reprehend',
'reprehending',
'reprehensible',
'reprehensibly',
'reprehension',
'represent',
'representable',
'representation',
'representational',
'representative',
'represented',
'representee',
'representing',
'repressed',
'repressibility',
'repressible',
'repressing',
'repression',
'repressive',
'repressor',
'reprice',
'repriced',
'repricing',
'reprieval',
'reprieve',
'reprieved',
'repriever',
'reprieving',
'reprimand',
'reprimanding',
'reprint',
'reprinted',
'reprinter',
'reprinting',
'reprisal',
'reprise',
'reprised',
'reprising',
'repro',
'reproach',
'reproachable',
'reproached',
'reproacher',
'reproachful',
'reproachfully',
'reproaching',
'reprobate',
'reprobation',
'reprobative',
'reprobe',
'reprobed',
'reprobing',
'reprocessed',
'reprocessing',
'reproduce',
'reproduced',
'reproducer',
'reproducible',
'reproducing',
'reproduction',
'reproductive',
'reproductivity',
'reprogram',
'reprogrammed',
'reprogramming',
'reprography',
'reproof',
'reproval',
'reprove',
'reproved',
'reprover',
'reproving',
'reptile',
'reptilian',
'republic',
'republica',
'republican',
'republicanism',
'republication',
'republish',
'republished',
'republishing',
'repudiate',
'repudiation',
'repugnance',
'repugnancy',
'repugnant',
'repugnantly',
'repugned',
'repulse',
'repulsed',
'repulser',
'repulsing',
'repulsion',
'repulsive',
'repurchase',
'repurchased',
'repurchasing',
'reputability',
'reputable',
'reputably',
'reputation',
'repute',
'reputed',
'reputing',
'req',
'request',
'requested',
'requester',
'requesting',
'requiem',
'requiescat',
'require',
'requirement',
'requirer',
'requiring',
'requisite',
'requisitely',
'requisition',
'requisitioner',
'requisitioning',
'requital',
'requite',
'requited',
'requiter',
'requiting',
'reradiate',
'reran',
'reread',
'rereading',
'rerecord',
'rerecording',
'reroll',
'rerolled',
'rerolling',
'reroute',
'rerouted',
'rerouting',
'rerun',
'rerunning',
'resalable',
'resale',
'resaw',
'resay',
'reschedule',
'rescheduled',
'rescheduling',
'rescind',
'rescindable',
'rescinder',
'rescinding',
'rescindment',
'rescission',
'rescript',
'rescue',
'rescued',
'rescuer',
'rescuing',
'reseal',
'resealable',
'resealed',
'resealing',
'research',
'researched',
'researcher',
'researching',
'reseat',
'resection',
'resee',
'reseed',
'reseeding',
'resell',
'reseller',
'reselling',
'resemblance',
'resemble',
'resembled',
'resembling',
'resent',
'resented',
'resentful',
'resentfully',
'resenting',
'resentment',
'reserpine',
'reservation',
'reserve',
'reserved',
'reserver',
'reserving',
'reservist',
'reservoir',
'reset',
'resetter',
'resetting',
'resettle',
'resettled',
'resettlement',
'resettling',
'resew',
'resewing',
'reshape',
'reshaped',
'reshaper',
'reshaping',
'resharpen',
'resharpened',
'resharpening',
'reship',
'reshipment',
'reshipper',
'reshipping',
'reshooting',
'reshowed',
'reshowing',
'reshuffle',
'reshuffled',
'reshuffling',
'reside',
'residence',
'residency',
'resident',
'residential',
'resider',
'residing',
'residua',
'residual',
'residuary',
'residue',
'residuum',
'resifted',
'resifting',
'resign',
'resignation',
'resigned',
'resignee',
'resigner',
'resigning',
'resilience',
'resiliency',
'resilient',
'resiliently',
'resin',
'resist',
'resistably',
'resistance',
'resistant',
'resistantly',
'resisted',
'resistent',
'resister',
'resistibility',
'resistible',
'resisting',
'resistive',
'resistivity',
'resituate',
'resizing',
'resold',
'resolder',
'resole',
'resoled',
'resoling',
'resolute',
'resolutely',
'resolution',
'resolutive',
'resolutory',
'resolvable',
'resolve',
'resolved',
'resolver',
'resolving',
'resonance',
'resonant',
'resonantly',
'resonate',
'resonation',
'resorbed',
'resort',
'resorted',
'resorter',
'resorting',
'resound',
'resounding',
'resource',
'resourceful',
'resourcefully',
'resow',
'resowed',
'resowing',
'resown',
'resp',
'respect',
'respectability',
'respectable',
'respectably',
'respected',
'respecter',
'respectful',
'respectfully',
'respecting',
'respective',
'respell',
'respelled',
'respelling',
'respirability',
'respirable',
'respiration',
'respirational',
'respiratory',
'respire',
'respiring',
'respite',
'respited',
'respiting',
'resplendence',
'resplendent',
'resplendently',
'respond',
'respondent',
'responder',
'responding',
'response',
'responsibility',
'responsible',
'responsibly',
'responsive',
'rest',
'restack',
'restacking',
'restaff',
'restaffed',
'restaffing',
'restage',
'restaging',
'restamp',
'restamped',
'restamping',
'restart',
'restartable',
'restarted',
'restarting',
'restate',
'restatement',
'restaurant',
'restaurateur',
'rested',
'rester',
'restful',
'restfully',
'resting',
'restituted',
'restitution',
'restitutive',
'restitutory',
'restive',
'restlessly',
'restock',
'restocking',
'restorability',
'restorable',
'restoration',
'restorative',
'restore',
'restorer',
'restoring',
'restraighten',
'restraightened',
'restraightening',
'restrain',
'restrainable',
'restrained',
'restrainer',
'restraining',
'restraint',
'restrengthen',
'restrengthened',
'restrengthening',
'restrict',
'restricted',
'restricting',
'restriction',
'restrictionism',
'restrictionist',
'restrictive',
'restring',
'restringing',
'restructure',
'restructuring',
'restrung',
'restudied',
'restudy',
'restudying',
'restuff',
'restuffed',
'restuffing',
'restyle',
'restyled',
'restyling',
'resubmission',
'resubmit',
'resubmitted',
'resubmitting',
'resubscribe',
'resubscribed',
'resubscribing',
'resubscription',
'result',
'resultant',
'resulted',
'resulting',
'resume',
'resumed',
'resumer',
'resuming',
'resummon',
'resummoning',
'resumption',
'resupplied',
'resupply',
'resupplying',
'resurface',
'resurfaced',
'resurfacing',
'resurgence',
'resurgent',
'resurging',
'resurrect',
'resurrected',
'resurrecting',
'resurrection',
'resurrectionism',
'resurrectionist',
'resurvey',
'resurveyed',
'resurveying',
'resuscitate',
'resuscitation',
'resuscitative',
'ret',
'retail',
'retailed',
'retailer',
'retailing',
'retailor',
'retain',
'retainable',
'retained',
'retainer',
'retaining',
'retainment',
'retake',
'retaken',
'retaker',
'retaking',
'retaliate',
'retaliation',
'retaliatory',
'retardant',
'retardate',
'retardation',
'retarder',
'retarding',
'retaught',
'retch',
'retched',
'retching',
'retd',
'reteach',
'reteaching',
'retell',
'retelling',
'retention',
'retentive',
'retest',
'retested',
'retesting',
'rethink',
'rethinking',
'rethought',
'rethread',
'rethreading',
'reticence',
'reticent',
'reticently',
'reticula',
'reticular',
'reticulation',
'reticule',
'reticulum',
'retie',
'retied',
'retina',
'retinal',
'retinoscope',
'retinoscopy',
'retinted',
'retinue',
'retinued',
'retire',
'retiree',
'retirement',
'retirer',
'retiring',
'retitle',
'retitled',
'retitling',
'retold',
'retook',
'retool',
'retooled',
'retooling',
'retort',
'retorted',
'retorter',
'retorting',
'retouch',
'retouchable',
'retouched',
'retoucher',
'retouching',
'retrace',
'retraceable',
'retraced',
'retracing',
'retract',
'retractable',
'retracted',
'retractile',
'retracting',
'retraction',
'retrain',
'retrained',
'retraining',
'retransfer',
'retransferring',
'retranslate',
'retranslation',
'retransmit',
'retransmitted',
'retransmitting',
'retread',
'retreading',
'retreat',
'retrench',
'retrenched',
'retrenching',
'retrenchment',
'retrial',
'retribute',
'retributed',
'retributing',
'retribution',
'retributive',
'retributory',
'retried',
'retrievable',
'retrieval',
'retrieve',
'retrieved',
'retriever',
'retrieving',
'retrimmed',
'retro',
'retroact',
'retroacted',
'retroaction',
'retroactive',
'retroactivity',
'retrocede',
'retrofire',
'retrofiring',
'retrofit',
'retrograde',
'retrogradely',
'retrograding',
'retrogressed',
'retrogressing',
'retrogression',
'retrogressive',
'retrorocket',
'retrospect',
'retrospection',
'retrospective',
'retry',
'retrying',
'retsina',
'retuning',
'return',
'returnability',
'returnable',
'returned',
'returnee',
'returner',
'returning',
'retying',
'retype',
'retyped',
'retyping',
'reunification',
'reunified',
'reunify',
'reunifying',
'reunion',
'reunite',
'reunited',
'reuniter',
'reuniting',
'reupholster',
'reupholstering',
'reusability',
'reusable',
'reuse',
'reuseable',
'reused',
'reusing',
'reutilization',
'reutilize',
'reutilized',
'reutilizing',
'rev',
'revalidate',
'revalidation',
'revaluate',
'revaluation',
'revalue',
'revalued',
'revaluing',
'revamp',
'revamped',
'revamper',
'revamping',
'revarnish',
'revarnished',
'revarnishing',
'reveal',
'revealed',
'revealer',
'revealing',
'revealment',
'reveille',
'revel',
'revelation',
'revelational',
'revelatory',
'reveled',
'reveler',
'reveling',
'revelled',
'reveller',
'revelling',
'revelry',
'revenant',
'revenge',
'revengeful',
'revengefully',
'revenger',
'revenging',
'revenual',
'revenue',
'revenued',
'revenuer',
'reverb',
'reverberant',
'reverberate',
'reverberation',
'revere',
'reverence',
'reverenced',
'reverencer',
'reverencing',
'reverend',
'reverent',
'reverential',
'reverently',
'reverer',
'reverie',
'reverification',
'reverified',
'reverify',
'reverifying',
'revering',
'reversal',
'reverse',
'reversed',
'reversely',
'reverser',
'reversibility',
'reversible',
'reversibly',
'reversing',
'reversion',
'reversionary',
'reversionist',
'revert',
'reverted',
'reverter',
'revertible',
'reverting',
'revery',
'revested',
'revetment',
'revetted',
'revetting',
'revictual',
'revictualed',
'revictualing',
'review',
'reviewability',
'reviewable',
'reviewal',
'reviewed',
'reviewer',
'reviewing',
'revile',
'reviled',
'revilement',
'reviler',
'reviling',
'revindicate',
'revindication',
'revisable',
'revisal',
'revise',
'revised',
'reviser',
'revising',
'revision',
'revisionary',
'revisionism',
'revisionist',
'revisit',
'revisited',
'revisiting',
'revisor',
'revisory',
'revitalization',
'revitalize',
'revitalized',
'revitalizing',
'revival',
'revivalism',
'revivalist',
'revivalistic',
'revive',
'revived',
'reviver',
'revivification',
'revivified',
'revivify',
'revivifying',
'reviving',
'revocability',
'revocable',
'revocation',
'revocative',
'revocatory',
'revoir',
'revokable',
'revoke',
'revoked',
'revoker',
'revoking',
'revolt',
'revolted',
'revolter',
'revolting',
'revolution',
'revolutionary',
'revolutionist',
'revolutionize',
'revolutionized',
'revolutionizer',
'revolutionizing',
'revolvable',
'revolve',
'revolved',
'revolver',
'revolving',
'revue',
'revulsion',
'revulsive',
'revved',
'revving',
'rewakened',
'rewakening',
'reward',
'rewardable',
'rewarder',
'rewarding',
'rewarm',
'rewarmed',
'rewarming',
'rewash',
'rewashed',
'rewashing',
'rewax',
'rewaxing',
'reweave',
'reweaved',
'reweaving',
'rewed',
'rewedding',
'reweigh',
'reweighed',
'reweighing',
'reweld',
'rewelding',
'rewidening',
'rewin',
'rewind',
'rewinder',
'rewinding',
'rewire',
'rewiring',
'rewon',
'reword',
'rewording',
'rework',
'reworked',
'reworking',
'rewound',
'rewove',
'rewoven',
'rewrap',
'rewrapping',
'rewrite',
'rewriter',
'rewriting',
'rewritten',
'rewrote',
'rewrought',
'rex',
'reykjavik',
'rezone',
'rezoning',
'rhapsodic',
'rhapsodical',
'rhapsodist',
'rhapsodize',
'rhapsodized',
'rhapsodizing',
'rhapsody',
'rhea',
'rhebok',
'rhenium',
'rheologic',
'rheological',
'rheologist',
'rheology',
'rheometer',
'rheostat',
'rheostatic',
'rhetoric',
'rhetorical',
'rhetorician',
'rheum',
'rheumatic',
'rheumatism',
'rheumatogenic',
'rheumatoid',
'rheumatology',
'rheumic',
'rheumier',
'rheumiest',
'rheumy',
'rhine',
'rhinestone',
'rhino',
'rhizome',
'rho',
'rhodesia',
'rhodesian',
'rhodium',
'rhododendron',
'rhodopsin',
'rhomb',
'rhombi',
'rhombic',
'rhomboid',
'rhonchi',
'rhubarb',
'rhumb',
'rhumba',
'rhumbaed',
'rhumbaing',
'rhyme',
'rhymed',
'rhymer',
'rhymester',
'rhyming',
'rhyolite',
'rhyta',
'rhythm',
'rhythmic',
'rhythmical',
'rhythmicity',
'rial',
'rialto',
'rib',
'ribald',
'ribaldly',
'ribaldry',
'riband',
'ribbed',
'ribber',
'ribbier',
'ribbing',
'ribbon',
'ribboning',
'ribbony',
'ribby',
'riblet',
'riboflavin',
'ribonucleic',
'ribonucleotide',
'ribose',
'ribosomal',
'ribosome',
'rice',
'riced',
'ricer',
'ricercar',
'rich',
'richard',
'richardson',
'riche',
'richened',
'richening',
'richer',
'richest',
'richfield',
'richly',
'richmond',
'richter',
'ricing',
'rick',
'ricketier',
'ricketiest',
'rickettsia',
'rickettsiae',
'rickettsial',
'rickety',
'rickey',
'ricking',
'rickrack',
'ricksha',
'rickshaw',
'ricochet',
'ricocheted',
'ricocheting',
'ricochetted',
'ricochetting',
'ricotta',
'ricrac',
'rid',
'ridable',
'riddance',
'ridden',
'ridder',
'ridding',
'riddle',
'riddled',
'riddling',
'ride',
'rideable',
'rider',
'ridership',
'ridge',
'ridgepole',
'ridgier',
'ridging',
'ridgy',
'ridicule',
'ridiculed',
'ridiculing',
'ridiculously',
'riding',
'ridley',
'riel',
'rife',
'rifely',
'rifer',
'rifest',
'riff',
'riffed',
'riffing',
'riffle',
'riffled',
'riffler',
'riffling',
'riffraff',
'rifle',
'rifled',
'rifleman',
'rifler',
'riflery',
'rifling',
'rift',
'rifted',
'rifting',
'rig',
'rigadoon',
'rigamarole',
'rigatoni',
'rigger',
'rigging',
'right',
'righted',
'righteously',
'righter',
'rightest',
'rightful',
'rightfully',
'righting',
'rightism',
'rightist',
'rightly',
'righto',
'rightward',
'righty',
'rigid',
'rigidified',
'rigidify',
'rigidity',
'rigidly',
'rigmarole',
'rigor',
'rigorism',
'rigorist',
'rigorously',
'rigour',
'rigueur',
'rikshaw',
'rile',
'riled',
'riling',
'rill',
'rilled',
'rilling',
'rim',
'rime',
'rimed',
'rimester',
'rimier',
'rimiest',
'riming',
'rimland',
'rimmed',
'rimmer',
'rimming',
'rimrock',
'rimy',
'rind',
'ring',
'ringbolt',
'ringdove',
'ringer',
'ringing',
'ringleader',
'ringlet',
'ringlike',
'ringmaster',
'ringneck',
'ringside',
'ringtail',
'ringworm',
'rink',
'rinsable',
'rinse',
'rinsed',
'rinser',
'rinsible',
'rinsing',
'riot',
'rioted',
'rioter',
'rioting',
'riotously',
'rip',
'riparian',
'ripcord',
'ripe',
'ripely',
'ripen',
'ripened',
'ripener',
'ripening',
'riper',
'ripest',
'riping',
'ripoff',
'ripost',
'riposte',
'riposted',
'riposting',
'rippable',
'ripper',
'ripping',
'ripple',
'rippled',
'rippler',
'ripplier',
'rippliest',
'rippling',
'ripply',
'riprap',
'riprapping',
'ripsaw',
'riptide',
'rise',
'risen',
'riser',
'rishi',
'risibility',
'risible',
'risibly',
'rising',
'risk',
'risked',
'risker',
'riskier',
'riskiest',
'riskily',
'risking',
'risky',
'risotto',
'risque',
'rissole',
'ritard',
'rite',
'ritual',
'ritualism',
'ritualist',
'ritualistic',
'ritualization',
'ritualize',
'ritualized',
'ritz',
'ritzier',
'ritziest',
'ritzily',
'ritzy',
'rival',
'rivaled',
'rivaling',
'rivalled',
'rivalling',
'rivalry',
'rive',
'rived',
'rivederci',
'riven',
'river',
'riverbank',
'riverbed',
'riverine',
'riverside',
'rivet',
'riveted',
'riveter',
'riveting',
'rivetted',
'rivetting',
'riviera',
'riving',
'rivulet',
'riyal',
'roach',
'roached',
'roaching',
'road',
'roadability',
'roadbed',
'roadblock',
'roader',
'roadhouse',
'roadrunner',
'roadside',
'roadstead',
'roadster',
'roadway',
'roadwork',
'roam',
'roamed',
'roamer',
'roaming',
'roan',
'roar',
'roarer',
'roaring',
'roast',
'roasted',
'roaster',
'roasting',
'rob',
'robbed',
'robber',
'robbery',
'robbing',
'robe',
'robed',
'robert',
'robin',
'robing',
'robinson',
'roble',
'robot',
'robotism',
'robotization',
'robotize',
'robotized',
'robotizing',
'robotry',
'robust',
'robuster',
'robustest',
'robustly',
'roc',
'rochester',
'rock',
'rockaby',
'rockabye',
'rocker',
'rockery',
'rocket',
'rocketed',
'rocketer',
'rocketing',
'rocketlike',
'rocketry',
'rockfall',
'rockfish',
'rockier',
'rockiest',
'rocking',
'rocklike',
'rocky',
'rococo',
'rod',
'rodder',
'rodding',
'rode',
'rodent',
'rodenticide',
'rodeo',
'rodman',
'rodriguez',
'roe',
'roebuck',
'roentgen',
'roentgenize',
'roentgenogram',
'roentgenographic',
'roentgenography',
'roentgenologic',
'roentgenological',
'roentgenologist',
'roentgenology',
'roentgenometer',
'roentgenometry',
'roentgenoscope',
'roentgenoscopic',
'roentgenoscopy',
'roger',
'rogue',
'rogued',
'rogueing',
'roguery',
'roguing',
'roguish',
'roguishly',
'roil',
'roiled',
'roilier',
'roiling',
'roily',
'roister',
'roisterer',
'roistering',
'role',
'roleplayed',
'roleplaying',
'roll',
'rollaway',
'rollback',
'rolled',
'roller',
'rollick',
'rollicking',
'rolling',
'rollout',
'rollover',
'rolltop',
'rollway',
'rom',
'romaine',
'roman',
'romance',
'romanced',
'romancer',
'romancing',
'romanesque',
'romanian',
'romanism',
'romanist',
'romanistic',
'romanize',
'romanized',
'romanizing',
'romano',
'romantic',
'romanticism',
'romanticist',
'romanticization',
'romanticize',
'romanticized',
'romanticizing',
'romany',
'rome',
'romeo',
'romp',
'romped',
'romper',
'romping',
'rompish',
'ronald',
'rondeau',
'rondeaux',
'rondelle',
'rondo',
'rondure',
'rontgen',
'rood',
'roof',
'roofed',
'roofer',
'roofing',
'roofline',
'rooftop',
'rooftree',
'rook',
'rooked',
'rookery',
'rookie',
'rookier',
'rooking',
'rooky',
'room',
'roomed',
'roomer',
'roomette',
'roomful',
'roomier',
'roomiest',
'roomily',
'rooming',
'roommate',
'roomy',
'roosevelt',
'roost',
'roosted',
'rooster',
'roosting',
'root',
'rooted',
'rooter',
'rootier',
'rooting',
'rootlet',
'rootlike',
'rootstock',
'rooty',
'ropable',
'rope',
'roped',
'roper',
'ropery',
'ropewalk',
'ropeway',
'ropier',
'ropiest',
'ropily',
'roping',
'ropy',
'roquefort',
'rorschach',
'rosa',
'rosalind',
'rosalyn',
'rosarian',
'rosarium',
'rosary',
'roscoe',
'rose',
'roseate',
'rosebay',
'rosebud',
'rosebush',
'rosed',
'rosemary',
'rosery',
'rosette',
'rosewater',
'rosewood',
'roshi',
'rosier',
'rosiest',
'rosily',
'rosin',
'rosined',
'rosing',
'rosining',
'rosiny',
'roster',
'rostra',
'rostral',
'rostrum',
'rosy',
'rot',
'rotary',
'rotatable',
'rotate',
'rotation',
'rotational',
'rotative',
'rotatory',
'rote',
'rotgut',
'rotifer',
'rotisserie',
'roto',
'rotogravure',
'rototill',
'rototilled',
'rototiller',
'rotted',
'rotten',
'rottener',
'rottenest',
'rottenly',
'rotter',
'rotterdam',
'rotting',
'rotund',
'rotunda',
'rotundity',
'rotundly',
'rouble',
'roue',
'rouge',
'rough',
'roughage',
'roughcast',
'roughed',
'roughen',
'roughened',
'roughening',
'rougher',
'roughest',
'roughhew',
'roughhewed',
'roughhewing',
'roughhewn',
'roughhouse',
'roughhoused',
'roughhousing',
'roughing',
'roughish',
'roughly',
'roughneck',
'roughshod',
'rouging',
'roulade',
'rouleau',
'roulette',
'rouletted',
'rouletting',
'round',
'roundabout',
'roundel',
'roundelay',
'rounder',
'roundest',
'roundhouse',
'rounding',
'roundish',
'roundly',
'roundup',
'roundworm',
'rouse',
'roused',
'rouser',
'rousing',
'rousseau',
'roust',
'roustabout',
'rousted',
'rouster',
'rousting',
'rout',
'route',
'routed',
'routeman',
'router',
'routeway',
'routine',
'routinely',
'routing',
'routinize',
'routinized',
'routinizing',
'roux',
'rove',
'roved',
'rover',
'roving',
'row',
'rowable',
'rowan',
'rowboat',
'rowdier',
'rowdiest',
'rowdily',
'rowdy',
'rowdyish',
'rowdyism',
'rowed',
'rowel',
'rower',
'rowing',
'royal',
'royalism',
'royalist',
'royalty',
'rte',
'rub',
'rubaiyat',
'rubato',
'rubbed',
'rubber',
'rubberize',
'rubberized',
'rubberizing',
'rubberneck',
'rubbernecking',
'rubbery',
'rubbing',
'rubbish',
'rubbishy',
'rubble',
'rubbled',
'rubblier',
'rubbliest',
'rubbling',
'rubbly',
'rubdown',
'rube',
'rubella',
'rubicund',
'rubicundity',
'rubidium',
'rubied',
'rubier',
'rubiest',
'ruble',
'rubric',
'rubrical',
'ruby',
'rubying',
'ruck',
'rucksack',
'rudder',
'ruddier',
'ruddiest',
'ruddily',
'ruddle',
'ruddy',
'rude',
'rudely',
'ruder',
'rudest',
'rudiment',
'rudimentary',
'rue',
'rued',
'rueful',
'ruefully',
'ruer',
'ruff',
'ruffed',
'ruffian',
'ruffianly',
'ruffing',
'ruffle',
'ruffled',
'ruffler',
'rufflike',
'ruffling',
'ruffly',
'rug',
'rugby',
'ruggeder',
'ruggedest',
'rugger',
'rugging',
'ruglike',
'ruin',
'ruinable',
'ruinate',
'ruination',
'ruined',
'ruiner',
'ruing',
'ruining',
'ruinously',
'rulable',
'rule',
'ruled',
'ruler',
'rulership',
'ruling',
'rum',
'rumania',
'rumanian',
'rumba',
'rumbaed',
'rumbaing',
'rumble',
'rumbled',
'rumbler',
'rumbling',
'rumbly',
'ruminant',
'ruminate',
'rumination',
'ruminative',
'rummage',
'rummager',
'rummaging',
'rummer',
'rummest',
'rummier',
'rummiest',
'rummy',
'rumor',
'rumoring',
'rumormonger',
'rumour',
'rumouring',
'rump',
'rumpelstiltskin',
'rumple',
'rumpled',
'rumpliest',
'rumpling',
'rumply',
'rumrunner',
'rumrunning',
'run',
'runabout',
'runaround',
'runaway',
'runback',
'rundown',
'rune',
'rung',
'runic',
'runlet',
'runnel',
'runner',
'runnier',
'runniest',
'running',
'runny',
'runoff',
'runout',
'runover',
'runt',
'runtier',
'runtiest',
'runtish',
'runty',
'runway',
'rupee',
'rupiah',
'rupturable',
'rupture',
'rupturing',
'rural',
'ruralism',
'ruralist',
'ruralite',
'rurality',
'ruralize',
'ruralized',
'ruralizing',
'ruse',
'rush',
'rushed',
'rushee',
'rusher',
'rushier',
'rushing',
'rushy',
'rusk',
'russe',
'russell',
'russet',
'russety',
'russia',
'russian',
'russified',
'russify',
'russifying',
'rust',
'rustable',
'rusted',
'rustic',
'rustical',
'rusticate',
'rustication',
'rusticity',
'rusticly',
'rustier',
'rustiest',
'rustily',
'rusting',
'rustle',
'rustled',
'rustler',
'rustling',
'rustproof',
'rusty',
'rut',
'rutabaga',
'ruth',
'ruthenium',
'rutherford',
'rutherfordium',
'ruthlessly',
'rutted',
'ruttier',
'ruttiest',
'ruttily',
'rutting',
'ruttish',
'rutty',
'rya',
'rye',
'sabbat',
'sabbath',
'sabbatic',
'sabbatical',
'saber',
'sabering',
'sabine',
'sable',
'sabot',
'sabotage',
'sabotaging',
'saboteur',
'sabra',
'sabring',
'sac',
'sacbut',
'saccharification',
'saccharin',
'saccharine',
'saccharinely',
'saccharinity',
'sacerdotal',
'sacerdotalism',
'sachem',
'sachemic',
'sachet',
'sacheted',
'sack',
'sackbut',
'sackcloth',
'sackclothed',
'sacker',
'sackful',
'sacking',
'sacksful',
'saclike',
'sacra',
'sacral',
'sacrament',
'sacramental',
'sacramento',
'sacrifice',
'sacrificed',
'sacrificer',
'sacrificial',
'sacrificing',
'sacrilege',
'sacrilegiously',
'sacrist',
'sacristan',
'sacristry',
'sacristy',
'sacroiliac',
'sacrolumbar',
'sacrosanct',
'sacrovertebral',
'sacrum',
'sad',
'sadden',
'saddened',
'saddening',
'sadder',
'saddest',
'saddhu',
'saddle',
'saddlebag',
'saddlebow',
'saddlecloth',
'saddled',
'saddler',
'saddlery',
'saddletree',
'saddling',
'sadducee',
'sadhu',
'sadiron',
'sadism',
'sadist',
'sadistic',
'sadly',
'sadomasochism',
'sadomasochist',
'sadomasochistic',
'safari',
'safaried',
'safe',
'safecracker',
'safecracking',
'safeguard',
'safeguarding',
'safekeeping',
'safelight',
'safely',
'safer',
'safest',
'safetied',
'safety',
'safetying',
'safeway',
'safflower',
'saffron',
'sag',
'saga',
'sagaciously',
'sagacity',
'sagamore',
'sage',
'sagebrush',
'sagely',
'sager',
'sagest',
'sagger',
'saggier',
'saggiest',
'sagging',
'saggy',
'sagier',
'sagiest',
'sagittal',
'sago',
'saguaro',
'sagy',
'sahara',
'saharan',
'sahib',
'said',
'saigon',
'sail',
'sailable',
'sailboat',
'sailcloth',
'sailed',
'sailer',
'sailfish',
'sailing',
'sailor',
'sailorly',
'saint',
'saintdom',
'sainted',
'sainthood',
'sainting',
'saintlier',
'saintliest',
'saintly',
'saintship',
'saith',
'sake',
'sal',
'salaam',
'salaamed',
'salaaming',
'salability',
'salable',
'salably',
'salaciously',
'salacity',
'salad',
'salamander',
'salami',
'salaried',
'salary',
'salarying',
'sale',
'saleable',
'saleably',
'salem',
'saleroom',
'salesclerk',
'salesgirl',
'saleslady',
'salesman',
'salesmanship',
'salespeople',
'salesperson',
'salesroom',
'saleswoman',
'saleyard',
'salicylic',
'salience',
'saliency',
'salient',
'saliently',
'saline',
'salinity',
'salinize',
'salinized',
'salinizing',
'salinometer',
'salisbury',
'saliva',
'salivary',
'salivate',
'salivation',
'sallied',
'sallier',
'sallow',
'sallower',
'sallowest',
'sallowing',
'sallowly',
'sallowy',
'sallying',
'salmagundi',
'salmon',
'salmonella',
'salon',
'saloon',
'salsa',
'salsify',
'salt',
'saltation',
'saltatory',
'saltbox',
'saltbush',
'saltcellar',
'salted',
'salter',
'saltest',
'saltier',
'saltiest',
'saltily',
'saltine',
'salting',
'saltish',
'saltpeter',
'saltpetre',
'saltshaker',
'saltwater',
'salty',
'salubriously',
'salubrity',
'salutarily',
'salutary',
'salutation',
'salutatory',
'salute',
'saluted',
'saluter',
'saluting',
'salvable',
'salvably',
'salvador',
'salvage',
'salvageability',
'salvageable',
'salvagee',
'salvager',
'salvaging',
'salvation',
'salvational',
'salve',
'salved',
'salver',
'salvia',
'salving',
'salvo',
'salvoed',
'salvoing',
'sam',
'samadhi',
'samaritan',
'samarium',
'samba',
'sambaed',
'sambaing',
'sambo',
'same',
'samisen',
'samite',
'samizdat',
'samlet',
'samoa',
'samoan',
'samovar',
'sampan',
'sample',
'sampled',
'sampler',
'sampling',
'samsara',
'samuel',
'samurai',
'san',
'sanatarium',
'sanatoria',
'sanatorium',
'sanatory',
'sancta',
'sanctification',
'sanctified',
'sanctifier',
'sanctify',
'sanctifying',
'sanctimoniously',
'sanctimony',
'sanction',
'sanctioner',
'sanctioning',
'sanctity',
'sanctuary',
'sanctum',
'sand',
'sandal',
'sandaled',
'sandaling',
'sandalled',
'sandalling',
'sandalwood',
'sandbag',
'sandbagger',
'sandbagging',
'sandbank',
'sandbar',
'sandblast',
'sandblasted',
'sandblaster',
'sandblasting',
'sandbox',
'sander',
'sandfly',
'sandhog',
'sandier',
'sandiest',
'sanding',
'sandlot',
'sandlotter',
'sandman',
'sandpaper',
'sandpapering',
'sandpile',
'sandpiper',
'sandpit',
'sandra',
'sandstone',
'sandstorm',
'sandwich',
'sandwiched',
'sandwiching',
'sandwort',
'sandy',
'sane',
'saned',
'sanely',
'saner',
'sanest',
'sanforized',
'sang',
'sanga',
'sanger',
'sangfroid',
'sangh',
'sangha',
'sangria',
'sanguification',
'sanguinarily',
'sanguinary',
'sanguine',
'sanguinely',
'sanitaria',
'sanitarian',
'sanitarily',
'sanitarium',
'sanitary',
'sanitation',
'sanitationist',
'sanitization',
'sanitize',
'sanitized',
'sanitizer',
'sanitizing',
'sanitoria',
'sanitorium',
'sanity',
'sank',
'sanka',
'sannyasi',
'sansei',
'sanserif',
'sanskrit',
'santa',
'santee',
'santiago',
'sanzen',
'sap',
'saphead',
'sapid',
'sapidity',
'sapience',
'sapiency',
'sapient',
'sapiently',
'sapling',
'saponify',
'saponine',
'sapor',
'sapper',
'sapphic',
'sapphire',
'sapphism',
'sapphist',
'sappier',
'sappiest',
'sappily',
'sapping',
'sappy',
'saprophyte',
'saprophytic',
'sapsucker',
'sapwood',
'saraband',
'saracen',
'saracenic',
'sarah',
'saran',
'sarape',
'sarcasm',
'sarcastic',
'sarcoma',
'sarcomata',
'sarcophagi',
'sardine',
'sardinia',
'sardinian',
'sardonic',
'sardonyx',
'saree',
'sargasso',
'sarge',
'sari',
'sarod',
'sarong',
'sarsaparilla',
'sartorial',
'sash',
'sashay',
'sashayed',
'sashaying',
'sashed',
'sashimi',
'sashing',
'saskatchewan',
'sassed',
'sassier',
'sassiest',
'sassily',
'sassing',
'sassy',
'sat',
'satan',
'satanic',
'satanical',
'satanism',
'satanist',
'satanophobia',
'satchel',
'sate',
'sateen',
'satellite',
'satiable',
'satiably',
'satiate',
'satiation',
'satiety',
'satin',
'satinwood',
'satiny',
'satire',
'satiric',
'satirical',
'satirist',
'satirize',
'satirized',
'satirizer',
'satirizing',
'satisfaction',
'satisfactorily',
'satisfactory',
'satisfiable',
'satisfied',
'satisfier',
'satisfy',
'satisfying',
'sativa',
'satori',
'satrap',
'satrapy',
'saturable',
'saturate',
'saturation',
'saturday',
'saturn',
'saturnine',
'saturninity',
'saturnism',
'satyr',
'satyric',
'satyrid',
'sauce',
'saucebox',
'sauced',
'saucepan',
'saucer',
'saucerize',
'saucerized',
'saucier',
'sauciest',
'saucily',
'saucing',
'saucy',
'saudi',
'sauerbraten',
'sauerkraut',
'sault',
'sauna',
'saunter',
'saunterer',
'sauntering',
'saurian',
'sauropod',
'sausage',
'saute',
'sauted',
'sauteed',
'sauteing',
'sauterne',
'savable',
'savage',
'savagely',
'savager',
'savagery',
'savagest',
'savaging',
'savagism',
'savanna',
'savannah',
'savant',
'savate',
'save',
'saveable',
'saved',
'saver',
'saving',
'savior',
'saviour',
'savor',
'savorer',
'savorier',
'savoriest',
'savorily',
'savoring',
'savory',
'savour',
'savourer',
'savourier',
'savouriest',
'savouring',
'savoury',
'savoy',
'savvied',
'savvy',
'savvying',
'saw',
'sawbuck',
'sawdust',
'sawed',
'sawer',
'sawfish',
'sawfly',
'sawhorse',
'sawing',
'sawmill',
'sawn',
'sawteeth',
'sawtooth',
'sawyer',
'sax',
'saxhorn',
'saxon',
'saxony',
'saxophone',
'saxophonist',
'say',
'sayable',
'sayee',
'sayer',
'sayest',
'saying',
'sayonara',
'sayst',
'scab',
'scabbard',
'scabbed',
'scabbier',
'scabbiest',
'scabbily',
'scabbing',
'scabby',
'scabiosa',
'scabrously',
'scad',
'scaffold',
'scaffoldage',
'scaffolding',
'scag',
'scalable',
'scalably',
'scalar',
'scalawag',
'scald',
'scaldic',
'scalding',
'scale',
'scaled',
'scalelike',
'scalene',
'scalepan',
'scaler',
'scalesman',
'scalier',
'scaliest',
'scaling',
'scallion',
'scallop',
'scalloped',
'scalloper',
'scalloping',
'scallywag',
'scalp',
'scalped',
'scalpel',
'scalper',
'scalping',
'scaly',
'scam',
'scamp',
'scamped',
'scamper',
'scampering',
'scampi',
'scamping',
'scampish',
'scan',
'scandal',
'scandaled',
'scandaling',
'scandalization',
'scandalize',
'scandalized',
'scandalizer',
'scandalizing',
'scandalled',
'scandalmonger',
'scandalously',
'scandia',
'scandic',
'scandinavia',
'scandinavian',
'scandium',
'scanned',
'scanner',
'scanning',
'scansion',
'scant',
'scanted',
'scanter',
'scantest',
'scantier',
'scantiest',
'scantily',
'scanting',
'scantling',
'scantly',
'scanty',
'scape',
'scaped',
'scapegoat',
'scapegoater',
'scapegoatism',
'scapegrace',
'scaping',
'scapula',
'scapulae',
'scapular',
'scar',
'scarab',
'scarce',
'scarcely',
'scarcer',
'scarcest',
'scarcity',
'scare',
'scarecrow',
'scarer',
'scarey',
'scarf',
'scarfed',
'scarfing',
'scarfpin',
'scarier',
'scariest',
'scarification',
'scarified',
'scarifier',
'scarify',
'scarifying',
'scaring',
'scarlet',
'scarletina',
'scarp',
'scarped',
'scarper',
'scarpering',
'scarrier',
'scarriest',
'scarring',
'scarry',
'scarting',
'scary',
'scat',
'scathe',
'scathed',
'scathing',
'scatologic',
'scatological',
'scatology',
'scatted',
'scatter',
'scatterbrain',
'scatterbrained',
'scatterer',
'scattering',
'scattersite',
'scattier',
'scattiest',
'scatting',
'scavenge',
'scavenger',
'scavengery',
'scavenging',
'scenario',
'scenarist',
'scene',
'scenery',
'scenic',
'scent',
'scented',
'scenting',
'scepter',
'sceptering',
'sceptic',
'sceptral',
'sceptre',
'sceptring',
'schedular',
'schedule',
'scheduled',
'scheduler',
'scheduling',
'scheelite',
'schema',
'schemata',
'schematic',
'scheme',
'schemed',
'schemer',
'schemery',
'scheming',
'scherzi',
'scherzo',
'schick',
'schilling',
'schism',
'schismatic',
'schismatize',
'schismatized',
'schist',
'schistose',
'schizo',
'schizoid',
'schizoidism',
'schizomanic',
'schizophrenia',
'schizophrenic',
'schlemiel',
'schlep',
'schlepp',
'schlepping',
'schlock',
'schmaltz',
'schmaltzier',
'schmaltziest',
'schmaltzy',
'schmalz',
'schmalzier',
'schmalzy',
'schmeer',
'schmeering',
'schmelze',
'schmo',
'schmoe',
'schmooze',
'schmoozed',
'schmoozing',
'schmuck',
'schnauzer',
'schnook',
'schnozzle',
'scholar',
'scholarly',
'scholarship',
'scholastic',
'scholium',
'school',
'schoolbag',
'schoolbook',
'schoolboy',
'schoolchild',
'schoolchildren',
'schooled',
'schoolfellow',
'schoolgirl',
'schoolgirlish',
'schoolhouse',
'schooling',
'schoolmarm',
'schoolmaster',
'schoolmate',
'schoolroom',
'schoolteacher',
'schoolteaching',
'schoolwork',
'schoolyard',
'schooner',
'schtick',
'schubert',
'schul',
'schultz',
'schussboomer',
'schussed',
'schussing',
'schwa',
'sci',
'sciatic',
'sciatica',
'science',
'scientific',
'scientist',
'scientistic',
'scil',
'scilicet',
'scimitar',
'scintilla',
'scintillate',
'scintillation',
'scintillometer',
'scion',
'scirocco',
'scission',
'scissor',
'scissoring',
'sclera',
'scleral',
'scleroid',
'scleroma',
'sclerotic',
'sclerotomy',
'scoff',
'scoffed',
'scoffer',
'scoffing',
'scofflaw',
'scold',
'scolder',
'scolding',
'scollop',
'scolloped',
'sconce',
'sconced',
'sconcing',
'scone',
'scoop',
'scooped',
'scooper',
'scoopful',
'scooping',
'scoopsful',
'scoot',
'scooted',
'scooter',
'scooting',
'scop',
'scope',
'scoping',
'scopolamine',
'scorbutic',
'scorch',
'scorched',
'scorcher',
'scorching',
'score',
'scoreboard',
'scorecard',
'scorekeeper',
'scorepad',
'scorer',
'scoria',
'scoriae',
'scorified',
'scorify',
'scorifying',
'scoring',
'scorn',
'scorned',
'scorner',
'scornful',
'scornfully',
'scorning',
'scorpio',
'scorpion',
'scot',
'scotch',
'scotched',
'scotching',
'scotchman',
'scotia',
'scotland',
'scotsman',
'scott',
'scottie',
'scottish',
'scoundrel',
'scoundrelly',
'scour',
'scourer',
'scourge',
'scourger',
'scourging',
'scouring',
'scout',
'scouted',
'scouter',
'scouting',
'scoutmaster',
'scow',
'scowed',
'scowl',
'scowled',
'scowler',
'scowling',
'scrabble',
'scrabbled',
'scrabbler',
'scrabbling',
'scrabbly',
'scrag',
'scraggier',
'scraggiest',
'scragging',
'scragglier',
'scraggliest',
'scraggly',
'scraggy',
'scram',
'scramble',
'scrambled',
'scrambler',
'scrambling',
'scrammed',
'scramming',
'scrap',
'scrapbook',
'scrape',
'scraped',
'scraper',
'scraping',
'scrappage',
'scrapper',
'scrappier',
'scrappiest',
'scrapping',
'scrapple',
'scrappy',
'scratch',
'scratched',
'scratcher',
'scratchier',
'scratchiest',
'scratchily',
'scratching',
'scratchpad',
'scratchy',
'scrawl',
'scrawled',
'scrawler',
'scrawlier',
'scrawliest',
'scrawling',
'scrawly',
'scrawnier',
'scrawniest',
'scrawny',
'scream',
'screamed',
'screamer',
'screaming',
'scree',
'screech',
'screeched',
'screecher',
'screechier',
'screechiest',
'screeching',
'screechy',
'screed',
'screen',
'screened',
'screener',
'screening',
'screenplay',
'screenwriter',
'screw',
'screwball',
'screwdriver',
'screwed',
'screwer',
'screwier',
'screwiest',
'screwing',
'screwworm',
'screwy',
'scribal',
'scribble',
'scribbled',
'scribbler',
'scribbling',
'scribe',
'scribed',
'scriber',
'scribing',
'scrim',
'scrimmage',
'scrimmaging',
'scrimp',
'scrimped',
'scrimpier',
'scrimpiest',
'scrimping',
'scrimpy',
'scrimshaw',
'scrip',
'script',
'scripted',
'scripting',
'scriptural',
'scripture',
'scriptwriter',
'scrive',
'scrived',
'scrivener',
'scrivenery',
'scriving',
'scrod',
'scrofula',
'scroggiest',
'scroll',
'scrolled',
'scrolling',
'scrollwork',
'scrooge',
'scrota',
'scrotal',
'scrotum',
'scrounge',
'scrounger',
'scroungier',
'scrounging',
'scroungy',
'scrub',
'scrubbed',
'scrubber',
'scrubbier',
'scrubbiest',
'scrubbing',
'scrubby',
'scrubwoman',
'scruff',
'scruffier',
'scruffiest',
'scruffy',
'scrumptiously',
'scrunch',
'scrunched',
'scrunching',
'scruple',
'scrupled',
'scrupling',
'scrupulosity',
'scrupulously',
'scrutable',
'scrutinise',
'scrutinising',
'scrutinize',
'scrutinized',
'scrutinizer',
'scrutinizing',
'scrutiny',
'scuba',
'scud',
'scudding',
'scuff',
'scuffed',
'scuffing',
'scuffle',
'scuffled',
'scuffler',
'scuffling',
'sculk',
'sculked',
'sculker',
'scull',
'sculled',
'sculler',
'scullery',
'sculling',
'scullion',
'sculp',
'sculpt',
'sculpted',
'sculpting',
'sculptural',
'sculpture',
'sculpturing',
'scum',
'scummier',
'scummiest',
'scumming',
'scummy',
'scupper',
'scuppering',
'scurf',
'scurfier',
'scurfiest',
'scurfy',
'scurried',
'scurrility',
'scurrilously',
'scurry',
'scurrying',
'scurvier',
'scurviest',
'scurvily',
'scurvy',
'scut',
'scuta',
'scutcheon',
'scute',
'scuttle',
'scuttlebutt',
'scuttled',
'scuttler',
'scuttling',
'scythe',
'scythed',
'scything',
'sea',
'seabag',
'seabed',
'seabird',
'seaboard',
'seaborne',
'seacoast',
'seacraft',
'seadog',
'seafarer',
'seafaring',
'seafloor',
'seafood',
'seafront',
'seagoing',
'seahorse',
'seakeeping',
'seal',
'sealable',
'sealant',
'sealed',
'sealer',
'sealery',
'sealing',
'sealskin',
'seam',
'seaman',
'seamanly',
'seamanship',
'seamed',
'seamer',
'seamier',
'seamiest',
'seaming',
'seamount',
'seamster',
'seamy',
'seance',
'seaplane',
'seaport',
'seaquake',
'sear',
'search',
'searchable',
'searched',
'searcher',
'searching',
'searchlight',
'searer',
'searing',
'seascape',
'seascout',
'seashell',
'seashore',
'seasick',
'seaside',
'seasider',
'season',
'seasonable',
'seasonably',
'seasonal',
'seasonality',
'seasoner',
'seasoning',
'seat',
'seater',
'seatmate',
'seatrain',
'seattle',
'seatwork',
'seawall',
'seaward',
'seawater',
'seaway',
'seaweed',
'seaworthy',
'seborrhea',
'seborrhoeic',
'sec',
'secant',
'secede',
'seceder',
'seceding',
'secession',
'secessionist',
'seclude',
'secluding',
'seclusion',
'seclusionist',
'seclusive',
'secobarbital',
'seconal',
'second',
'secondarily',
'secondary',
'seconde',
'seconder',
'secondhand',
'seconding',
'secondly',
'secrecy',
'secret',
'secretarial',
'secretariat',
'secretary',
'secretaryship',
'secrete',
'secreted',
'secreter',
'secretest',
'secreting',
'secretion',
'secretive',
'secretly',
'secretory',
'sect',
'sectarian',
'sectarianism',
'sectary',
'sectile',
'sectility',
'section',
'sectional',
'sectionalism',
'sectioning',
'sectionize',
'sectionized',
'sectionizing',
'sectoral',
'sectoring',
'secular',
'secularism',
'secularist',
'secularistic',
'secularity',
'secularization',
'secularize',
'secularized',
'secularizer',
'secularizing',
'secularly',
'secunda',
'secundogeniture',
'securable',
'securance',
'secure',
'securely',
'securement',
'securer',
'securest',
'securing',
'security',
'sedan',
'sedate',
'sedately',
'sedater',
'sedatest',
'sedation',
'sedative',
'sedentary',
'seder',
'sedge',
'sedgier',
'sedgy',
'sediment',
'sedimentary',
'sedimentation',
'sedimented',
'sedition',
'seditionary',
'seditionist',
'seduce',
'seduceable',
'seduced',
'seducee',
'seducement',
'seducer',
'seducible',
'seducing',
'seducive',
'seduction',
'seductive',
'sedulously',
'sedum',
'see',
'seeable',
'seed',
'seedbed',
'seedcake',
'seedcase',
'seeder',
'seedier',
'seediest',
'seedily',
'seeding',
'seedling',
'seedman',
'seedpod',
'seedsman',
'seedtime',
'seedy',
'seeing',
'seek',
'seeker',
'seeking',
'seem',
'seemed',
'seemer',
'seeming',
'seemlier',
'seemliest',
'seemly',
'seen',
'seep',
'seepage',
'seeped',
'seepier',
'seeping',
'seepy',
'seer',
'seersucker',
'seesaw',
'seesawed',
'seesawing',
'seethe',
'seethed',
'seething',
'segment',
'segmental',
'segmentary',
'segmentation',
'segmented',
'segmenter',
'segmenting',
'segno',
'segregant',
'segregate',
'segregation',
'segregationist',
'segregative',
'segue',
'segued',
'seguing',
'seidlitz',
'seige',
'seigneur',
'seigneurage',
'seignior',
'seigniorage',
'seigniorial',
'seignorage',
'seignory',
'seine',
'seined',
'seiner',
'seining',
'seism',
'seismal',
'seismic',
'seismicity',
'seismism',
'seismogram',
'seismograph',
'seismographer',
'seismographic',
'seismography',
'seismological',
'seismologist',
'seismology',
'seismometer',
'seismometric',
'seisure',
'seizable',
'seize',
'seized',
'seizer',
'seizing',
'seizor',
'seizure',
'seldom',
'seldomly',
'select',
'selected',
'selectee',
'selecting',
'selection',
'selectional',
'selective',
'selectivity',
'selectly',
'selectman',
'selenide',
'selenite',
'selenium',
'selenographer',
'selenography',
'selenology',
'self',
'selfdom',
'selfed',
'selfheal',
'selfhood',
'selfing',
'selfish',
'selfishly',
'selflessly',
'selfsame',
'selfward',
'sell',
'sellable',
'seller',
'selling',
'sellout',
'selsyn',
'seltzer',
'selvage',
'selvedge',
'semantic',
'semantical',
'semanticist',
'semaphore',
'semblance',
'sembling',
'semester',
'semestral',
'semestrial',
'semi',
'semiactive',
'semiagricultural',
'semiannual',
'semiaquatic',
'semiarid',
'semiautomatic',
'semibiographical',
'semicircle',
'semicircular',
'semicivilized',
'semiclassical',
'semicolon',
'semicomatose',
'semiconducting',
'semiconsciously',
'semicrystalline',
'semidaily',
'semidependence',
'semidependent',
'semidependently',
'semidesert',
'semidetached',
'semidivine',
'semidomestication',
'semidry',
'semierect',
'semifictional',
'semifinal',
'semifinished',
'semiformal',
'semiformed',
'semigraphic',
'semilegal',
'semilegendary',
'semiliterate',
'semilunar',
'semimature',
'semimonthly',
'semimystical',
'semimythical',
'seminal',
'seminar',
'seminarian',
'seminary',
'semination',
'seminole',
'seminormal',
'seminude',
'seminudity',
'semiofficial',
'semiopaque',
'semiotic',
'semipermanent',
'semipermeability',
'semipermeable',
'semipetrified',
'semipolitical',
'semiprimitive',
'semiprivate',
'semipro',
'semiprofessional',
'semipublic',
'semirefined',
'semiresolute',
'semirespectability',
'semirespectable',
'semiretirement',
'semirigid',
'semirural',
'semisatirical',
'semiskilled',
'semisocialistic',
'semisoft',
'semisolid',
'semisweet',
'semite',
'semitic',
'semitism',
'semitist',
'semitone',
'semitraditional',
'semitrailer',
'semitranslucent',
'semitransparent',
'semitropical',
'semitruthful',
'semiurban',
'semivoluntary',
'semivowel',
'semiweekly',
'semiyearly',
'semolina',
'semper',
'semplice',
'sempre',
'senate',
'senatorial',
'senatorian',
'senatorship',
'send',
'sendable',
'sendee',
'sender',
'sending',
'sendoff',
'seneca',
'senegal',
'senegalese',
'senescence',
'senescent',
'seneschal',
'senhor',
'senhora',
'senile',
'senilely',
'senility',
'senior',
'seniority',
'senna',
'senor',
'senora',
'senorita',
'sensate',
'sensation',
'sensational',
'sensationalism',
'sensationalist',
'sense',
'sensed',
'senseful',
'senselessly',
'sensibility',
'sensible',
'sensibler',
'sensiblest',
'sensibly',
'sensing',
'sensitive',
'sensitivity',
'sensitization',
'sensitize',
'sensitized',
'sensitizing',
'sensitometer',
'sensitometric',
'sensor',
'sensoria',
'sensorial',
'sensorium',
'sensory',
'sensu',
'sensual',
'sensualism',
'sensualist',
'sensualistic',
'sensuality',
'sensualization',
'sensualize',
'sensuously',
'sent',
'sentence',
'sentenced',
'sentencing',
'sententiously',
'senti',
'sentient',
'sentiently',
'sentiment',
'sentimental',
'sentimentalism',
'sentimentalist',
'sentimentality',
'sentimentalization',
'sentimentalize',
'sentimentalized',
'sentimentalizing',
'sentinel',
'sentineled',
'sentried',
'sentry',
'sentrying',
'seoul',
'sepal',
'sepaled',
'sepalled',
'sepaloid',
'separability',
'separable',
'separably',
'separate',
'separately',
'separation',
'separatism',
'separatist',
'separative',
'sepia',
'sepoy',
'seppuku',
'sept',
'septa',
'septal',
'septaugintal',
'september',
'septet',
'septette',
'septic',
'septical',
'septicemia',
'septime',
'septuagenarian',
'septum',
'septuple',
'septupled',
'septuplet',
'septupling',
'sepulcher',
'sepulchering',
'sepulchral',
'sepulchre',
'sepulture',
'seq',
'sequel',
'sequelae',
'sequence',
'sequenced',
'sequencer',
'sequencing',
'sequency',
'sequent',
'sequential',
'sequentiality',
'sequester',
'sequestering',
'sequestrable',
'sequestrate',
'sequestration',
'sequestratrix',
'sequin',
'sequined',
'sequinned',
'sequitur',
'sequoia',
'sera',
'seraglio',
'seral',
'serape',
'seraph',
'seraphic',
'seraphim',
'serb',
'serbia',
'serbian',
'sere',
'serenade',
'serenader',
'serenading',
'serendipity',
'serene',
'serenely',
'serener',
'serenest',
'serenity',
'serer',
'serest',
'serf',
'serfage',
'serfdom',
'serfhood',
'serfish',
'serge',
'sergeancy',
'sergeant',
'sergeantcy',
'sergeantship',
'serging',
'serial',
'serialist',
'seriality',
'serialization',
'serialize',
'serialized',
'serializing',
'seriatim',
'seriation',
'serif',
'serigraph',
'serigrapher',
'serigraphy',
'serin',
'serine',
'sering',
'seriously',
'sermon',
'sermonic',
'sermonize',
'sermonized',
'sermonizer',
'sermonizing',
'serologic',
'serological',
'serology',
'serotonin',
'serotype',
'serow',
'serpent',
'serpentine',
'serrate',
'serration',
'serried',
'serrying',
'serum',
'serumal',
'servable',
'serval',
'servant',
'servantship',
'serve',
'served',
'server',
'service',
'serviceability',
'serviceable',
'serviceably',
'serviced',
'serviceman',
'servicer',
'servicewoman',
'servicing',
'serviette',
'servile',
'servilely',
'servility',
'serving',
'servitude',
'servo',
'servomechanism',
'sesame',
'sesquicentennial',
'sesquipedalian',
'sessile',
'session',
'sessional',
'sesterce',
'sestet',
'sestina',
'sestine',
'set',
'setae',
'setal',
'setback',
'setoff',
'seton',
'setout',
'setscrew',
'settee',
'setter',
'setting',
'settle',
'settleability',
'settled',
'settlement',
'settler',
'settling',
'setup',
'seven',
'seventeen',
'seventeenth',
'seventh',
'seventieth',
'seventy',
'sever',
'severability',
'severable',
'several',
'severalized',
'severalizing',
'severance',
'severation',
'severe',
'severely',
'severer',
'severest',
'severing',
'severity',
'seville',
'sew',
'sewage',
'sewed',
'sewer',
'sewerage',
'sewing',
'sewn',
'sex',
'sexagenarian',
'sexed',
'sexier',
'sexiest',
'sexily',
'sexing',
'sexism',
'sexist',
'sexlessly',
'sexological',
'sexologist',
'sexology',
'sexpot',
'sextan',
'sextant',
'sextet',
'sextette',
'sextile',
'sexto',
'sexton',
'sextuple',
'sextupled',
'sextuplet',
'sextupling',
'sextuply',
'sexual',
'sexuality',
'sexualization',
'sexualize',
'sexualized',
'sexualizing',
'sexy',
'sforzato',
'shabbier',
'shabbiest',
'shabbily',
'shabby',
'shack',
'shacker',
'shacking',
'shackle',
'shackled',
'shackler',
'shackling',
'shad',
'shade',
'shader',
'shadier',
'shadiest',
'shadily',
'shading',
'shadow',
'shadowbox',
'shadowboxed',
'shadowboxing',
'shadowed',
'shadower',
'shadowgraph',
'shadowier',
'shadowiest',
'shadowing',
'shadowy',
'shady',
'shaft',
'shafted',
'shafting',
'shag',
'shagbark',
'shaggier',
'shaggiest',
'shaggily',
'shagging',
'shaggy',
'shagreen',
'shah',
'shahdom',
'shaitan',
'shakable',
'shake',
'shakeable',
'shakedown',
'shaken',
'shakeout',
'shaker',
'shakespeare',
'shakespearean',
'shakeup',
'shakier',
'shakiest',
'shakily',
'shaking',
'shako',
'shaky',
'shale',
'shaled',
'shalier',
'shall',
'shallop',
'shallot',
'shallow',
'shallowed',
'shallower',
'shallowest',
'shallowing',
'shalom',
'shalt',
'shaly',
'sham',
'shamable',
'shaman',
'shamanic',
'shamble',
'shambled',
'shambling',
'shame',
'shamed',
'shamefaced',
'shameful',
'shamefully',
'shamelessly',
'shaming',
'shammed',
'shammer',
'shammied',
'shamming',
'shammy',
'shampoo',
'shampooed',
'shampooer',
'shampooing',
'shamrock',
'shanghai',
'shanghaied',
'shank',
'shanked',
'shanking',
'shantey',
'shanti',
'shantung',
'shanty',
'shapable',
'shape',
'shapeable',
'shaped',
'shapelessly',
'shapelier',
'shapeliest',
'shapely',
'shaper',
'shapeup',
'shaping',
'sharable',
'shard',
'share',
'shareability',
'shareable',
'sharecrop',
'sharecropper',
'sharecropping',
'shareholder',
'shareowner',
'sharer',
'sharesman',
'sharif',
'sharing',
'shark',
'sharked',
'sharker',
'sharking',
'sharkskin',
'sharp',
'sharped',
'sharpen',
'sharpened',
'sharpener',
'sharpening',
'sharper',
'sharpest',
'sharpie',
'sharping',
'sharply',
'sharpshooter',
'sharpshooting',
'sharpy',
'shashlik',
'shat',
'shatter',
'shattering',
'shatterproof',
'shavable',
'shave',
'shaveable',
'shaved',
'shaven',
'shaver',
'shaving',
'shawed',
'shawl',
'shawled',
'shawling',
'shawm',
'shawn',
'shawnee',
'shay',
'she',
'sheaf',
'sheafed',
'sheafing',
'shear',
'shearer',
'shearing',
'sheath',
'sheathe',
'sheathed',
'sheather',
'sheathing',
'sheave',
'sheaved',
'sheaving',
'shebang',
'shebeen',
'shed',
'shedable',
'shedder',
'shedding',
'sheen',
'sheened',
'sheeney',
'sheenful',
'sheenie',
'sheenier',
'sheeniest',
'sheening',
'sheeny',
'sheep',
'sheepdog',
'sheepfold',
'sheepherder',
'sheepherding',
'sheepish',
'sheepishly',
'sheepman',
'sheepshank',
'sheepshearer',
'sheepshearing',
'sheepskin',
'sheer',
'sheerer',
'sheerest',
'sheering',
'sheerly',
'sheet',
'sheeted',
'sheeter',
'sheetfed',
'sheeting',
'sheetrock',
'shegetz',
'sheik',
'sheikdom',
'sheikh',
'sheila',
'shekel',
'shelf',
'shelfful',
'shell',
'shellac',
'shellack',
'shellacker',
'shellacking',
'shelled',
'sheller',
'shelley',
'shellfire',
'shellfish',
'shellier',
'shelling',
'shelly',
'shelter',
'shelterer',
'sheltering',
'shelve',
'shelved',
'shelver',
'shelvier',
'shelviest',
'shelving',
'shelvy',
'shenanigan',
'sheol',
'shepherd',
'shepherding',
'sherbert',
'sherbet',
'sherd',
'sherif',
'sheriff',
'sheriffalty',
'sheriffdom',
'sherlock',
'sherpa',
'sherry',
'shetland',
'shew',
'shewed',
'shewer',
'shewing',
'shewn',
'shiatsu',
'shibboleth',
'shicksa',
'shied',
'shield',
'shielder',
'shielding',
'shier',
'shiest',
'shift',
'shiftability',
'shiftable',
'shifted',
'shifter',
'shiftier',
'shiftiest',
'shiftily',
'shifting',
'shiftlessly',
'shifty',
'shiksa',
'shill',
'shilled',
'shillelagh',
'shilling',
'shily',
'shim',
'shimmed',
'shimmer',
'shimmering',
'shimmery',
'shimmied',
'shimming',
'shimmy',
'shimmying',
'shin',
'shinbone',
'shindig',
'shindy',
'shine',
'shined',
'shiner',
'shingle',
'shingled',
'shingler',
'shingling',
'shinier',
'shiniest',
'shinily',
'shining',
'shinleaf',
'shinned',
'shinney',
'shinnied',
'shinning',
'shinny',
'shinnying',
'shinto',
'shintoism',
'shintoist',
'shiny',
'ship',
'shipboard',
'shipbuilder',
'shipbuilding',
'shipkeeper',
'shipload',
'shipman',
'shipmaster',
'shipmate',
'shipment',
'shipowner',
'shippable',
'shippage',
'shipper',
'shipping',
'shipshape',
'shipside',
'shipt',
'shipway',
'shipworm',
'shipwreck',
'shipwrecking',
'shipwright',
'shipyard',
'shire',
'shirk',
'shirked',
'shirker',
'shirking',
'shirley',
'shirr',
'shirring',
'shirt',
'shirtfront',
'shirtier',
'shirtiest',
'shirting',
'shirtmaker',
'shirtsleeve',
'shirttail',
'shirtwaist',
'shirty',
'shish',
'shist',
'shiv',
'shiva',
'shivah',
'shivaree',
'shivareed',
'shive',
'shiver',
'shiverer',
'shivering',
'shivery',
'shlemiel',
'shlep',
'shlock',
'shmo',
'shoal',
'shoaled',
'shoaler',
'shoalier',
'shoaliest',
'shoaling',
'shoaly',
'shoat',
'shock',
'shocker',
'shocking',
'shockproof',
'shockwave',
'shod',
'shodden',
'shoddier',
'shoddiest',
'shoddily',
'shoddy',
'shoe',
'shoeblack',
'shoed',
'shoehorn',
'shoehorned',
'shoeing',
'shoelace',
'shoemaker',
'shoer',
'shoestring',
'shoetree',
'shogun',
'shogunal',
'shoji',
'sholom',
'shone',
'shoo',
'shooed',
'shoofly',
'shooing',
'shook',
'shoot',
'shooter',
'shooting',
'shootout',
'shop',
'shopboy',
'shopbreaker',
'shope',
'shopgirl',
'shopkeeper',
'shoplift',
'shoplifted',
'shoplifter',
'shoplifting',
'shopman',
'shoppe',
'shopper',
'shopping',
'shoptalk',
'shopworn',
'shore',
'shorebird',
'shoreline',
'shoring',
'shorn',
'short',
'shortage',
'shortbread',
'shortcake',
'shortchange',
'shortchanging',
'shortcoming',
'shortcut',
'shorted',
'shorten',
'shortened',
'shortener',
'shortening',
'shorter',
'shortest',
'shortfall',
'shorthand',
'shorthorn',
'shortie',
'shorting',
'shortish',
'shortly',
'shortsighted',
'shortstop',
'shortwave',
'shorty',
'shoshone',
'shoshonean',
'shot',
'shote',
'shotgun',
'shotgunned',
'shotted',
'shotting',
'should',
'shoulder',
'shouldering',
'shouldst',
'shout',
'shouted',
'shouter',
'shouting',
'shove',
'shoved',
'shovel',
'shoveled',
'shoveler',
'shovelful',
'shovelhead',
'shoveling',
'shovelled',
'shoveller',
'shovelling',
'shovelman',
'shovelsful',
'shover',
'shoving',
'show',
'showboat',
'showcase',
'showcased',
'showcasing',
'showdown',
'showed',
'shower',
'showerhead',
'showering',
'showery',
'showgirl',
'showier',
'showiest',
'showily',
'showing',
'showman',
'showmanship',
'shown',
'showoff',
'showpiece',
'showplace',
'showroom',
'showup',
'showy',
'shrank',
'shrapnel',
'shredder',
'shredding',
'shreveport',
'shrew',
'shrewd',
'shrewder',
'shrewdest',
'shrewdly',
'shrewed',
'shrewing',
'shrewish',
'shriek',
'shrieked',
'shrieker',
'shriekier',
'shriekiest',
'shrieking',
'shrieky',
'shrift',
'shrike',
'shrill',
'shrilled',
'shriller',
'shrillest',
'shrilling',
'shrilly',
'shrimp',
'shrimped',
'shrimper',
'shrimpier',
'shrimpiest',
'shrimping',
'shrimpy',
'shrine',
'shrined',
'shrining',
'shrink',
'shrinkable',
'shrinkage',
'shrinker',
'shrinking',
'shrive',
'shrived',
'shrivel',
'shriveled',
'shriveling',
'shrivelled',
'shrivelling',
'shriven',
'shriver',
'shriving',
'shroud',
'shrouding',
'shrove',
'shrub',
'shrubbery',
'shrubbier',
'shrubbiest',
'shrubby',
'shrug',
'shrugging',
'shrunk',
'shrunken',
'shtetel',
'shtetl',
'shtick',
'shuck',
'shucker',
'shucking',
'shudder',
'shuddering',
'shuddery',
'shuffle',
'shuffleboard',
'shuffled',
'shuffler',
'shuffling',
'shul',
'shun',
'shunned',
'shunner',
'shunning',
'shunpike',
'shunpiked',
'shunpiker',
'shunpiking',
'shunt',
'shunted',
'shunter',
'shunting',
'shush',
'shushed',
'shushing',
'shut',
'shutdown',
'shute',
'shuted',
'shuteye',
'shuting',
'shutoff',
'shutout',
'shutter',
'shutterbug',
'shuttering',
'shutting',
'shuttle',
'shuttlecock',
'shuttled',
'shuttling',
'shy',
'shyer',
'shyest',
'shying',
'shylock',
'shylocking',
'shyly',
'shyster',
'siam',
'siamese',
'sib',
'siberia',
'siberian',
'sibilance',
'sibilant',
'sibilantly',
'sibilate',
'sibilation',
'sibling',
'sibyl',
'sibylic',
'sibyllic',
'sibylline',
'sic',
'sicced',
'siccing',
'sicilian',
'sicily',
'sick',
'sickbay',
'sickbed',
'sicken',
'sickened',
'sickener',
'sickening',
'sicker',
'sickest',
'sicking',
'sickish',
'sickle',
'sickled',
'sicklier',
'sickliest',
'sicklily',
'sickling',
'sickly',
'sickout',
'sickroom',
'side',
'sidearm',
'sideband',
'sideboard',
'sideburn',
'sidecar',
'sidehill',
'sidekick',
'sidelight',
'sideline',
'sidelined',
'sideliner',
'sidelining',
'sidelong',
'sideman',
'sidepiece',
'sidereal',
'siderite',
'sidesaddle',
'sideshow',
'sideslip',
'sideslipping',
'sidespin',
'sidesplitting',
'sidestep',
'sidestepper',
'sidestepping',
'sidestroke',
'sideswipe',
'sideswiped',
'sideswiper',
'sideswiping',
'sidetrack',
'sidetracking',
'sidewalk',
'sidewall',
'sideward',
'sideway',
'sidewinder',
'sidewise',
'siding',
'sidle',
'sidled',
'sidler',
'sidling',
'sidney',
'siecle',
'siege',
'sieging',
'sienna',
'sierra',
'sierran',
'siesta',
'sieur',
'sieve',
'sieved',
'sieving',
'sift',
'sifted',
'sifter',
'sifting',
'sigh',
'sighed',
'sigher',
'sighing',
'sight',
'sighted',
'sighter',
'sighting',
'sightlier',
'sightliest',
'sightly',
'sightsaw',
'sightsee',
'sightseeing',
'sightseen',
'sightseer',
'sigil',
'sigma',
'sigmoid',
'sigmoidal',
'sign',
'signable',
'signal',
'signaled',
'signaler',
'signaling',
'signalization',
'signalize',
'signalized',
'signalizing',
'signalled',
'signaller',
'signalling',
'signalman',
'signatary',
'signatory',
'signatural',
'signature',
'signboard',
'signed',
'signee',
'signer',
'signet',
'signeted',
'significance',
'significant',
'significantly',
'significate',
'signification',
'signified',
'signifier',
'signify',
'signifying',
'signing',
'signiori',
'signiory',
'signor',
'signora',
'signore',
'signori',
'signorina',
'signorine',
'signory',
'signpost',
'signposted',
'sikh',
'sikhism',
'silage',
'silence',
'silenced',
'silencer',
'silencing',
'silent',
'silenter',
'silentest',
'silently',
'silesia',
'silex',
'silhouette',
'silhouetted',
'silhouetting',
'silica',
'silicate',
'silicon',
'silicone',
'silk',
'silked',
'silken',
'silkier',
'silkiest',
'silkily',
'silking',
'silkscreen',
'silkscreened',
'silkscreening',
'silkweed',
'silkworm',
'silky',
'sill',
'sillier',
'silliest',
'sillily',
'silly',
'silo',
'siloed',
'siloing',
'silt',
'siltation',
'silted',
'siltier',
'siltiest',
'silting',
'silty',
'silurian',
'silva',
'silvan',
'silver',
'silverer',
'silverfish',
'silvering',
'silvern',
'silversmith',
'silverware',
'silvery',
'silvester',
'simian',
'similar',
'similarity',
'similarly',
'simile',
'similitude',
'simitar',
'simmer',
'simmering',
'simoleon',
'simon',
'simoniac',
'simonist',
'simonize',
'simonized',
'simonizing',
'simony',
'simp',
'simpatico',
'simper',
'simperer',
'simpering',
'simple',
'simpler',
'simplest',
'simpleton',
'simplex',
'simplicity',
'simplification',
'simplified',
'simplifier',
'simplify',
'simplifying',
'simplism',
'simplistic',
'simply',
'simulant',
'simulate',
'simulation',
'simulative',
'simulcast',
'simulcasting',
'simultaneity',
'simultaneously',
'sin',
'sinatra',
'since',
'sincere',
'sincerely',
'sincerer',
'sincerest',
'sincerity',
'sine',
'sinecure',
'sinew',
'sinewed',
'sinewing',
'sinewy',
'sinfonia',
'sinful',
'sinfully',
'sing',
'singable',
'singapore',
'singe',
'singeing',
'singer',
'singhalese',
'singing',
'single',
'singled',
'singlet',
'singleton',
'singletree',
'singling',
'singsong',
'singular',
'singularity',
'singularly',
'sinh',
'sinhalese',
'sinicize',
'sinicized',
'sinicizing',
'sinister',
'sinisterly',
'sinistrality',
'sink',
'sinkable',
'sinkage',
'sinker',
'sinkhole',
'sinking',
'sinlessly',
'sinned',
'sinner',
'sinning',
'sinology',
'sinter',
'sintering',
'sinuate',
'sinuosity',
'sinuously',
'sinusoid',
'sioux',
'sip',
'siphon',
'siphonage',
'siphonal',
'siphonic',
'siphoning',
'sipper',
'sipping',
'sippy',
'sir',
'sire',
'siree',
'siren',
'siring',
'sirloin',
'sirocco',
'sirrah',
'sirree',
'sirup',
'sirupy',
'sisal',
'sissier',
'sissified',
'sissy',
'sissyish',
'sister',
'sisterhood',
'sistering',
'sisterly',
'sistrum',
'sit',
'sitar',
'sitarist',
'sitcom',
'site',
'sited',
'siting',
'sitter',
'sitting',
'situ',
'situate',
'situation',
'situational',
'situp',
'sitz',
'sitzmark',
'six',
'sixfold',
'sixing',
'sixpence',
'sixpenny',
'sixte',
'sixteen',
'sixteenth',
'sixth',
'sixthly',
'sixtieth',
'sixty',
'sizable',
'sizably',
'size',
'sizeable',
'sizeably',
'sized',
'sizer',
'sizier',
'siziest',
'sizing',
'sizy',
'sizzle',
'sizzled',
'sizzler',
'sizzling',
'skag',
'skald',
'skaldic',
'skate',
'skateboard',
'skateboarder',
'skateboarding',
'skater',
'skean',
'skeeing',
'skeet',
'skeeter',
'skein',
'skeined',
'skeining',
'skeletal',
'skeletomuscular',
'skeleton',
'skelter',
'skeltering',
'skeptic',
'skeptical',
'skepticism',
'sketch',
'sketchbook',
'sketched',
'sketcher',
'sketchier',
'sketchiest',
'sketchily',
'sketching',
'sketchy',
'skew',
'skewed',
'skewer',
'skewering',
'skewing',
'ski',
'skiable',
'skid',
'skidder',
'skiddier',
'skiddiest',
'skidding',
'skiddoo',
'skiddooed',
'skiddooing',
'skiddy',
'skidoo',
'skidooed',
'skidooing',
'skied',
'skier',
'skiey',
'skiff',
'skilful',
'skill',
'skilled',
'skillet',
'skillful',
'skillfully',
'skilling',
'skim',
'skimmed',
'skimmer',
'skimming',
'skimp',
'skimped',
'skimpier',
'skimpiest',
'skimpily',
'skimping',
'skimpy',
'skin',
'skindive',
'skindiving',
'skinflint',
'skinful',
'skinhead',
'skink',
'skinned',
'skinner',
'skinnier',
'skinniest',
'skinning',
'skinny',
'skintight',
'skip',
'skipjack',
'skiplane',
'skipper',
'skipperage',
'skippering',
'skipping',
'skirl',
'skirled',
'skirling',
'skirmish',
'skirmished',
'skirmisher',
'skirmishing',
'skirt',
'skirted',
'skirter',
'skirting',
'skit',
'skitter',
'skitterier',
'skittering',
'skittery',
'skittish',
'skittle',
'skivvy',
'skiwear',
'skoal',
'skoaled',
'skoaling',
'skulduggery',
'skulk',
'skulked',
'skulker',
'skulking',
'skull',
'skullcap',
'skullduggery',
'skulled',
'skunk',
'skunked',
'skunking',
'sky',
'skyborne',
'skycap',
'skycoach',
'skydive',
'skydived',
'skydiver',
'skydiving',
'skydove',
'skyed',
'skyey',
'skyhook',
'skying',
'skyjack',
'skyjacker',
'skyjacking',
'skylab',
'skylark',
'skylarked',
'skylarker',
'skylarking',
'skylight',
'skyline',
'skyman',
'skyrocket',
'skyrocketed',
'skyrocketing',
'skyscraper',
'skyscraping',
'skyward',
'skyway',
'skywrite',
'skywriter',
'skywriting',
'skywritten',
'skywrote',
'slab',
'slabbed',
'slabber',
'slabbering',
'slabbery',
'slabbing',
'slack',
'slackage',
'slacken',
'slackened',
'slackening',
'slacker',
'slackest',
'slacking',
'slackly',
'slag',
'slaggier',
'slaggiest',
'slagging',
'slaggy',
'slain',
'slakable',
'slake',
'slaked',
'slaker',
'slaking',
'slalom',
'slalomed',
'slaloming',
'slam',
'slammed',
'slamming',
'slander',
'slanderer',
'slandering',
'slanderously',
'slang',
'slangier',
'slangiest',
'slanging',
'slangy',
'slant',
'slanted',
'slanting',
'slantwise',
'slap',
'slapdash',
'slaphappier',
'slaphappiest',
'slaphappy',
'slapjack',
'slapper',
'slapping',
'slapstick',
'slash',
'slashed',
'slasher',
'slashing',
'slat',
'slate',
'slater',
'slather',
'slathering',
'slatier',
'slatted',
'slattern',
'slatternly',
'slatting',
'slaty',
'slaughter',
'slaughterer',
'slaughterhouse',
'slaughtering',
'slav',
'slave',
'slaved',
'slaver',
'slaverer',
'slavering',
'slavery',
'slavey',
'slavic',
'slaving',
'slavish',
'slavishly',
'slaw',
'slay',
'slayer',
'slaying',
'sleave',
'sleazier',
'sleaziest',
'sleazily',
'sleazy',
'sled',
'sledder',
'sledding',
'sledge',
'sledgehammer',
'sledging',
'sleek',
'sleekened',
'sleekening',
'sleeker',
'sleekest',
'sleekier',
'sleeking',
'sleekly',
'sleep',
'sleeper',
'sleepier',
'sleepiest',
'sleepily',
'sleeping',
'sleepwalk',
'sleepwalker',
'sleepwalking',
'sleepy',
'sleepyhead',
'sleet',
'sleeted',
'sleetier',
'sleetiest',
'sleeting',
'sleety',
'sleeve',
'sleeved',
'sleeving',
'sleigh',
'sleighed',
'sleigher',
'sleighing',
'sleight',
'slender',
'slenderer',
'slenderest',
'slenderize',
'slenderized',
'slenderizing',
'slenderly',
'slept',
'sleuth',
'sleuthed',
'sleuthing',
'slew',
'slewed',
'slewing',
'slice',
'sliceable',
'sliced',
'slicer',
'slicing',
'slick',
'slicker',
'slickest',
'slicking',
'slickly',
'slid',
'slidable',
'slidden',
'slide',
'slider',
'slideway',
'sliding',
'slier',
'sliest',
'slight',
'slighted',
'slighter',
'slightest',
'slighting',
'slightly',
'slily',
'slim',
'slime',
'slimed',
'slimier',
'slimiest',
'slimily',
'sliming',
'slimly',
'slimmed',
'slimmer',
'slimmest',
'slimming',
'slimy',
'sling',
'slinger',
'slinging',
'slingshot',
'slink',
'slinkier',
'slinkiest',
'slinkily',
'slinking',
'slinky',
'slip',
'slipcase',
'slipcover',
'slipknot',
'slipover',
'slippage',
'slipper',
'slipperier',
'slipperiest',
'slippery',
'slippier',
'slippiest',
'slipping',
'slippy',
'slipshod',
'slipslop',
'slipt',
'slipup',
'slit',
'slither',
'slithering',
'slithery',
'slitted',
'slitter',
'slitting',
'sliver',
'sliverer',
'slivering',
'slivovic',
'slob',
'slobber',
'slobbering',
'slobbery',
'slobbish',
'sloe',
'slog',
'slogan',
'slogger',
'slogging',
'sloop',
'slop',
'slope',
'sloped',
'sloper',
'sloping',
'sloppier',
'sloppiest',
'sloppily',
'slopping',
'sloppy',
'slopwork',
'slosh',
'sloshed',
'sloshier',
'sloshiest',
'sloshing',
'sloshy',
'slot',
'sloth',
'slothful',
'slotted',
'slotting',
'slouch',
'slouched',
'sloucher',
'slouchier',
'slouchiest',
'slouching',
'slouchy',
'slough',
'sloughed',
'sloughier',
'sloughiest',
'sloughing',
'sloughy',
'slovak',
'sloven',
'slovenlier',
'slovenly',
'slow',
'slowdown',
'slowed',
'slower',
'slowest',
'slowing',
'slowish',
'slowly',
'slowpoke',
'slowwitted',
'slowworm',
'slubbering',
'sludge',
'sludgier',
'sludgiest',
'sludgy',
'slue',
'slued',
'slug',
'slugabed',
'slugfest',
'sluggard',
'sluggardly',
'slugger',
'slugging',
'sluggish',
'sluggishly',
'sluice',
'sluiced',
'sluiceway',
'sluicing',
'sluicy',
'sluing',
'slum',
'slumber',
'slumberer',
'slumbering',
'slumbery',
'slumlord',
'slummed',
'slummer',
'slummier',
'slummiest',
'slumming',
'slummy',
'slump',
'slumped',
'slumping',
'slung',
'slunk',
'slur',
'slurp',
'slurped',
'slurping',
'slurried',
'slurring',
'slurry',
'slurrying',
'slush',
'slushed',
'slushier',
'slushiest',
'slushily',
'slushing',
'slushy',
'sly',
'slyer',
'slyest',
'slyly',
'smack',
'smacker',
'smacking',
'small',
'smaller',
'smallest',
'smallholder',
'smallish',
'smallpox',
'smarmier',
'smarmiest',
'smarmy',
'smart',
'smarted',
'smarten',
'smartened',
'smartening',
'smarter',
'smartest',
'smartie',
'smarting',
'smartly',
'smarty',
'smash',
'smashable',
'smashed',
'smasher',
'smashing',
'smashup',
'smatter',
'smattering',
'smear',
'smearcase',
'smearer',
'smearier',
'smeariest',
'smearing',
'smeary',
'smegma',
'smell',
'smelled',
'smeller',
'smellier',
'smelliest',
'smelling',
'smelly',
'smelt',
'smelted',
'smelter',
'smeltery',
'smelting',
'smidgen',
'smidgeon',
'smilax',
'smile',
'smiled',
'smiler',
'smiling',
'smirch',
'smirched',
'smirching',
'smirk',
'smirked',
'smirker',
'smirkier',
'smirkiest',
'smirking',
'smirky',
'smit',
'smite',
'smiter',
'smith',
'smithy',
'smiting',
'smitten',
'smock',
'smocking',
'smog',
'smoggier',
'smoggiest',
'smoggy',
'smokable',
'smoke',
'smoked',
'smokehouse',
'smokepot',
'smoker',
'smokestack',
'smokey',
'smokier',
'smokiest',
'smokily',
'smoking',
'smoky',
'smolder',
'smoldering',
'smooch',
'smooched',
'smooching',
'smoochy',
'smooth',
'smoothed',
'smoothen',
'smoothened',
'smoother',
'smoothest',
'smoothie',
'smoothing',
'smoothly',
'smoothy',
'smorgasbord',
'smote',
'smother',
'smothering',
'smothery',
'smoulder',
'smudge',
'smudgier',
'smudgiest',
'smudgily',
'smudging',
'smudgy',
'smug',
'smugger',
'smuggest',
'smuggle',
'smuggled',
'smuggler',
'smuggling',
'smugly',
'smut',
'smutch',
'smutted',
'smuttier',
'smuttiest',
'smuttily',
'smutting',
'smutty',
'snack',
'snacking',
'snaffle',
'snaffled',
'snafu',
'snafued',
'snafuing',
'snag',
'snaggier',
'snaggiest',
'snagging',
'snaggy',
'snail',
'snailed',
'snailing',
'snaillike',
'snake',
'snakebite',
'snaked',
'snakelike',
'snakier',
'snakiest',
'snakily',
'snaking',
'snaky',
'snap',
'snapback',
'snapdragon',
'snapper',
'snappier',
'snappiest',
'snappily',
'snapping',
'snappish',
'snappy',
'snapshot',
'snapweed',
'snare',
'snarer',
'snaring',
'snark',
'snarl',
'snarled',
'snarler',
'snarlier',
'snarliest',
'snarling',
'snarly',
'snatch',
'snatched',
'snatcher',
'snatchier',
'snatchiest',
'snatching',
'snatchy',
'snazzier',
'snazziest',
'snazzy',
'sneak',
'sneaked',
'sneaker',
'sneakier',
'sneakiest',
'sneakily',
'sneaking',
'sneaky',
'sneer',
'sneerer',
'sneerful',
'sneering',
'sneeze',
'sneezed',
'sneezer',
'sneezier',
'sneeziest',
'sneezing',
'sneezy',
'snick',
'snicker',
'snickering',
'snickery',
'snicking',
'snide',
'snidely',
'snider',
'snidest',
'sniff',
'sniffed',
'sniffer',
'sniffier',
'sniffily',
'sniffing',
'sniffish',
'sniffle',
'sniffled',
'sniffler',
'sniffling',
'sniffy',
'snifter',
'snigger',
'sniggering',
'sniggle',
'sniggling',
'snip',
'snipe',
'sniped',
'sniper',
'sniping',
'snipper',
'snippet',
'snippety',
'snippier',
'snippiest',
'snippily',
'snipping',
'snippy',
'snit',
'snitch',
'snitched',
'snitcher',
'snitching',
'snivel',
'sniveled',
'sniveler',
'sniveling',
'snivelled',
'snivelling',
'snob',
'snobbery',
'snobbier',
'snobbiest',
'snobbily',
'snobbish',
'snobbishly',
'snobbism',
'snobby',
'snood',
'snooker',
'snooking',
'snoop',
'snooped',
'snooper',
'snoopier',
'snoopiest',
'snoopily',
'snooping',
'snoopy',
'snoot',
'snooted',
'snootier',
'snootiest',
'snootily',
'snooting',
'snooty',
'snooze',
'snoozed',
'snoozer',
'snoozier',
'snoozing',
'snoozy',
'snore',
'snorer',
'snoring',
'snorkel',
'snorkeled',
'snorkeling',
'snort',
'snorted',
'snorter',
'snorting',
'snot',
'snottier',
'snottiest',
'snottily',
'snotty',
'snout',
'snouted',
'snoutier',
'snoutiest',
'snouting',
'snoutish',
'snouty',
'snow',
'snowball',
'snowballed',
'snowballing',
'snowbank',
'snowbelt',
'snowbound',
'snowcap',
'snowdrift',
'snowdrop',
'snowed',
'snowfall',
'snowfield',
'snowflake',
'snowier',
'snowiest',
'snowily',
'snowing',
'snowman',
'snowmelt',
'snowmobile',
'snowmobiler',
'snowmobiling',
'snowpack',
'snowplow',
'snowplowed',
'snowshoe',
'snowshoed',
'snowslide',
'snowstorm',
'snowsuit',
'snowy',
'snub',
'snubbed',
'snubber',
'snubbier',
'snubbiest',
'snubbing',
'snubby',
'snuck',
'snuff',
'snuffbox',
'snuffed',
'snuffer',
'snuffier',
'snuffiest',
'snuffily',
'snuffing',
'snuffle',
'snuffled',
'snuffler',
'snufflier',
'snuffliest',
'snuffling',
'snuffly',
'snuffy',
'snug',
'snugger',
'snuggery',
'snuggest',
'snugging',
'snuggle',
'snuggled',
'snuggling',
'snugly',
'so',
'soak',
'soaked',
'soaker',
'soaking',
'soap',
'soapbark',
'soapbox',
'soaped',
'soaper',
'soapier',
'soapiest',
'soapily',
'soaping',
'soapmaking',
'soapstone',
'soapwort',
'soapy',
'soar',
'soarer',
'soaring',
'soave',
'sob',
'sobbed',
'sobber',
'sobbing',
'sobeit',
'sober',
'soberer',
'soberest',
'sobering',
'soberize',
'soberizing',
'soberly',
'sobful',
'sobriety',
'sobriquet',
'soc',
'soccer',
'sociability',
'sociable',
'sociably',
'social',
'socialism',
'socialist',
'socialistic',
'socialite',
'socialization',
'socialize',
'socialized',
'socializer',
'socializing',
'societal',
'society',
'sociocentricity',
'sociocentrism',
'socioeconomic',
'sociologic',
'sociological',
'sociologist',
'sociology',
'sociometric',
'sociopath',
'sociopathic',
'sociopathy',
'sociopolitical',
'sociosexual',
'sociosexuality',
'sock',
'socket',
'socketed',
'socketing',
'sockeye',
'socking',
'sockman',
'socratic',
'sod',
'soda',
'sodalist',
'sodalite',
'sodality',
'sodden',
'soddened',
'soddening',
'soddenly',
'sodding',
'soddy',
'sodium',
'sodom',
'sodomite',
'soever',
'sofa',
'sofar',
'soffit',
'sofia',
'soft',
'softball',
'softbound',
'soften',
'softened',
'softener',
'softening',
'softer',
'softest',
'softhearted',
'softie',
'softly',
'software',
'softwood',
'softy',
'soggier',
'soggiest',
'soggily',
'soggy',
'soigne',
'soil',
'soilage',
'soilborne',
'soiled',
'soiling',
'soiree',
'sojourn',
'sojourned',
'sojourner',
'sojourning',
'sojournment',
'sol',
'solace',
'solaced',
'solacer',
'solacing',
'solar',
'solaria',
'solarism',
'solarium',
'solarization',
'solarize',
'solarized',
'solarizing',
'sold',
'solder',
'solderer',
'soldering',
'soldier',
'soldiering',
'soldierly',
'soldiery',
'sole',
'solecism',
'solecist',
'solecize',
'solecized',
'soled',
'solely',
'solemn',
'solemner',
'solemnest',
'solemnity',
'solemnization',
'solemnize',
'solemnized',
'solemnizing',
'solemnly',
'solenoid',
'solenoidal',
'soleplate',
'soleprint',
'solfege',
'solfeggi',
'soli',
'solicit',
'solicitation',
'solicited',
'soliciting',
'solicitorship',
'solicitously',
'solicitude',
'solid',
'solidarity',
'solidary',
'solider',
'solidest',
'solidi',
'solidification',
'solidified',
'solidify',
'solidifying',
'solidity',
'solidly',
'solido',
'soliloquize',
'soliloquized',
'soliloquizing',
'soliloquy',
'soling',
'solipsism',
'solipsist',
'solipsistic',
'soliquid',
'solitaire',
'solitary',
'solitude',
'solo',
'soloed',
'soloing',
'soloist',
'solomon',
'solstice',
'solstitial',
'solubility',
'solubilization',
'solubilized',
'solubilizing',
'soluble',
'solubly',
'solute',
'solution',
'solvability',
'solvable',
'solvate',
'solvation',
'solve',
'solved',
'solvency',
'solvent',
'solvently',
'solver',
'solving',
'soma',
'somalia',
'somatic',
'somatological',
'somatology',
'somatopsychic',
'somatotypology',
'somber',
'somberly',
'sombre',
'sombrely',
'sombrero',
'some',
'somebody',
'someday',
'somehow',
'someone',
'someplace',
'somersault',
'somersaulted',
'somersaulting',
'something',
'sometime',
'someway',
'somewhat',
'somewhen',
'somewhere',
'somewise',
'somnambulant',
'somnambular',
'somnambulate',
'somnambulation',
'somnambulism',
'somnambulist',
'somnambulistic',
'somnific',
'somniloquist',
'somnolence',
'somnolency',
'somnolent',
'somnolently',
'son',
'sonar',
'sonarman',
'sonata',
'sonatina',
'sonatine',
'sonde',
'song',
'songbird',
'songbook',
'songfest',
'songful',
'songfully',
'songster',
'songwriter',
'sonic',
'sonnet',
'sonneted',
'sonneting',
'sonnetted',
'sonnetting',
'sonny',
'sonorant',
'sonority',
'sonorously',
'sooey',
'soon',
'sooner',
'soonest',
'soot',
'sooted',
'sooth',
'soothe',
'soothed',
'soother',
'soothest',
'soothing',
'soothly',
'soothsaid',
'soothsay',
'soothsayer',
'soothsaying',
'sootier',
'sootiest',
'sootily',
'sooting',
'sooty',
'sop',
'soph',
'sophism',
'sophist',
'sophistic',
'sophistical',
'sophisticate',
'sophistication',
'sophistry',
'sophoclean',
'sophomore',
'sophomoric',
'sophy',
'sopor',
'soporific',
'soporose',
'soppier',
'soppiest',
'sopping',
'soppy',
'soprani',
'soprano',
'sorbate',
'sorbed',
'sorbet',
'sorbic',
'sorbitol',
'sorcerer',
'sorcery',
'sordid',
'sordidly',
'sore',
'sorehead',
'sorel',
'sorely',
'sorer',
'sorest',
'sorghum',
'sorority',
'sorption',
'sorptive',
'sorrel',
'sorrier',
'sorriest',
'sorrily',
'sorrow',
'sorrowed',
'sorrower',
'sorrowful',
'sorrowfully',
'sorrowing',
'sorry',
'sort',
'sortable',
'sortably',
'sorted',
'sorter',
'sortie',
'sortied',
'sortieing',
'sorting',
'sot',
'sotted',
'sottish',
'sottishly',
'soubrette',
'soubriquet',
'souchong',
'soudan',
'souffle',
'sough',
'soughed',
'soughing',
'sought',
'soul',
'souled',
'soulful',
'soulfully',
'sound',
'soundboard',
'soundbox',
'sounder',
'soundest',
'sounding',
'soundlessly',
'soundly',
'soundproof',
'soundproofed',
'soundproofing',
'soundtrack',
'soup',
'soupcon',
'souped',
'soupier',
'soupiest',
'souping',
'soupy',
'sour',
'sourball',
'source',
'sourdough',
'sourer',
'sourest',
'souring',
'sourish',
'sourly',
'sourwood',
'souse',
'soused',
'sousing',
'south',
'southbound',
'southeast',
'southeaster',
'southeasterly',
'southeastern',
'southeastward',
'southeastwardly',
'southed',
'souther',
'southerly',
'southern',
'southerner',
'southernmost',
'southing',
'southpaw',
'southron',
'southward',
'southwardly',
'southwest',
'southwester',
'southwesterly',
'southwestern',
'southwesterner',
'southwestward',
'southwestwardly',
'souvenir',
'sovereign',
'sovereignly',
'sovereignty',
'soviet',
'sovietism',
'sovietize',
'sovietized',
'sovietizing',
'sovran',
'sow',
'sowable',
'sowbelly',
'sowbread',
'sowed',
'sower',
'sowing',
'sown',
'sox',
'soy',
'soya',
'soybean',
'spa',
'space',
'spacecraft',
'spaced',
'spaceflight',
'spaceman',
'spaceport',
'spacer',
'spaceship',
'spacesuit',
'spacewalk',
'spacewalked',
'spacewalker',
'spacewalking',
'spaceward',
'spacewoman',
'spacial',
'spacing',
'spaciously',
'spade',
'spadeful',
'spader',
'spadework',
'spading',
'spadix',
'spaghetti',
'spain',
'spake',
'spale',
'spalled',
'spaller',
'spalpeen',
'span',
'spangle',
'spangled',
'spanglier',
'spangliest',
'spangling',
'spangly',
'spaniard',
'spaniel',
'spank',
'spanked',
'spanker',
'spanking',
'spanned',
'spanner',
'spanning',
'spar',
'sparable',
'spare',
'sparely',
'sparer',
'sparerib',
'sparest',
'sparge',
'sparing',
'spark',
'sparked',
'sparker',
'sparkier',
'sparkiest',
'sparkily',
'sparking',
'sparkish',
'sparkle',
'sparkled',
'sparkler',
'sparkling',
'sparkplug',
'sparky',
'sparriest',
'sparring',
'sparrow',
'sparry',
'sparse',
'sparsely',
'sparser',
'sparsest',
'sparsity',
'sparta',
'spartan',
'spasm',
'spasmodic',
'spasmodical',
'spastic',
'spasticity',
'spat',
'spate',
'spathal',
'spathe',
'spathed',
'spathic',
'spatial',
'spatted',
'spatter',
'spattering',
'spatting',
'spatula',
'spatular',
'spatulate',
'spavin',
'spavined',
'spawn',
'spawned',
'spawner',
'spawning',
'spay',
'spayed',
'spaying',
'speak',
'speakable',
'speakeasy',
'speaker',
'speaking',
'spear',
'spearer',
'spearfish',
'spearhead',
'spearheading',
'spearing',
'spearman',
'spearmint',
'spec',
'special',
'specialer',
'specialist',
'specialization',
'specialize',
'specialized',
'specializing',
'specialty',
'specie',
'specific',
'specification',
'specificity',
'specificized',
'specificizing',
'specified',
'specifier',
'specify',
'specifying',
'speciosity',
'speciously',
'speck',
'specking',
'speckle',
'speckled',
'speckling',
'spectacle',
'spectacular',
'spectacularly',
'spectate',
'specter',
'spectra',
'spectral',
'spectre',
'spectrochemical',
'spectrochemistry',
'spectrogram',
'spectrograph',
'spectrographer',
'spectrographic',
'spectrography',
'spectrometer',
'spectrometric',
'spectrometry',
'spectroscope',
'spectroscopic',
'spectroscopical',
'spectroscopist',
'spectroscopy',
'spectrum',
'specula',
'specular',
'speculate',
'speculation',
'speculative',
'speculum',
'sped',
'speech',
'speechlessly',
'speed',
'speedboat',
'speeder',
'speedier',
'speediest',
'speedily',
'speeding',
'speedometer',
'speedster',
'speedup',
'speedway',
'speedwell',
'speedy',
'speiled',
'speleologist',
'speleology',
'spell',
'spellbind',
'spellbinder',
'spellbinding',
'spellbound',
'spelldown',
'spelled',
'speller',
'spelling',
'spelt',
'spelunk',
'spelunked',
'spelunker',
'spelunking',
'spence',
'spencer',
'spend',
'spendable',
'spender',
'spending',
'spendthrift',
'spendthrifty',
'spent',
'sperm',
'spermary',
'spermatic',
'spermatocidal',
'spermatocide',
'spermatozoa',
'spermatozoan',
'spermatozoon',
'spermic',
'spermicidal',
'spermicide',
'spew',
'spewed',
'spewer',
'spewing',
'sphagnum',
'sphenoid',
'spheral',
'sphere',
'spheric',
'spherical',
'sphericity',
'spherier',
'sphering',
'spheroid',
'spheroidal',
'spherometer',
'spherule',
'sphincter',
'sphincteral',
'sphinx',
'sphygmogram',
'sphygmograph',
'sphygmographic',
'sphygmography',
'sphygmomanometer',
'sphygmomanometry',
'sphygmometer',
'spic',
'spica',
'spice',
'spiced',
'spicer',
'spicery',
'spicey',
'spicier',
'spiciest',
'spicily',
'spicing',
'spick',
'spicular',
'spiculate',
'spicule',
'spicy',
'spider',
'spiderier',
'spideriest',
'spidery',
'spied',
'spiegel',
'spiel',
'spieled',
'spieler',
'spieling',
'spier',
'spiff',
'spiffier',
'spiffiest',
'spiffily',
'spiffing',
'spiffy',
'spigot',
'spike',
'spiked',
'spikelet',
'spiker',
'spikier',
'spikiest',
'spikily',
'spiking',
'spiky',
'spill',
'spillable',
'spillage',
'spilled',
'spiller',
'spilling',
'spillway',
'spilt',
'spilth',
'spin',
'spinach',
'spinage',
'spinal',
'spinate',
'spindle',
'spindled',
'spindler',
'spindlier',
'spindliest',
'spindling',
'spindly',
'spine',
'spined',
'spinel',
'spinelessly',
'spinet',
'spinier',
'spiniest',
'spinnaker',
'spinner',
'spinneret',
'spinnery',
'spinney',
'spinning',
'spinny',
'spinocerebellar',
'spinoff',
'spinosely',
'spinout',
'spinster',
'spinsterhood',
'spiny',
'spiracle',
'spiraea',
'spiral',
'spiraled',
'spiraling',
'spiralled',
'spiralling',
'spirant',
'spire',
'spirea',
'spiring',
'spirit',
'spirited',
'spiriting',
'spiritlessly',
'spiritual',
'spiritualism',
'spiritualist',
'spiritualistic',
'spirituality',
'spiritualize',
'spiritualized',
'spiritualizing',
'spirochetal',
'spirochete',
'spirogram',
'spiroid',
'spirted',
'spiry',
'spit',
'spital',
'spitball',
'spite',
'spited',
'spiteful',
'spitefully',
'spitfire',
'spiting',
'spitted',
'spitter',
'spitting',
'spittle',
'spittoon',
'spitz',
'splash',
'splashdown',
'splashed',
'splasher',
'splashier',
'splashiest',
'splashily',
'splashing',
'splashy',
'splat',
'splatter',
'splattering',
'splay',
'splayed',
'splayfeet',
'splayfoot',
'splayfooted',
'splaying',
'spleen',
'spleenier',
'spleeniest',
'spleenish',
'spleeny',
'splendid',
'splendider',
'splendidly',
'splendor',
'splenectomize',
'splenectomized',
'splenectomizing',
'splenectomy',
'splenetic',
'splenic',
'splenification',
'splent',
'splice',
'spliced',
'splicer',
'splicing',
'spline',
'splined',
'splining',
'splint',
'splinted',
'splinter',
'splintering',
'splintery',
'splinting',
'split',
'splitter',
'splitting',
'splosh',
'sploshed',
'splotch',
'splotched',
'splotchier',
'splotchiest',
'splotching',
'splotchy',
'splurge',
'splurgiest',
'splurging',
'splurgy',
'splutter',
'spluttering',
'spoil',
'spoilable',
'spoilage',
'spoiled',
'spoiler',
'spoiling',
'spoilsman',
'spoilsport',
'spoilt',
'spokane',
'spoke',
'spoked',
'spoken',
'spokesman',
'spokeswoman',
'spoking',
'spoliation',
'spondaic',
'spondee',
'sponge',
'sponger',
'spongier',
'spongiest',
'spongily',
'sponging',
'spongy',
'sponsor',
'sponsorial',
'sponsoring',
'sponsorship',
'spontaneity',
'spontaneously',
'spoof',
'spoofed',
'spoofing',
'spook',
'spooked',
'spookier',
'spookiest',
'spookily',
'spooking',
'spookish',
'spooky',
'spool',
'spooled',
'spooler',
'spooling',
'spoon',
'spoonbill',
'spoonerism',
'spoonful',
'spoonier',
'spooniest',
'spoonily',
'spooning',
'spoonsful',
'spoony',
'spoor',
'spooring',
'sporadic',
'spore',
'sporing',
'sporozoa',
'sporozoan',
'sporozoon',
'sporran',
'sport',
'sported',
'sporter',
'sportful',
'sportier',
'sportiest',
'sportily',
'sporting',
'sportive',
'sportscast',
'sportscaster',
'sportsman',
'sportsmanlike',
'sportsmanship',
'sportswear',
'sportswoman',
'sportswriter',
'sporty',
'sporulate',
'sporule',
'spot',
'spotlessly',
'spotlight',
'spotted',
'spotter',
'spottier',
'spottiest',
'spottily',
'spotting',
'spotty',
'spousal',
'spouse',
'spoused',
'spout',
'spouted',
'spouter',
'spouting',
'spraddle',
'sprain',
'sprained',
'spraining',
'sprang',
'sprat',
'sprattle',
'sprawl',
'sprawled',
'sprawler',
'sprawlier',
'sprawliest',
'sprawling',
'sprawly',
'spray',
'sprayed',
'sprayer',
'spraying',
'spread',
'spreadable',
'spreader',
'spreading',
'spreadsheet',
'spree',
'sprier',
'spriest',
'sprig',
'sprigger',
'spriggy',
'spright',
'sprightlier',
'sprightliest',
'sprightly',
'spring',
'springboard',
'springer',
'springfield',
'springier',
'springiest',
'springing',
'springtime',
'springy',
'sprinkle',
'sprinkled',
'sprinkler',
'sprinkling',
'sprint',
'sprinted',
'sprinter',
'sprinting',
'sprit',
'sprite',
'sprocket',
'sprout',
'sprouted',
'sprouting',
'spruce',
'spruced',
'sprucer',
'sprucest',
'sprucing',
'sprucy',
'sprung',
'spry',
'spryer',
'spryest',
'spryly',
'spud',
'spued',
'spuing',
'spumante',
'spume',
'spumed',
'spumier',
'spuming',
'spumone',
'spumoni',
'spumy',
'spun',
'spunk',
'spunked',
'spunkier',
'spunkiest',
'spunkily',
'spunky',
'spur',
'spurge',
'spuriously',
'spurn',
'spurned',
'spurner',
'spurning',
'spurrer',
'spurrey',
'spurrier',
'spurring',
'spurry',
'spurt',
'spurted',
'spurting',
'sputa',
'sputnik',
'sputter',
'sputterer',
'sputtering',
'sputum',
'spy',
'spying',
'squab',
'squabbier',
'squabbiest',
'squabble',
'squabbled',
'squabbler',
'squabbling',
'squabby',
'squad',
'squadron',
'squalid',
'squalider',
'squalidest',
'squalidly',
'squall',
'squalled',
'squaller',
'squallier',
'squalliest',
'squalling',
'squalor',
'squander',
'squanderer',
'squandering',
'square',
'squarely',
'squarer',
'squarest',
'squaring',
'squarish',
'squash',
'squashed',
'squasher',
'squashier',
'squashiest',
'squashing',
'squashy',
'squat',
'squatly',
'squatted',
'squatter',
'squattest',
'squattier',
'squattiest',
'squatting',
'squatty',
'squaw',
'squawk',
'squawked',
'squawker',
'squawking',
'squeak',
'squeaked',
'squeaker',
'squeakier',
'squeakiest',
'squeaking',
'squeaky',
'squeal',
'squealed',
'squealer',
'squealing',
'squeamish',
'squeamishly',
'squeegee',
'squeegeed',
'squeeze',
'squeezed',
'squeezer',
'squeezing',
'squelch',
'squelched',
'squelcher',
'squelchier',
'squelching',
'squelchy',
'squib',
'squid',
'squidding',
'squiffed',
'squiggle',
'squiggled',
'squigglier',
'squiggling',
'squiggly',
'squinch',
'squinched',
'squinching',
'squint',
'squinted',
'squinter',
'squintier',
'squintiest',
'squinting',
'squinty',
'squire',
'squiring',
'squirish',
'squirm',
'squirmed',
'squirmer',
'squirmier',
'squirmiest',
'squirming',
'squirmy',
'squirrel',
'squirreled',
'squirreling',
'squirrelled',
'squirrelling',
'squirt',
'squirted',
'squirter',
'squirting',
'squish',
'squished',
'squishier',
'squishiest',
'squishing',
'squishy',
'squooshed',
'squooshing',
'squushing',
'sri',
'stab',
'stabbed',
'stabber',
'stabbing',
'stabile',
'stability',
'stabilization',
'stabilize',
'stabilized',
'stabilizer',
'stabilizing',
'stable',
'stabled',
'stableman',
'stabler',
'stabling',
'stably',
'staccato',
'stack',
'stacker',
'stacking',
'stadia',
'stadium',
'staff',
'staffed',
'staffer',
'staffing',
'stag',
'stage',
'stagecoach',
'stagehand',
'stager',
'stagestruck',
'stagey',
'stagflation',
'stagger',
'staggerer',
'staggering',
'staggery',
'staggier',
'staggy',
'stagier',
'stagiest',
'stagily',
'staging',
'stagnancy',
'stagnant',
'stagnantly',
'stagnate',
'stagnation',
'stagy',
'staid',
'staider',
'staidest',
'staidly',
'stain',
'stainability',
'stainable',
'stained',
'stainer',
'staining',
'stair',
'staircase',
'stairway',
'stairwell',
'stake',
'staked',
'stakeholder',
'stakeout',
'staking',
'stalactite',
'stalag',
'stalagmite',
'stale',
'staled',
'stalely',
'stalemate',
'staler',
'stalest',
'stalin',
'staling',
'stalingrad',
'stalinism',
'stalinist',
'stalk',
'stalked',
'stalker',
'stalkier',
'stalkiest',
'stalkily',
'stalking',
'stalky',
'stall',
'stalled',
'stalling',
'stallion',
'stalwart',
'stalwartly',
'stamina',
'staminal',
'staminate',
'stammer',
'stammerer',
'stammering',
'stamp',
'stamped',
'stampede',
'stampeding',
'stamper',
'stamping',
'stance',
'stanch',
'stanched',
'stancher',
'stanchest',
'stanching',
'stanchion',
'stanchly',
'stand',
'standard',
'standardbearer',
'standardizable',
'standardization',
'standardize',
'standardized',
'standardizing',
'standby',
'standee',
'stander',
'standing',
'standish',
'standoff',
'standoffish',
'standout',
'standpat',
'standpipe',
'standpoint',
'standstill',
'standup',
'stanford',
'stank',
'stanley',
'stannic',
'stannum',
'stanza',
'stanzaed',
'stanzaic',
'staph',
'staphylococcal',
'staphylococcemia',
'staphylococcemic',
'staphylococci',
'staphylococcic',
'staple',
'stapled',
'stapler',
'stapling',
'star',
'starboard',
'starch',
'starched',
'starchier',
'starchiest',
'starching',
'starchy',
'stardom',
'stardust',
'stare',
'starer',
'starfish',
'stargaze',
'stargazed',
'stargazer',
'stargazing',
'staring',
'stark',
'starker',
'starkest',
'starkly',
'starlet',
'starlight',
'starlike',
'starling',
'starlit',
'starrier',
'starriest',
'starring',
'starry',
'starship',
'start',
'started',
'starter',
'starting',
'startle',
'startled',
'startler',
'startling',
'starvation',
'starve',
'starved',
'starveling',
'starver',
'starving',
'stash',
'stashed',
'stashing',
'stat',
'statable',
'statal',
'state',
'stateable',
'statecraft',
'statehood',
'statehouse',
'statelier',
'stateliest',
'stately',
'statement',
'stater',
'stateroom',
'stateside',
'statesman',
'statesmanlike',
'statesmanship',
'stateswoman',
'statewide',
'static',
'statice',
'station',
'stationary',
'stationer',
'stationery',
'stationing',
'statism',
'statist',
'statistic',
'statistical',
'statistician',
'statuary',
'statue',
'statued',
'statuesque',
'statuette',
'stature',
'statutable',
'statutably',
'statute',
'statuted',
'statuting',
'statutorily',
'statutory',
'staunch',
'staunched',
'stauncher',
'staunchest',
'staunching',
'staunchly',
'stave',
'staved',
'staving',
'stay',
'stayed',
'stayer',
'staying',
'staysail',
'stead',
'steadfast',
'steadfastly',
'steadied',
'steadier',
'steadiest',
'steadily',
'steading',
'steady',
'steadying',
'steak',
'steal',
'stealable',
'stealer',
'stealing',
'stealth',
'stealthier',
'stealthiest',
'stealthily',
'stealthy',
'steam',
'steamboat',
'steamed',
'steamer',
'steamering',
'steamier',
'steamiest',
'steamily',
'steaming',
'steamroller',
'steamrollering',
'steamship',
'steamy',
'stearic',
'stearin',
'steatite',
'steatopygia',
'steatopygic',
'steed',
'steel',
'steeled',
'steelie',
'steelier',
'steeliest',
'steeling',
'steely',
'steelyard',
'steep',
'steeped',
'steepen',
'steepened',
'steepening',
'steeper',
'steepest',
'steeping',
'steeple',
'steeplechase',
'steepled',
'steeplejack',
'steeply',
'steer',
'steerable',
'steerage',
'steerer',
'steering',
'steersman',
'steeve',
'stegosaur',
'stein',
'stele',
'stella',
'stellar',
'stellate',
'stellify',
'stem',
'stemmed',
'stemmer',
'stemmier',
'stemmiest',
'stemming',
'stemmy',
'stemware',
'stench',
'stenchier',
'stenchiest',
'stenchy',
'stencil',
'stenciled',
'stenciling',
'stencilled',
'stencilling',
'steno',
'stenographer',
'stenographic',
'stenography',
'stentorian',
'step',
'stepbrother',
'stepchild',
'stepchildren',
'stepdaughter',
'stepdown',
'stepfather',
'stephen',
'stepladder',
'stepmother',
'stepparent',
'steppe',
'stepper',
'stepping',
'steppingstone',
'stepsister',
'stepson',
'stepup',
'stepwise',
'steradian',
'stere',
'stereo',
'stereochemical',
'stereochemistry',
'stereoed',
'stereograph',
'stereoing',
'stereoisomer',
'stereoisomeric',
'stereoisomerism',
'stereophonic',
'stereoscope',
'stereoscopic',
'stereoscopical',
'stereoscopy',
'stereospecific',
'stereotape',
'stereotype',
'stereotyped',
'stereotyper',
'stereotypical',
'stereotyping',
'sterile',
'sterilely',
'sterility',
'sterilization',
'sterilize',
'sterilized',
'sterilizer',
'sterilizing',
'sterling',
'stern',
'sterna',
'sternal',
'sterner',
'sternest',
'sternly',
'sternum',
'sternutate',
'steroid',
'steroidal',
'stertorously',
'stet',
'stethoscope',
'stethoscopic',
'stethoscopical',
'stethoscopy',
'stetson',
'stetted',
'stetting',
'steuben',
'steve',
'stevedore',
'stevedoring',
'steven',
'stew',
'steward',
'stewarding',
'stewardship',
'stewart',
'stewbum',
'stewed',
'stewing',
'stewpan',
'stibium',
'stick',
'sticker',
'stickier',
'stickiest',
'stickily',
'sticking',
'stickle',
'stickleback',
'stickled',
'stickler',
'stickling',
'stickman',
'stickpin',
'stickum',
'stickup',
'sticky',
'stied',
'stiff',
'stiffed',
'stiffen',
'stiffened',
'stiffener',
'stiffening',
'stiffer',
'stiffest',
'stiffing',
'stiffish',
'stiffly',
'stifle',
'stifled',
'stifler',
'stifling',
'stigma',
'stigmata',
'stigmatic',
'stigmatization',
'stigmatize',
'stigmatized',
'stigmatizing',
'stilbestrol',
'stile',
'stiletted',
'stiletto',
'stilettoed',
'still',
'stillbirth',
'stillborn',
'stilled',
'stiller',
'stillest',
'stillier',
'stilliest',
'stilling',
'stilly',
'stilt',
'stilted',
'stilting',
'stilton',
'stimied',
'stimulant',
'stimulate',
'stimulation',
'stimulative',
'stimulatory',
'stimuli',
'stimy',
'sting',
'stinger',
'stingier',
'stingiest',
'stingily',
'stinging',
'stingo',
'stingray',
'stingy',
'stink',
'stinkard',
'stinkbug',
'stinker',
'stinkier',
'stinkiest',
'stinking',
'stinko',
'stinkpot',
'stinky',
'stint',
'stinted',
'stinter',
'stinting',
'stipend',
'stipple',
'stippled',
'stippler',
'stippling',
'stipulable',
'stipulate',
'stipulation',
'stipulatory',
'stir',
'stirrer',
'stirring',
'stirrup',
'stitch',
'stitched',
'stitcher',
'stitchery',
'stitching',
'stiver',
'stoa',
'stoat',
'stock',
'stockade',
'stockading',
'stockateer',
'stockbroker',
'stockbrokerage',
'stockbroking',
'stockcar',
'stocker',
'stockholder',
'stockholding',
'stockholm',
'stockier',
'stockiest',
'stockily',
'stockinet',
'stockinette',
'stocking',
'stockish',
'stockjobber',
'stockjobbing',
'stockkeeper',
'stockman',
'stockpile',
'stockpiled',
'stockpiling',
'stockpot',
'stockroom',
'stocktaking',
'stocky',
'stockyard',
'stodge',
'stodgier',
'stodgiest',
'stodgily',
'stodging',
'stodgy',
'stogey',
'stogie',
'stogy',
'stoic',
'stoical',
'stoicism',
'stoke',
'stoked',
'stoker',
'stoking',
'stole',
'stolen',
'stolid',
'stolider',
'stolidest',
'stolidity',
'stolidly',
'stollen',
'stolonic',
'stomach',
'stomachache',
'stomached',
'stomacher',
'stomachic',
'stomachical',
'stomaching',
'stomachy',
'stomp',
'stomped',
'stomper',
'stomping',
'stonable',
'stone',
'stonecutter',
'stonecutting',
'stonefly',
'stoner',
'stonewall',
'stonewalled',
'stonewalling',
'stoneware',
'stonework',
'stoney',
'stonier',
'stoniest',
'stonily',
'stoning',
'stonish',
'stonishing',
'stony',
'stood',
'stooge',
'stooging',
'stool',
'stooled',
'stoolie',
'stooling',
'stoop',
'stooped',
'stooper',
'stooping',
'stop',
'stopcock',
'stopgap',
'stoplight',
'stopover',
'stoppage',
'stopper',
'stoppering',
'stopping',
'stopple',
'stoppled',
'stoppling',
'stopt',
'stopwatch',
'storable',
'storage',
'store',
'storefront',
'storehouse',
'storekeeper',
'storeroom',
'storewide',
'storey',
'storeyed',
'storied',
'storing',
'stork',
'storm',
'stormed',
'stormier',
'stormiest',
'stormily',
'storming',
'stormy',
'story',
'storybook',
'storying',
'storyline',
'storyteller',
'storytelling',
'stoup',
'stout',
'stouten',
'stoutened',
'stoutening',
'stouter',
'stoutest',
'stouthearted',
'stoutish',
'stoutly',
'stove',
'stovepipe',
'stover',
'stow',
'stowable',
'stowage',
'stowaway',
'stowed',
'stowing',
'straddle',
'straddled',
'straddler',
'straddling',
'strafe',
'strafed',
'strafer',
'strafing',
'straggle',
'straggled',
'straggler',
'stragglier',
'straggliest',
'straggling',
'straggly',
'straight',
'straightaway',
'straighted',
'straightedge',
'straighten',
'straightened',
'straightener',
'straightening',
'straighter',
'straightest',
'straightforward',
'straightforwardly',
'straightjacket',
'straightly',
'straightway',
'strain',
'strained',
'strainer',
'straining',
'strait',
'straiten',
'straitened',
'straitening',
'straiter',
'straitest',
'straitjacket',
'straitlaced',
'straitly',
'strand',
'strander',
'stranding',
'strange',
'strangely',
'stranger',
'strangest',
'strangle',
'strangled',
'strangler',
'strangling',
'strangulate',
'strangulation',
'strap',
'strapper',
'strapping',
'strata',
'stratagem',
'strate',
'strategic',
'strategist',
'strategy',
'strath',
'stratification',
'stratified',
'stratify',
'stratifying',
'stratigraphic',
'stratigraphy',
'stratocumuli',
'stratosphere',
'stratospheric',
'stratum',
'stravinsky',
'straw',
'strawberry',
'strawed',
'strawhat',
'strawier',
'strawing',
'strawy',
'stray',
'strayed',
'strayer',
'straying',
'streak',
'streaked',
'streaker',
'streakier',
'streakiest',
'streaking',
'streaky',
'stream',
'streamed',
'streamer',
'streamier',
'streamiest',
'streaming',
'streamlet',
'streamline',
'streamlined',
'streamliner',
'streamlining',
'streamy',
'street',
'streetcar',
'streetlight',
'streetwalker',
'streetwalking',
'strength',
'strengthen',
'strengthened',
'strengthener',
'strengthening',
'strenuously',
'strep',
'streptobacilli',
'streptococcal',
'streptococci',
'streptococcic',
'streptomycin',
'stressed',
'stressful',
'stressing',
'stressor',
'stretch',
'stretchable',
'stretched',
'stretcher',
'stretchier',
'stretchiest',
'stretching',
'stretchy',
'stretti',
'stretto',
'streusel',
'strew',
'strewed',
'strewer',
'strewing',
'strewn',
'stria',
'striae',
'striate',
'striation',
'stricken',
'strickenly',
'strickled',
'strict',
'stricter',
'strictest',
'strictly',
'stricture',
'stridden',
'stride',
'stridency',
'strident',
'stridently',
'strider',
'striding',
'stridor',
'strife',
'strike',
'strikebreaker',
'strikebreaking',
'strikeout',
'strikeover',
'striker',
'striking',
'string',
'stringency',
'stringent',
'stringently',
'stringer',
'stringier',
'stringiest',
'stringing',
'stringy',
'strip',
'stripe',
'striped',
'striper',
'stripier',
'stripiest',
'striping',
'stripling',
'stripper',
'stripping',
'stript',
'striptease',
'stripteased',
'stripteaser',
'stripteasing',
'stripy',
'strive',
'strived',
'striven',
'striver',
'striving',
'strobe',
'strobic',
'strobilization',
'stroboscope',
'stroboscopic',
'strode',
'stroganoff',
'stroke',
'stroked',
'stroker',
'stroking',
'stroll',
'strolled',
'stroller',
'strolling',
'strong',
'strongarmer',
'strongbox',
'stronger',
'strongest',
'stronghold',
'strongly',
'strongman',
'strongroom',
'strongyle',
'strontium',
'strop',
'strophe',
'strophic',
'stropping',
'strove',
'struck',
'structural',
'structure',
'structuring',
'strudel',
'struggle',
'struggled',
'struggler',
'struggling',
'strum',
'strummed',
'strummer',
'strumming',
'strumpet',
'strung',
'strut',
'strutted',
'strutter',
'strutting',
'strychnine',
'strychninism',
'strychninization',
'stub',
'stubbed',
'stubbier',
'stubbiest',
'stubbily',
'stubbing',
'stubble',
'stubbled',
'stubblier',
'stubbliest',
'stubbly',
'stubborn',
'stubborner',
'stubbornest',
'stubbornly',
'stubby',
'stucco',
'stuccoed',
'stuccoer',
'stuccoing',
'stuccowork',
'stuck',
'stud',
'studbook',
'studding',
'student',
'studhorse',
'studied',
'studier',
'studio',
'studiously',
'study',
'studying',
'stuff',
'stuffed',
'stuffer',
'stuffier',
'stuffiest',
'stuffily',
'stuffing',
'stuffy',
'stultification',
'stultified',
'stultify',
'stultifying',
'stumble',
'stumbled',
'stumbler',
'stumbling',
'stump',
'stumped',
'stumper',
'stumpier',
'stumpiest',
'stumping',
'stumpy',
'stun',
'stung',
'stunk',
'stunned',
'stunner',
'stunning',
'stunsail',
'stunt',
'stunted',
'stunting',
'stupa',
'stupe',
'stupefacient',
'stupefaction',
'stupefactive',
'stupefied',
'stupefy',
'stupefying',
'stupendously',
'stupid',
'stupider',
'stupidest',
'stupidity',
'stupidly',
'stupor',
'sturdier',
'sturdiest',
'sturdily',
'sturdy',
'sturgeon',
'stutter',
'stutterer',
'stuttering',
'sty',
'stye',
'styed',
'stygian',
'stylar',
'stylate',
'style',
'stylebook',
'styled',
'styler',
'styli',
'styling',
'stylise',
'stylish',
'stylishly',
'stylist',
'stylistic',
'stylite',
'stylize',
'stylized',
'stylizer',
'stylizing',
'stymie',
'stymied',
'stymieing',
'stymy',
'stymying',
'styptic',
'styrene',
'styrofoam',
'styx',
'suability',
'suable',
'suably',
'suasion',
'suasive',
'suave',
'suaver',
'suavest',
'suavity',
'sub',
'subabbot',
'subacute',
'subacutely',
'subagency',
'subagent',
'suballiance',
'subalpine',
'subaltern',
'subarea',
'subassembly',
'subassociation',
'subatomic',
'subaverage',
'subbasement',
'subbed',
'subbing',
'subbranch',
'subbreed',
'subcategory',
'subcell',
'subcellar',
'subcellular',
'subchapter',
'subchief',
'subcivilization',
'subclan',
'subclassed',
'subclassification',
'subclassified',
'subclassify',
'subclassifying',
'subclause',
'subclinical',
'subcommander',
'subcommission',
'subcommissioner',
'subcommittee',
'subcompact',
'subconsciously',
'subcontinent',
'subcontinental',
'subcontract',
'subcontracted',
'subcontracting',
'subcouncil',
'subcranial',
'subculture',
'subcutaneously',
'subdeacon',
'subdeb',
'subdebutante',
'subdefinition',
'subdepartment',
'subdepartmental',
'subdepot',
'subdermal',
'subdialect',
'subdirectory',
'subdiscipline',
'subdistinction',
'subdistrict',
'subdividable',
'subdivide',
'subdivider',
'subdividing',
'subdivisible',
'subdivision',
'subdual',
'subdue',
'subdued',
'subduer',
'subduing',
'subendorsed',
'subendorsing',
'subentry',
'subfamily',
'subfloor',
'subfraction',
'subfractional',
'subfreezing',
'subfunction',
'subgenera',
'subglacial',
'subgroup',
'subgum',
'subhead',
'subheading',
'subhuman',
'subitem',
'subjacent',
'subject',
'subjected',
'subjecting',
'subjection',
'subjective',
'subjectivity',
'subjoin',
'subjoined',
'subjoining',
'subjugate',
'subjugation',
'subjunctive',
'subkingdom',
'sublease',
'subleased',
'subleasing',
'sublessee',
'sublessor',
'sublet',
'sublethal',
'subletting',
'sublevel',
'sublicensed',
'sublicensee',
'sublimate',
'sublimation',
'sublime',
'sublimed',
'sublimely',
'sublimer',
'sublimest',
'subliminal',
'subliming',
'sublimity',
'sublunar',
'sublunary',
'subluxation',
'submachine',
'submarginal',
'submarine',
'submember',
'submental',
'submerge',
'submergence',
'submergibility',
'submergible',
'submerging',
'submerse',
'submersed',
'submersibility',
'submersible',
'submersing',
'submersion',
'submicroscopic',
'subminiature',
'subminiaturization',
'subminiaturize',
'subminiaturized',
'subminiaturizing',
'submission',
'submissive',
'submit',
'submittal',
'submittance',
'submitted',
'submitter',
'submitting',
'submolecular',
'submontane',
'subnormal',
'subnormality',
'subnuclei',
'suboffice',
'subofficer',
'suborbital',
'suborder',
'subordinate',
'subordinately',
'subordination',
'suborn',
'subornation',
'suborned',
'suborner',
'suborning',
'subparagraph',
'subpartnership',
'subpena',
'subpenaing',
'subphyla',
'subphylum',
'subplot',
'subpoena',
'subpoenaed',
'subpoenaing',
'subpoenal',
'subprincipal',
'subprogram',
'subprovince',
'subrace',
'subregion',
'subroutine',
'subrule',
'subschedule',
'subscribe',
'subscribed',
'subscriber',
'subscribing',
'subscript',
'subscripted',
'subscripting',
'subscription',
'subsection',
'subsegment',
'subsequent',
'subsequential',
'subsequently',
'subservience',
'subserviency',
'subservient',
'subserviently',
'subserving',
'subset',
'subside',
'subsidence',
'subsider',
'subsidiary',
'subsiding',
'subsidizable',
'subsidization',
'subsidize',
'subsidized',
'subsidizing',
'subsidy',
'subsist',
'subsisted',
'subsistence',
'subsisting',
'subsoil',
'subsoiling',
'subsonic',
'subspace',
'subspecific',
'substage',
'substance',
'substandard',
'substantiable',
'substantiae',
'substantial',
'substantiality',
'substantialize',
'substantialized',
'substantializing',
'substantiate',
'substantiation',
'substantival',
'substantive',
'substation',
'substitutability',
'substitute',
'substituted',
'substituter',
'substituting',
'substitution',
'substitutional',
'substitutionary',
'substitutive',
'substrata',
'substrate',
'substratum',
'substring',
'substructure',
'subsumable',
'subsume',
'subsumed',
'subsuming',
'subsurface',
'subsystem',
'subtask',
'subteen',
'subtenancy',
'subtenant',
'subtend',
'subtending',
'subterfuge',
'subterranean',
'subterraneously',
'subthreshold',
'subtile',
'subtilest',
'subtitle',
'subtitled',
'subtitling',
'subtle',
'subtler',
'subtlest',
'subtlety',
'subtly',
'subtonic',
'subtopic',
'subtotal',
'subtotaled',
'subtotaling',
'subtotalled',
'subtotalling',
'subtract',
'subtracted',
'subtracting',
'subtraction',
'subtrahend',
'subtreasury',
'subtribe',
'subtropical',
'subtype',
'subunit',
'suburb',
'suburban',
'suburbanite',
'suburbed',
'suburbia',
'subvaluation',
'subvariety',
'subvention',
'subversion',
'subversive',
'subvert',
'subverted',
'subverter',
'subvertible',
'subverting',
'subvocal',
'subway',
'succeed',
'succeeder',
'succeeding',
'successful',
'successfully',
'succession',
'successional',
'successive',
'successor',
'successorship',
'succinct',
'succinctly',
'succor',
'succorer',
'succoring',
'succotash',
'succour',
'succouring',
'succuba',
'succubi',
'succulence',
'succulency',
'succulent',
'succulently',
'succumb',
'succumbed',
'succumber',
'succumbing',
'such',
'suchlike',
'suck',
'sucker',
'suckering',
'sucking',
'suckle',
'suckled',
'suckler',
'suckling',
'sucre',
'sucrose',
'suction',
'suctional',
'suctorial',
'sudan',
'sudanese',
'sudden',
'suddenly',
'sudor',
'sudoral',
'sudorific',
'sudsed',
'sudser',
'sudsier',
'sudsiest',
'sudsing',
'sudsy',
'sue',
'sued',
'suede',
'sueding',
'suer',
'suet',
'suety',
'suey',
'suez',
'suffer',
'sufferable',
'sufferance',
'sufferer',
'suffering',
'suffice',
'sufficed',
'sufficer',
'sufficiency',
'sufficient',
'sufficiently',
'sufficing',
'suffix',
'suffixal',
'suffixed',
'suffixing',
'suffixion',
'suffocate',
'suffocation',
'suffragan',
'suffrage',
'suffragette',
'suffragist',
'suffuse',
'suffused',
'suffusing',
'suffusion',
'sugar',
'sugarcane',
'sugarcoat',
'sugarier',
'sugariest',
'sugaring',
'sugarplum',
'sugary',
'suggest',
'suggested',
'suggestibility',
'suggestible',
'suggesting',
'suggestion',
'suggestive',
'sui',
'suicidal',
'suicide',
'suiciding',
'suicidology',
'suing',
'suit',
'suitability',
'suitable',
'suitably',
'suitcase',
'suite',
'suited',
'suiting',
'sukiyaki',
'sulfa',
'sulfanilamide',
'sulfate',
'sulfide',
'sulfite',
'sulfur',
'sulfuric',
'sulfuring',
'sulfurize',
'sulfurized',
'sulfury',
'sulk',
'sulked',
'sulker',
'sulkier',
'sulkiest',
'sulkily',
'sulking',
'sulky',
'sullen',
'sullener',
'sullenest',
'sullenly',
'sullied',
'sully',
'sullying',
'sulpha',
'sulphate',
'sulphid',
'sulphide',
'sulphur',
'sulphuring',
'sulphurize',
'sulphurizing',
'sulphury',
'sultan',
'sultana',
'sultanate',
'sultanic',
'sultrier',
'sultriest',
'sultrily',
'sultry',
'sum',
'sumac',
'sumach',
'sumatra',
'sumatran',
'summa',
'summable',
'summarily',
'summarization',
'summarize',
'summarized',
'summarizing',
'summary',
'summation',
'summed',
'summer',
'summerhouse',
'summerier',
'summeriest',
'summering',
'summerly',
'summertime',
'summery',
'summing',
'summit',
'summital',
'summitry',
'summon',
'summoner',
'summoning',
'summonsed',
'sumo',
'sump',
'sumpter',
'sumptuously',
'sun',
'sunback',
'sunbaked',
'sunbath',
'sunbathe',
'sunbathed',
'sunbather',
'sunbathing',
'sunbeam',
'sunbelt',
'sunbird',
'sunbonnet',
'sunbow',
'sunburn',
'sunburned',
'sunburning',
'sunburnt',
'sunburst',
'sundae',
'sunday',
'sunder',
'sunderer',
'sundering',
'sundew',
'sundial',
'sundog',
'sundown',
'sundry',
'sunfish',
'sunflower',
'sung',
'sunglow',
'sunk',
'sunken',
'sunlamp',
'sunlight',
'sunlit',
'sunned',
'sunnier',
'sunniest',
'sunnily',
'sunning',
'sunny',
'sunrise',
'sunroof',
'sunroom',
'sunset',
'sunshade',
'sunshine',
'sunshiny',
'sunspot',
'sunstroke',
'sunstruck',
'sunsuit',
'suntan',
'suntanned',
'sunup',
'sunward',
'sunwise',
'sup',
'supe',
'super',
'superabundance',
'superabundant',
'superabundantly',
'superannuate',
'superannuation',
'superannuity',
'superb',
'superber',
'superbly',
'supercargo',
'supercede',
'superceding',
'supercharge',
'supercharger',
'supercharging',
'superciliously',
'supercomputer',
'superconductivity',
'superego',
'supereminent',
'supererogation',
'supererogatory',
'superficial',
'superficiality',
'superficiary',
'superfluity',
'superfluously',
'superhighway',
'superhuman',
'superimpose',
'superimposed',
'superimposing',
'superimposition',
'supering',
'superintend',
'superintendence',
'superintendency',
'superintendent',
'superintending',
'superior',
'superiority',
'superiorly',
'superlative',
'superman',
'supermarket',
'supermini',
'supermolecular',
'supermolecule',
'supernal',
'supernational',
'supernationalism',
'supernatural',
'supernormal',
'supernova',
'supernumerary',
'superposable',
'superpose',
'superposed',
'superposing',
'superposition',
'superpower',
'supersaturate',
'supersaturation',
'superscribe',
'superscribed',
'superscribing',
'superscript',
'superscripted',
'superscripting',
'superscription',
'supersecret',
'supersede',
'supersedence',
'superseder',
'superseding',
'supersedure',
'supersensitive',
'supersession',
'supersessive',
'supersex',
'supersonic',
'superstition',
'superstitiously',
'superstructure',
'supertanker',
'supervene',
'supervened',
'supervening',
'supervention',
'supervisal',
'supervise',
'supervised',
'supervisee',
'supervising',
'supervision',
'supervisor',
'supervisorial',
'supervisorship',
'supervisory',
'supinate',
'supine',
'supinely',
'suporvisory',
'supper',
'suppertime',
'supping',
'supplant',
'supplantation',
'supplanted',
'supplanter',
'supplanting',
'supple',
'supplely',
'supplement',
'supplemental',
'supplementarily',
'supplementary',
'supplementation',
'supplemented',
'supplementer',
'supplementing',
'suppler',
'supplest',
'suppliable',
'suppliance',
'suppliant',
'supplicant',
'supplicate',
'supplication',
'supplied',
'supplier',
'supply',
'supplying',
'support',
'supportable',
'supportance',
'supported',
'supporter',
'supporting',
'supportive',
'suppose',
'supposed',
'supposer',
'supposing',
'supposition',
'suppositional',
'suppositive',
'suppository',
'suppressant',
'suppressed',
'suppressible',
'suppressing',
'suppression',
'suppressive',
'suppurate',
'suppuration',
'suppurative',
'supra',
'supraliminal',
'supramental',
'supranational',
'supraorbital',
'supremacist',
'supremacy',
'supreme',
'supremely',
'supremer',
'supremest',
'supt',
'surcease',
'surceased',
'surceasing',
'surcharge',
'surcharger',
'surcharging',
'surcingle',
'surcoat',
'sure',
'surefire',
'surefooted',
'surely',
'surer',
'surest',
'surety',
'surf',
'surfable',
'surface',
'surfaced',
'surfacer',
'surfacing',
'surfboard',
'surfed',
'surfeit',
'surfeited',
'surfeiting',
'surfer',
'surffish',
'surfier',
'surfiest',
'surfing',
'surfy',
'surge',
'surgeon',
'surger',
'surgery',
'surgical',
'surging',
'surgy',
'surinam',
'surlier',
'surliest',
'surlily',
'surly',
'surmisable',
'surmise',
'surmised',
'surmiser',
'surmising',
'surmount',
'surmountable',
'surmounted',
'surmounting',
'surname',
'surnamed',
'surnamer',
'surnaming',
'surpassable',
'surpassed',
'surpassing',
'surplice',
'surplusage',
'surprise',
'surprised',
'surpriser',
'surprising',
'surprize',
'surprized',
'surprizing',
'surreal',
'surrealism',
'surrealist',
'surrealistic',
'surrejoinder',
'surrender',
'surrenderee',
'surrendering',
'surrenderor',
'surreptitiously',
'surrey',
'surrogacy',
'surrogate',
'surround',
'surrounding',
'surtax',
'surtaxed',
'surtaxing',
'surveil',
'surveiled',
'surveiling',
'surveillance',
'surveillant',
'survey',
'surveyable',
'surveyance',
'surveyed',
'surveying',
'surveyor',
'survivability',
'survivable',
'survival',
'survive',
'survived',
'surviver',
'surviving',
'survivor',
'survivorship',
'susan',
'susceptibility',
'susceptible',
'susceptibly',
'suspect',
'suspectable',
'suspected',
'suspecter',
'suspecting',
'suspend',
'suspender',
'suspending',
'suspense',
'suspenseful',
'suspension',
'suspensive',
'suspensory',
'suspicion',
'suspiciously',
'suspire',
'sustain',
'sustainable',
'sustained',
'sustaining',
'sustainment',
'sustenance',
'sustenant',
'susurration',
'sutler',
'sutra',
'sutta',
'suttee',
'sutural',
'suture',
'suturing',
'suzanne',
'suzerain',
'suzerainty',
'suzette',
'suzuki',
'svelte',
'sveltely',
'svelter',
'sveltest',
'swab',
'swabbed',
'swabber',
'swabbie',
'swabbing',
'swabby',
'swaddle',
'swaddled',
'swaddling',
'swag',
'swage',
'swagger',
'swaggerer',
'swaggering',
'swagging',
'swaging',
'swagman',
'swahili',
'swahilian',
'swail',
'swain',
'swainish',
'swale',
'swallow',
'swallowed',
'swallowing',
'swallowtail',
'swam',
'swami',
'swamp',
'swamped',
'swamper',
'swampier',
'swampiest',
'swamping',
'swampish',
'swampland',
'swampy',
'swan',
'swang',
'swanherd',
'swank',
'swanked',
'swanker',
'swankest',
'swankier',
'swankiest',
'swankily',
'swanking',
'swanky',
'swanned',
'swannery',
'swanning',
'swansdown',
'swap',
'swapper',
'swapping',
'sward',
'swarm',
'swarmed',
'swarmer',
'swarming',
'swart',
'swarth',
'swarthier',
'swarthiest',
'swarthy',
'swarty',
'swash',
'swashbuckler',
'swashbuckling',
'swashed',
'swasher',
'swashing',
'swastika',
'swat',
'swatch',
'swath',
'swathe',
'swathed',
'swather',
'swathing',
'swatted',
'swatter',
'swatting',
'sway',
'swayable',
'swayback',
'swayed',
'swayer',
'swaying',
'swaziland',
'swear',
'swearer',
'swearing',
'swearword',
'sweat',
'sweatband',
'sweatbox',
'sweater',
'sweatier',
'sweatiest',
'sweatily',
'sweatshirt',
'sweatshop',
'sweaty',
'swede',
'sweden',
'sweep',
'sweeper',
'sweepier',
'sweepiest',
'sweeping',
'sweepstake',
'sweepy',
'sweet',
'sweetbread',
'sweetbrier',
'sweeten',
'sweetened',
'sweetener',
'sweetening',
'sweeter',
'sweetest',
'sweetheart',
'sweetie',
'sweeting',
'sweetish',
'sweetly',
'sweetmeat',
'sweetsop',
'swell',
'swelled',
'sweller',
'swellest',
'swellhead',
'swelling',
'swelter',
'sweltering',
'sweltrier',
'sweltriest',
'swept',
'sweptback',
'swerve',
'swerved',
'swerver',
'swerving',
'swift',
'swifter',
'swiftest',
'swiftian',
'swiftly',
'swig',
'swigger',
'swigging',
'swill',
'swilled',
'swiller',
'swilling',
'swim',
'swimmable',
'swimmer',
'swimmier',
'swimmiest',
'swimmily',
'swimming',
'swimmy',
'swimsuit',
'swindle',
'swindleable',
'swindled',
'swindler',
'swindling',
'swine',
'swing',
'swinge',
'swingeing',
'swinger',
'swingier',
'swingiest',
'swinging',
'swingy',
'swinish',
'swipe',
'swiped',
'swiping',
'swirl',
'swirled',
'swirlier',
'swirliest',
'swirling',
'swirly',
'swish',
'swished',
'swisher',
'swishier',
'swishiest',
'swishing',
'swishy',
'switch',
'switchable',
'switchback',
'switchblade',
'switchboard',
'switched',
'switcher',
'switching',
'switchman',
'switchyard',
'switzerland',
'swivel',
'swiveled',
'swiveling',
'swivelled',
'swivelling',
'swivet',
'swizzle',
'swizzled',
'swizzler',
'swizzling',
'swob',
'swobbed',
'swobber',
'swollen',
'swoon',
'swooner',
'swooning',
'swoop',
'swooped',
'swooper',
'swooping',
'swoosh',
'swooshed',
'swooshing',
'swop',
'sword',
'swordfish',
'swordman',
'swordplay',
'swordsman',
'swordsmanship',
'swore',
'sworn',
'swum',
'swung',
'sybarite',
'sybaritic',
'sycamore',
'sycophancy',
'sycophant',
'sycophantic',
'sydney',
'syllabi',
'syllabic',
'syllabicate',
'syllabification',
'syllabified',
'syllabify',
'syllabifying',
'syllable',
'syllabled',
'syllabub',
'syllogism',
'syllogistic',
'sylph',
'sylphic',
'sylphid',
'sylphish',
'sylphy',
'sylvan',
'sylvia',
'sylvian',
'symbion',
'symbiont',
'symbiot',
'symbiote',
'symbiotic',
'symbiotical',
'symblepharon',
'symbol',
'symboled',
'symbolic',
'symbolical',
'symboling',
'symbolism',
'symbolization',
'symbolize',
'symbolized',
'symbolizing',
'symmetric',
'symmetrical',
'symmetry',
'sympathetic',
'sympathize',
'sympathized',
'sympathizer',
'sympathizing',
'sympathy',
'symphonic',
'symphony',
'symposia',
'symposium',
'symptom',
'symptomatic',
'symptomatological',
'symptomatology',
'synaesthesia',
'synaesthetic',
'synagog',
'synagogal',
'synagogue',
'synapse',
'synapsed',
'synapsing',
'synaptic',
'sync',
'synced',
'synch',
'synched',
'synching',
'synchro',
'synchronism',
'synchronization',
'synchronize',
'synchronized',
'synchronizer',
'synchronizing',
'synchronously',
'synchrony',
'synchrotron',
'syncing',
'syncline',
'syncom',
'syncopal',
'syncopate',
'syncopation',
'syncope',
'syncopic',
'syndic',
'syndical',
'syndicate',
'syndication',
'syndrome',
'syne',
'synergetic',
'synergism',
'synergist',
'synergistic',
'synergistical',
'synergy',
'synesthesia',
'synesthetic',
'synfuel',
'synod',
'synodal',
'synodic',
'synodical',
'synonym',
'synonymicon',
'synonymy',
'synoptic',
'synoptical',
'synovial',
'syntactic',
'syntactical',
'syntax',
'synthesize',
'synthesized',
'synthesizer',
'synthesizing',
'synthetic',
'synthetical',
'sypher',
'syphilitic',
'syphilized',
'syphilizing',
'syphiloid',
'syphon',
'syphoning',
'syracuse',
'syren',
'syria',
'syrian',
'syringe',
'syringing',
'syrinx',
'syrup',
'syrupy',
'system',
'systematic',
'systematical',
'systematization',
'systematize',
'systematized',
'systematizing',
'systemic',
'systemize',
'systemized',
'systemizing',
'systole',
'systolic',
'syzygal',
'syzygial',
'syzygy',
'tab',
'tabard',
'tabaret',
'tabasco',
'tabbed',
'tabbing',
'tabby',
'tabernacle',
'tabla',
'table',
'tableau',
'tableaux',
'tablecloth',
'tabled',
'tableful',
'tableland',
'tablesful',
'tablespoon',
'tablespoonful',
'tablespoonsful',
'tablet',
'tabletop',
'tabletted',
'tabletting',
'tableware',
'tabling',
'tabloid',
'taboo',
'tabooed',
'tabooing',
'tabor',
'taboret',
'tabour',
'tabouret',
'tabstop',
'tabu',
'tabued',
'tabuing',
'tabula',
'tabulable',
'tabular',
'tabularly',
'tabulate',
'tabulation',
'tacet',
'tach',
'tachometer',
'tachycardia',
'tachycardiac',
'tacit',
'tacitly',
'taciturn',
'taciturnity',
'taciturnly',
'tack',
'tacker',
'tackey',
'tackier',
'tackiest',
'tackified',
'tackify',
'tackifying',
'tackily',
'tacking',
'tackle',
'tackled',
'tackler',
'tackling',
'tacksman',
'tacky',
'taco',
'tacoma',
'taconite',
'tact',
'tactful',
'tactfully',
'tactic',
'tactical',
'tactician',
'tactile',
'tactility',
'taction',
'tactlessly',
'tactoid',
'tactual',
'tad',
'tadpole',
'taffeta',
'taffrail',
'taffy',
'tag',
'tagalog',
'tagalong',
'tagboard',
'tagger',
'tagging',
'tahiti',
'tahitian',
'tai',
'taiga',
'tail',
'tailbone',
'tailcoat',
'tailed',
'tailer',
'tailgate',
'tailing',
'taillight',
'tailor',
'tailoring',
'tailpiece',
'tailpipe',
'tailspin',
'tailwind',
'taint',
'tainted',
'tainting',
'taipei',
'taiwan',
'taiwanese',
'takable',
'take',
'takeable',
'takedown',
'takeing',
'taken',
'takeoff',
'takeout',
'takeover',
'taker',
'taketh',
'taking',
'talc',
'talced',
'talcky',
'talcum',
'tale',
'talebearer',
'talebearing',
'talent',
'talented',
'taler',
'talesman',
'talisman',
'talk',
'talkable',
'talkative',
'talked',
'talker',
'talkie',
'talkier',
'talkiest',
'talking',
'talky',
'tall',
'tallahassee',
'taller',
'tallest',
'tallied',
'tallier',
'tallish',
'tallow',
'tallowed',
'tallowing',
'tallowy',
'tallyho',
'tallyhoed',
'tallyhoing',
'tallying',
'tallyman',
'talmud',
'talmudic',
'talmudist',
'talon',
'tam',
'tamable',
'tamale',
'tamarack',
'tamarind',
'tamarisk',
'tambour',
'tamboura',
'tambourine',
'tambouring',
'tambur',
'tambura',
'tame',
'tameable',
'tamed',
'tamely',
'tamer',
'tamest',
'taming',
'tammie',
'tammy',
'tamp',
'tampa',
'tamped',
'tamper',
'tamperer',
'tampering',
'tamping',
'tampon',
'tan',
'tanager',
'tanbark',
'tandem',
'tang',
'tangelo',
'tangence',
'tangency',
'tangent',
'tangential',
'tangentiality',
'tangerine',
'tangibility',
'tangible',
'tangibly',
'tangier',
'tangiest',
'tangle',
'tangled',
'tangler',
'tanglier',
'tangliest',
'tangling',
'tangly',
'tango',
'tangoed',
'tangoing',
'tangram',
'tangy',
'tank',
'tanka',
'tankage',
'tankard',
'tanked',
'tanker',
'tankful',
'tanking',
'tankship',
'tannable',
'tanned',
'tanner',
'tannery',
'tannest',
'tannic',
'tannin',
'tanning',
'tannish',
'tansy',
'tantalic',
'tantalization',
'tantalize',
'tantalized',
'tantalizer',
'tantalizing',
'tantalum',
'tantamount',
'tantara',
'tanto',
'tantra',
'tantric',
'tantrum',
'tanyard',
'tanzania',
'tanzanian',
'tao',
'taoism',
'taoist',
'tap',
'tape',
'taped',
'tapeline',
'taper',
'taperer',
'tapering',
'tapestried',
'tapestry',
'tapeworm',
'taphole',
'taphouse',
'taping',
'tapioca',
'tapir',
'tapper',
'tappet',
'tapping',
'taproom',
'taproot',
'tapster',
'tar',
'tarantula',
'tarantulae',
'tarboosh',
'tarbush',
'tarde',
'tardier',
'tardiest',
'tardily',
'tardo',
'tardy',
'tare',
'target',
'targeted',
'targeting',
'tariff',
'tariffed',
'tariffing',
'taring',
'tarmac',
'tarn',
'tarnal',
'tarnish',
'tarnishable',
'tarnished',
'tarnishing',
'taro',
'tarot',
'tarp',
'tarpaper',
'tarpaulin',
'tarpon',
'tarragon',
'tarried',
'tarrier',
'tarriest',
'tarring',
'tarry',
'tarrying',
'tarsal',
'tarsi',
'tarsier',
'tart',
'tartan',
'tartar',
'tartare',
'tartaric',
'tarted',
'tarter',
'tartest',
'tarting',
'tartish',
'tartlet',
'tartly',
'tartrate',
'tartufe',
'tartuffe',
'tarweed',
'tarzan',
'task',
'tasked',
'tasking',
'taskmaster',
'tasksetter',
'taskwork',
'tassel',
'tasseled',
'tasseling',
'tasselled',
'tasselling',
'tastable',
'taste',
'tasted',
'tasteful',
'tastefully',
'tastelessly',
'taster',
'tastier',
'tastiest',
'tastily',
'tasting',
'tasty',
'tat',
'tatami',
'tatar',
'tate',
'tater',
'tatoo',
'tatted',
'tatter',
'tatterdemalion',
'tattering',
'tattersall',
'tattier',
'tattiest',
'tatting',
'tattle',
'tattled',
'tattler',
'tattletale',
'tattling',
'tattoo',
'tattooed',
'tattooer',
'tattooing',
'tattooist',
'tatty',
'tau',
'taught',
'taunt',
'taunted',
'taunter',
'taunting',
'taupe',
'taurine',
'taut',
'tauten',
'tautened',
'tautening',
'tauter',
'tautest',
'tauting',
'tautly',
'tautological',
'tautology',
'tautonym',
'tavern',
'taverner',
'taw',
'tawdrier',
'tawdriest',
'tawdrily',
'tawdry',
'tawing',
'tawney',
'tawnier',
'tawniest',
'tawnily',
'tawny',
'tax',
'taxability',
'taxable',
'taxably',
'taxation',
'taxational',
'taxed',
'taxer',
'taxi',
'taxicab',
'taxidermist',
'taxidermy',
'taxied',
'taximan',
'taximeter',
'taxing',
'taxiplane',
'taxistand',
'taxiway',
'taxman',
'taxonomic',
'taxonomical',
'taxonomist',
'taxonomy',
'taxpayer',
'taxpaying',
'taxying',
'tazza',
'tazze',
'tbsp',
'tchaikovsky',
'tea',
'teaberry',
'teaboard',
'teabowl',
'teabox',
'teacake',
'teacart',
'teach',
'teachability',
'teachable',
'teacher',
'teacherage',
'teaching',
'teacup',
'teacupful',
'teahouse',
'teak',
'teakettle',
'teakwood',
'teal',
'team',
'teamaker',
'teamed',
'teamer',
'teaming',
'teammate',
'teamster',
'teamwork',
'teapot',
'tear',
'tearable',
'teardown',
'teardrop',
'tearer',
'tearful',
'tearfully',
'teargassed',
'teargassing',
'tearier',
'teariest',
'tearing',
'tearjerker',
'tearoom',
'tearstain',
'tearstained',
'teary',
'tease',
'teased',
'teasel',
'teaser',
'teashop',
'teasing',
'teaspoon',
'teaspoonful',
'teaspoonsful',
'teat',
'teatime',
'teaware',
'teazel',
'teazeled',
'teazelling',
'teazle',
'teazled',
'teazling',
'tech',
'techie',
'technetium',
'technic',
'technical',
'technicality',
'technician',
'technicolor',
'technique',
'technocracy',
'technocrat',
'technocratic',
'technological',
'technologist',
'technology',
'techy',
'tectonic',
'tecum',
'teddy',
'tediously',
'tedium',
'tee',
'teed',
'teeing',
'teem',
'teemed',
'teemer',
'teeming',
'teen',
'teenage',
'teenager',
'teener',
'teenful',
'teenier',
'teeniest',
'teensier',
'teensiest',
'teensy',
'teentsier',
'teentsiest',
'teentsy',
'teeny',
'teenybopper',
'teepee',
'teeter',
'teetering',
'teeth',
'teethe',
'teethed',
'teether',
'teething',
'teetotal',
'teetotaled',
'teetotaler',
'teetotalism',
'teetotum',
'teflon',
'tegument',
'teheran',
'tektite',
'tektitic',
'telecast',
'telecasted',
'telecaster',
'telecasting',
'telecommunication',
'telegenic',
'telegram',
'telegraph',
'telegraphed',
'telegrapher',
'telegraphic',
'telegraphing',
'telegraphist',
'telegraphy',
'telemeter',
'telemetric',
'telemetry',
'teleological',
'teleology',
'telepathic',
'telepathist',
'telepathy',
'telephone',
'telephoner',
'telephonic',
'telephoning',
'telephonist',
'telephony',
'telephoto',
'telephotograph',
'telephotographed',
'telephotographic',
'telephotographing',
'telephotography',
'teleplay',
'teleport',
'teleported',
'teleprinter',
'teleradiography',
'telescope',
'telescoped',
'telescopic',
'telescoping',
'telethon',
'teletype',
'teletypewriter',
'teletypist',
'teleview',
'televiewed',
'televiewer',
'televise',
'televised',
'televising',
'television',
'televisional',
'televisionary',
'telex',
'telexed',
'telexing',
'tell',
'tellable',
'teller',
'tellership',
'telling',
'telltale',
'telluric',
'tellurium',
'telly',
'tem',
'temblor',
'temerity',
'temp',
'tempeh',
'temper',
'tempera',
'temperament',
'temperamental',
'temperance',
'temperate',
'temperately',
'temperature',
'temperer',
'tempering',
'tempest',
'tempested',
'tempesting',
'tempestuously',
'tempi',
'templar',
'template',
'temple',
'templed',
'tempo',
'temporal',
'temporality',
'temporalty',
'temporarily',
'temporary',
'tempore',
'temporization',
'temporize',
'temporized',
'temporizer',
'temporizing',
'tempt',
'temptable',
'temptation',
'tempted',
'tempter',
'tempting',
'tempura',
'ten',
'tenability',
'tenable',
'tenably',
'tenaciously',
'tenacity',
'tenancy',
'tenant',
'tenantable',
'tenanted',
'tenanting',
'tenantry',
'tenantship',
'tench',
'tend',
'tendency',
'tendentiously',
'tender',
'tenderability',
'tenderable',
'tenderer',
'tenderest',
'tenderfeet',
'tenderfoot',
'tenderhearted',
'tendering',
'tenderize',
'tenderized',
'tenderizer',
'tenderizing',
'tenderloin',
'tenderly',
'tending',
'tendon',
'tendril',
'tenement',
'tenemental',
'tenemented',
'tenet',
'tenfold',
'tenner',
'tennessean',
'tennessee',
'tennyson',
'tenon',
'tenoner',
'tenoning',
'tenor',
'tenpence',
'tenpenny',
'tenpin',
'tense',
'tensed',
'tensely',
'tenser',
'tensest',
'tensible',
'tensibly',
'tensile',
'tensing',
'tensiometer',
'tension',
'tensional',
'tensioning',
'tensity',
'tensive',
'tensor',
'tent',
'tentacle',
'tentacled',
'tentacular',
'tentage',
'tentative',
'tented',
'tenter',
'tenterhook',
'tentering',
'tenth',
'tenthly',
'tentier',
'tenting',
'tentmaker',
'tenty',
'tenuity',
'tenuously',
'tenure',
'tenuto',
'tepee',
'tepid',
'tepidity',
'tepidly',
'tequila',
'teraphim',
'teratism',
'teratogen',
'teratogenetic',
'teratogenic',
'teratoid',
'teratologic',
'teratological',
'teratologist',
'teratoma',
'teratophobia',
'terbium',
'terce',
'tercel',
'tercentenary',
'tercentennial',
'teriyaki',
'term',
'termagant',
'termed',
'termer',
'terminability',
'terminable',
'terminal',
'terminate',
'termination',
'terminative',
'terminatory',
'terming',
'termini',
'terminological',
'terminologist',
'terminology',
'termite',
'termitic',
'termly',
'tern',
'ternary',
'ternate',
'terne',
'terpsichorean',
'terr',
'terra',
'terrace',
'terraced',
'terracing',
'terrain',
'terrane',
'terrapin',
'terraria',
'terrarium',
'terrazzo',
'terre',
'terrene',
'terrestrial',
'terrible',
'terribly',
'terrier',
'terrific',
'terrified',
'terrifier',
'terrify',
'terrifying',
'territorial',
'territorialize',
'territorialized',
'territorializing',
'territory',
'terror',
'terrorism',
'terrorist',
'terrorization',
'terrorize',
'terrorized',
'terrorizing',
'terry',
'terse',
'tersely',
'terser',
'tersest',
'tertial',
'tertian',
'tertiary',
'tesla',
'tessellate',
'tessellation',
'test',
'testability',
'testable',
'testacy',
'testament',
'testamental',
'testamentary',
'testate',
'testation',
'testatrix',
'testatum',
'tested',
'testee',
'tester',
'testicle',
'testicular',
'testier',
'testiest',
'testified',
'testifier',
'testify',
'testifying',
'testily',
'testimonial',
'testimony',
'testing',
'testosterone',
'testy',
'tetanal',
'tetanic',
'tetanization',
'tetanized',
'tetany',
'tetched',
'tetchier',
'tetchiest',
'tetchily',
'tetchy',
'tether',
'tetherball',
'tethering',
'tetotum',
'tetra',
'tetrachloride',
'tetracycline',
'tetrad',
'tetradic',
'tetraethyl',
'tetragon',
'tetrahedra',
'tetrahedral',
'tetrahedron',
'tetralogy',
'tetrameter',
'tetrapod',
'tetrarch',
'tetrasaccharide',
'tetravalent',
'tetryl',
'teuton',
'teutonic',
'tex',
'texaco',
'texan',
'text',
'textbook',
'textile',
'textual',
'textural',
'texture',
'texturing',
'thai',
'thailand',
'thalami',
'thalamic',
'thalamocortical',
'thalidomide',
'thallium',
'thallophyte',
'thallophytic',
'than',
'thanatoid',
'thanatology',
'thane',
'thank',
'thanked',
'thanker',
'thankful',
'thankfully',
'thanking',
'thanklessly',
'thanksgiving',
'thankyou',
'that',
'thataway',
'thatch',
'thatched',
'thatcher',
'thatching',
'thaw',
'thawed',
'thawing',
'the',
'thearchy',
'theater',
'theatergoer',
'theatre',
'theatric',
'theatrical',
'theatricality',
'thee',
'theft',
'theftproof',
'their',
'theism',
'theist',
'theistic',
'them',
'thematic',
'theme',
'then',
'thence',
'thenceforth',
'theobromine',
'theocracy',
'theocrat',
'theocratic',
'theodicy',
'theodore',
'theologian',
'theological',
'theology',
'theomania',
'theorem',
'theoretic',
'theoretical',
'theoretician',
'theorising',
'theorist',
'theorization',
'theorize',
'theorized',
'theorizer',
'theorizing',
'theory',
'theosophic',
'theosophical',
'theosophist',
'theosophy',
'therapeutic',
'therapeutical',
'therapeutist',
'therapist',
'therapy',
'there',
'thereabout',
'thereafter',
'thereamong',
'thereat',
'thereby',
'therefor',
'therefore',
'therefrom',
'therein',
'thereinafter',
'theremin',
'thereof',
'thereon',
'thereout',
'thereto',
'theretofore',
'thereunder',
'thereuntil',
'thereunto',
'thereupon',
'therewith',
'therewithal',
'therm',
'thermal',
'thermite',
'thermochemistry',
'thermocouple',
'thermocurrent',
'thermodynamic',
'thermoelectric',
'thermoelectron',
'thermograph',
'thermography',
'thermometer',
'thermometric',
'thermometrical',
'thermometry',
'thermonuclear',
'thermoplastic',
'thermoplasticity',
'thermoregulation',
'thermoregulatory',
'thermosetting',
'thermosphere',
'thermostable',
'thermostat',
'thermostatic',
'thermotropic',
'thersitical',
'thesauri',
'these',
'thespian',
'theta',
'theurgic',
'theurgy',
'thew',
'thewy',
'they',
'thiabendazole',
'thiamin',
'thiamine',
'thick',
'thicken',
'thickened',
'thickener',
'thickening',
'thicker',
'thickest',
'thicket',
'thickety',
'thickish',
'thickly',
'thickset',
'thief',
'thieftaker',
'thieve',
'thieved',
'thievery',
'thieving',
'thievish',
'thigh',
'thighbone',
'thighed',
'thimble',
'thimbleful',
'thin',
'thinclad',
'thine',
'thing',
'think',
'thinkable',
'thinkably',
'thinker',
'thinking',
'thinly',
'thinned',
'thinner',
'thinnest',
'thinning',
'thinnish',
'thiosulfate',
'third',
'thirdly',
'thirst',
'thirsted',
'thirster',
'thirstier',
'thirstiest',
'thirstily',
'thirsting',
'thirsty',
'thirteen',
'thirteenth',
'thirtieth',
'thirty',
'thistle',
'thistledown',
'thistly',
'thither',
'thitherward',
'tho',
'thole',
'thompson',
'thong',
'thor',
'thoracic',
'thorax',
'thorium',
'thorn',
'thornbush',
'thorned',
'thornier',
'thorniest',
'thornily',
'thorning',
'thorny',
'thoro',
'thorough',
'thorougher',
'thoroughfare',
'thoroughgoing',
'thoroughly',
'thorp',
'thorpe',
'those',
'thou',
'thoued',
'though',
'thought',
'thoughtful',
'thoughtfully',
'thoughtlessly',
'thouing',
'thousand',
'thousandth',
'thraldom',
'thrall',
'thralldom',
'thralled',
'thralling',
'thrash',
'thrashed',
'thrasher',
'thrashing',
'thrawed',
'thread',
'threadbare',
'threader',
'threadier',
'threadiest',
'threading',
'threadworm',
'thready',
'threaped',
'threaper',
'threat',
'threaten',
'threatened',
'threatener',
'threatening',
'threatful',
'three',
'threefold',
'threeping',
'threescore',
'threesome',
'threnody',
'thresh',
'threshed',
'thresher',
'threshing',
'threshold',
'threw',
'thrice',
'thrift',
'thriftier',
'thriftiest',
'thriftily',
'thrifty',
'thrill',
'thrilled',
'thriller',
'thrilling',
'thrip',
'thrive',
'thrived',
'thriven',
'thriver',
'thriving',
'thro',
'throat',
'throatier',
'throatiest',
'throatily',
'throaty',
'throb',
'throbbed',
'throbber',
'throbbing',
'throe',
'thrombi',
'thrombotic',
'throne',
'throng',
'thronging',
'throning',
'throstle',
'throttle',
'throttled',
'throttler',
'throttling',
'through',
'throughout',
'throughput',
'throughway',
'throve',
'throw',
'throwaway',
'throwback',
'thrower',
'throwing',
'thrown',
'thru',
'thrum',
'thrummed',
'thrummer',
'thrummier',
'thrummiest',
'thrumming',
'thrummy',
'thruput',
'thrush',
'thrust',
'thrusted',
'thruster',
'thrusting',
'thrustpush',
'thruway',
'thud',
'thudding',
'thug',
'thuggee',
'thuggery',
'thuggish',
'thulium',
'thumb',
'thumbed',
'thumbhole',
'thumbing',
'thumbnail',
'thumbprint',
'thumbscrew',
'thumbtack',
'thumbtacking',
'thump',
'thumped',
'thumper',
'thumping',
'thunder',
'thunderbird',
'thunderbolt',
'thunderclap',
'thundercloud',
'thunderhead',
'thundering',
'thunderously',
'thundershower',
'thunderstorm',
'thunderstruck',
'thundery',
'thurible',
'thurifer',
'thursday',
'thusly',
'thwack',
'thwacker',
'thwacking',
'thwart',
'thwarted',
'thwarter',
'thwarting',
'thwartly',
'thy',
'thyme',
'thymey',
'thymi',
'thymier',
'thymine',
'thymol',
'thymy',
'thyroid',
'thyroidal',
'thyroidectomize',
'thyroidectomized',
'thyroidectomy',
'thyrse',
'thyself',
'tiara',
'tiaraed',
'tiber',
'tibet',
'tibetan',
'tibia',
'tibiae',
'tibial',
'tic',
'tick',
'ticker',
'ticket',
'ticketed',
'ticketing',
'ticking',
'tickle',
'tickled',
'tickler',
'tickling',
'ticklish',
'ticklishly',
'ticktock',
'tictac',
'tictoc',
'tictocking',
'tidal',
'tidbit',
'tiddly',
'tide',
'tideland',
'tidemark',
'tidewater',
'tidied',
'tidier',
'tidiest',
'tidily',
'tiding',
'tidy',
'tidying',
'tie',
'tieback',
'tieclasp',
'tied',
'tieing',
'tier',
'tiercel',
'tiering',
'tiff',
'tiffany',
'tiffed',
'tiffin',
'tiffined',
'tiffing',
'tiger',
'tigereye',
'tigerish',
'tight',
'tighten',
'tightened',
'tightener',
'tightening',
'tighter',
'tightest',
'tightfisted',
'tightly',
'tightrope',
'tightwad',
'tightwire',
'tiglon',
'tigrish',
'tigroid',
'tike',
'til',
'tilde',
'tile',
'tiled',
'tiler',
'tiling',
'till',
'tillable',
'tillage',
'tilled',
'tiller',
'tillering',
'tilling',
'tilt',
'tiltable',
'tilted',
'tilter',
'tilth',
'tilting',
'tiltyard',
'tim',
'timbal',
'timbale',
'timber',
'timberhead',
'timbering',
'timberland',
'timberline',
'timbre',
'timbrel',
'time',
'timecard',
'timed',
'timekeeper',
'timekeeping',
'timelessly',
'timelier',
'timeliest',
'timely',
'timeout',
'timepiece',
'timer',
'timesaver',
'timesaving',
'timeserver',
'timeserving',
'timesharing',
'timetable',
'timework',
'timeworker',
'timeworn',
'timid',
'timider',
'timidest',
'timidity',
'timidly',
'timing',
'timorously',
'timothy',
'timpani',
'timpanist',
'timpanum',
'tin',
'tinct',
'tincted',
'tincting',
'tincture',
'tincturing',
'tinder',
'tinderbox',
'tindery',
'tine',
'tined',
'tinfoil',
'ting',
'tinge',
'tingeing',
'tinging',
'tingle',
'tingled',
'tingler',
'tinglier',
'tingliest',
'tingling',
'tinhorn',
'tinier',
'tiniest',
'tinily',
'tining',
'tinker',
'tinkerer',
'tinkering',
'tinkle',
'tinkled',
'tinklier',
'tinkliest',
'tinkling',
'tinkly',
'tinman',
'tinned',
'tinner',
'tinnier',
'tinniest',
'tinnily',
'tinning',
'tinny',
'tinplate',
'tinsel',
'tinseled',
'tinseling',
'tinselled',
'tinselly',
'tinsmith',
'tinstone',
'tint',
'tinted',
'tinter',
'tinting',
'tintinnabulation',
'tintype',
'tinware',
'tinwork',
'tiny',
'tip',
'tipcart',
'tipcat',
'tipi',
'tipoff',
'tippable',
'tipper',
'tippet',
'tippier',
'tippiest',
'tipping',
'tipple',
'tippled',
'tippler',
'tippling',
'tippy',
'tipsier',
'tipsiest',
'tipsily',
'tipstaff',
'tipster',
'tipsy',
'tiptoe',
'tiptoed',
'tiptoeing',
'tiptop',
'tirade',
'tire',
'tireder',
'tiredest',
'tirelessly',
'tiresome',
'tiresomely',
'tiring',
'tiro',
'tisane',
'tissue',
'tissued',
'tissuey',
'tissuing',
'tit',
'titan',
'titania',
'titanic',
'titanism',
'titanium',
'titbit',
'titer',
'tithable',
'tithe',
'tithed',
'tither',
'tithing',
'titian',
'titillate',
'titillation',
'titillative',
'titivate',
'title',
'titled',
'titleholder',
'titling',
'titmice',
'titmouse',
'titrant',
'titrate',
'titration',
'titre',
'titter',
'titterer',
'tittering',
'tittie',
'tittle',
'titular',
'titulary',
'tizzy',
'tmh',
'tnpk',
'tnt',
'to',
'toad',
'toadfish',
'toadflax',
'toadied',
'toadish',
'toadstool',
'toady',
'toadying',
'toadyish',
'toadyism',
'toast',
'toasted',
'toaster',
'toastier',
'toastiest',
'toasting',
'toastmaster',
'toasty',
'tobacco',
'tobacconist',
'toboggan',
'tobogganed',
'tobogganist',
'toccata',
'tocsin',
'today',
'toddle',
'toddled',
'toddler',
'toddling',
'toddy',
'toe',
'toecap',
'toed',
'toehold',
'toeing',
'toenail',
'toenailed',
'toenailing',
'toepiece',
'toeplate',
'toeshoe',
'toff',
'toffee',
'toffy',
'tofu',
'tog',
'toga',
'togae',
'togaed',
'together',
'toggery',
'togging',
'toggle',
'toggled',
'toggler',
'toggling',
'togo',
'toil',
'toiled',
'toiler',
'toilet',
'toileted',
'toileting',
'toiletry',
'toilette',
'toilful',
'toiling',
'toilsome',
'toilworn',
'toited',
'tokay',
'toke',
'toked',
'token',
'tokened',
'tokening',
'tokenism',
'tokenize',
'toking',
'tokonoma',
'tokyo',
'tokyoite',
'tolbutamide',
'told',
'tole',
'toledo',
'tolerable',
'tolerably',
'tolerance',
'tolerant',
'tolerantly',
'tolerate',
'toleration',
'tolerative',
'toll',
'tollage',
'tollbooth',
'tolled',
'toller',
'tollgate',
'tollgatherer',
'tollhouse',
'tolling',
'tollman',
'tollway',
'tolstoy',
'toluene',
'toluol',
'toluyl',
'tom',
'tomahawk',
'tomahawked',
'tomato',
'tomb',
'tombed',
'tombing',
'tomboy',
'tombstone',
'tomcat',
'tome',
'tomfool',
'tomfoolery',
'tommy',
'tommyrot',
'tomogram',
'tomograph',
'tomographic',
'tomomania',
'tomorrow',
'tomtit',
'ton',
'tonal',
'tonality',
'tone',
'toner',
'tong',
'tonger',
'tonging',
'tongue',
'tongued',
'tonguing',
'tonic',
'tonicity',
'tonier',
'toniest',
'tonight',
'toning',
'tonishly',
'tonnage',
'tonne',
'tonneau',
'tonneaux',
'tonner',
'tonnish',
'tonsil',
'tonsilar',
'tonsillar',
'tonsillectomy',
'tonsillotomy',
'tonsorial',
'tonsure',
'tonsuring',
'tony',
'too',
'took',
'tool',
'toolbox',
'tooled',
'tooler',
'toolhead',
'toolholder',
'tooling',
'toolmaker',
'toolmaking',
'toolroom',
'toolshed',
'toot',
'tooted',
'tooter',
'tooth',
'toothache',
'toothbrush',
'toothed',
'toothier',
'toothiest',
'toothily',
'toothing',
'toothpaste',
'toothpick',
'toothsome',
'toothy',
'tooting',
'tootle',
'tootled',
'tootler',
'tootling',
'tootsie',
'tootsy',
'top',
'topaz',
'topcoat',
'tope',
'toped',
'topeka',
'toper',
'topflight',
'topful',
'topfull',
'topiary',
'topic',
'topical',
'topicality',
'toping',
'topkick',
'topknot',
'toploftier',
'topmast',
'topmost',
'topnotch',
'topographer',
'topographic',
'topographical',
'topography',
'topological',
'topology',
'topper',
'topping',
'topple',
'toppled',
'toppling',
'topsail',
'topside',
'topsider',
'topsoil',
'topsoiled',
'topsoiling',
'topstitch',
'topstone',
'topwork',
'toque',
'tora',
'torah',
'torc',
'torch',
'torchbearer',
'torched',
'torchere',
'torchier',
'torching',
'torchlight',
'tore',
'toreador',
'torero',
'torment',
'tormented',
'tormenter',
'tormenting',
'torn',
'tornadic',
'tornado',
'toro',
'toroid',
'toroidal',
'toronto',
'torpedo',
'torpedoed',
'torpedoing',
'torpedolike',
'torpid',
'torpidity',
'torpidly',
'torpor',
'torque',
'torqued',
'torquer',
'torquing',
'torrent',
'torrential',
'torrid',
'torrider',
'torridest',
'torridity',
'torridly',
'torsi',
'torsion',
'torsional',
'torso',
'tort',
'torte',
'tortilla',
'tortoise',
'tortoiseshell',
'tortoni',
'tortrix',
'tortuosity',
'tortuously',
'torture',
'torturer',
'torturing',
'torturously',
'tory',
'tosh',
'tossed',
'tosser',
'tossing',
'tosspot',
'tossup',
'tost',
'tot',
'totable',
'total',
'totaled',
'totaling',
'totalism',
'totalitarian',
'totalitarianism',
'totality',
'totalize',
'totalized',
'totalizer',
'totalizing',
'totalled',
'totalling',
'tote',
'toted',
'totem',
'totemic',
'totemism',
'totemist',
'toter',
'tother',
'toting',
'totipotency',
'totipotential',
'totipotentiality',
'toto',
'totted',
'totter',
'totterer',
'tottering',
'tottery',
'totting',
'toucan',
'touch',
'touchable',
'touchback',
'touchdown',
'touche',
'touched',
'toucher',
'touchier',
'touchiest',
'touchily',
'touching',
'touchstone',
'touchup',
'touchy',
'tough',
'toughen',
'toughened',
'toughener',
'toughening',
'tougher',
'toughest',
'toughie',
'toughish',
'toughly',
'toughy',
'toupee',
'tour',
'tourer',
'touring',
'tourism',
'tourist',
'touristy',
'tourmaline',
'tournament',
'tourney',
'tourneyed',
'tourneying',
'tourniquet',
'tousle',
'tousled',
'tousling',
'tout',
'touted',
'touter',
'touting',
'touzle',
'touzled',
'tov',
'tovarich',
'tovarish',
'tow',
'towability',
'towable',
'towage',
'toward',
'towardly',
'towaway',
'towboat',
'towed',
'towel',
'toweled',
'toweling',
'towelled',
'towelling',
'tower',
'towerier',
'toweriest',
'towering',
'towery',
'towhead',
'towhee',
'towing',
'towline',
'town',
'townfolk',
'townhouse',
'townie',
'townish',
'townlet',
'townsfolk',
'township',
'townsite',
'townsman',
'townspeople',
'townswoman',
'townwear',
'towny',
'towpath',
'towrope',
'toxaemia',
'toxaemic',
'toxemia',
'toxemic',
'toxic',
'toxical',
'toxicant',
'toxicity',
'toxicoid',
'toxicologic',
'toxicological',
'toxicologist',
'toxicology',
'toxified',
'toxify',
'toxifying',
'toxin',
'toy',
'toyed',
'toyer',
'toying',
'toyish',
'toyon',
'toyota',
'tpk',
'trace',
'traceability',
'traceable',
'traceably',
'traced',
'tracer',
'tracery',
'trachea',
'tracheae',
'tracheal',
'tracheobronchial',
'tracheotomize',
'tracheotomized',
'tracheotomizing',
'tracheotomy',
'trachoma',
'tracing',
'track',
'trackable',
'trackage',
'tracker',
'tracking',
'trackman',
'trackway',
'tract',
'tractability',
'tractable',
'tractably',
'tractate',
'traction',
'tractional',
'tractive',
'tradable',
'trade',
'tradeable',
'trademark',
'tradename',
'tradeoff',
'trader',
'tradership',
'tradesfolk',
'tradesman',
'tradespeople',
'trading',
'tradition',
'traditional',
'traditionalism',
'traditionalist',
'traditionalistic',
'traditionalize',
'traditionalized',
'traditionary',
'traduce',
'traduced',
'traducement',
'traducer',
'traducing',
'traduction',
'traffic',
'trafficable',
'traffick',
'trafficker',
'trafficking',
'trafficway',
'tragedian',
'tragedienne',
'tragedy',
'tragic',
'tragical',
'tragicomedy',
'tragicomic',
'trail',
'trailblazer',
'trailblazing',
'trailed',
'trailer',
'trailering',
'trailing',
'train',
'trainable',
'trained',
'trainee',
'trainer',
'trainful',
'training',
'trainload',
'trainman',
'trainmaster',
'trainsick',
'trainway',
'traipse',
'traipsed',
'traipsing',
'trait',
'traitorism',
'traitorously',
'trajected',
'trajectory',
'tram',
'tramcar',
'trameled',
'trameling',
'tramell',
'tramelled',
'tramelling',
'tramline',
'trammed',
'trammel',
'trammeled',
'trammeling',
'trammelled',
'trammelling',
'tramming',
'tramp',
'tramped',
'tramper',
'tramping',
'trampish',
'trample',
'trampled',
'trampler',
'trampling',
'trampoline',
'trampoliner',
'trampolinist',
'tramroad',
'tramway',
'trance',
'tranced',
'trancing',
'tranquil',
'tranquiler',
'tranquility',
'tranquilize',
'tranquilized',
'tranquilizer',
'tranquilizing',
'tranquillity',
'tranquillize',
'tranquillized',
'tranquillizer',
'tranquillizing',
'tranquilly',
'transact',
'transacted',
'transacting',
'transaction',
'transactional',
'transalpine',
'transatlantic',
'transborder',
'transceiver',
'transcend',
'transcendant',
'transcendence',
'transcendency',
'transcendent',
'transcendental',
'transcendentalism',
'transcendentalist',
'transcendentalizm',
'transcendently',
'transcending',
'transcontinental',
'transcribe',
'transcribed',
'transcriber',
'transcribing',
'transcript',
'transcription',
'transdesert',
'transduce',
'transducer',
'transducing',
'transect',
'transected',
'transept',
'transequatorial',
'transfer',
'transferability',
'transferable',
'transferal',
'transferee',
'transference',
'transferer',
'transferrable',
'transferral',
'transferrer',
'transferring',
'transferror',
'transfiguration',
'transfigure',
'transfiguring',
'transfix',
'transfixed',
'transfixing',
'transfixion',
'transfixt',
'transform',
'transformation',
'transformed',
'transformer',
'transforming',
'transfrontier',
'transfusable',
'transfuse',
'transfused',
'transfuser',
'transfusing',
'transfusion',
'transfusional',
'transgressed',
'transgressing',
'transgression',
'transgressive',
'transgressor',
'tranship',
'transhipment',
'transhipping',
'transience',
'transiency',
'transient',
'transiently',
'transisthmian',
'transistorize',
'transistorized',
'transistorizing',
'transit',
'transited',
'transiting',
'transition',
'transitional',
'transitive',
'transitivity',
'transitorily',
'transitory',
'translatable',
'translate',
'translation',
'translative',
'transliterate',
'transliteration',
'translucence',
'translucency',
'translucent',
'translucently',
'translucid',
'transmarine',
'transmigrate',
'transmigration',
'transmigratory',
'transmissibility',
'transmissible',
'transmission',
'transmissive',
'transmit',
'transmittable',
'transmittal',
'transmittance',
'transmitted',
'transmitter',
'transmittible',
'transmitting',
'transmogrification',
'transmogrified',
'transmogrify',
'transmogrifying',
'transmutable',
'transmutation',
'transmute',
'transmuted',
'transmuting',
'transnational',
'transoceanic',
'transom',
'transonic',
'transorbital',
'transpacific',
'transparency',
'transparent',
'transparently',
'transpiration',
'transpire',
'transpiring',
'transplant',
'transplantation',
'transplanted',
'transplanter',
'transplanting',
'transpolar',
'transponder',
'transport',
'transportability',
'transportable',
'transportal',
'transportation',
'transportational',
'transported',
'transportee',
'transporter',
'transporting',
'transpose',
'transposed',
'transposing',
'transposition',
'transsexual',
'transsexualism',
'transship',
'transshipment',
'transshipping',
'transubstantiate',
'transubstantiation',
'transverse',
'transversely',
'transvestism',
'transvestite',
'transvestitism',
'trap',
'trapdoor',
'trapeze',
'trapezium',
'trapezoid',
'trapezoidal',
'trapper',
'trapping',
'trapshooting',
'trapt',
'trash',
'trashed',
'trashier',
'trashiest',
'trashily',
'trashing',
'trashman',
'trashy',
'trauma',
'traumata',
'traumatic',
'traumatism',
'traumatization',
'traumatize',
'traumatized',
'traumatizing',
'travail',
'travailed',
'travailing',
'trave',
'travel',
'travelable',
'traveled',
'traveler',
'traveling',
'travellable',
'travelled',
'traveller',
'travelling',
'travelog',
'travelogue',
'traversable',
'traversal',
'traverse',
'traversed',
'traverser',
'traversing',
'travertine',
'travestied',
'travesty',
'travestying',
'travoise',
'trawl',
'trawled',
'trawler',
'trawling',
'tray',
'trayful',
'treacherously',
'treachery',
'treacle',
'treacly',
'tread',
'treader',
'treading',
'treadle',
'treadled',
'treadler',
'treadmill',
'treason',
'treasonable',
'treasonably',
'treasurable',
'treasure',
'treasurer',
'treasurership',
'treasuring',
'treasury',
'treasuryship',
'treat',
'treatability',
'treatable',
'treater',
'treatise',
'treatment',
'treaty',
'treble',
'trebled',
'trebling',
'trebly',
'tree',
'treed',
'treeing',
'treetop',
'tref',
'trefoil',
'trek',
'trekked',
'trekker',
'trekking',
'trellised',
'trellising',
'trematode',
'tremble',
'trembled',
'trembler',
'tremblier',
'trembliest',
'trembling',
'trembly',
'tremendously',
'tremolo',
'tremor',
'tremulously',
'trench',
'trenchancy',
'trenchant',
'trenchantly',
'trenched',
'trencher',
'trencherman',
'trenching',
'trend',
'trendier',
'trendiest',
'trendily',
'trending',
'trendy',
'trenton',
'trepan',
'trepanned',
'trephination',
'trephine',
'trephined',
'trephining',
'trepid',
'trepidation',
'trespassed',
'trespasser',
'trespassing',
'trespassory',
'tressed',
'tressier',
'tressiest',
'tressy',
'trestle',
'trey',
'triable',
'triad',
'triadic',
'triadism',
'triage',
'trial',
'triangle',
'triangular',
'triangularly',
'triangulate',
'triangulation',
'triarchy',
'triassic',
'triatomic',
'triaxial',
'tribade',
'tribadic',
'tribadism',
'tribal',
'tribe',
'tribesman',
'tribeswoman',
'tribulation',
'tribunal',
'tribunate',
'tribune',
'tribuneship',
'tributary',
'tribute',
'trice',
'triced',
'tricentennial',
'trichinella',
'trichlorethylene',
'trichloromethane',
'trichroic',
'trichrome',
'trick',
'tricker',
'trickery',
'trickie',
'trickier',
'trickiest',
'trickily',
'tricking',
'trickish',
'trickishly',
'trickle',
'trickled',
'tricklier',
'trickling',
'trickly',
'tricksier',
'tricksiest',
'trickster',
'tricksy',
'tricky',
'tricolor',
'tricorn',
'tricorne',
'tricot',
'tricuspid',
'tricycle',
'trident',
'tried',
'triennial',
'trier',
'trifacial',
'trifid',
'trifle',
'trifled',
'trifler',
'trifling',
'trifocal',
'trifold',
'trifoliate',
'trifolium',
'triform',
'trifurcation',
'trig',
'trigamist',
'trigamy',
'trigger',
'triggering',
'triggest',
'trigging',
'triglyceride',
'trigon',
'trigonal',
'trigonometric',
'trigonometrical',
'trigonometry',
'trigraph',
'trihedra',
'trihybrid',
'trijet',
'trilateral',
'triliteral',
'trill',
'trilled',
'triller',
'trilling',
'trillion',
'trillionth',
'trillium',
'trilobal',
'trilobate',
'trilobed',
'trilogy',
'trim',
'trimaran',
'trimester',
'trimeter',
'trimly',
'trimmed',
'trimmer',
'trimmest',
'trimming',
'trimonthly',
'trimorph',
'trinal',
'trinary',
'trine',
'trined',
'trinidad',
'trining',
'trinitarian',
'trinitarianism',
'trinitrotoluene',
'trinity',
'trinket',
'trinketed',
'trinketing',
'trinodal',
'trio',
'triode',
'triolet',
'trioxide',
'trip',
'tripart',
'tripartite',
'tripe',
'tripedal',
'triphase',
'triplane',
'triple',
'tripled',
'triplet',
'triplex',
'triplicate',
'triplication',
'tripling',
'triploid',
'triply',
'tripod',
'tripodal',
'tripodic',
'tripoli',
'tripper',
'tripping',
'triptych',
'trireme',
'trisaccharide',
'triscele',
'trisect',
'trisected',
'trisecting',
'trisection',
'triskaidekaphobe',
'triskaidekaphobia',
'tristate',
'triste',
'trite',
'tritely',
'triter',
'tritest',
'triticale',
'tritium',
'triton',
'tritone',
'triturable',
'triturate',
'trituration',
'triumph',
'triumphal',
'triumphant',
'triumphantly',
'triumphed',
'triumphing',
'triumvir',
'triumviral',
'triumvirate',
'triumviri',
'triune',
'triunity',
'trivalent',
'trivalve',
'trivet',
'trivia',
'trivial',
'triviality',
'trivium',
'trochaic',
'troche',
'trochee',
'trochoid',
'trod',
'trodden',
'trode',
'troglodyte',
'troika',
'trojan',
'troll',
'trolled',
'troller',
'trolley',
'trolleyed',
'trolleying',
'trollied',
'trolling',
'trollop',
'trollopy',
'trolly',
'trollying',
'trombone',
'trombonist',
'tromp',
'trompe',
'tromped',
'tromping',
'troop',
'trooped',
'trooper',
'trooping',
'troopship',
'trop',
'trope',
'trophic',
'trophied',
'trophism',
'trophy',
'trophying',
'tropia',
'tropic',
'tropical',
'tropin',
'tropine',
'tropism',
'troposphere',
'tropospheric',
'troppo',
'trot',
'troth',
'trothed',
'trothing',
'trotted',
'trotter',
'trotting',
'troubadour',
'trouble',
'troubled',
'troublemaker',
'troubler',
'troubleshoot',
'troubleshooter',
'troubleshooting',
'troubleshot',
'troublesome',
'troublesomely',
'troubling',
'trough',
'trounce',
'trounced',
'trouncer',
'trouncing',
'troupe',
'trouped',
'trouper',
'trouping',
'trouser',
'trousseau',
'trousseaux',
'trout',
'troutier',
'troutiest',
'trouty',
'trove',
'trover',
'trow',
'trowed',
'trowel',
'troweled',
'troweler',
'troweling',
'trowelled',
'trowelling',
'trowing',
'troy',
'truancy',
'truant',
'truanted',
'truanting',
'truantry',
'truce',
'truced',
'trucing',
'truck',
'truckage',
'truckdriver',
'trucker',
'trucking',
'truckle',
'truckled',
'truckler',
'truckling',
'truckload',
'truckman',
'truckmaster',
'truculence',
'truculency',
'truculent',
'truculently',
'trudge',
'trudger',
'trudging',
'true',
'trueblue',
'trueborn',
'trued',
'trueing',
'truelove',
'truer',
'truest',
'truffle',
'truffled',
'truing',
'truism',
'truistic',
'trull',
'truly',
'truman',
'trump',
'trumped',
'trumpery',
'trumpet',
'trumpeted',
'trumpeter',
'trumpeting',
'trumping',
'truncate',
'truncation',
'truncheon',
'trundle',
'trundled',
'trundler',
'trundling',
'trunk',
'trunked',
'trunkway',
'trunnion',
'trussed',
'trusser',
'trussing',
'trust',
'trustability',
'trustable',
'trustbuster',
'trustbusting',
'trusted',
'trustee',
'trusteed',
'trusteeing',
'trusteeship',
'truster',
'trustful',
'trustfully',
'trustier',
'trustiest',
'trustified',
'trustifying',
'trustily',
'trusting',
'trustwoman',
'trustworthily',
'trustworthy',
'trusty',
'truth',
'truthful',
'truthfully',
'try',
'trying',
'tryout',
'trypsin',
'tryptic',
'tryptophane',
'tryst',
'trysted',
'tryster',
'trysting',
'tsar',
'tsardom',
'tsarevna',
'tsarina',
'tsarism',
'tsarist',
'tsaritza',
'tsetse',
'tsked',
'tsking',
'tsktsked',
'tsktsking',
'tsp',
'tsuba',
'tsunami',
'tsunamic',
'tty',
'tub',
'tuba',
'tubal',
'tubbable',
'tubbed',
'tubber',
'tubbier',
'tubbiest',
'tubbing',
'tubby',
'tube',
'tubectomy',
'tubed',
'tuber',
'tubercle',
'tubercled',
'tubercular',
'tuberculin',
'tuberculoid',
'tuberculously',
'tuberoid',
'tuberose',
'tuberosity',
'tubework',
'tubful',
'tubiform',
'tubing',
'tubular',
'tubularly',
'tubulate',
'tubule',
'tuck',
'tucker',
'tuckering',
'tucket',
'tucking',
'tucson',
'tudor',
'tuesday',
'tufa',
'tuff',
'tuffet',
'tuft',
'tufted',
'tufter',
'tuftier',
'tuftiest',
'tuftily',
'tufting',
'tufty',
'tug',
'tugboat',
'tugger',
'tugging',
'tuition',
'tularemia',
'tularemic',
'tulip',
'tulle',
'tulsa',
'tumble',
'tumbled',
'tumbledown',
'tumbler',
'tumbleweed',
'tumbling',
'tumbrel',
'tumefied',
'tumeric',
'tumescence',
'tumescent',
'tumid',
'tumidity',
'tummy',
'tumor',
'tumoral',
'tumour',
'tumult',
'tun',
'tuna',
'tunability',
'tunable',
'tunably',
'tundra',
'tune',
'tuneable',
'tuneably',
'tuned',
'tuneful',
'tunefully',
'tunelessly',
'tuner',
'tuneup',
'tungsten',
'tungstenic',
'tunic',
'tuning',
'tunisia',
'tunisian',
'tunned',
'tunnel',
'tunneled',
'tunneler',
'tunneling',
'tunnelled',
'tunneller',
'tunnelling',
'tunney',
'tunning',
'tunny',
'tup',
'tupelo',
'tuppence',
'tuppenny',
'tupping',
'tuque',
'turban',
'turbaned',
'turbid',
'turbidity',
'turbidly',
'turbinate',
'turbine',
'turbit',
'turbo',
'turbocar',
'turbocharger',
'turbofan',
'turbojet',
'turboprop',
'turbot',
'turbulence',
'turbulency',
'turbulent',
'turbulently',
'turd',
'tureen',
'turf',
'turfed',
'turfier',
'turfing',
'turfy',
'turgescence',
'turgid',
'turgidity',
'turgidly',
'turk',
'turkey',
'turmeric',
'turmoil',
'turmoiled',
'turmoiling',
'turn',
'turnable',
'turnabout',
'turnaround',
'turnbuckle',
'turncoat',
'turndown',
'turned',
'turner',
'turnery',
'turnhall',
'turning',
'turnip',
'turnkey',
'turnoff',
'turnout',
'turnover',
'turnpike',
'turnspit',
'turnstile',
'turntable',
'turnup',
'turpentine',
'turpitude',
'turquoise',
'turret',
'turreted',
'turtle',
'turtled',
'turtledove',
'turtleneck',
'turtler',
'turtling',
'tusche',
'tush',
'tushed',
'tushing',
'tusk',
'tusked',
'tusker',
'tusking',
'tussle',
'tussled',
'tussling',
'tussock',
'tussocky',
'tussuck',
'tut',
'tutee',
'tutelage',
'tutelar',
'tutelary',
'tutorage',
'tutorhood',
'tutorial',
'tutoring',
'tutorship',
'tutrix',
'tutted',
'tutti',
'tutting',
'tutu',
'tux',
'tuxedo',
'twaddle',
'twaddled',
'twaddler',
'twaddling',
'twain',
'twang',
'twangier',
'twangiest',
'twanging',
'twangle',
'twangled',
'twangler',
'twangy',
'twat',
'twattle',
'tweak',
'tweaked',
'tweakier',
'tweakiest',
'tweaking',
'tweaky',
'tweed',
'tweedier',
'tweediest',
'tweedle',
'tweedled',
'tweedy',
'tween',
'tweet',
'tweeted',
'tweeter',
'tweeting',
'tweeze',
'tweezed',
'tweezer',
'tweezing',
'twelfth',
'twelve',
'twelvemo',
'twelvemonth',
'twentieth',
'twenty',
'twerp',
'twice',
'twiddle',
'twiddled',
'twiddler',
'twiddling',
'twier',
'twig',
'twiggier',
'twiggiest',
'twigging',
'twiggy',
'twilight',
'twilit',
'twill',
'twilled',
'twilling',
'twin',
'twinborn',
'twine',
'twined',
'twiner',
'twinge',
'twingeing',
'twinging',
'twinier',
'twinight',
'twinighter',
'twining',
'twinkle',
'twinkled',
'twinkler',
'twinkling',
'twinkly',
'twinned',
'twinning',
'twinship',
'twiny',
'twirl',
'twirled',
'twirler',
'twirlier',
'twirliest',
'twirling',
'twirly',
'twirp',
'twist',
'twistable',
'twisted',
'twister',
'twisting',
'twit',
'twitch',
'twitched',
'twitcher',
'twitchier',
'twitchiest',
'twitching',
'twitchy',
'twitted',
'twitter',
'twittering',
'twittery',
'twitting',
'twixt',
'two',
'twofer',
'twofold',
'twopence',
'twopenny',
'twosome',
'tycoon',
'tying',
'tyke',
'tyler',
'tymbal',
'tympan',
'tympana',
'tympani',
'tympanic',
'tympanum',
'tympany',
'typal',
'type',
'typeable',
'typebar',
'typecase',
'typecast',
'typecasting',
'typed',
'typeface',
'typescript',
'typeset',
'typesetter',
'typesetting',
'typewrite',
'typewriter',
'typewriting',
'typewritten',
'typewrote',
'typhoid',
'typhoidal',
'typhon',
'typhoon',
'typic',
'typical',
'typicality',
'typier',
'typiest',
'typification',
'typified',
'typifier',
'typify',
'typifying',
'typing',
'typist',
'typo',
'typographer',
'typographic',
'typographical',
'typography',
'typology',
'tyrannic',
'tyrannical',
'tyrannize',
'tyrannized',
'tyrannizer',
'tyrannizing',
'tyrannosaur',
'tyrannously',
'tyranny',
'tyrant',
'tyre',
'tyro',
'tything',
'tzar',
'tzardom',
'tzarevna',
'tzarina',
'tzarism',
'tzarist',
'tzaritza',
'tzetze',
'tzigane',
'uberrima',
'ubiquitously',
'ubiquity',
'udder',
'ufo',
'uganda',
'ugandan',
'ugh',
'ugli',
'uglier',
'ugliest',
'uglified',
'uglifier',
'uglify',
'uglifying',
'uglily',
'ugly',
'ugsome',
'uh',
'ukase',
'uke',
'ukelele',
'ukraine',
'ukrainian',
'ukulele',
'ulcer',
'ulcerate',
'ulceration',
'ulcerative',
'ulcering',
'ullage',
'ulna',
'ulnae',
'ulnar',
'ulster',
'ult',
'ulterior',
'ulteriorly',
'ultima',
'ultimacy',
'ultimata',
'ultimate',
'ultimately',
'ultimation',
'ultimatum',
'ultimo',
'ultra',
'ultracentrifuge',
'ultraconservative',
'ultrafiche',
'ultrafiltration',
'ultrahigh',
'ultraism',
'ultraist',
'ultramarine',
'ultramicroscope',
'ultramicroscopic',
'ultramicroscopy',
'ultramicrotome',
'ultramodern',
'ultramundane',
'ultrasonic',
'ultrasonogram',
'ultrasonography',
'ultrasound',
'ultrastructural',
'ultrastructure',
'ultrasuede',
'ultraviolet',
'ululate',
'ululation',
'ulva',
'umbel',
'umbeled',
'umbellate',
'umber',
'umbilical',
'umbilici',
'umbra',
'umbrae',
'umbrage',
'umbral',
'umbrella',
'umbrellaed',
'umiak',
'umlaut',
'umlauted',
'umlauting',
'ump',
'umped',
'umping',
'umpire',
'umpireship',
'umpiring',
'umpteen',
'umpteenth',
'umteenth',
'un',
'unabashed',
'unable',
'unabsolved',
'unabsorbed',
'unabsorbent',
'unacademic',
'unaccented',
'unacceptable',
'unacceptably',
'unacceptance',
'unaccepted',
'unaccessible',
'unaccidental',
'unacclaimate',
'unacclaimed',
'unacclimatized',
'unaccompanied',
'unaccomplished',
'unaccountability',
'unaccountable',
'unaccountably',
'unaccounted',
'unaccredited',
'unaccustomed',
'unacknowledging',
'unacquainted',
'unactionable',
'unadapted',
'unaddressed',
'unadjourned',
'unadjustable',
'unadjusted',
'unadorned',
'unadulterate',
'unadvertised',
'unadvisable',
'unadvised',
'unaesthetic',
'unaffected',
'unafraid',
'unaging',
'unaimed',
'unalarmed',
'unalarming',
'unalienable',
'unaligned',
'unalike',
'unallayed',
'unallied',
'unallowable',
'unalloyed',
'unalphabetized',
'unalterable',
'unalterably',
'unambiguously',
'unamortized',
'unamplified',
'unamused',
'unamusing',
'unanimity',
'unanimously',
'unannounced',
'unanswerable',
'unapologetic',
'unapparent',
'unappealing',
'unappeasable',
'unappeased',
'unappetizing',
'unapplicable',
'unapplied',
'unappointed',
'unappreciative',
'unapprehensive',
'unapproachable',
'unapproved',
'unapproving',
'unapt',
'unarm',
'unarmed',
'unarrested',
'unartful',
'unartfully',
'unarticulate',
'unarticulately',
'unartistic',
'unary',
'unascertainable',
'unashamed',
'unasked',
'unaspiring',
'unassailable',
'unassailably',
'unassertive',
'unassessed',
'unassigned',
'unassisted',
'unassorted',
'unassuming',
'unattached',
'unattackable',
'unattainable',
'unattempted',
'unattested',
'unattracted',
'unattractive',
'unauthentic',
'unauthorized',
'unavailability',
'unavailable',
'unavailing',
'unavoidability',
'unavoidable',
'unavoidably',
'unavowed',
'unawaked',
'unawakened',
'unaware',
'unawed',
'unbailable',
'unbaked',
'unbalance',
'unbalanced',
'unbalancing',
'unbaptized',
'unbar',
'unbarring',
'unbear',
'unbearable',
'unbearably',
'unbearing',
'unbeatable',
'unbeaten',
'unbecoming',
'unbefitting',
'unbeholden',
'unbeknown',
'unbeknownst',
'unbelief',
'unbelievable',
'unbelievably',
'unbeliever',
'unbelieving',
'unbeloved',
'unbend',
'unbendable',
'unbending',
'unbent',
'unbiased',
'unbid',
'unbidden',
'unbigoted',
'unbind',
'unbinding',
'unbleached',
'unblemished',
'unblessed',
'unblinking',
'unblock',
'unblocking',
'unblushing',
'unbodied',
'unbolt',
'unbolted',
'unbolting',
'unborn',
'unbosom',
'unbosomed',
'unbosoming',
'unbound',
'unbowed',
'unbox',
'unbraiding',
'unbreakable',
'unbribable',
'unbridgeable',
'unbridle',
'unbridled',
'unbroken',
'unbrotherly',
'unbruised',
'unbrushed',
'unbuckle',
'unbuckled',
'unbuckling',
'unbudgeted',
'unbudging',
'unbuilding',
'unburden',
'unburdened',
'unburdening',
'unburied',
'unburned',
'unburnt',
'unbutton',
'unbuttoning',
'uncage',
'uncanceled',
'uncancelled',
'uncannier',
'uncanniest',
'uncannily',
'uncanny',
'uncap',
'uncapitalized',
'uncapping',
'uncaring',
'uncarpeted',
'uncase',
'uncashed',
'uncaught',
'unceasing',
'unceremoniously',
'uncertain',
'uncertainly',
'uncertainty',
'uncertified',
'unchain',
'unchained',
'unchaining',
'unchallengeable',
'unchangeable',
'unchanging',
'uncharacteristic',
'uncharging',
'uncharitable',
'uncharitably',
'uncharted',
'unchaste',
'unchastely',
'unchastened',
'unchastised',
'unchastity',
'uncheerful',
'uncheerfully',
'uncherished',
'unchilled',
'unchosen',
'unchristened',
'unchristian',
'unchurched',
'uncial',
'uncircumcised',
'uncircumstantial',
'uncircumstantialy',
'uncivil',
'uncivilized',
'uncivilly',
'unclad',
'unclaimed',
'unclamped',
'unclarified',
'unclasp',
'unclasped',
'unclasping',
'unclassifiable',
'unclassified',
'uncle',
'unclean',
'uncleaned',
'uncleanly',
'unclear',
'unclearer',
'unclehood',
'unclench',
'unclenched',
'unclenching',
'unclerical',
'uncloak',
'uncloaked',
'uncloaking',
'unclog',
'unclogging',
'unclose',
'unclosed',
'unclosing',
'unclothe',
'unclothed',
'unclothing',
'unclouding',
'unco',
'uncoffined',
'uncoil',
'uncoiled',
'uncoiling',
'uncollected',
'uncombed',
'uncombined',
'uncomfortable',
'uncomfortably',
'uncomforted',
'uncomforting',
'uncommendable',
'uncommercial',
'uncommitted',
'uncommon',
'uncommoner',
'uncommonly',
'uncommunicative',
'uncompartmentalize',
'uncompartmentalized',
'uncompassionate',
'uncompetitive',
'uncomplaining',
'uncompleted',
'uncompliant',
'uncomplimentary',
'uncomprehending',
'uncomprehened',
'uncompressed',
'uncompromising',
'unconcealed',
'unconcern',
'unconcerned',
'uncondensed',
'unconditional',
'unconditionality',
'unconfessed',
'unconfined',
'unconfirmed',
'unconformable',
'unconforming',
'unconfused',
'uncongenial',
'unconnected',
'unconquerable',
'unconquerably',
'unconscientiously',
'unconscionable',
'unconscionably',
'unconsciously',
'unconsenting',
'unconsoled',
'unconstitutional',
'unconstitutionality',
'unconstrained',
'unconstricted',
'unconsumed',
'uncontestable',
'uncontested',
'uncontradicted',
'uncontrite',
'uncontrollable',
'uncontrollably',
'uncontrolled',
'uncontrovertible',
'unconventional',
'unconventionality',
'unconventionalized',
'unconversant',
'unconverted',
'unconvertible',
'unconvinced',
'unconvincing',
'uncooked',
'uncool',
'uncooperative',
'uncordial',
'uncork',
'uncorked',
'uncorking',
'uncorrected',
'uncorrupted',
'uncountable',
'uncounted',
'uncouple',
'uncoupled',
'uncoupling',
'uncouth',
'uncover',
'uncovering',
'uncrate',
'uncritical',
'uncrossed',
'uncrossing',
'uncrowned',
'uncrowning',
'uncrystallized',
'unction',
'unctuosity',
'unctuously',
'uncurbed',
'uncurl',
'uncurled',
'uncurling',
'uncurtained',
'uncustomary',
'uncut',
'undamped',
'undaunted',
'undebatable',
'undecayed',
'undeceive',
'undeceived',
'undeceiving',
'undecidable',
'undecipherable',
'undefensible',
'undefiled',
'undefinable',
'undefinably',
'undefined',
'undeliverable',
'undemanding',
'undemocratic',
'undemonstrable',
'undemonstrably',
'undemonstrative',
'undeniable',
'undeniably',
'undenied',
'undenominational',
'undependable',
'under',
'underachieve',
'underachieved',
'underachiever',
'underachieving',
'underact',
'underacted',
'underacting',
'underage',
'underarm',
'underassessed',
'underassessment',
'underate',
'underbelly',
'underbid',
'underbidder',
'underbidding',
'underbrush',
'undercapitalize',
'undercapitalized',
'undercarriage',
'undercharge',
'undercharging',
'underclad',
'underclassman',
'underclerk',
'underclothed',
'underclothing',
'undercoat',
'undercook',
'undercooked',
'undercooking',
'undercover',
'undercurrent',
'undercut',
'undercutting',
'underdeveloped',
'underdevelopment',
'underdog',
'underdone',
'underdressed',
'underdressing',
'undereat',
'underemphasize',
'underemphasized',
'underemphasizing',
'underemployed',
'underemployment',
'underestimate',
'underestimation',
'underexpose',
'underexposed',
'underexposing',
'underexposure',
'underfed',
'underfeed',
'underfeeding',
'underfinance',
'underfinanced',
'underfinancing',
'underflow',
'underfoot',
'underfur',
'undergarment',
'undergird',
'undergirding',
'undergo',
'undergoing',
'undergone',
'undergraduate',
'underground',
'undergrounder',
'undergrowth',
'underhand',
'underlaid',
'underlain',
'underlay',
'underlayer',
'underlie',
'underlier',
'underline',
'underlined',
'underling',
'underlining',
'underlip',
'underlying',
'undermanned',
'undermine',
'undermined',
'underminer',
'undermining',
'undermost',
'underneath',
'undernourished',
'undernourishment',
'underofficial',
'underpaid',
'underpart',
'underpay',
'underpaying',
'underpayment',
'underpeopled',
'underpin',
'underpinned',
'underpinning',
'underplay',
'underplayed',
'underplaying',
'underprice',
'underpriced',
'underpricing',
'underproduce',
'underproduced',
'underproducing',
'underproduction',
'underran',
'underrate',
'underripened',
'underrun',
'underrunning',
'underscore',
'underscoring',
'undersea',
'undersecretary',
'undersell',
'underselling',
'underset',
'undersexed',
'undersheriff',
'undershirt',
'undershot',
'underside',
'undersign',
'undersigned',
'undersize',
'undersized',
'underskirt',
'underslung',
'undersold',
'underspend',
'underspending',
'underspent',
'understaffed',
'understand',
'understandable',
'understandably',
'understanding',
'understate',
'understatement',
'understood',
'understructure',
'understudied',
'understudy',
'understudying',
'undersupplied',
'undersupply',
'undersupplying',
'undersurface',
'undertake',
'undertaken',
'undertaker',
'undertaking',
'undertone',
'undertook',
'undertow',
'undertrained',
'undervalue',
'undervalued',
'undervaluing',
'underwaist',
'underwater',
'underway',
'underwear',
'underweight',
'underwent',
'underwind',
'underwinding',
'underworld',
'underwound',
'underwrite',
'underwriter',
'underwriting',
'underwritten',
'underwrote',
'undescribable',
'undescribably',
'undeserved',
'undeserving',
'undesigned',
'undesigning',
'undesirability',
'undesirable',
'undestroyed',
'undetachable',
'undetached',
'undetectable',
'undetected',
'undeterminable',
'undetermined',
'undeveloped',
'undiagnosed',
'undid',
'undiffused',
'undigested',
'undignified',
'undiluted',
'undiminished',
'undimmed',
'undine',
'undiplomatic',
'undirected',
'undiscerned',
'undiscernible',
'undiscernibly',
'undiscerning',
'undisciplinable',
'undisciplined',
'undisclosed',
'undiscoverable',
'undisguised',
'undismayed',
'undispelled',
'undisplayed',
'undisposed',
'undisproved',
'undisputable',
'undisputed',
'undissolved',
'undistilled',
'undistinguishable',
'undistinguished',
'undistinguishing',
'undistressed',
'undistributed',
'undisturbed',
'undiversified',
'undo',
'undocking',
'undocumented',
'undoer',
'undogmatic',
'undoing',
'undone',
'undoubted',
'undoubting',
'undramatic',
'undrape',
'undraped',
'undraping',
'undreamed',
'undreamt',
'undressed',
'undressing',
'undrest',
'undrinkable',
'undue',
'undulance',
'undulant',
'undulate',
'undulation',
'undulatory',
'unduly',
'undutiful',
'undutifully',
'undy',
'undyed',
'undying',
'unearned',
'unearth',
'unearthed',
'unearthing',
'unearthly',
'unease',
'uneasier',
'uneasiest',
'uneasily',
'uneasy',
'uneatable',
'uneaten',
'uneconomic',
'uneconomical',
'unedible',
'unedifying',
'unedited',
'uneducable',
'unembarrassed',
'unembellished',
'unemotional',
'unemphatic',
'unemployability',
'unemployable',
'unemployed',
'unemployment',
'unenclosed',
'unending',
'unendorsed',
'unendurable',
'unendurably',
'unenforceable',
'unenforced',
'unenfranchised',
'unenjoyable',
'unenlightened',
'unenriched',
'unenrolled',
'unentangled',
'unenterprising',
'unentertaining',
'unenthusiastic',
'unenviable',
'unenviously',
'unequal',
'unequaled',
'unequalled',
'unequivocal',
'unerased',
'unerring',
'unescapable',
'unescapably',
'unesco',
'unescorted',
'unessential',
'unestablished',
'unesthetic',
'unethical',
'uneven',
'unevener',
'unevenest',
'unevenly',
'uneventful',
'uneventfully',
'unexampled',
'unexcelled',
'unexceptionable',
'unexceptionably',
'unexceptional',
'unexchangeable',
'unexcited',
'unexciting',
'unexcusable',
'unexcusably',
'unexcused',
'unexecuted',
'unexercised',
'unexpected',
'unexperienced',
'unexplainable',
'unexplainably',
'unexplained',
'unexplicit',
'unexploited',
'unexposed',
'unexpressed',
'unexpressive',
'unextinguished',
'unextravagant',
'unfading',
'unfailing',
'unfair',
'unfairer',
'unfairest',
'unfairly',
'unfaithful',
'unfaithfully',
'unfaltering',
'unfamiliar',
'unfamiliarity',
'unfamiliarly',
'unfashionable',
'unfashionably',
'unfasten',
'unfastened',
'unfastening',
'unfathomable',
'unfathomed',
'unfavorable',
'unfavorably',
'unfazed',
'unfearing',
'unfeasible',
'unfed',
'unfeeling',
'unfeigned',
'unfelt',
'unfeminine',
'unfenced',
'unfermented',
'unfertile',
'unfertilized',
'unfestive',
'unfetter',
'unfilial',
'unfilled',
'unfinished',
'unfit',
'unfitly',
'unfitted',
'unfitting',
'unfix',
'unfixed',
'unfixing',
'unflagging',
'unflappability',
'unflappable',
'unflappably',
'unflattering',
'unflinching',
'unfocused',
'unfocussed',
'unfold',
'unfolder',
'unfolding',
'unforbidden',
'unforbidding',
'unforced',
'unforeseeable',
'unforeseen',
'unforested',
'unforetold',
'unforgettable',
'unforgettably',
'unforgivable',
'unforgivably',
'unforgiven',
'unforgiving',
'unforgotten',
'unformatted',
'unformed',
'unforsaken',
'unforseen',
'unfortified',
'unfortunate',
'unfortunately',
'unfought',
'unframed',
'unfree',
'unfreeze',
'unfreezing',
'unfrequented',
'unfriendly',
'unfrock',
'unfrocking',
'unfroze',
'unfrozen',
'unfruitful',
'unfulfilled',
'unfunny',
'unfurl',
'unfurled',
'unfurling',
'unfurnished',
'ungainlier',
'ungainly',
'ungallant',
'ungallantly',
'ungenial',
'ungenteel',
'ungentle',
'ungentlemanly',
'ungently',
'unglazed',
'unglue',
'ungodlier',
'ungodly',
'ungot',
'ungovernability',
'ungovernable',
'ungoverned',
'ungraceful',
'ungracefully',
'ungraciously',
'ungrammatical',
'ungrateful',
'ungratefully',
'ungratifying',
'ungrudging',
'unguent',
'unguentary',
'unguiltily',
'ungulate',
'unhackneyed',
'unhallowed',
'unhand',
'unhandier',
'unhandiest',
'unhanding',
'unhandy',
'unhappier',
'unhappiest',
'unhappily',
'unhappy',
'unhardened',
'unharmed',
'unharmful',
'unharnessed',
'unharnessing',
'unharvested',
'unhat',
'unhatched',
'unhatted',
'unhealed',
'unhealthful',
'unhealthier',
'unhealthiest',
'unhealthy',
'unheard',
'unheedful',
'unheedfully',
'unheeding',
'unhelm',
'unhelpful',
'unheroic',
'unhinge',
'unhinging',
'unhip',
'unhitch',
'unhitched',
'unhitching',
'unholier',
'unholiest',
'unholily',
'unholy',
'unhook',
'unhooked',
'unhooking',
'unhorse',
'unhorsed',
'unhorsing',
'unhoused',
'unhuman',
'unhung',
'unhurried',
'unhurt',
'unhygienic',
'uniaxial',
'unicameral',
'unicef',
'unicellular',
'unicolor',
'unicorn',
'unicycle',
'unicyclist',
'unidentifiable',
'unidentified',
'unidiomatic',
'unidirectional',
'unific',
'unification',
'unified',
'unifier',
'uniform',
'uniformed',
'uniformer',
'uniformest',
'uniforming',
'uniformity',
'uniformly',
'unify',
'unifying',
'unilateral',
'unimaginable',
'unimaginably',
'unimaginative',
'unimpeachability',
'unimpeachable',
'unimpeachably',
'unimpeached',
'unimportance',
'unimportant',
'unimposing',
'unimpressed',
'unimpressible',
'unimpressive',
'unimproved',
'uninclosed',
'unindemnified',
'unindorsed',
'uninfected',
'uninflammable',
'uninfluenced',
'uninfluential',
'uninformative',
'uninformed',
'uninhabitable',
'uninhabited',
'uninhibited',
'uninspiring',
'uninstructed',
'uninsurable',
'unintellectual',
'unintelligent',
'unintelligently',
'unintelligible',
'unintelligibly',
'unintentional',
'uninterested',
'uninteresting',
'uninterrupted',
'uninvested',
'uninvited',
'uninviting',
'uninvolved',
'union',
'unionism',
'unionist',
'unionistic',
'unionization',
'unionize',
'unionized',
'unionizing',
'unipod',
'unipolar',
'unique',
'uniquely',
'uniquer',
'uniquest',
'unisex',
'unisexual',
'unison',
'unisonal',
'unit',
'unitarian',
'unitarianism',
'unitary',
'unite',
'united',
'uniter',
'uniting',
'unitive',
'unitize',
'unitized',
'unitizing',
'unity',
'univ',
'univalent',
'univalve',
'universal',
'universalism',
'universalist',
'universality',
'universalization',
'universalize',
'universalized',
'universalizing',
'universe',
'university',
'univocal',
'unix',
'unjoined',
'unjointed',
'unjudicial',
'unjust',
'unjustifiable',
'unjustifiably',
'unjustification',
'unjustified',
'unjustly',
'unkempt',
'unkennel',
'unkenneled',
'unkept',
'unkind',
'unkinder',
'unkindest',
'unkindlier',
'unkindly',
'unkissed',
'unknitting',
'unknot',
'unknotted',
'unknotting',
'unknowable',
'unknowing',
'unknown',
'unkosher',
'unlabeled',
'unlabelled',
'unlace',
'unlaced',
'unlacing',
'unlading',
'unlamented',
'unlashing',
'unlatch',
'unlatched',
'unlatching',
'unlaw',
'unlawful',
'unlawfully',
'unlay',
'unlaying',
'unlearn',
'unlearned',
'unlearning',
'unlearnt',
'unleash',
'unleashed',
'unleashing',
'unleavened',
'unled',
'unlet',
'unlettable',
'unleveling',
'unlevelled',
'unlicensed',
'unlifelike',
'unlighted',
'unlikable',
'unlike',
'unlikelier',
'unlikeliest',
'unlikelihood',
'unlikely',
'unlimber',
'unlimbering',
'unlimited',
'unlined',
'unlink',
'unlinked',
'unlinking',
'unlisted',
'unlit',
'unlivable',
'unliveable',
'unload',
'unloader',
'unloading',
'unlock',
'unlocking',
'unlooked',
'unloose',
'unloosed',
'unloosen',
'unloosened',
'unloosening',
'unloosing',
'unlovable',
'unloved',
'unlovelier',
'unloving',
'unluckier',
'unluckiest',
'unluckily',
'unlucky',
'unmade',
'unmagnified',
'unmailable',
'unmaintainable',
'unmake',
'unman',
'unmanageable',
'unmanageably',
'unmanful',
'unmanly',
'unmanned',
'unmannerly',
'unmanning',
'unmarked',
'unmarketable',
'unmarriageable',
'unmarried',
'unmarrying',
'unmask',
'unmasked',
'unmasker',
'unmasking',
'unmatched',
'unmeaning',
'unmeant',
'unmechanical',
'unmelted',
'unmemorized',
'unmentionable',
'unmerchantable',
'unmerciful',
'unmercifully',
'unmerited',
'unmet',
'unmethodical',
'unmilitary',
'unmindful',
'unmingled',
'unmingling',
'unmistakable',
'unmistakably',
'unmistaken',
'unmitering',
'unmixed',
'unmixt',
'unmodified',
'unmold',
'unmolested',
'unmollified',
'unmooring',
'unmoral',
'unmorality',
'unmounted',
'unmourned',
'unmovable',
'unmoved',
'unmoving',
'unmown',
'unmuffle',
'unmuffled',
'unmuffling',
'unmusical',
'unmuzzle',
'unmuzzled',
'unmuzzling',
'unnameable',
'unnamed',
'unnatural',
'unnavigable',
'unnecessarily',
'unnecessary',
'unneedful',
'unneedfully',
'unnegotiable',
'unneighborly',
'unnerve',
'unnerved',
'unnerving',
'unnoted',
'unnoticeable',
'unnoticeably',
'unnoticed',
'unnourished',
'unobjectionable',
'unobjectionably',
'unobliging',
'unobservant',
'unobserved',
'unobserving',
'unobstructed',
'unobtainable',
'unobtruding',
'unobtrusive',
'unoccupied',
'unoffending',
'unoffensive',
'unofficial',
'unofficiously',
'unopened',
'unopposed',
'unoppressed',
'unordained',
'unorganized',
'unoriginal',
'unornamented',
'unorthodox',
'unorthodoxly',
'unostentatiously',
'unowned',
'unpacified',
'unpack',
'unpacker',
'unpacking',
'unpaid',
'unpainted',
'unpalatable',
'unpalatably',
'unparalleled',
'unpardonable',
'unpardonably',
'unpasteurized',
'unpatentable',
'unpatented',
'unpatriotic',
'unpaved',
'unpaying',
'unpedigreed',
'unpeg',
'unpen',
'unpenned',
'unpent',
'unpeople',
'unpeopled',
'unpeopling',
'unperceived',
'unperceiving',
'unperceptive',
'unperfected',
'unperformed',
'unperson',
'unpersuasive',
'unperturbable',
'unperturbably',
'unperturbed',
'unphotographic',
'unpile',
'unpiled',
'unpiling',
'unpin',
'unpinned',
'unpinning',
'unpited',
'unpitied',
'unpitying',
'unplaced',
'unplaiting',
'unplanned',
'unplanted',
'unplayable',
'unplayed',
'unpleasant',
'unpleasantly',
'unpleased',
'unpleasing',
'unplowed',
'unplug',
'unplugging',
'unplumbed',
'unpoetic',
'unpoetical',
'unpointed',
'unpoised',
'unpolarized',
'unpolished',
'unpolitic',
'unpolitical',
'unpolled',
'unpolluted',
'unpopular',
'unpopularity',
'unpopularly',
'unposed',
'unpossessive',
'unpracticable',
'unpractical',
'unpracticed',
'unprecedented',
'unpredictability',
'unpredictable',
'unpredictably',
'unpredicted',
'unprejudiced',
'unprepossessing',
'unprescribed',
'unpresentable',
'unpresentably',
'unpreserved',
'unpressed',
'unpretending',
'unpretentiously',
'unpreventable',
'unpriced',
'unprimed',
'unprincipled',
'unprintable',
'unprized',
'unprocessed',
'unproclaimed',
'unprocurable',
'unproductive',
'unprofessed',
'unprofessional',
'unprofitable',
'unprofitably',
'unprogressive',
'unprohibited',
'unprolific',
'unpromising',
'unprompted',
'unpronounceable',
'unpronounced',
'unpropitiously',
'unproportionate',
'unproportionately',
'unproposed',
'unprotected',
'unprotesting',
'unprovable',
'unproved',
'unproven',
'unprovoked',
'unpublished',
'unpunctual',
'unpunished',
'unpurified',
'unpuzzling',
'unqualified',
'unquenchable',
'unquenched',
'unquestionable',
'unquestionably',
'unquestioning',
'unquiet',
'unquieter',
'unquietest',
'unquotable',
'unquote',
'unquoted',
'unraised',
'unravel',
'unraveled',
'unraveling',
'unravelled',
'unravelling',
'unread',
'unreadable',
'unreadier',
'unreadiest',
'unready',
'unreal',
'unrealistic',
'unreality',
'unrealized',
'unreason',
'unreasonable',
'unreasonably',
'unreasoning',
'unrebuked',
'unreceptive',
'unreclaimed',
'unrecognizable',
'unrecognizably',
'unrecognized',
'unrecompensed',
'unreconcilable',
'unreconcilably',
'unreconciled',
'unreconstructed',
'unrecoverable',
'unrectified',
'unredeemed',
'unreel',
'unreeled',
'unreeler',
'unreeling',
'unrefined',
'unreflecting',
'unreflective',
'unreformed',
'unrefreshed',
'unregenerate',
'unregimented',
'unrehearsed',
'unrelenting',
'unreliable',
'unreliably',
'unrelieved',
'unrelinquished',
'unremitted',
'unremitting',
'unremorseful',
'unremorsefully',
'unremovable',
'unremoved',
'unremunerative',
'unrenewed',
'unrentable',
'unrented',
'unrepaid',
'unrepealed',
'unrepentant',
'unrepenting',
'unreplaceable',
'unreplaced',
'unreported',
'unrepresentative',
'unrepresented',
'unrepressed',
'unreprieved',
'unreproved',
'unrequitable',
'unrequited',
'unresentful',
'unresentfully',
'unreserved',
'unresigned',
'unresistant',
'unresisting',
'unresolved',
'unrespectful',
'unrespectfully',
'unresponsive',
'unrest',
'unrested',
'unrestrained',
'unrestricted',
'unretracted',
'unreturned',
'unrevealed',
'unrevised',
'unrevoked',
'unrewarding',
'unrhymed',
'unrhythmic',
'unriddle',
'unriddling',
'unrig',
'unrighteously',
'unrightful',
'unrip',
'unripe',
'unripely',
'unripened',
'unriper',
'unripest',
'unrisen',
'unrivaled',
'unrivalled',
'unrobe',
'unrobed',
'unrobing',
'unroll',
'unrolled',
'unrolling',
'unromantic',
'unroof',
'unroofed',
'unroofing',
'unrounding',
'unruffled',
'unrule',
'unruled',
'unrulier',
'unruliest',
'unruly',
'unsaddle',
'unsaddled',
'unsaddling',
'unsafe',
'unsafely',
'unsafety',
'unsaid',
'unsalability',
'unsalable',
'unsalaried',
'unsalted',
'unsanctified',
'unsanitary',
'unsatiable',
'unsatiably',
'unsatisfactorily',
'unsatisfactory',
'unsatisfiable',
'unsatisfied',
'unsatisfying',
'unsaturate',
'unsaved',
'unsavory',
'unsay',
'unscaled',
'unscathed',
'unscented',
'unscheduled',
'unscholarly',
'unschooled',
'unscientific',
'unscramble',
'unscrambled',
'unscrambling',
'unscratched',
'unscreened',
'unscrew',
'unscrewed',
'unscrewing',
'unscriptural',
'unscrupulously',
'unseal',
'unsealed',
'unsealing',
'unseaming',
'unseasonable',
'unseasonably',
'unseat',
'unseaworthy',
'unseduced',
'unseeing',
'unseemlier',
'unseemly',
'unseen',
'unsegmented',
'unselective',
'unselfish',
'unselfishly',
'unsensible',
'unsensitive',
'unsent',
'unsentimental',
'unserved',
'unserviceable',
'unserviceably',
'unset',
'unsettle',
'unsettled',
'unsettlement',
'unsettling',
'unsew',
'unsex',
'unsexing',
'unsexual',
'unshackle',
'unshackled',
'unshackling',
'unshakable',
'unshakably',
'unshaken',
'unshamed',
'unshapely',
'unshaved',
'unshaven',
'unsheathe',
'unsheathed',
'unsheathing',
'unshed',
'unshelled',
'unshelling',
'unshifting',
'unship',
'unshipping',
'unshod',
'unshorn',
'unshrinkable',
'unshut',
'unsifted',
'unsighted',
'unsighting',
'unsightly',
'unsigned',
'unsilenced',
'unsinful',
'unsinkable',
'unskilled',
'unskillful',
'unskillfully',
'unslaked',
'unsling',
'unslinging',
'unslung',
'unsmiling',
'unsnap',
'unsnapping',
'unsnarl',
'unsnarled',
'unsnarling',
'unsociable',
'unsociably',
'unsocial',
'unsoiled',
'unsold',
'unsolder',
'unsolicited',
'unsolvable',
'unsolved',
'unsoothed',
'unsorted',
'unsought',
'unsound',
'unsoundest',
'unsoundly',
'unsparing',
'unspeakable',
'unspeakably',
'unspeaking',
'unspecialized',
'unspecific',
'unspecified',
'unspectacular',
'unspent',
'unsphering',
'unspiritual',
'unspoiled',
'unspoilt',
'unspoken',
'unsportsmanlike',
'unspotted',
'unsprung',
'unstable',
'unstabler',
'unstablest',
'unstably',
'unstack',
'unstacking',
'unstained',
'unstamped',
'unstandardized',
'unstapled',
'unstarched',
'unsteadier',
'unsteadiest',
'unsteadily',
'unsteady',
'unsteeling',
'unstemmed',
'unstepping',
'unsterile',
'unsterilized',
'unsticking',
'unstinted',
'unstop',
'unstoppable',
'unstopping',
'unstrained',
'unstrap',
'unstressed',
'unstring',
'unstrung',
'unstuck',
'unstudied',
'unsubdued',
'unsubmissive',
'unsubstantial',
'unsubtle',
'unsubtly',
'unsuccessful',
'unsuccessfully',
'unsuggestive',
'unsuitability',
'unsuitable',
'unsuitably',
'unsuited',
'unsullied',
'unsung',
'unsupervised',
'unsupported',
'unsuppressed',
'unsuppressible',
'unsure',
'unsurely',
'unsurmountable',
'unsurmountably',
'unsurpassable',
'unsurpassably',
'unsurpassed',
'unsurprised',
'unsurveyed',
'unsusceptible',
'unsusceptibly',
'unsuspected',
'unsuspecting',
'unsuspiciously',
'unsustainable',
'unsustained',
'unswathe',
'unswathing',
'unswayed',
'unswearing',
'unsweetened',
'unswept',
'unswerving',
'unsymmetrical',
'unsympathetic',
'unsystematic',
'unsystematical',
'untactful',
'untactfully',
'untainted',
'untalented',
'untamed',
'untangle',
'untangled',
'untangling',
'untanned',
'untarnished',
'untasted',
'untasteful',
'untastefully',
'untaught',
'untaxed',
'unteachable',
'unteaching',
'untempted',
'untempting',
'untenable',
'untenanted',
'unterrified',
'untested',
'untether',
'unthankful',
'unthawed',
'unthinkable',
'unthinkably',
'unthinking',
'unthought',
'unthoughtful',
'unthoughtfully',
'unthriftily',
'unthrifty',
'unthroning',
'untidied',
'untidier',
'untidiest',
'untidily',
'untidy',
'untidying',
'untie',
'untied',
'until',
'untillable',
'untilled',
'untimelier',
'untimely',
'untiring',
'untitled',
'unto',
'untold',
'untouchable',
'untouchably',
'untouched',
'untoward',
'untraceable',
'untraced',
'untractable',
'untrained',
'untrammeled',
'untrammelled',
'untransferable',
'untransformed',
'untranslatable',
'untraveled',
'untravelled',
'untraversed',
'untreading',
'untried',
'untrimmed',
'untrimming',
'untrod',
'untrodden',
'untroubled',
'untrue',
'untruer',
'untruest',
'untruly',
'untrussing',
'untrustful',
'untrusting',
'untrustworthy',
'untrusty',
'untruth',
'untruthful',
'unturned',
'untwist',
'untwisted',
'untwisting',
'untying',
'untypical',
'unum',
'unusable',
'unused',
'unusual',
'unutilized',
'unutterable',
'unutterably',
'unvanquishable',
'unvanquished',
'unvaried',
'unvarnished',
'unvarying',
'unveil',
'unveiled',
'unveiling',
'unvendible',
'unventuresome',
'unverifiable',
'unverifiably',
'unverified',
'unversed',
'unvexed',
'unvisited',
'unvoiced',
'unwanted',
'unwarier',
'unwariest',
'unwarily',
'unwarmed',
'unwarned',
'unwarrantable',
'unwarranted',
'unwary',
'unwashed',
'unwatched',
'unwavering',
'unwaxed',
'unweakened',
'unweaned',
'unwearable',
'unwearably',
'unweary',
'unwearying',
'unweave',
'unweaving',
'unwed',
'unweighted',
'unwelcome',
'unwell',
'unwept',
'unwholesome',
'unwholesomely',
'unwieldier',
'unwieldy',
'unwifely',
'unwilled',
'unwilling',
'unwind',
'unwinder',
'unwinding',
'unwise',
'unwisely',
'unwiser',
'unwisest',
'unwished',
'unwit',
'unwitnessed',
'unwitted',
'unwitting',
'unwomanly',
'unwon',
'unwonted',
'unworkable',
'unworkably',
'unworked',
'unworldly',
'unworn',
'unworried',
'unworthier',
'unworthily',
'unworthy',
'unwound',
'unwove',
'unwoven',
'unwrap',
'unwrapping',
'unwrinkle',
'unwrinkled',
'unwrinkling',
'unwritten',
'unyielding',
'unyoke',
'unyoked',
'unyoking',
'unzealously',
'unzip',
'unzipping',
'up',
'upbearer',
'upbeat',
'upboiling',
'upbraid',
'upbraider',
'upbraiding',
'upbringing',
'upchuck',
'upchucking',
'upcoiling',
'upcoming',
'upcountry',
'upcurve',
'upcurved',
'upcurving',
'updatable',
'update',
'updater',
'updraft',
'upend',
'upending',
'upgrade',
'upgrading',
'upheaval',
'upheave',
'upheaved',
'upheaver',
'upheaving',
'upheld',
'uphill',
'uphold',
'upholder',
'upholding',
'upholster',
'upholsterer',
'upholstering',
'upholstery',
'upkeep',
'upland',
'uplander',
'upleaping',
'uplift',
'uplifted',
'uplifter',
'uplifting',
'upliftment',
'uplink',
'uplinked',
'uplinking',
'upload',
'uploadable',
'uploading',
'upmost',
'upon',
'upper',
'uppercase',
'upperclassman',
'uppercut',
'uppermost',
'upping',
'uppish',
'uppity',
'upraise',
'upraised',
'upraiser',
'upraising',
'upreached',
'uprear',
'uprearing',
'upright',
'uprighted',
'uprightly',
'uprise',
'uprisen',
'upriser',
'uprising',
'upriver',
'uproar',
'uproariously',
'uproot',
'uprooted',
'uprooter',
'uprooting',
'uprose',
'uprousing',
'upscale',
'upsending',
'upset',
'upsetter',
'upsetting',
'upshift',
'upshifted',
'upshifting',
'upshot',
'upside',
'upsilon',
'upstage',
'upstaging',
'upstanding',
'upstart',
'upstate',
'upstream',
'upstroke',
'upsurge',
'upsurging',
'upsweep',
'upswell',
'upswelled',
'upswept',
'upswing',
'upswollen',
'upswung',
'uptake',
'uptight',
'uptime',
'uptown',
'uptowner',
'upturn',
'upturned',
'upturning',
'upward',
'upwardly',
'upwelled',
'upwelling',
'upwind',
'uracil',
'ural',
'uranian',
'uranic',
'uranium',
'urb',
'urban',
'urbana',
'urbane',
'urbanely',
'urbaner',
'urbanest',
'urbanism',
'urbanist',
'urbanite',
'urbanity',
'urbanization',
'urbanize',
'urbanized',
'urbanizing',
'urbanologist',
'urbanology',
'urchin',
'urea',
'ureal',
'ureic',
'uremia',
'uremic',
'ureter',
'urethra',
'urethrae',
'urethral',
'uretic',
'urge',
'urgency',
'urgent',
'urgently',
'urger',
'urging',
'uric',
'urinal',
'urinary',
'urinate',
'urination',
'urine',
'urinogenital',
'urn',
'urogenital',
'urogram',
'urolith',
'urolithic',
'urologic',
'urological',
'urologist',
'urology',
'uroscopic',
'ursa',
'ursae',
'ursiform',
'ursine',
'urticaria',
'uruguay',
'uruguayan',
'urushiol',
'usa',
'usability',
'usable',
'usably',
'usage',
'use',
'useability',
'useable',
'useably',
'used',
'usee',
'useful',
'usefully',
'uselessly',
'user',
'usher',
'usherette',
'ushering',
'using',
'ussr',
'usual',
'usufruct',
'usufructuary',
'usurer',
'usuriously',
'usurp',
'usurpation',
'usurpative',
'usurpatory',
'usurped',
'usurper',
'usurping',
'usury',
'utah',
'utahan',
'utensil',
'uteri',
'uterine',
'utero',
'utile',
'utilise',
'utilitarian',
'utilitarianism',
'utility',
'utilizable',
'utilization',
'utilize',
'utilized',
'utilizer',
'utilizing',
'utmost',
'utopia',
'utopian',
'utter',
'utterance',
'utterer',
'uttering',
'utterly',
'uttermost',
'uveal',
'uvula',
'uvulae',
'uvular',
'uvularly',
'uxorial',
'uxoriously',
'vacancy',
'vacant',
'vacantly',
'vacatable',
'vacate',
'vacation',
'vacationer',
'vacationing',
'vacationist',
'vacationland',
'vaccinable',
'vaccinal',
'vaccinate',
'vaccination',
'vaccine',
'vaccinee',
'vaccinia',
'vaccinial',
'vaccinotherapy',
'vacillate',
'vacillation',
'vacua',
'vacuity',
'vacuo',
'vacuolar',
'vacuolate',
'vacuole',
'vacuously',
'vacuum',
'vacuumed',
'vacuuming',
'vade',
'vagabond',
'vagabondage',
'vagabondism',
'vagal',
'vagary',
'vagina',
'vaginae',
'vaginal',
'vaginate',
'vagrance',
'vagrancy',
'vagrant',
'vagrantly',
'vagrom',
'vague',
'vaguely',
'vaguer',
'vaguest',
'vail',
'vailing',
'vain',
'vainer',
'vainest',
'vainglory',
'vainly',
'val',
'valance',
'valanced',
'valancing',
'vale',
'valediction',
'valedictorian',
'valedictory',
'valence',
'valencia',
'valency',
'valentine',
'valerian',
'valet',
'valeted',
'valeting',
'valetudinarian',
'valetudinarianism',
'valhalla',
'valiance',
'valiancy',
'valiant',
'valiantly',
'valid',
'validate',
'validation',
'validatory',
'validity',
'validly',
'valise',
'valium',
'valkyrie',
'valley',
'valor',
'valorem',
'valorization',
'valorize',
'valorized',
'valorizing',
'valorously',
'valour',
'valse',
'valuable',
'valuably',
'valuate',
'valuation',
'valuational',
'valuative',
'value',
'valued',
'valuer',
'valuing',
'valuta',
'valva',
'valval',
'valvar',
'valvate',
'valve',
'valved',
'valvelet',
'valving',
'valvular',
'vamoose',
'vamoosed',
'vamoosing',
'vamp',
'vamped',
'vamper',
'vamping',
'vampire',
'vampiric',
'vampirism',
'vampish',
'van',
'vanadium',
'vancouver',
'vandal',
'vandalic',
'vandalism',
'vandalistic',
'vandalization',
'vandalize',
'vandalized',
'vandalizing',
'vandyke',
'vane',
'vaned',
'vanguard',
'vanilla',
'vanillic',
'vanillin',
'vanish',
'vanished',
'vanisher',
'vanishing',
'vanitied',
'vanity',
'vanman',
'vanquish',
'vanquished',
'vanquisher',
'vanquishing',
'vanquishment',
'vantage',
'vanward',
'vapid',
'vapidity',
'vapidly',
'vapor',
'vaporer',
'vaporing',
'vaporise',
'vaporish',
'vaporization',
'vaporize',
'vaporized',
'vaporizer',
'vaporizing',
'vaporously',
'vapory',
'vapotherapy',
'vapour',
'vapourer',
'vapouring',
'vapoury',
'vaquero',
'variability',
'variable',
'variably',
'variance',
'variant',
'variation',
'variational',
'varicose',
'varicosity',
'varied',
'variegate',
'variegation',
'varier',
'varietal',
'variety',
'variform',
'variorum',
'variously',
'varlet',
'varletry',
'varment',
'varmint',
'varnish',
'varnished',
'varnishing',
'varnishy',
'varsity',
'vary',
'varying',
'vascular',
'vascularly',
'vase',
'vasectomize',
'vasectomized',
'vasectomizing',
'vasectomy',
'vaseline',
'vasoconstriction',
'vasoconstrictive',
'vasodepressor',
'vasodilatation',
'vasodilation',
'vasoinhibitory',
'vasopressin',
'vasopressor',
'vassal',
'vassalage',
'vassar',
'vast',
'vaster',
'vastest',
'vastier',
'vastiest',
'vastity',
'vastly',
'vasty',
'vat',
'vatful',
'vatic',
'vatican',
'vatted',
'vatting',
'vaudeville',
'vaudevillian',
'vault',
'vaulted',
'vaulter',
'vaultier',
'vaultiest',
'vaulting',
'vaulty',
'vaunt',
'vaunted',
'vaunter',
'vauntful',
'vaunting',
'vaunty',
'veal',
'vealier',
'vealy',
'vectorial',
'vectoring',
'veda',
'vedanta',
'vedantic',
'vedic',
'vee',
'veep',
'veepee',
'veer',
'veering',
'veery',
'vegan',
'veganism',
'vegetable',
'vegetal',
'vegetarian',
'vegetarianism',
'vegetate',
'vegetation',
'vegetational',
'vegetative',
'vegetist',
'vegetive',
'vehemence',
'vehemency',
'vehement',
'vehemently',
'vehicle',
'vehicular',
'veil',
'veiled',
'veiler',
'veiling',
'vein',
'veinal',
'veined',
'veiner',
'veinier',
'veining',
'veinlet',
'veinule',
'veiny',
'vela',
'velar',
'velcro',
'veld',
'veldt',
'velleity',
'vellicate',
'vellication',
'vellum',
'velocipede',
'velocity',
'velour',
'velum',
'velure',
'veluring',
'velvet',
'velveted',
'velveteen',
'velvety',
'venal',
'venality',
'venatic',
'venation',
'vend',
'vendable',
'vendee',
'vender',
'vendetta',
'vendibility',
'vendible',
'vendibly',
'vending',
'vendor',
'veneer',
'veneerer',
'veneering',
'venerability',
'venerable',
'venerably',
'venerate',
'veneration',
'venereal',
'venerology',
'venery',
'venetian',
'venezuela',
'venezuelan',
'vengeance',
'vengeant',
'vengeful',
'vengefully',
'venging',
'venial',
'venice',
'venin',
'venine',
'venipuncture',
'venire',
'venireman',
'venison',
'venom',
'venomed',
'venomer',
'venoming',
'venomously',
'venose',
'vent',
'ventage',
'vented',
'venter',
'ventilate',
'ventilation',
'ventilatory',
'venting',
'ventral',
'ventricle',
'ventricular',
'ventriloquism',
'ventriloquist',
'ventriloquy',
'venture',
'venturer',
'venturesome',
'venturesomely',
'venturi',
'venturing',
'venturously',
'venue',
'venular',
'venusian',
'veraciously',
'veracity',
'veranda',
'verandah',
'verb',
'verbal',
'verbalization',
'verbalize',
'verbalized',
'verbalizing',
'verbatim',
'verbena',
'verbiage',
'verbid',
'verbified',
'verbify',
'verbile',
'verbose',
'verbosely',
'verbosity',
'verboten',
'verdancy',
'verdant',
'verdantly',
'verde',
'verdi',
'verdict',
'verdure',
'verge',
'verger',
'verging',
'veridic',
'verier',
'veriest',
'verifiability',
'verifiable',
'verification',
'verificatory',
'verified',
'verifier',
'verify',
'verifying',
'verily',
'verisimilitude',
'veritable',
'veritably',
'verite',
'verity',
'vermeil',
'vermicelli',
'vermicide',
'vermiculite',
'vermiform',
'vermifuge',
'vermilion',
'vermin',
'verminously',
'vermont',
'vermonter',
'vermouth',
'vermuth',
'vernacular',
'vernacularly',
'vernal',
'vernalization',
'vernalize',
'vernalized',
'vernalizing',
'vernier',
'veronica',
'versa',
'versal',
'versant',
'versatile',
'versatilely',
'versatility',
'verse',
'versed',
'verseman',
'verser',
'versicle',
'versification',
'versified',
'versifier',
'versify',
'versifying',
'versine',
'versing',
'version',
'versional',
'verso',
'vert',
'vertebra',
'vertebrae',
'vertebral',
'vertebrate',
'vertex',
'vertical',
'verticality',
'verticillate',
'vertiginously',
'vertigo',
'vervain',
'verve',
'vervet',
'very',
'vesicant',
'vesicle',
'vesicular',
'vesiculate',
'vesper',
'vesperal',
'vespertine',
'vespucci',
'vessel',
'vesseled',
'vest',
'vestal',
'vested',
'vestee',
'vestibular',
'vestibule',
'vestige',
'vestigial',
'vesting',
'vestment',
'vestry',
'vestryman',
'vestural',
'vesture',
'vet',
'vetch',
'veteran',
'veterinarian',
'veterinary',
'veto',
'vetoed',
'vetoer',
'vetoing',
'vetted',
'vetting',
'vex',
'vexation',
'vexatiously',
'vexed',
'vexer',
'vexing',
'via',
'viability',
'viable',
'viably',
'viaduct',
'vial',
'vialed',
'vialing',
'vialled',
'vialling',
'viand',
'viatica',
'viaticum',
'vibraharp',
'vibrance',
'vibrancy',
'vibrant',
'vibrantly',
'vibraphone',
'vibrate',
'vibration',
'vibrational',
'vibrato',
'vibratory',
'viburnum',
'vicar',
'vicarage',
'vicarate',
'vicarial',
'vicariate',
'vicariously',
'vicarly',
'vice',
'viced',
'vicegerency',
'vicegerent',
'vicennial',
'viceregal',
'viceregent',
'viceroy',
'viceroyalty',
'vichy',
'vichyssoise',
'vicinage',
'vicinal',
'vicing',
'vicinity',
'viciously',
'vicissitude',
'vicomte',
'victim',
'victimization',
'victimize',
'victimized',
'victimizer',
'victimizing',
'victoria',
'victorian',
'victorianism',
'victoriously',
'victory',
'victual',
'victualed',
'victualer',
'victualing',
'victualled',
'victualler',
'victualling',
'vicuna',
'vide',
'videlicet',
'video',
'videocassette',
'videodisc',
'videotape',
'videotaped',
'videotaping',
'videotext',
'vidkid',
'vie',
'vied',
'vienna',
'viennese',
'vier',
'vietcong',
'vietnam',
'vietnamese',
'view',
'viewable',
'viewed',
'viewer',
'viewfinder',
'viewier',
'viewing',
'viewpoint',
'viewy',
'vigesimal',
'vigil',
'vigilance',
'vigilant',
'vigilante',
'vigilantism',
'vigilantly',
'vignette',
'vignetted',
'vignetting',
'vignettist',
'vigor',
'vigorish',
'vigorously',
'vigour',
'viking',
'vile',
'vilely',
'viler',
'vilest',
'vilification',
'vilified',
'vilifier',
'vilify',
'vilifying',
'villa',
'villadom',
'village',
'villager',
'villain',
'villainously',
'villainy',
'villein',
'villeinage',
'villi',
'vim',
'vin',
'vinaigrette',
'vinal',
'vinca',
'vincent',
'vincible',
'vinculum',
'vindicable',
'vindicate',
'vindication',
'vindicative',
'vindicatory',
'vindictive',
'vine',
'vineal',
'vined',
'vinegar',
'vinegary',
'vinery',
'vineyard',
'vinic',
'vinier',
'viniest',
'vining',
'vino',
'vinosity',
'vinously',
'vintage',
'vintner',
'viny',
'vinyl',
'vinylic',
'viol',
'viola',
'violability',
'violable',
'violably',
'violate',
'violater',
'violation',
'violative',
'violence',
'violent',
'violently',
'violet',
'violin',
'violinist',
'violist',
'violoncellist',
'violoncello',
'vip',
'viper',
'viperidae',
'viperine',
'viperish',
'virago',
'viral',
'vireo',
'virgil',
'virgin',
'virginal',
'virginia',
'virginian',
'virginity',
'virginium',
'virgo',
'virgule',
'viricidal',
'virid',
'viridescent',
'viridian',
'virile',
'virility',
'virilization',
'virilize',
'virilizing',
'virological',
'virologist',
'virology',
'virtu',
'virtual',
'virtue',
'virtuosi',
'virtuosity',
'virtuoso',
'virtuously',
'virucide',
'virulence',
'virulency',
'virulent',
'virulently',
'visa',
'visaed',
'visage',
'visaing',
'visard',
'viscera',
'visceral',
'viscid',
'viscidity',
'viscidly',
'viscoid',
'viscose',
'viscosimeter',
'viscosimetry',
'viscosity',
'viscount',
'viscously',
'vise',
'vised',
'viseing',
'viselike',
'vishnu',
'visibility',
'visible',
'visibly',
'vising',
'vision',
'visional',
'visionary',
'visioning',
'visit',
'visitable',
'visitant',
'visitation',
'visitational',
'visitatorial',
'visited',
'visiter',
'visiting',
'visitorial',
'visor',
'visoring',
'vista',
'vistaed',
'visual',
'visualization',
'visualize',
'visualized',
'visualizer',
'visualizing',
'vita',
'vitae',
'vital',
'vitalising',
'vitalism',
'vitalist',
'vitality',
'vitalization',
'vitalize',
'vitalized',
'vitalizer',
'vitalizing',
'vitamin',
'vitamine',
'vitaminization',
'vitaminized',
'vitaminizing',
'vitaminology',
'vitiate',
'vitiation',
'viticultural',
'viticulture',
'viticulturist',
'vitric',
'vitrifiable',
'vitrification',
'vitrified',
'vitrify',
'vitrifying',
'vitrine',
'vitriol',
'vitrioled',
'vitriolic',
'vitro',
'vittle',
'vittled',
'vittling',
'vituperate',
'vituperation',
'vituperative',
'viva',
'vivace',
'vivaciously',
'vivacity',
'vivant',
'vivaria',
'vivarium',
'vive',
'vivendi',
'vivid',
'vivider',
'vividest',
'vividly',
'vivific',
'vivification',
'vivified',
'vivifier',
'vivify',
'vivifying',
'viviparity',
'viviparously',
'vivisect',
'vivisected',
'vivisecting',
'vivisection',
'vivisectional',
'vivisectionist',
'vivo',
'vivre',
'vixen',
'vixenish',
'vixenishly',
'vixenly',
'viz',
'vizard',
'vizier',
'vizir',
'vizor',
'vocable',
'vocably',
'vocabulary',
'vocal',
'vocalic',
'vocalism',
'vocalist',
'vocality',
'vocalization',
'vocalize',
'vocalized',
'vocalizer',
'vocalizing',
'vocation',
'vocational',
'vocative',
'voce',
'vociferate',
'vociferation',
'vociferously',
'vocoder',
'vodka',
'vogue',
'voguish',
'voice',
'voiced',
'voiceful',
'voicelessly',
'voiceprint',
'voicer',
'voicing',
'void',
'voidable',
'voidance',
'voider',
'voiding',
'voila',
'voile',
'vol',
'volante',
'volatile',
'volatility',
'volatilization',
'volatilize',
'volatilized',
'volatilizing',
'volcanic',
'volcanism',
'volcano',
'volcanological',
'volcanologist',
'volcanology',
'vole',
'volente',
'volga',
'volition',
'volitional',
'volkswagen',
'volley',
'volleyball',
'volleyed',
'volleyer',
'volleying',
'volplane',
'volplaned',
'volplaning',
'volt',
'volta',
'voltage',
'voltaic',
'voltaire',
'voltmeter',
'volubility',
'voluble',
'volubly',
'volume',
'volumed',
'volumetric',
'voluminosity',
'voluminously',
'voluntarily',
'voluntary',
'voluntaryism',
'volunteer',
'volunteering',
'voluptuary',
'voluptuously',
'volute',
'voluted',
'volution',
'volvox',
'vomit',
'vomited',
'vomiter',
'vomiting',
'vomitive',
'vomitory',
'von',
'voodoo',
'voodooed',
'voodooing',
'voodooism',
'voraciously',
'voracity',
'vortex',
'vortical',
'votable',
'votarist',
'votary',
'vote',
'voteable',
'voted',
'voter',
'voting',
'votive',
'vouch',
'vouched',
'vouchee',
'voucher',
'voucherable',
'vouchering',
'vouching',
'vouchsafe',
'vouchsafed',
'vouchsafing',
'vow',
'vowed',
'vowel',
'vowelize',
'vowelized',
'vower',
'vowing',
'vox',
'voyage',
'voyager',
'voyageur',
'voyaging',
'voyeur',
'voyeurism',
'voyeuristic',
'vroom',
'vroomed',
'vrooming',
'vrouw',
'vrow',
'vugg',
'vuggy',
'vugh',
'vulcan',
'vulcanic',
'vulcanism',
'vulcanite',
'vulcanization',
'vulcanize',
'vulcanized',
'vulcanizer',
'vulcanizing',
'vulgar',
'vulgarer',
'vulgarest',
'vulgarian',
'vulgarism',
'vulgarity',
'vulgarization',
'vulgarize',
'vulgarized',
'vulgarizer',
'vulgarizing',
'vulgarly',
'vulgate',
'vulgo',
'vulnerability',
'vulnerable',
'vulnerably',
'vulpine',
'vulture',
'vulva',
'vulvae',
'vulval',
'vulvar',
'vulvate',
'vying',
'wabble',
'wabbled',
'wabbler',
'wabbly',
'wack',
'wackier',
'wackiest',
'wackily',
'wacky',
'wad',
'wadable',
'wadder',
'waddied',
'wadding',
'waddle',
'waddled',
'waddler',
'waddling',
'waddly',
'waddy',
'wade',
'wadeable',
'wader',
'wadi',
'wading',
'wafer',
'wafery',
'waffle',
'waffled',
'waffling',
'waft',
'waftage',
'wafted',
'wafter',
'wafting',
'wag',
'wage',
'wager',
'wagerer',
'wagering',
'wagger',
'waggery',
'wagging',
'waggish',
'waggle',
'waggled',
'waggling',
'waggly',
'waggon',
'waggoner',
'waggoning',
'waging',
'wagner',
'wagnerian',
'wagon',
'wagonage',
'wagoner',
'wagonette',
'wagoning',
'wagtail',
'wahine',
'wahoo',
'waif',
'waifing',
'wail',
'wailed',
'wailer',
'wailful',
'wailfully',
'wailing',
'wain',
'wainscot',
'wainscoted',
'wainscoting',
'wainscotted',
'wainscotting',
'wainwright',
'waist',
'waistband',
'waistcoat',
'waisted',
'waister',
'waisting',
'waistline',
'wait',
'waited',
'waiter',
'waiting',
'waive',
'waived',
'waiver',
'waiving',
'wake',
'waked',
'wakeful',
'waken',
'wakened',
'wakener',
'wakening',
'waker',
'wakiki',
'waking',
'waldorf',
'wale',
'waled',
'waler',
'waling',
'walk',
'walkable',
'walkaway',
'walked',
'walker',
'walking',
'walkout',
'walkover',
'walkup',
'walkway',
'wall',
'walla',
'wallaby',
'wallah',
'wallboard',
'walled',
'wallet',
'walleye',
'walleyed',
'wallflower',
'walling',
'walloon',
'wallop',
'walloped',
'walloper',
'walloping',
'wallow',
'wallowed',
'wallower',
'wallowing',
'wallpaper',
'wallpapering',
'walnut',
'walt',
'walter',
'waltz',
'waltzed',
'waltzer',
'waltzing',
'wampum',
'wan',
'wand',
'wander',
'wanderer',
'wandering',
'wanderlust',
'wane',
'waned',
'wang',
'wangle',
'wangled',
'wangler',
'wangling',
'waning',
'wankel',
'wanly',
'wanner',
'wannest',
'wanning',
'want',
'wantage',
'wanted',
'wanter',
'wanting',
'wanton',
'wantoner',
'wantoning',
'wantonly',
'wapiti',
'wapping',
'war',
'warble',
'warbled',
'warbler',
'warbling',
'warcraft',
'ward',
'warden',
'wardenship',
'warder',
'wardership',
'warding',
'wardrobe',
'wardroom',
'wardship',
'ware',
'warehouse',
'warehoused',
'warehouseman',
'warehouser',
'warehousing',
'wareroom',
'warfare',
'warfarin',
'warhead',
'warhorse',
'warier',
'wariest',
'warily',
'waring',
'wark',
'warlike',
'warlock',
'warlord',
'warm',
'warmaker',
'warmed',
'warmer',
'warmest',
'warmhearted',
'warming',
'warmish',
'warmly',
'warmonger',
'warmongering',
'warmth',
'warmup',
'warn',
'warned',
'warner',
'warning',
'warp',
'warpage',
'warpath',
'warped',
'warper',
'warping',
'warplane',
'warpower',
'warrant',
'warrantable',
'warranted',
'warrantee',
'warranter',
'warranting',
'warranty',
'warren',
'warring',
'warrior',
'warsaw',
'warship',
'wart',
'warted',
'warthog',
'wartier',
'wartiest',
'wartime',
'warty',
'warwork',
'warworn',
'wary',
'wash',
'washability',
'washable',
'washbasin',
'washboard',
'washbowl',
'washcloth',
'washday',
'washed',
'washer',
'washerwoman',
'washier',
'washiest',
'washing',
'washington',
'washingtonian',
'washout',
'washrag',
'washroom',
'washstand',
'washtub',
'washwoman',
'washy',
'wasp',
'waspier',
'waspily',
'waspish',
'waspishly',
'waspy',
'wassail',
'wassailed',
'wassailer',
'wassailing',
'wast',
'wastable',
'wastage',
'waste',
'wastebasket',
'wasted',
'wasteful',
'wastefully',
'wasteland',
'wastepaper',
'waster',
'wastery',
'wastier',
'wasting',
'wastrel',
'watch',
'watchband',
'watchdog',
'watched',
'watcher',
'watchful',
'watchfully',
'watching',
'watchmaker',
'watchmaking',
'watchman',
'watchout',
'watchtower',
'watchwoman',
'watchword',
'water',
'waterbed',
'waterborne',
'waterbury',
'watercolor',
'watercourse',
'watercraft',
'waterer',
'waterfall',
'waterfowl',
'waterfront',
'watergate',
'waterier',
'wateriest',
'waterily',
'watering',
'waterish',
'waterlog',
'waterlogging',
'waterloo',
'waterman',
'watermark',
'watermarked',
'watermarking',
'watermelon',
'waterpower',
'waterproof',
'waterproofed',
'waterproofer',
'waterproofing',
'watershed',
'waterside',
'waterspout',
'watertight',
'waterway',
'waterwheel',
'waterworthy',
'watery',
'watson',
'watt',
'wattage',
'wattest',
'watthour',
'wattle',
'wattled',
'wattling',
'wattmeter',
'waugh',
'waul',
'wave',
'waveband',
'waved',
'waveform',
'wavelength',
'wavelet',
'wavelike',
'waveoff',
'waver',
'waverer',
'wavering',
'wavery',
'wavey',
'wavier',
'waviest',
'wavily',
'waving',
'wavy',
'wax',
'waxbill',
'waxed',
'waxen',
'waxer',
'waxier',
'waxiest',
'waxily',
'waxing',
'waxwing',
'waxwork',
'waxy',
'way',
'waybill',
'wayfarer',
'wayfaring',
'waylaid',
'waylay',
'waylayer',
'waylaying',
'wayne',
'wayside',
'wayward',
'waywardly',
'wayworn',
'we',
'weak',
'weaken',
'weakened',
'weakener',
'weakening',
'weaker',
'weakest',
'weakfish',
'weakhearted',
'weakish',
'weaklier',
'weakliest',
'weakling',
'weakly',
'weal',
'weald',
'wealth',
'wealthier',
'wealthiest',
'wealthy',
'wean',
'weaned',
'weaner',
'weaning',
'weanling',
'weapon',
'weaponing',
'weaponry',
'wear',
'wearable',
'wearer',
'wearied',
'wearier',
'weariest',
'weariful',
'wearily',
'wearing',
'wearish',
'wearisome',
'wearisomely',
'weary',
'wearying',
'weasand',
'weasel',
'weaseled',
'weaseling',
'weaselly',
'weather',
'weatherability',
'weatherboard',
'weatherbound',
'weathercock',
'weathering',
'weatherman',
'weatherproof',
'weatherproofed',
'weatherproofing',
'weatherstrip',
'weatherstripping',
'weatherwise',
'weatherworn',
'weave',
'weaved',
'weaver',
'weaving',
'weazand',
'web',
'webbed',
'webbier',
'webbing',
'webby',
'weber',
'webfeet',
'webfoot',
'webfooted',
'webster',
'webworm',
'wed',
'wedder',
'wedding',
'wedge',
'wedgie',
'wedgier',
'wedging',
'wedgy',
'wedlock',
'wednesday',
'wee',
'weed',
'weeder',
'weedier',
'weediest',
'weedily',
'weeding',
'weedy',
'week',
'weekday',
'weekend',
'weekender',
'weekending',
'weeklong',
'weekly',
'ween',
'weened',
'weenie',
'weenier',
'weeniest',
'weening',
'weensier',
'weensiest',
'weensy',
'weeny',
'weep',
'weeper',
'weepier',
'weepiest',
'weeping',
'weepy',
'weest',
'weevil',
'weeviled',
'weevilly',
'weevily',
'weewee',
'weeweed',
'weeweeing',
'weft',
'wehner',
'weigh',
'weighage',
'weighed',
'weigher',
'weighing',
'weighman',
'weighmaster',
'weight',
'weighted',
'weighter',
'weightier',
'weightiest',
'weightily',
'weighting',
'weightlessly',
'weighty',
'weiner',
'weir',
'weird',
'weirder',
'weirdest',
'weirdie',
'weirdly',
'weirdo',
'weirdy',
'welch',
'welched',
'welcher',
'welching',
'welcome',
'welcomed',
'welcomer',
'welcoming',
'weld',
'weldable',
'welder',
'welding',
'welfare',
'welkin',
'well',
'welladay',
'wellbeing',
'wellborn',
'welled',
'wellhead',
'wellhole',
'welling',
'wellington',
'wellsite',
'wellspring',
'welsh',
'welshed',
'welsher',
'welshing',
'welshman',
'welshwoman',
'welt',
'weltanschauung',
'welted',
'welter',
'weltering',
'welterweight',
'welting',
'wen',
'wench',
'wenched',
'wencher',
'wenching',
'wend',
'wending',
'wennier',
'wennish',
'wenny',
'went',
'wept',
'were',
'weregild',
'werewolf',
'wergeld',
'wergelt',
'wergild',
'wert',
'werwolf',
'weskit',
'wesley',
'west',
'westbound',
'wester',
'westering',
'westerly',
'western',
'westerner',
'westernize',
'westernized',
'westernizing',
'westing',
'westinghouse',
'westminster',
'westmost',
'westward',
'westwardly',
'wet',
'wetback',
'wether',
'wetland',
'wetly',
'wetproof',
'wetsuit',
'wettable',
'wetted',
'wetter',
'wettest',
'wetting',
'wettish',
'wha',
'whack',
'whacker',
'whackier',
'whackiest',
'whacking',
'whacky',
'whale',
'whaleboat',
'whalebone',
'whaled',
'whaler',
'whaling',
'wham',
'whammed',
'whamming',
'whammy',
'whang',
'whanging',
'whap',
'whapper',
'whapping',
'wharf',
'wharfage',
'wharfed',
'wharfing',
'wharfinger',
'wharfmaster',
'wharve',
'what',
'whatever',
'whatnot',
'whatsoever',
'wheal',
'wheat',
'wheaten',
'whee',
'wheedle',
'wheedled',
'wheedler',
'wheedling',
'wheel',
'wheelbarrow',
'wheelbase',
'wheelchair',
'wheeled',
'wheeler',
'wheelie',
'wheeling',
'wheelman',
'wheelwright',
'wheeze',
'wheezed',
'wheezer',
'wheezier',
'wheeziest',
'wheezily',
'wheezing',
'wheezy',
'whelk',
'whelky',
'whelm',
'whelmed',
'whelming',
'whelp',
'whelped',
'whelping',
'when',
'whence',
'whencesoever',
'whenever',
'whensoever',
'where',
'whereafter',
'whereat',
'whereby',
'wherefor',
'wherefore',
'wherefrom',
'wherein',
'whereinsoever',
'whereof',
'whereon',
'wheresoever',
'whereto',
'whereunder',
'whereunto',
'whereupon',
'wherever',
'wherewith',
'wherewithal',
'wherry',
'wherrying',
'whet',
'whether',
'whetstone',
'whetted',
'whetter',
'whetting',
'whew',
'whey',
'wheyey',
'wheyface',
'wheyish',
'which',
'whichever',
'whichsoever',
'whicker',
'whickering',
'whiff',
'whiffed',
'whiffer',
'whiffing',
'whiffle',
'whiffled',
'whiffler',
'whiffletree',
'whiffling',
'whig',
'while',
'whiled',
'whiling',
'whilom',
'whilst',
'whim',
'whimper',
'whimpering',
'whimsey',
'whimsical',
'whimsicality',
'whimsied',
'whimsy',
'whine',
'whined',
'whiner',
'whiney',
'whinier',
'whiniest',
'whining',
'whinnied',
'whinnier',
'whinniest',
'whinny',
'whinnying',
'whiny',
'whip',
'whipcord',
'whiplash',
'whipper',
'whippersnapper',
'whippet',
'whippier',
'whippiest',
'whipping',
'whippletree',
'whippoorwill',
'whippy',
'whipsaw',
'whipsawed',
'whipsawing',
'whipsawn',
'whipt',
'whiptail',
'whipworm',
'whir',
'whirl',
'whirled',
'whirler',
'whirlier',
'whirliest',
'whirligig',
'whirling',
'whirlpool',
'whirlwind',
'whirly',
'whirlybird',
'whirr',
'whirring',
'whirry',
'whish',
'whished',
'whishing',
'whisht',
'whishted',
'whisk',
'whisked',
'whisker',
'whiskery',
'whiskey',
'whisking',
'whisky',
'whisper',
'whispering',
'whispery',
'whist',
'whisted',
'whisting',
'whistle',
'whistled',
'whistler',
'whistling',
'whit',
'white',
'whitecap',
'whitecapper',
'whitecapping',
'whitecomb',
'whited',
'whitefish',
'whitehall',
'whitehead',
'whitely',
'whiten',
'whitened',
'whitener',
'whitening',
'whiteout',
'whiter',
'whitest',
'whitewall',
'whitewash',
'whitewashed',
'whitewashing',
'whitey',
'whitfield',
'whither',
'whithersoever',
'whiting',
'whitish',
'whitlow',
'whitman',
'whitney',
'whitsunday',
'whitter',
'whittle',
'whittled',
'whittler',
'whittling',
'whity',
'whiz',
'whizbang',
'whizz',
'whizzed',
'whizzer',
'whizzing',
'who',
'whoa',
'whodunit',
'whoever',
'whole',
'wholehearted',
'wholely',
'wholesale',
'wholesaled',
'wholesaler',
'wholesaling',
'wholesome',
'wholesomely',
'wholewheat',
'wholism',
'wholly',
'whom',
'whomever',
'whomp',
'whomped',
'whomping',
'whomso',
'whomsoever',
'whoop',
'whooped',
'whoopee',
'whooper',
'whooping',
'whoopla',
'whoosh',
'whooshed',
'whooshing',
'whopper',
'whopping',
'whorl',
'whorled',
'whortle',
'whose',
'whoso',
'whosoever',
'whump',
'whumped',
'whumping',
'why',
'wichita',
'wick',
'wickeder',
'wickedest',
'wicker',
'wickerwork',
'wicket',
'wicking',
'wickiup',
'wickyup',
'widder',
'widdle',
'widdled',
'widdling',
'wide',
'widely',
'widemouthed',
'widen',
'widened',
'widener',
'widening',
'wider',
'widespread',
'widest',
'widgeon',
'widget',
'widish',
'widow',
'widowed',
'widower',
'widowerhood',
'widowhood',
'widowing',
'width',
'widthway',
'wiedersehen',
'wield',
'wielder',
'wieldier',
'wieldiest',
'wielding',
'wieldy',
'wiener',
'wienie',
'wierd',
'wife',
'wifed',
'wifedom',
'wifehood',
'wifelier',
'wifeliest',
'wifely',
'wifing',
'wig',
'wigeon',
'wiggery',
'wigging',
'wiggle',
'wiggled',
'wiggler',
'wigglier',
'wiggliest',
'wiggling',
'wiggly',
'wight',
'wiglet',
'wiglike',
'wigmaker',
'wigwag',
'wigwagging',
'wigwam',
'wilco',
'wild',
'wildcard',
'wildcat',
'wildcatted',
'wildcatter',
'wildcatting',
'wildebeest',
'wilder',
'wildering',
'wildest',
'wildfire',
'wildfowl',
'wilding',
'wildish',
'wildlife',
'wildling',
'wildly',
'wildwood',
'wile',
'wiled',
'wilful',
'wilfully',
'wilier',
'wiliest',
'wilily',
'wiling',
'will',
'willable',
'willed',
'willer',
'willful',
'willfully',
'william',
'willied',
'willing',
'willinger',
'willingest',
'williwaw',
'willow',
'willowed',
'willowier',
'willowiest',
'willowing',
'willowy',
'willpower',
'willy',
'wilson',
'wilt',
'wilted',
'wilting',
'wily',
'wimble',
'wimple',
'wimpled',
'win',
'wince',
'winced',
'wincer',
'winch',
'winched',
'wincher',
'winching',
'wincing',
'wind',
'windable',
'windage',
'windbag',
'windblown',
'windbreak',
'windburn',
'windburned',
'windburnt',
'windchill',
'winder',
'windfall',
'windflower',
'windier',
'windiest',
'windily',
'winding',
'windjammer',
'windlassed',
'windmill',
'windmilled',
'window',
'windowed',
'windowing',
'windowpane',
'windowsill',
'windpipe',
'windproof',
'windrow',
'windrowing',
'windscreen',
'windshield',
'windsock',
'windsor',
'windstorm',
'windsurf',
'windswept',
'windup',
'windward',
'windy',
'wine',
'wined',
'winegrower',
'winery',
'wineshop',
'wineskin',
'winesop',
'winey',
'wing',
'wingback',
'wingding',
'wingier',
'winging',
'winglet',
'wingman',
'wingover',
'wingspan',
'wingspread',
'wingy',
'winier',
'winiest',
'wining',
'winish',
'wink',
'winked',
'winker',
'winking',
'winkle',
'winkled',
'winkling',
'winnable',
'winned',
'winner',
'winning',
'winnipeg',
'winnow',
'winnowed',
'winnower',
'winnowing',
'wino',
'winslow',
'winsome',
'winsomely',
'winsomer',
'winsomest',
'winter',
'winterer',
'wintergreen',
'winterier',
'winteriest',
'wintering',
'winterization',
'winterize',
'winterized',
'winterizing',
'winterkill',
'winterkilled',
'winterkilling',
'winterly',
'wintertide',
'wintertime',
'wintery',
'wintling',
'wintrier',
'wintriest',
'wintrily',
'wintry',
'winy',
'wipe',
'wiped',
'wipeout',
'wiper',
'wiping',
'wirable',
'wire',
'wiredraw',
'wiredrawn',
'wiredrew',
'wirehair',
'wirelessed',
'wireman',
'wirephoto',
'wirepuller',
'wirepulling',
'wirer',
'wiretap',
'wiretapper',
'wiretapping',
'wireway',
'wirework',
'wireworm',
'wirier',
'wiriest',
'wirily',
'wiring',
'wiry',
'wisconsin',
'wisconsinite',
'wisdom',
'wise',
'wiseacre',
'wisecrack',
'wisecracker',
'wisecracking',
'wised',
'wiseliest',
'wisely',
'wiser',
'wisest',
'wish',
'wishbone',
'wished',
'wisher',
'wishful',
'wishfully',
'wishing',
'wishy',
'wising',
'wisp',
'wisped',
'wispier',
'wispiest',
'wispily',
'wisping',
'wispish',
'wispy',
'wisteria',
'wistful',
'wistfully',
'wisting',
'wit',
'witch',
'witchcraft',
'witched',
'witchery',
'witchier',
'witchiest',
'witching',
'witchy',
'with',
'withal',
'withdraw',
'withdrawable',
'withdrawal',
'withdrawer',
'withdrawing',
'withdrawn',
'withdrew',
'withe',
'withed',
'wither',
'witherer',
'withering',
'withheld',
'withhold',
'withholder',
'withholding',
'withier',
'within',
'withing',
'without',
'withstand',
'withstanding',
'withstood',
'withy',
'witlessly',
'witling',
'witnessable',
'witnessed',
'witnesser',
'witnessing',
'witted',
'witticism',
'wittier',
'wittiest',
'wittily',
'witting',
'witty',
'wive',
'wived',
'wiver',
'wivern',
'wiving',
'wiz',
'wizard',
'wizardly',
'wizardry',
'wizen',
'wizened',
'wizening',
'woad',
'woald',
'wobble',
'wobbled',
'wobbler',
'wobblier',
'wobbliest',
'wobbling',
'wobbly',
'wobegone',
'woe',
'woebegone',
'woeful',
'woefuller',
'woefullest',
'woefully',
'woesome',
'woful',
'wofully',
'wok',
'woke',
'woken',
'wold',
'wolf',
'wolfed',
'wolfer',
'wolfhound',
'wolfing',
'wolfish',
'wolfram',
'wolfsbane',
'wolver',
'wolverine',
'woman',
'womaned',
'womanhood',
'womanish',
'womanize',
'womanized',
'womanizer',
'womanizing',
'womankind',
'womanlier',
'womanliest',
'womanlike',
'womanly',
'womb',
'wombat',
'wombed',
'wombier',
'womby',
'womenfolk',
'won',
'wonder',
'wonderer',
'wonderful',
'wonderfully',
'wondering',
'wonderland',
'wonderment',
'wondrously',
'wonkier',
'wonky',
'wont',
'wonted',
'wonting',
'wonton',
'woo',
'wood',
'woodbin',
'woodbine',
'woodblock',
'woodbox',
'woodcarver',
'woodcarving',
'woodchopper',
'woodchuck',
'woodcock',
'woodcraft',
'woodcut',
'woodcutter',
'woodcutting',
'wooden',
'woodener',
'woodenest',
'woodenly',
'woodenware',
'woodgraining',
'woodhen',
'woodier',
'woodiest',
'wooding',
'woodland',
'woodlander',
'woodlore',
'woodlot',
'woodman',
'woodnote',
'woodpecker',
'woodpile',
'woodruff',
'woodshed',
'woodsier',
'woodsiest',
'woodsman',
'woodsy',
'woodward',
'woodwax',
'woodwind',
'woodwork',
'woodworker',
'woodworking',
'woodworm',
'woody',
'wooed',
'wooer',
'woof',
'woofed',
'woofer',
'woofing',
'wooing',
'wool',
'wooled',
'woolen',
'wooler',
'woolgathering',
'woolie',
'woolier',
'wooliest',
'woollen',
'woollier',
'woolliest',
'woolly',
'woolman',
'woolpack',
'woolsack',
'woolshed',
'woolskin',
'woolsorter',
'woolworth',
'wooly',
'woomera',
'woosh',
'wooshed',
'wooshing',
'woozier',
'wooziest',
'woozily',
'woozy',
'wop',
'worcester',
'word',
'wordage',
'wordbook',
'wordier',
'wordiest',
'wordily',
'wording',
'wordlessly',
'wordperfect',
'wordplay',
'wordstar',
'wordy',
'wore',
'work',
'workability',
'workable',
'workaday',
'workaholic',
'workaholism',
'workbag',
'workbench',
'workboat',
'workbook',
'workbox',
'workday',
'worked',
'worker',
'workfolk',
'workhand',
'workhorse',
'workhouse',
'working',
'workingman',
'workingwoman',
'workload',
'workman',
'workmanlike',
'workmanship',
'workmaster',
'workout',
'workroom',
'workshop',
'workstation',
'worktable',
'workup',
'workweek',
'workwoman',
'world',
'worldbeater',
'worldlier',
'worldliest',
'worldling',
'worldly',
'worldwide',
'worm',
'wormed',
'wormer',
'wormhole',
'wormier',
'wormiest',
'worming',
'wormish',
'wormwood',
'wormy',
'worn',
'wornout',
'worried',
'worrier',
'worriment',
'worrisome',
'worrisomely',
'worrit',
'worry',
'worrying',
'worrywart',
'worse',
'worsen',
'worsened',
'worsening',
'worser',
'worship',
'worshiped',
'worshiper',
'worshipful',
'worshipfully',
'worshiping',
'worshipper',
'worshipping',
'worst',
'worsted',
'worsting',
'wort',
'worth',
'worthed',
'worthful',
'worthier',
'worthiest',
'worthily',
'worthing',
'worthlessly',
'worthwhile',
'worthy',
'wotted',
'wotting',
'would',
'wouldest',
'wouldst',
'wound',
'wounding',
'wove',
'woven',
'wow',
'wowed',
'wowing',
'wowser',
'wrack',
'wrackful',
'wracking',
'wraith',
'wrang',
'wrangle',
'wrangled',
'wrangler',
'wrangling',
'wrap',
'wraparound',
'wrapper',
'wrapping',
'wrapt',
'wrasse',
'wrastle',
'wrastled',
'wrath',
'wrathed',
'wrathful',
'wrathfully',
'wrathier',
'wrathiest',
'wrathily',
'wrathing',
'wrathy',
'wreak',
'wreaked',
'wreaker',
'wreaking',
'wreath',
'wreathe',
'wreathed',
'wreathing',
'wreathy',
'wreck',
'wreckage',
'wrecker',
'wreckful',
'wrecking',
'wren',
'wrench',
'wrenched',
'wrenching',
'wrest',
'wrested',
'wrester',
'wresting',
'wrestle',
'wrestled',
'wrestler',
'wrestling',
'wretch',
'wretched',
'wretcheder',
'wried',
'wrier',
'wriest',
'wriggle',
'wriggled',
'wriggler',
'wrigglier',
'wriggliest',
'wriggling',
'wriggly',
'wright',
'wrigley',
'wring',
'wringer',
'wringing',
'wrinkle',
'wrinkled',
'wrinklier',
'wrinkliest',
'wrinkling',
'wrinkly',
'wrist',
'wristband',
'wristdrop',
'wristiest',
'wristlet',
'wristwatch',
'wristy',
'writ',
'writable',
'write',
'writeoff',
'writer',
'writhe',
'writhed',
'writher',
'writhing',
'writing',
'written',
'wrong',
'wrongdoer',
'wrongdoing',
'wronger',
'wrongest',
'wrongful',
'wrongfully',
'wronging',
'wrongly',
'wrote',
'wroth',
'wrothful',
'wrought',
'wrung',
'wry',
'wryer',
'wryest',
'wrying',
'wryly',
'wryneck',
'wurst',
'wurzel',
'wye',
'wyoming',
'wyomingite',
'wyvern',
'xanthate',
'xanthic',
'xanthin',
'xanthine',
'xanthippe',
'xanthochroid',
'xanthoma',
'xanthophyll',
'xebec',
'xenia',
'xenic',
'xenobiology',
'xenocryst',
'xenogamy',
'xenograft',
'xenolith',
'xenolithic',
'xenon',
'xenophobe',
'xenophobia',
'xenophobic',
'xeric',
'xeroderma',
'xerographic',
'xerography',
'xerophthalmia',
'xerophyte',
'xerox',
'xeroxed',
'xeroxing',
'xiphoid',
'xiphosuran',
'xylan',
'xylem',
'xylene',
'xylidine',
'xylitol',
'xylograph',
'xylography',
'xyloid',
'xylophone',
'xylophonist',
'xylose',
'xylotomy',
'xyster',
'yabber',
'yacht',
'yachted',
'yachter',
'yachting',
'yachtman',
'yachtsman',
'yachtsmanship',
'yachtswoman',
'yack',
'yacking',
'yahoo',
'yahooism',
'yahooligan',
'yahooligans',
'yahweh',
'yak',
'yakked',
'yakking',
'yale',
'yam',
'yammer',
'yammerer',
'yammering',
'yamun',
'yang',
'yangtze',
'yank',
'yanked',
'yankee',
'yanking',
'yanqui',
'yap',
'yapper',
'yapping',
'yard',
'yardage',
'yardarm',
'yardbird',
'yarding',
'yardman',
'yardmaster',
'yardstick',
'yare',
'yarely',
'yarer',
'yarest',
'yarmulke',
'yarn',
'yarned',
'yarning',
'yarrow',
'yashmac',
'yashmak',
'yaw',
'yawed',
'yawing',
'yawl',
'yawled',
'yawling',
'yawn',
'yawned',
'yawner',
'yawning',
'yawp',
'yawped',
'yawper',
'yawping',
'yay',
'ycleped',
'yclept',
'ye',
'yea',
'yeah',
'year',
'yearbook',
'yearling',
'yearlong',
'yearly',
'yearn',
'yearned',
'yearner',
'yearning',
'yeast',
'yeasted',
'yeastier',
'yeastiest',
'yeastily',
'yeasting',
'yeasty',
'yegg',
'yeggman',
'yell',
'yelled',
'yeller',
'yelling',
'yellow',
'yellowbellied',
'yellowbelly',
'yellowed',
'yellower',
'yellowest',
'yellowing',
'yellowish',
'yellowknife',
'yellowly',
'yellowy',
'yelp',
'yelped',
'yelper',
'yelping',
'yemenite',
'yen',
'yenned',
'yenning',
'yenta',
'yeoman',
'yeomanly',
'yeomanry',
'yep',
'yerba',
'yeshiva',
'yeshivah',
'yeshivoth',
'yessed',
'yessing',
'yester',
'yesterday',
'yesteryear',
'yet',
'yeti',
'yew',
'yid',
'yield',
'yielder',
'yielding',
'yin',
'yip',
'yipe',
'yippee',
'yippie',
'yipping',
'ymca',
'yod',
'yodel',
'yodeled',
'yodeler',
'yodeling',
'yodelled',
'yodeller',
'yodelling',
'yodle',
'yodled',
'yodler',
'yodling',
'yoga',
'yogee',
'yoghurt',
'yogi',
'yogic',
'yogin',
'yogini',
'yogurt',
'yoke',
'yoked',
'yokel',
'yokelish',
'yokemate',
'yoking',
'yokohama',
'yolk',
'yolked',
'yolkier',
'yolky',
'yon',
'yond',
'yonder',
'yoni',
'yonker',
'yore',
'york',
'yorker',
'yosemite',
'you',
'young',
'younger',
'youngest',
'youngish',
'youngling',
'youngster',
'youngstown',
'younker',
'your',
'yourn',
'yourself',
'youse',
'youth',
'youthen',
'youthened',
'youthening',
'youthful',
'youthfully',
'yow',
'yowed',
'yowie',
'yowing',
'yowl',
'yowled',
'yowler',
'yowling',
'ytterbic',
'ytterbium',
'yttria',
'yttric',
'yttrium',
'yuan',
'yucca',
'yugoslav',
'yugoslavia',
'yugoslavian',
'yuk',
'yukked',
'yukking',
'yukon',
'yule',
'yuletide',
'yummier',
'yummiest',
'yummy',
'yup',
'yuppie',
'yurt',
'ywca',
'zabaione',
'zachariah',
'zag',
'zagging',
'zaire',
'zairian',
'zambezi',
'zambia',
'zambian',
'zanier',
'zaniest',
'zanily',
'zany',
'zanyish',
'zanzibar',
'zap',
'zapping',
'zazen',
'zeal',
'zealand',
'zealander',
'zealot',
'zealotry',
'zealously',
'zebeck',
'zebra',
'zebraic',
'zebrine',
'zebroid',
'zebu',
'zed',
'zee',
'zeitgeist',
'zen',
'zenana',
'zendo',
'zenith',
'zenithal',
'zeolite',
'zephyr',
'zeppelin',
'zero',
'zeroed',
'zeroing',
'zest',
'zested',
'zestful',
'zestfully',
'zestier',
'zestiest',
'zesting',
'zesty',
'zeta',
'zig',
'zigging',
'ziggurat',
'zigzag',
'zigzagging',
'zikurat',
'zilch',
'zillion',
'zillionth',
'zimbabwe',
'zinc',
'zincate',
'zinced',
'zincic',
'zincified',
'zincify',
'zincing',
'zincite',
'zincking',
'zincky',
'zincoid',
'zincy',
'zing',
'zinger',
'zingier',
'zingiest',
'zinging',
'zingy',
'zinkify',
'zinky',
'zinnia',
'zion',
'zionism',
'zionist',
'zip',
'zipper',
'zippering',
'zippier',
'zippiest',
'zipping',
'zippy',
'zircon',
'zirconic',
'zirconium',
'zither',
'zitherist',
'zithern',
'zizzle',
'zizzled',
'zizzling',
'zodiac',
'zodiacal',
'zombie',
'zonal',
'zonation',
'zone',
'zoner',
'zonetime',
'zoning',
'zonked',
'zoo',
'zoologist',
'zoology',
'zoom',
'zoomed',
'zooming',
'zooparasitic',
'zoopathology',
'zoophobia',
'zoophyte',
'zooplankton',
'zori',
'zoroaster',
'zoroastrian',
'zoroastrianism',
'zoster',
'zouave',
'zowie',
'zoysia',
'zucchetto',
'zucchini',
'zulu',
'zuni',
'zurich',
'zwieback',
'zygote',
'zygotic',
'zymase',
'zymogenic',
'zymology',
'zymoplastic',
'zymoscope',
'zymurgy',
'zyzzyva',
];


/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/buffer/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/parse-asn1/aesid.json":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/aesid.json ***!
  \********************************************/
/*! exports provided: 2.16.840.1.101.3.4.1.1, 2.16.840.1.101.3.4.1.2, 2.16.840.1.101.3.4.1.3, 2.16.840.1.101.3.4.1.4, 2.16.840.1.101.3.4.1.21, 2.16.840.1.101.3.4.1.22, 2.16.840.1.101.3.4.1.23, 2.16.840.1.101.3.4.1.24, 2.16.840.1.101.3.4.1.41, 2.16.840.1.101.3.4.1.42, 2.16.840.1.101.3.4.1.43, 2.16.840.1.101.3.4.1.44, default */
/***/ (function(module) {

module.exports = {"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"};

/***/ }),

/***/ "./node_modules/parse-asn1/asn1.js":
/*!*****************************************!*\
  !*** ./node_modules/parse-asn1/asn1.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.


var asn1 = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js")

exports.certificate = __webpack_require__(/*! ./certificate */ "./node_modules/parse-asn1/certificate.js")

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})


/***/ }),

/***/ "./node_modules/parse-asn1/certificate.js":
/*!************************************************!*\
  !*** ./node_modules/parse-asn1/certificate.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen



var asn = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js")

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate


/***/ }),

/***/ "./node_modules/parse-asn1/fixProc.js":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/fixProc.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
var evp = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js")
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/parse-asn1/index.js":
/*!******************************************!*\
  !*** ./node_modules/parse-asn1/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var asn1 = __webpack_require__(/*! ./asn1 */ "./node_modules/parse-asn1/asn1.js")
var aesid = __webpack_require__(/*! ./aesid.json */ "./node_modules/parse-asn1/aesid.json")
var fixProc = __webpack_require__(/*! ./fixProc */ "./node_modules/parse-asn1/fixProc.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js")
var compat = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js")
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/pbkdf2/browser.js":
/*!****************************************!*\
  !*** ./node_modules/pbkdf2/browser.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ "./node_modules/pbkdf2/lib/async.js")
exports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ "./node_modules/pbkdf2/lib/sync-browser.js")


/***/ }),

/***/ "./node_modules/pbkdf2/lib/async.js":
/*!******************************************!*\
  !*** ./node_modules/pbkdf2/lib/async.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var sync = __webpack_require__(/*! ./sync */ "./node_modules/pbkdf2/lib/sync-browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }

  checkParameters(password, salt, iterations, keylen)
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/pbkdf2/lib/default-encoding.js":
/*!*****************************************************!*\
  !*** ./node_modules/pbkdf2/lib/default-encoding.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/pbkdf2/lib/precondition.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/precondition.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

function checkBuffer (buf, name) {
  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
    throw new TypeError(name + ' must be a buffer or string')
  }
}

module.exports = function (password, salt, iterations, keylen) {
  checkBuffer(password, 'Password')
  checkBuffer(salt, 'Salt')

  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/pbkdf2/lib/sync-browser.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/sync-browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var rmd160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")

var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(password, salt, iterations, keylen)

  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2


/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  var invariant = __webpack_require__(/*! fbjs/lib/invariant */ "./node_modules/fbjs/lib/invariant.js");
  var warning = __webpack_require__(/*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js");
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/public-encrypt/browser.js":
/*!************************************************!*\
  !*** ./node_modules/public-encrypt/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ "./node_modules/public-encrypt/publicEncrypt.js");
exports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ "./node_modules/public-encrypt/privateDecrypt.js");

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};

/***/ }),

/***/ "./node_modules/public-encrypt/mgf.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/mgf.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/privateDecrypt.js":
/*!*******************************************************!*\
  !*** ./node_modules/public-encrypt/privateDecrypt.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js");
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js");
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js");
var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js");
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js");
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/publicEncrypt.js":
/*!******************************************************!*\
  !*** ./node_modules/public-encrypt/publicEncrypt.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js");
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js");
var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js");
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js");

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/withPublic.js":
/*!***************************************************!*\
  !*** ./node_modules/public-encrypt/withPublic.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/node_modules/buffer/index.js */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/xor.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/xor.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};

/***/ }),

/***/ "./node_modules/randombytes/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/randombytes/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/randomfill/browser.js":
/*!********************************************!*\
  !*** ./node_modules/randomfill/browser.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js")
var randombytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.4.0
 * react-dom.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

var invariant = __webpack_require__(/*! fbjs/lib/invariant */ "./node_modules/fbjs/lib/invariant.js");
var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var warning = __webpack_require__(/*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js");
var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ "./node_modules/fbjs/lib/ExecutionEnvironment.js");
var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");
var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js");
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");
var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ "./node_modules/fbjs/lib/getActiveElement.js");
var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ "./node_modules/fbjs/lib/shallowEqual.js");
var containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ "./node_modules/fbjs/lib/containsNode.js");
var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ "./node_modules/fbjs/lib/emptyObject.js");
var hyphenateStyleName = __webpack_require__(/*! fbjs/lib/hyphenateStyleName */ "./node_modules/fbjs/lib/hyphenateStyleName.js");
var camelizeStyleName = __webpack_require__(/*! fbjs/lib/camelizeStyleName */ "./node_modules/fbjs/lib/camelizeStyleName.js");

// Relying on the `invariant()` implementation lets us
// have preserve the format and params in the www builds.

!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
  this._hasCaughtError = false;
  this._caughtError = null;
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this._caughtError = error;
    this._hasCaughtError = true;
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // untintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!

  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
      var evt = document.createEvent('Event');

      // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.
      var didError = true;

      // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false);
        func.apply(context, funcArgs);
        didError = false;
      }

      // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.
      var error = void 0;
      // Use this to track whether the error event is ever called.
      var didSetError = false;
      var isCrossOriginError = false;

      function onError(event) {
        error = event.error;
        didSetError = true;
        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }
      }

      // Create a fake event type.
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

      // Attach our event handlers
      window.addEventListener('error', onError);
      fakeNode.addEventListener(evtType, callCallback, false);

      // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }
        this._hasCaughtError = true;
        this._caughtError = error;
      } else {
        this._hasCaughtError = false;
        this._caughtError = null;
      }

      // Remove our event listeners
      window.removeEventListener('error', onError);
    };

    invokeGuardedCallback = invokeGuardedCallbackDev;
  }
}

var invokeGuardedCallback$1 = invokeGuardedCallback;

var ReactErrorUtils = {
  // Used by Fiber to simulate a try-catch.
  _caughtError: null,
  _hasCaughtError: false,

  // Used by event system to capture/rethrow the first error.
  _rethrowError: null,
  _hasRethrowError: false,

  /**
   * Call a function while guarding against errors that happens within it.
   * Returns an error if it throws, otherwise null.
   *
   * In production, this is implemented using a try-catch. The reason we don't
   * use a try-catch directly is so that we can swap out a different
   * implementation in DEV mode.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback$1.apply(ReactErrorUtils, arguments);
  },

  /**
   * Same as invokeGuardedCallback, but instead of returning an error, it stores
   * it in a global so it can be rethrown by `rethrowCaughtError` later.
   * TODO: See if _caughtError and _rethrowError can be unified.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
    if (ReactErrorUtils.hasCaughtError()) {
      var error = ReactErrorUtils.clearCaughtError();
      if (!ReactErrorUtils._hasRethrowError) {
        ReactErrorUtils._hasRethrowError = true;
        ReactErrorUtils._rethrowError = error;
      }
    }
  },

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
  },

  hasCaughtError: function () {
    return ReactErrorUtils._hasCaughtError;
  },

  clearCaughtError: function () {
    if (ReactErrorUtils._hasCaughtError) {
      var error = ReactErrorUtils._caughtError;
      ReactErrorUtils._caughtError = null;
      ReactErrorUtils._hasCaughtError = false;
      return error;
    } else {
      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
    }
  }
};

var rethrowCaughtError = function () {
  if (ReactErrorUtils._hasRethrowError) {
    var error = ReactErrorUtils._rethrowError;
    ReactErrorUtils._rethrowError = null;
    ReactErrorUtils._hasRethrowError = false;
    throw error;
  }
};

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
    if (plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
  eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */
var plugins = [];

/**
 * Mapping from event name to dispatch config
 */
var eventNameDispatchConfigs = {};

/**
 * Mapping from registration name to plugin module
 */
var registrationNameModules = {};

/**
 * Mapping from registration name to event name
 */
var registrationNameDependencies = {};

/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */
var possibleRegistrationNames = {};
// Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */
function injectEventPluginOrder(injectedEventPluginOrder) {
  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
  // Clone the ordering so it cannot be dynamically mutated.
  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}

/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */
function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }
    var pluginModule = injectedNamesToPlugins[pluginName];
    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }
  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var EventPluginRegistry = Object.freeze({
	plugins: plugins,
	eventNameDispatchConfigs: eventNameDispatchConfigs,
	registrationNameModules: registrationNameModules,
	registrationNameDependencies: registrationNameDependencies,
	possibleRegistrationNames: possibleRegistrationNames,
	injectEventPluginOrder: injectEventPluginOrder,
	injectEventPluginsByName: injectEventPluginsByName
});

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;

var injection$1 = {
  injectComponentTree: function (Injected) {
    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
    getInstanceFromNode = Injected.getInstanceFromNode;
    getNodeFromInstance = Injected.getNodeFromInstance;

    {
      !(getNodeFromInstance && getInstanceFromNode) ? warning(false, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  }
};

var validateEventDispatches = void 0;
{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warning(false, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */


/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */
var injection = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};

/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */
function getListener(inst, registrationName) {
  var listener = void 0;

  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon
  var stateNode = inst.stateNode;
  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }
  var props = getFiberCurrentPropsFromNode(stateNode);
  if (!props) {
    // Work in progress.
    return null;
  }
  listener = props[registrationName];
  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }
  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
  return listener;
}

/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */
function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = null;
  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];
    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }
  return events;
}

function runEventsInBatch(events, simulated) {
  if (events !== null) {
    eventQueue = accumulateInto(eventQueue, events);
  }

  // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.
  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  if (simulated) {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
  } else {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
  }
  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
  // This would be a good time to rethrow if any of the event handlers threw.
  ReactErrorUtils.rethrowCaughtError();
}

function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
  runEventsInBatch(events, false);
}

var EventPluginHub = Object.freeze({
	injection: injection,
	getListener: getListener,
	runEventsInBatch: runEventsInBatch,
	runExtractedEventsInBatch: runExtractedEventsInBatch
});

var IndeterminateComponent = 0; // Before we know whether it is functional or class
var FunctionalComponent = 1;
var ClassComponent = 2;
var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
var HostComponent = 5;
var HostText = 6;



var Fragment = 10;
var Mode = 11;
var ContextConsumer = 12;
var ContextProvider = 13;
var ForwardRef = 14;
var Profiler = 15;
var TimeoutComponent = 16;

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  while (!node[internalInstanceKey]) {
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var inst = node[internalInstanceKey];
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber, this will always be the deepest root.
    return inst;
  }

  return null;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey];
  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText) {
      return inst;
    } else {
      return null;
    }
  }
  return null;
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  }

  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  invariant(false, 'getNodeFromInstance: Invalid argument.');
}

function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}

function updateFiberProps(node, props) {
  node[internalEventHandlersKey] = props;
}

var ReactDOMComponentTree = Object.freeze({
	precacheFiberNode: precacheFiberNode,
	getClosestInstanceFromNode: getClosestInstanceFromNode,
	getInstanceFromNode: getInstanceFromNode$1,
	getNodeFromInstance: getNodeFromInstance$1,
	getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
	updateFiberProps: updateFiberProps
});

function getParent(inst) {
  do {
    inst = inst.return;
    // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);
  if (inst) {
    return inst;
  }
  return null;
}

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  return getParent(inst);
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i = void 0;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (true) {
    if (!from) {
      break;
    }
    if (from === common) {
      break;
    }
    var alternate = from.alternate;
    if (alternate !== null && alternate === common) {
      break;
    }
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (true) {
    if (!to) {
      break;
    }
    if (to === common) {
      break;
    }
    var _alternate = to.alternate;
    if (_alternate !== null && _alternate === common) {
      break;
    }
    pathTo.push(to);
    to = getParent(to);
  }
  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  {
    !inst ? warning(false, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? getParentInstance(targetInst) : null;
    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = Object.freeze({
	accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
	accumulateDirectDispatches: accumulateDirectDispatches
});

// Do not uses the below two methods directly!
// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
// (It is the only module that is allowed to access these methods.)

function unsafeCastStringToDOMTopLevelType(topLevelType) {
  return topLevelType;
}

function unsafeCastDOMTopLevelTypeToString(topLevelType) {
  return topLevelType;
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

/**
 * To identify top level events in ReactDOM, we use constants defined by this
 * module. This is the only module that uses the unsafe* methods to express
 * that the constants actually correspond to the browser event names. This lets
 * us save some bundle size by avoiding a top level type -> event name map.
 * The rest of ReactDOM code should import top level types from this file.
 */
var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

// List of events that need to be individually attached to media elements.
// Note that events in this list will *not* be listened to at the top level
// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

function getRawEventName(topLevelType) {
  return unsafeCastDOMTopLevelTypeToString(topLevelType);
}

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

/**
 * This helper object stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var compositionState = {
  _root: null,
  _startText: null,
  _fallbackText: null
};

function initialize(nativeEventTarget) {
  compositionState._root = nativeEventTarget;
  compositionState._startText = getText();
  return true;
}

function reset() {
  compositionState._root = null;
  compositionState._startText = null;
  compositionState._fallbackText = null;
}

function getData() {
  if (compositionState._fallbackText) {
    return compositionState._fallbackText;
  }

  var start = void 0;
  var startValue = compositionState._startText;
  var startLength = startValue.length;
  var end = void 0;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;
  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  compositionState._fallbackText = endValue.slice(start, sliceTail);
  return compositionState._fallbackText;
}

function getText() {
  if ('value' in compositionState._root) {
    return compositionState._root.value;
  }
  return compositionState._root[getTextContentAccessor()];
}

/* eslint valid-typeof: 0 */

var didWarnForAddedNewProperty = false;
var EVENT_POOL_SIZE = 10;

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 */
SyntheticEvent.extend = function (Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  function Class() {
    return Super.apply(this, arguments);
  }
  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.extend = Super.extend;
  addEventPoolingTo(Class);

  return Class;
};

/** Proxying after everything set on SyntheticEvent
 * to resolve Proxy issue on some WebKit browsers
 * in which some Event properties are set to undefined (GH#10010)
 */
{
  var isProxySupported = typeof Proxy === 'function' &&
  // https://github.com/facebook/react/issues/12011
  !Object.isSealed(new Proxy({}, {}));

  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              !(didWarnForAddedNewProperty || target.isPersistent()) ? warning(false, "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}

addEventPoolingTo(SyntheticEvent);

/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    !warningCondition ? warning(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;
  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }
  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;
  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
  event.destructor();
  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

var SyntheticEvent$1 = SyntheticEvent;

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var SyntheticCompositionEvent = SyntheticEvent$1.extend({
  data: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var SyntheticInputEvent = SyntheticEvent$1.extend({
  data: null
});

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode;

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case TOP_COMPOSITION_START:
      return eventTypes.compositionStart;
    case TOP_COMPOSITION_END:
      return eventTypes.compositionEnd;
    case TOP_COMPOSITION_UPDATE:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_KEY_UP:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case TOP_KEY_DOWN:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case TOP_KEY_PRESS:
    case TOP_MOUSE_DOWN:
    case TOP_BLUR:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition status, if any.
var isComposing = false;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType = void 0;
  var fallbackData = void 0;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_COMPOSITION_END:
      return getDataFromCustomEvent(nativeEvent);
    case TOP_KEY_PRESS:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case TOP_TEXT_INPUT:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case TOP_PASTE:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case TOP_KEY_PRESS:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }
      return null;
    case TOP_COMPOSITION_END:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars = void 0;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    if (composition === null) {
      return beforeInput;
    }

    if (beforeInput === null) {
      return composition;
    }

    return [composition, beforeInput];
  }
};

// Use to restore controlled state after a change event has fired.

var fiberHostComponent = null;

var ReactControlledComponentInjection = {
  injectFiberControlledHostComponent: function (hostComponentImpl) {
    // The fiber implementation doesn't use dynamic dispatch so we need to
    // inject the implementation.
    fiberHostComponent = hostComponentImpl;
  }
};

var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);
  if (!internalInstance) {
    // Unmounted
    return;
  }
  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
}

var injection$2 = ReactControlledComponentInjection;

function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}

function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}

function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }
  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;

  restoreStateOfTarget(target);
  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var ReactControlledComponent = Object.freeze({
	injection: injection$2,
	enqueueStateRestore: enqueueStateRestore,
	needsStateRestore: needsStateRestore,
	restoreStateIfNeeded: restoreStateIfNeeded
});

// Used as a way to call batchedUpdates when we don't have a reference to
// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.

// Defaults
var _batchedUpdates = function (fn, bookkeeping) {
  return fn(bookkeeping);
};
var _interactiveUpdates = function (fn, a, b) {
  return fn(a, b);
};
var _flushInteractiveUpdates = function () {};

var isBatching = false;
function batchedUpdates(fn, bookkeeping) {
  if (isBatching) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }
  isBatching = true;
  try {
    return _batchedUpdates(fn, bookkeeping);
  } finally {
    // Here we wait until all updates have propagated, which is important
    // when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    // Then we restore state of any controlled component.
    isBatching = false;
    var controlledComponentsHavePendingUpdates = needsStateRestore();
    if (controlledComponentsHavePendingUpdates) {
      // If a controlled event was fired, we may need to restore the state of
      // the DOM node back to the controlled value. This is necessary when React
      // bails out of the update without touching the DOM.
      _flushInteractiveUpdates();
      restoreStateIfNeeded();
    }
  }
}

function interactiveUpdates(fn, a, b) {
  return _interactiveUpdates(fn, a, b);
}



var injection$3 = {
  injectRenderer: function (renderer) {
    _batchedUpdates = renderer.batchedUpdates;
    _interactiveUpdates = renderer.interactiveUpdates;
    _flushInteractiveUpdates = renderer.flushInteractiveUpdates;
  }
};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * HTML nodeType values that represent the type of the node
 */

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';
  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  var currentValue = '' + node[valueField];

  // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)
  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }
  var get = descriptor.get,
      set = descriptor.set;

  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  });
  // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768
  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });

  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  }

  // TODO: Once it's just Fiber we can move this to node._wrapperState
  node._valueTracker = trackValueOnNode(node);
}

function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node);
  // if there is no tracker at this point it's unlikely
  // that trying again will succeed
  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);
  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }
  return false;
}

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_ASYNC_MODE_TYPE:
      return 'AsyncMode';
    case REACT_CONTEXT_TYPE:
      return 'Context.Consumer';
    case REACT_FRAGMENT_TYPE:
      return 'ReactFragment';
    case REACT_PORTAL_TYPE:
      return 'ReactPortal';
    case REACT_PROFILER_TYPE:
      return 'Profiler(' + fiber.pendingProps.id + ')';
    case REACT_PROVIDER_TYPE:
      return 'Context.Provider';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_TIMEOUT_TYPE:
      return 'Timeout';
  }
  if (typeof type === 'object' && type !== null) {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        var functionName = type.render.displayName || type.render.name || '';
        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    }
  }
  return null;
}

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner);
      }
      return describeComponentFrame(name, source, ownerName);
    default:
      return '';
  }
}

// This function can only be called with a work-in-progress fiber and
// only during begin or complete phase. Do not call it under any other
// circumstances.
function getStackAddendumByWorkInProgressFiber(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);
    // Otherwise this return pointer might point to the wrong tree:
    node = node.return;
  } while (node);
  return info;
}

function getCurrentFiberOwnerName$1() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    var owner = fiber._debugOwner;
    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner);
    }
  }
  return null;
}

function getCurrentFiberStackAddendum$1() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.
    return getStackAddendumByWorkInProgressFiber(fiber);
  }
  return null;
}

function resetCurrentFiber() {
  ReactDebugCurrentFrame.getCurrentStack = null;
  ReactDebugCurrentFiber.current = null;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentFiber(fiber) {
  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum$1;
  ReactDebugCurrentFiber.current = fiber;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentPhase(phase) {
  ReactDebugCurrentFiber.phase = phase;
}

var ReactDebugCurrentFiber = {
  current: null,
  phase: null,
  resetCurrentFiber: resetCurrentFiber,
  setCurrentFiber: setCurrentFiber,
  setCurrentPhase: setCurrentPhase,
  getCurrentFiberOwnerName: getCurrentFiberOwnerName$1,
  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum$1
};

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0;

// A simple string attribute.
// Attributes that aren't in the whitelist are presumed to have this type.
var STRING = 1;

// A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.
var BOOLEANISH_STRING = 2;

// A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
var BOOLEAN = 3;

// An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.
var OVERLOADED_BOOLEAN = 4;

// An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.
var NUMERIC = 5;

// An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.
var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  {
    warning(false, 'Invalid attribute name: `%s`', attributeName);
  }
  return false;
}

function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }
  return false;
}

function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }
  switch (typeof value) {
    case 'function':
    // $FlowIssue symbol is perfectly valid here
    case 'symbol':
      // eslint-disable-line
      return true;
    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }
        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }
    default:
      return false;
  }
}

function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }
  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (propertyInfo !== null) {
    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;
      case OVERLOADED_BOOLEAN:
        return value === false;
      case NUMERIC:
        return isNaN(value);
      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }
  return false;
}

function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
}

// When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.
var properties = {};

// These props are reserved by React. They shouldn't be written to the DOM.
['children', 'dangerouslySetInnerHTML',
// TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.
[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];

  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.
['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// These are HTML boolean attributes.
['allowFullScreen', 'async',
// Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
// Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.
['checked',
// Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.
['capture', 'download'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be positive numbers.
['cols', 'rows', 'size', 'span'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be numbers.
['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize = function (token) {
  return token[1].toUpperCase();
};

// This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML whitelist.
// Some of these attributes can be hard to find. This list was created by
// scrapping the MDN documentation.
['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null);
} // attributeNamespace
);

// String SVG attributes with the xlink namespace.
['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink');
});

// String SVG attributes with the xml namespace.
['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace');
});

// Special case: this attribute exists both in HTML and SVG.
// Its "tabindex" attribute name is case-sensitive in SVG so we can't just use
// its React `tabIndex` name, like we do for attributes that exist only in HTML.
properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty
'tabindex', // attributeName
null);

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;

      return node[propertyName];
    } else {
      var attributeName = propertyInfo.attributeName;

      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);
          if (value === '') {
            return true;
          }
          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }
          if (value === '' + expected) {
            return expected;
          }
          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }
        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        }
        // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.
        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}

/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */
function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }
    var value = node.getAttribute(name);
    if (value === '' + expected) {
      return expected;
    }
    return value;
  }
}

/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */
function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);
  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }
  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  }
  // If the prop isn't in the special list, treat it as a simple attribute.
  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;
      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        node.setAttribute(_attributeName, '' + value);
      }
    }
    return;
  }
  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;

      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }
    return;
  }
  // The rest are treated as attributes with special cases.
  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;

    var attributeValue = void 0;
    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      attributeValue = '' + value;
    }
    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };

  var propTypes = {
    value: function (props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
  };
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */

function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}

function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getSafeValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}

function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;
  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}

function updateWrapper(element, props) {
  var node = element;
  {
    var _controlled = isControlled(props);

    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
      didWarnUncontrolledToControlled = true;
    }
    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);

  var value = getSafeValue(props.value);

  if (value != null) {
    if (props.type === 'number') {
      if (value === 0 && node.value === '' ||
      // eslint-disable-next-line
      node.value != value) {
        node.value = '' + value;
      }
    } else if (node.value !== '' + value) {
      node.value = '' + value;
    }
  }

  if (props.hasOwnProperty('value')) {
    setDefaultValue(node, props.type, value);
  } else if (props.hasOwnProperty('defaultValue')) {
    setDefaultValue(node, props.type, getSafeValue(props.defaultValue));
  }

  if (props.checked == null && props.defaultChecked != null) {
    node.defaultChecked = !!props.defaultChecked;
  }
}

function postMountWrapper(element, props) {
  var node = element;

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.
    if (node.value === '') {
      node.value = '' + node._wrapperState.initialValue;
    }

    // value must be assigned before defaultValue. This fixes an issue where the
    // visually displayed value of date inputs disappears on mobile Safari and Chrome:
    // https://github.com/facebook/react/issues/7233
    node.defaultValue = '' + node._wrapperState.initialValue;
  }

  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.
  var name = node.name;
  if (name !== '') {
    node.name = '';
  }
  node.defaultChecked = !node.defaultChecked;
  node.defaultChecked = !node.defaultChecked;
  if (name !== '') {
    node.name = name;
  }
}

function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

      // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set
      updateValueIfChanged(otherNode);

      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      updateWrapper(otherNode, otherProps);
    }
  }
}

// In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253
function setDefaultValue(node, type, value) {
  if (
  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || node.ownerDocument.activeElement !== node) {
    if (value == null) {
      node.defaultValue = '' + node._wrapperState.initialValue;
    } else if (node.defaultValue !== '' + value) {
      node.defaultValue = '' + value;
    }
  }
}

function getSafeValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;
    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var eventTypes$1 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
  event.type = 'change';
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  runEventsInBatch(event, false);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);
  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CHANGE) {
    return targetInst;
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === TOP_FOCUS) {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === TOP_BLUR) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CLICK) {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  setDefaultValue(node, 'number', node.value);
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes$1,

  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    var getTargetInstFunc = void 0,
        handleEventFunc = void 0;
    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === TOP_BLUR) {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

var SyntheticUIEvent = SyntheticEvent$1.extend({
  view: null,
  detail: null
});

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticMouseEvent = SyntheticUIEvent.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  }
});

/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */
var SyntheticPointerEvent = SyntheticMouseEvent.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tiltX: null,
  tiltY: null,
  pointerType: null,
  isPrimary: null
});

var eventTypes$2 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  pointerEnter: {
    registrationName: 'onPointerEnter',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  },
  pointerLeave: {
    registrationName: 'onPointerLeave',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$2,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }

    if (!isOutEvent && !isOverEvent) {
      // Must not be a mouse or pointer in or out - ignoring.
      return null;
    }

    var win = void 0;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from = void 0;
    var to = void 0;
    if (isOutEvent) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var eventInterface = void 0,
        leaveEventType = void 0,
        enterEventType = void 0,
        eventTypePrefix = void 0;

    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
      eventInterface = SyntheticMouseEvent;
      leaveEventType = eventTypes$2.mouseLeave;
      enterEventType = eventTypes$2.mouseEnter;
      eventTypePrefix = 'mouse';
    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
      eventInterface = SyntheticPointerEvent;
      leaveEventType = eventTypes$2.pointerLeave;
      enterEventType = eventTypes$2.pointerEnter;
      eventTypePrefix = 'pointer';
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);

    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
    leave.type = eventTypePrefix + 'leave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
    enter.type = eventTypePrefix + 'enter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */


function get(key) {
  return key._reactInternalFiber;
}

function has(key) {
  return key._reactInternalFiber !== undefined;
}

function set(key, value) {
  key._reactInternalFiber = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoEffect = /*              */0;
var PerformedWork = /*         */1;

// You can change the rest (and add more).
var Placement = /*             */2;
var Update = /*                */4;
var PlacementAndUpdate = /*    */6;
var Deletion = /*              */8;
var ContentReset = /*          */16;
var Callback = /*              */32;
var DidCapture = /*            */64;
var Ref = /*                   */128;
var Snapshot = /*              */256;

// Union of all host effects
var HostEffectMask = /*        */511;

var Incomplete = /*            */512;
var ShouldCapture = /*         */1024;

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node.return) {
      node = node.return;
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node.return) {
      node = node.return;
    }
  }
  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return MOUNTED;
  }
  // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.
  return UNMOUNTED;
}

function isFiberMounted(fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      !instance._warnedAboutRefsInRender ? warning(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component') : void 0;
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function assertIsMounted(fiber) {
  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var state = isFiberMountedImpl(fiber);
    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }
  // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.
  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a.return;
    var parentB = parentA ? parentA.alternate : null;
    if (!parentA || !parentB) {
      // We're at the root.
      break;
    }

    // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.
    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }
      // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.
      invariant(false, 'Unable to find node on an unmounted component.');
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
      }
    }

    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  }
  // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.
  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  }
  // Otherwise B has to be current branch.
  return alternate;
}

function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function addEventBubbleListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, false);
}

function addEventCaptureListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, true);
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var SyntheticAnimationEvent = SyntheticEvent$1.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var SyntheticClipboardEvent = SyntheticEvent$1.extend({
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticFocusEvent = SyntheticUIEvent.extend({
  relatedTarget: null
});

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode = void 0;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.
  if (charCode === 10) {
    charCode = 13;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
});

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticDragEvent = SyntheticMouseEvent.extend({
  dataTransfer: null
});

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var SyntheticTouchEvent = SyntheticUIEvent.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var SyntheticTransitionEvent = SyntheticEvent$1.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticWheelEvent = SyntheticMouseEvent.extend({
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },

  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
});

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: [TOP_ABORT],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = new Map([
 *   [TOP_ABORT, { sameConfig }],
 * ]);
 */

var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];

var eventTypes$4 = {};
var topLevelEventsToDispatchConfig = {};

function addEventTypeNameToConfig(_ref, isInteractive) {
  var topEvent = _ref[0],
      event = _ref[1];

  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent],
    isInteractive: isInteractive
  };
  eventTypes$4[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
}

interactiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, true);
});
nonInteractiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, false);
});

// Only used in DEV for exhaustiveness validation.
var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

var SimpleEventPlugin = {
  eventTypes: eventTypes$4,

  isInteractiveTopLevelEventType: function (topLevelType) {
    var config = topLevelEventsToDispatchConfig[topLevelType];
    return config !== undefined && config.isInteractive === true;
  },


  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor = void 0;
    switch (topLevelType) {
      case TOP_KEY_PRESS:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case TOP_BLUR:
      case TOP_FOCUS:
        EventConstructor = SyntheticFocusEvent;
        break;
      case TOP_CLICK:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case TOP_DOUBLE_CLICK:
      case TOP_MOUSE_DOWN:
      case TOP_MOUSE_MOVE:
      case TOP_MOUSE_UP:
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case TOP_MOUSE_OUT:
      case TOP_MOUSE_OVER:
      case TOP_CONTEXT_MENU:
        EventConstructor = SyntheticMouseEvent;
        break;
      case TOP_DRAG:
      case TOP_DRAG_END:
      case TOP_DRAG_ENTER:
      case TOP_DRAG_EXIT:
      case TOP_DRAG_LEAVE:
      case TOP_DRAG_OVER:
      case TOP_DRAG_START:
      case TOP_DROP:
        EventConstructor = SyntheticDragEvent;
        break;
      case TOP_TOUCH_CANCEL:
      case TOP_TOUCH_END:
      case TOP_TOUCH_MOVE:
      case TOP_TOUCH_START:
        EventConstructor = SyntheticTouchEvent;
        break;
      case TOP_ANIMATION_END:
      case TOP_ANIMATION_ITERATION:
      case TOP_ANIMATION_START:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case TOP_TRANSITION_END:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case TOP_SCROLL:
        EventConstructor = SyntheticUIEvent;
        break;
      case TOP_WHEEL:
        EventConstructor = SyntheticWheelEvent;
        break;
      case TOP_COPY:
      case TOP_CUT:
      case TOP_PASTE:
        EventConstructor = SyntheticClipboardEvent;
        break;
      case TOP_GOT_POINTER_CAPTURE:
      case TOP_LOST_POINTER_CAPTURE:
      case TOP_POINTER_CANCEL:
      case TOP_POINTER_DOWN:
      case TOP_POINTER_MOVE:
      case TOP_POINTER_OUT:
      case TOP_POINTER_OVER:
      case TOP_POINTER_UP:
        EventConstructor = SyntheticPointerEvent;
        break;
      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        }
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent$1;
        break;
    }
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;


var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst.return) {
    inst = inst.return;
  }
  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }
  return inst.stateNode.containerInfo;
}

// Used to store ancestor hierarchy in top level callback
function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }
  return {
    topLevelType: topLevelType,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;
  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevel(bookKeeping) {
  var targetInst = bookKeeping.targetInst;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    if (!ancestor) {
      bookKeeping.ancestors.push(ancestor);
      break;
    }
    var root = findRootContainerNode(ancestor);
    if (!root) {
      break;
    }
    bookKeeping.ancestors.push(ancestor);
    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

// TODO: can we stop exporting these?
var _enabled = true;

function setEnabled(enabled) {
  _enabled = !!enabled;
}

function isEnabled() {
  return _enabled;
}

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventBubbleListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventCaptureListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

function dispatchInteractiveEvent(topLevelType, nativeEvent) {
  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
}

function dispatchEvent(topLevelType, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
    // If we get an event (ex: img onload) before committing that
    // component's mount, ignore it for now (that is, treat it as if it was an
    // event on a non-React tree). We might also consider queueing events and
    // dispatching them after the mount.
    targetInst = null;
  }

  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedUpdates(handleTopLevel, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

var ReactDOMEventListener = Object.freeze({
	get _enabled () { return _enabled; },
	setEnabled: setEnabled,
	isEnabled: isEnabled,
	trapBubbledEvent: trapBubbledEvent,
	trapCapturedEvent: trapCapturedEvent,
	dispatchEvent: dispatchEvent
});

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var reactTopListenersCounter = 0;

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} mountAt Container where to mount the listener
 */
function listenTo(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      switch (dependency) {
        case TOP_SCROLL:
          trapCapturedEvent(TOP_SCROLL, mountAt);
          break;
        case TOP_FOCUS:
        case TOP_BLUR:
          trapCapturedEvent(TOP_FOCUS, mountAt);
          trapCapturedEvent(TOP_BLUR, mountAt);
          // We set the flag for a single dependency later in this function,
          // but this ensures we mark both as attached rather than just one.
          isListening[TOP_BLUR] = true;
          isListening[TOP_FOCUS] = true;
          break;
        case TOP_CANCEL:
        case TOP_CLOSE:
          if (isEventSupported(getRawEventName(dependency), true)) {
            trapCapturedEvent(dependency, mountAt);
          }
          break;
        case TOP_INVALID:
        case TOP_SUBMIT:
        case TOP_RESET:
          // We listen to them on the target DOM elements.
          // Some of them bubble so we don't want them to fire twice.
          break;
        default:
          // By default, listen on the top level to all non-media events.
          // Media events don't bubble so adding the listener wouldn't do anything.
          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
          if (!isMediaEvent) {
            trapBubbledEvent(dependency, mountAt);
          }
          break;
      }
      isListening[dependency] = true;
    }
  }
}

function isListeningToAllDependencies(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];
  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      return false;
    }
  }
  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */
function getOffsets(outerNode) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset;

  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}

/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */
function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }
      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      }
      // Moving from `node` to its first child `next`.
      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }
      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }
      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }
      if ((next = node.nextSibling) !== null) {
        break;
      }
      node = parentNode;
      parentNode = node.parentNode;
    }

    // Moving from `node` to its next sibling `next`.
    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
}

function getSelectionInformation() {
  var focusedElem = getActiveElement();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
  };
}

/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */
function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElement();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    }

    // Focusing a node can change the scroll position, which is undesirable
    var ancestors = [];
    var ancestor = priorFocusedElem;
    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    priorFocusedElem.focus();

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}

/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */
function getSelection$1(input) {
  var selection = void 0;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || { start: 0, end: 0 };
}

/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */
function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes$3 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
  }
};

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement$1);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;

    accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes$3,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
    // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.
    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case TOP_FOCUS:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }
        break;
      case TOP_BLUR:
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case TOP_MOUSE_DOWN:
        mouseDown = true;
        break;
      case TOP_CONTEXT_MENU:
      case TOP_MOUSE_UP:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case TOP_SELECTION_CHANGE:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */
injection.injectEventPluginOrder(DOMEventPluginOrder);
injection$1.injectComponentTree(ReactDOMComponentTree);

/**
 * Some important event plugins included by default (without having to require
 * them).
 */
injection.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

{
  if (ExecutionEnvironment.canUseDOM && typeof requestAnimationFrame !== 'function') {
    warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }
}

/**
 * A scheduling library to allow scheduling work with more granular priority and
 * control than requestAnimationFrame and requestIdleCallback.
 * Current TODO items:
 * X- Pull out the scheduleWork polyfill built into React
 * X- Initial test coverage
 * X- Support for multiple callbacks
 * - Support for two priorities; serial and deferred
 * - Better test coverage
 * - Better docblock
 * - Polish documentation, API
 */

// This is a built-in polyfill for requestIdleCallback. It works by scheduling
// a requestAnimationFrame, storing the time for the start of the frame, then
// scheduling a postMessage which gets scheduled after paint. Within the
// postMessage handler do as much work as possible until time + frame rate.
// By separating the idle call into a separate event tick we ensure that
// layout, paint and other browser work is counted against the available time.
// The frame rate is dynamically adjusted.

var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

var now$1 = void 0;
if (hasNativePerformanceNow) {
  now$1 = function () {
    return performance.now();
  };
} else {
  now$1 = function () {
    return Date.now();
  };
}

// TODO: There's no way to cancel, because Fiber doesn't atm.
var scheduleWork = void 0;
var cancelScheduledWork = void 0;

if (!ExecutionEnvironment.canUseDOM) {
  var callbackIdCounter = 0;
  // Timeouts are objects in Node.
  // For consistency, we'll use numbers in the public API anyway.
  var timeoutIds = {};

  scheduleWork = function (callback, options) {
    var callbackId = callbackIdCounter++;
    var timeoutId = setTimeout(function () {
      callback({
        timeRemaining: function () {
          return Infinity;
        },

        didTimeout: false
      });
    });
    timeoutIds[callbackId] = timeoutId;
    return callbackId;
  };
  cancelScheduledWork = function (callbackId) {
    var timeoutId = timeoutIds[callbackId];
    delete timeoutIds[callbackId];
    clearTimeout(timeoutId);
  };
} else {
  // We keep callbacks in a queue.
  // Calling scheduleWork will push in a new callback at the end of the queue.
  // When we get idle time, callbacks are removed from the front of the queue
  var pendingCallbacks = [];

  var _callbackIdCounter = 0;
  var getCallbackId = function () {
    _callbackIdCounter++;
    return _callbackIdCounter;
  };

  // When a callback is scheduled, we register it by adding it's id to this
  // object.
  // If the user calls 'cancelScheduledWork' with the id of that callback, it will be
  // unregistered by removing the id from this object.
  // Then we skip calling any callback which is not registered.
  // This means cancelling is an O(1) time complexity instead of O(n).
  var registeredCallbackIds = {};

  // We track what the next soonest timeoutTime is, to be able to quickly tell
  // if none of the scheduled callbacks have timed out.
  var nextSoonestTimeoutTime = -1;

  var isIdleScheduled = false;
  var isAnimationFrameScheduled = false;

  var frameDeadline = 0;
  // We start out assuming that we run at 30fps but then the heuristic tracking
  // will adjust this value to a faster fps if we get more frequent animation
  // frames.
  var previousFrameTime = 33;
  var activeFrameTime = 33;

  var frameDeadlineObject = {
    didTimeout: false,
    timeRemaining: function () {
      var remaining = frameDeadline - now$1();
      return remaining > 0 ? remaining : 0;
    }
  };

  var safelyCallScheduledCallback = function (callback, callbackId) {
    if (!registeredCallbackIds[callbackId]) {
      // ignore cancelled callbacks
      return;
    }
    try {
      callback(frameDeadlineObject);
      // Avoid using 'catch' to keep errors easy to debug
    } finally {
      // always clean up the callbackId, even if the callback throws
      delete registeredCallbackIds[callbackId];
    }
  };

  /**
   * Checks for timed out callbacks, runs them, and then checks again to see if
   * any more have timed out.
   * Keeps doing this until there are none which have currently timed out.
   */
  var callTimedOutCallbacks = function () {
    if (pendingCallbacks.length === 0) {
      return;
    }

    var currentTime = now$1();
    // TODO: this would be more efficient if deferred callbacks are stored in
    // min heap.
    // Or in a linked list with links for both timeoutTime order and insertion
    // order.
    // For now an easy compromise is the current approach:
    // Keep a pointer to the soonest timeoutTime, and check that first.
    // If it has not expired, we can skip traversing the whole list.
    // If it has expired, then we step through all the callbacks.
    if (nextSoonestTimeoutTime === -1 || nextSoonestTimeoutTime > currentTime) {
      // We know that none of them have timed out yet.
      return;
    }
    nextSoonestTimeoutTime = -1; // we will reset it below

    // keep checking until we don't find any more timed out callbacks
    frameDeadlineObject.didTimeout = true;
    for (var i = 0, len = pendingCallbacks.length; i < len; i++) {
      var currentCallbackConfig = pendingCallbacks[i];
      var _timeoutTime = currentCallbackConfig.timeoutTime;
      if (_timeoutTime !== -1 && _timeoutTime <= currentTime) {
        // it has timed out!
        // call it
        var _callback = currentCallbackConfig.scheduledCallback;
        safelyCallScheduledCallback(_callback, currentCallbackConfig.callbackId);
      } else {
        if (_timeoutTime !== -1 && (nextSoonestTimeoutTime === -1 || _timeoutTime < nextSoonestTimeoutTime)) {
          nextSoonestTimeoutTime = _timeoutTime;
        }
      }
    }
  };

  // We use the postMessage trick to defer idle work until after the repaint.
  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
  var idleTick = function (event) {
    if (event.source !== window || event.data !== messageKey) {
      return;
    }
    isIdleScheduled = false;

    if (pendingCallbacks.length === 0) {
      return;
    }

    // First call anything which has timed out, until we have caught up.
    callTimedOutCallbacks();

    var currentTime = now$1();
    // Next, as long as we have idle time, try calling more callbacks.
    while (frameDeadline - currentTime > 0 && pendingCallbacks.length > 0) {
      var latestCallbackConfig = pendingCallbacks.shift();
      frameDeadlineObject.didTimeout = false;
      var latestCallback = latestCallbackConfig.scheduledCallback;
      var newCallbackId = latestCallbackConfig.callbackId;
      safelyCallScheduledCallback(latestCallback, newCallbackId);
      currentTime = now$1();
    }
    if (pendingCallbacks.length > 0) {
      if (!isAnimationFrameScheduled) {
        // Schedule another animation callback so we retry later.
        isAnimationFrameScheduled = true;
        requestAnimationFrame(animationTick);
      }
    }
  };
  // Assumes that we have addEventListener in this environment. Might need
  // something better for old IE.
  window.addEventListener('message', idleTick, false);

  var animationTick = function (rafTime) {
    isAnimationFrameScheduled = false;
    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
      if (nextFrameTime < 8) {
        // Defensive coding. We don't support higher frame rates than 120hz.
        // If we get lower than that, it is probably a bug.
        nextFrameTime = 8;
      }
      // If one frame goes long, then the next one can be short to catch up.
      // If two frames are short in a row, then that's an indication that we
      // actually have a higher frame rate than what we're currently optimizing.
      // We adjust our heuristic dynamically accordingly. For example, if we're
      // running on 120hz display or 90hz VR display.
      // Take the max of the two in case one of them was an anomaly due to
      // missed frame deadlines.
      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
    } else {
      previousFrameTime = nextFrameTime;
    }
    frameDeadline = rafTime + activeFrameTime;
    if (!isIdleScheduled) {
      isIdleScheduled = true;
      window.postMessage(messageKey, '*');
    }
  };

  scheduleWork = function (callback, options) {
    var timeoutTime = -1;
    if (options != null && typeof options.timeout === 'number') {
      timeoutTime = now$1() + options.timeout;
    }
    if (nextSoonestTimeoutTime === -1 || timeoutTime !== -1 && timeoutTime < nextSoonestTimeoutTime) {
      nextSoonestTimeoutTime = timeoutTime;
    }

    var newCallbackId = getCallbackId();
    var scheduledCallbackConfig = {
      scheduledCallback: callback,
      callbackId: newCallbackId,
      timeoutTime: timeoutTime
    };
    pendingCallbacks.push(scheduledCallbackConfig);

    registeredCallbackIds[newCallbackId] = true;
    if (!isAnimationFrameScheduled) {
      // If rAF didn't already schedule one, we need to schedule a frame.
      // TODO: If this rAF doesn't materialize because the browser throttles, we
      // might want to still have setTimeout trigger scheduleWork as a backup to ensure
      // that we keep performing work.
      isAnimationFrameScheduled = true;
      requestAnimationFrame(animationTick);
    }
    return newCallbackId;
  };

  cancelScheduledWork = function (callbackId) {
    delete registeredCallbackIds[callbackId];
  };
}

var didWarnSelectedSetOnOption = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  // We can silently skip them because invalid DOM nesting warning
  // catches these cases in Fiber.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  // TODO (yungsters): Remove support for `selected` in <option>.
  {
    if (props.selected != null && !didWarnSelectedSetOnOption) {
      warning(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
      didWarnSelectedSetOnOption = true;
    }
  }
}

function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', props.value);
  }
}

function getHostProps$1(element, props) {
  var hostProps = _assign({ children: undefined }, props);
  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnValueDefaultValue$1 = void 0;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerName$3();
  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 */
function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$3);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};
    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }
    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }
      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = '' + propValue;
    var defaultSelected = null;
    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;
        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }
        return;
      }
      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }
    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */

function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}

function initWrapperState$1(element, props) {
  var node = element;
  {
    checkSelectPropTypes(props);
  }

  var value = props.value;
  node._wrapperState = {
    initialValue: value != null ? value : props.defaultValue,
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}

function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}

function postUpdateWrapper(element, props) {
  var node = element;
  // After the initial mount, we control selected-ness manually so don't pass
  // this value down
  node._wrapperState.initialValue = undefined;

  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;

  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}

function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */

function getHostProps$3(element, props) {
  var node = element;
  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

  // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.
  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: '' + node._wrapperState.initialValue
  });

  return hostProps;
}

function initWrapperState$2(element, props) {
  var node = element;
  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$4);
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value;

  // Only bother fetching default value if we're going to use it
  if (initialValue == null) {
    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      {
        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }
      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: '' + initialValue
  };
}

function updateWrapper$1(element, props) {
  var node = element;
  var value = props.value;
  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = '' + value;

    // To avoid side effects (such as losing text selection), only set value if changed
    if (newValue !== node.value) {
      node.value = newValue;
    }
    if (props.defaultValue == null) {
      node.defaultValue = newValue;
    }
  }
  if (props.defaultValue != null) {
    node.defaultValue = props.defaultValue;
  }
}

function postMountWrapper$3(element, props) {
  var node = element;
  // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.
  var textContent = node.textContent;

  // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
  if (textContent === node._wrapperState.initialValue) {
    node.value = textContent;
  }
}

function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
};

// Assumes there is no parent namespace.
function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;
    case 'math':
      return MATH_NAMESPACE;
    default:
      return HTML_NAMESPACE$1;
  }
}

function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }
  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  }
  // By default, pass namespace below.
  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer = void 0;

/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node

  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var warnValidStyle = emptyFunction;

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var warnHyphenatedStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
  };

  var warnBadVendoredStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
  };

  var warnStyleValueWithSemicolon = function (name, value, getStack) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
  };

  var warnStyleValueIsNaN = function (name, value, getStack) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  var warnStyleValueIsInfinity = function (name, value, getStack) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  warnValidStyle = function (name, value, getStack) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, getStack);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, getStack);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, getStack);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value, getStack);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value, getStack);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */
function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + hyphenateStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

        delimiter = ';';
      }
    }
    return serialized || null;
  }
}

/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */
function setValueForStyles(node, styles, getStack) {
  var style = node.style;
  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }
    var isCustomProperty = styleName.indexOf('--') === 0;
    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName], getStack);
      }
    }
    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
    if (styleName === 'float') {
      styleName = 'cssFloat';
    }
    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML$1 = '__html';

function assertValidProps(tag, props, getStack) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
  }
  {
    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack()) : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }
  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',

  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0, // state
  'aria-details': 0,
  'aria-disabled': 0, // state
  'aria-hidden': 0, // state
  'aria-invalid': 0, // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty = Object.prototype.hasOwnProperty;

function getStackAddendum() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperty(tagName, name) {
  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (correctName == null) {
      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== correctName) {
      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  } else if (invalidProps.length > 1) {
    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;

function getStackAddendum$1() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;
    if (type === 'select' && props.multiple) {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
    } else {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
    }
  }
}

function getStackAddendum$2() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();
    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    }

    // We can't rely on the event system being injected on the server.
    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }
      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
      if (registrationName != null) {
        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
      if (EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Let the ARIA attribute hook validate ARIA attributes
    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

    // Known attributes should match the casing specified in the property config.
    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];
      if (standardName !== name) {
        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
      } else {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Now that we've validated casing, do not validate
    // data types for reserved props
    if (isReserved) {
      return true;
    }

    // Warn when a known attribute is a bad type
    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];
  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');
  if (unknownProps.length === 1) {
    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  } else if (unknownProps.length > 1) {
    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;

var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML = '__html';

var HTML_NAMESPACE = Namespaces.html;


var getStack = emptyFunction.thatReturns('');

var warnedUnknownTags = void 0;
var suppressHydrationWarning = void 0;

var validatePropertiesInDevelopment = void 0;
var warnForTextDifference = void 0;
var warnForPropDifference = void 0;
var warnForExtraAttributes = void 0;
var warnForInvalidEventListener = void 0;

var normalizeMarkupForTextOrAttribute = void 0;
var normalizeHTML = void 0;

{
  getStack = getCurrentFiberStackAddendum$2;

  warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, /* canUseEventSystem */true);
  };

  // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.
  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
    if (normalizedServerText === normalizedClientText) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
    if (normalizedServerValue === normalizedClientValue) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warning(false, 'Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
    } else {
      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
    }
  };

  // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.
  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = emptyFunction;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = nextProps[propKey];
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      // Relies on `updateStylesByID` not mutating `styleUpdates`.
      setValueForStyles(domElement, nextProp, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // We polyfill it separately on the client during commit.
      // We blacklist it here rather than in the property list because we emit it in SSR.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];
    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement$1(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag = void 0;

  // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.
  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement = void 0;
  var namespaceURI = parentNamespace;
  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }
  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props);
      // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.
      !(isCustomComponentTag || type === type.toLowerCase()) ? warning(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');
      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.
      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, { is: props.is });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type);
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}

function createTextNode$1(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}

function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);
  {
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  var props = void 0;
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      props = rawProps;
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      props = rawProps;
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      props = rawProps;
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      props = rawProps;
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    default:
      props = rawProps;
  }

  assertValidProps(tag, props, getStack);

  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;
    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;
    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }
}

// Calculate the diff between the two objects.
function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;

  var lastProps = void 0;
  var nextProps = void 0;
  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;
    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;
      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  assertValidProps(tag, nextProps, getStack);

  var propKey = void 0;
  var styleName = void 0;
  var styleUpdates = null;
  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }
    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];
      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }
          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
      // Noop. This is handled by the clear text mechanism.
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }
  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = '';
          }
        }
        // Update styles that changed since `lastProp`.
        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }
          updatePayload.push(propKey, styleUpdates);
        }
        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;
      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
        }
      } else {
        // TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }
  if (styleUpdates) {
    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }
  return updatePayload;
}

// Apply the diff.
function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
  // Apply the diff.
  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

  // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.
  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;
    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;
    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();
    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }
    return possibleStandardNames[lowerCasedName] || null;
  }
  return null;
}

function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag = void 0;
  var extraAttributeNames = void 0;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps, getStack);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;
    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();
      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;
        case 'checked':
          break;
        case 'selected':
          break;
        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;
  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = rawProps[propKey];
    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (true &&
    // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);
      if (suppressHydrationWarning) {
        // Don't bother comparing. We're ignoring all these warnings.
      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
      // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
        // Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
        var serverHTML = domElement.innerHTML;
        var expectedHTML = normalizeHTML(domElement, rawHtml);
        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);
        var expectedStyle = createDangerousStringForStyles(nextProp);
        serverValue = domElement.getAttribute('style');
        if (expectedStyle !== serverValue) {
          warnForPropDifference(propKey, serverValue, expectedStyle);
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;
        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;
          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }
          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);
            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true;
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(standardName);
            }
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);
          }
          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;
    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  return updatePayload;
}

function diffHydratedText$1(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}

function warnForUnmatchedText$1(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}

function warnForDeletedHydratableElement$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}

function warnForDeletedHydratableText$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedElement$1(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedText$1(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}

function restoreControlledState$1(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;
    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;
    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}

var ReactDOMFiberComponent = Object.freeze({
	createElement: createElement$1,
	createTextNode: createTextNode$1,
	setInitialProperties: setInitialProperties$1,
	diffProperties: diffProperties$1,
	updateProperties: updateProperties$1,
	diffHydratedProperties: diffHydratedProperties$1,
	diffHydratedText: diffHydratedText$1,
	warnForUnmatchedText: warnForUnmatchedText$1,
	warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
	warnForDeletedHydratableText: warnForDeletedHydratableText$1,
	warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
	warnForInsertedHydratedText: warnForInsertedHydratedText$1,
	restoreControlledState: restoreControlledState$1
});

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var validateDOMNesting = emptyFunction;

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      !(childTag == null) ? warning(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;
    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackAddendum$5();

    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
    if (didWarn[warnKey]) {
      return;
    }
    didWarn[warnKey] = true;

    var tagDisplayName = childTag;
    var whitespaceInfo = '';
    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';
      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
      }
      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };

  // TODO: turn this into a named export
  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;
}

var validateDOMNesting$1 = validateDOMNesting;

// Renderers that don't support persistence
// can re-export everything from this module.

function shim() {
  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
}

// Persistence (when unsupported)
var supportsPersistence = false;
var cloneInstance = shim;
var createContainerChildSet = shim;
var appendChildToContainerChildSet = shim;
var finalizeContainerChildren = shim;
var replaceContainerChildren = shim;

// Unused

var createElement = createElement$1;
var createTextNode = createTextNode$1;
var setInitialProperties = setInitialProperties$1;
var diffProperties = diffProperties$1;
var updateProperties = updateProperties$1;
var diffHydratedProperties = diffHydratedProperties$1;
var diffHydratedText = diffHydratedText$1;
var warnForUnmatchedText = warnForUnmatchedText$1;
var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
var precacheFiberNode$1 = precacheFiberNode;
var updateFiberProps$1 = updateFiberProps;


var SUPPRESS_HYDRATION_WARNING = void 0;
{
  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
}

var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }
  return false;
}

function getRootHostContext(rootContainerInstance) {
  var type = void 0;
  var namespace = void 0;
  var nodeType = rootContainerInstance.nodeType;
  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }
    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }
  {
    var validatedTag = type.toLowerCase();
    var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
    return { namespace: namespace, ancestorInfo: _ancestorInfo };
  }
  return namespace;
}

function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
  }
  var parentNamespace = parentHostContext;
  return getChildNamespace(parentNamespace, type);
}

function getPublicInstance(instance) {
  return instance;
}

function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  setEnabled(false);
}

function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  selectionInformation = null;
  setEnabled(eventsEnabled);
  eventsEnabled = null;
}

function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace = void 0;
  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
      validateDOMNesting$1(null, string, ownAncestorInfo);
    }
    parentNamespace = hostContextDev.namespace;
  }
  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode$1(internalInstanceHandle, domElement);
  updateFiberProps$1(domElement, props);
  return domElement;
}

function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}

function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;
    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
      validateDOMNesting$1(null, string, ownAncestorInfo);
    }
  }
  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
}

function shouldSetTextContent(type, props) {
  return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
}

function shouldDeprioritizeSubtree(type, props) {
  return !!props.hidden;
}

function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
  }
  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode$1(internalInstanceHandle, textNode);
  return textNode;
}

var now = now$1;
var isPrimaryRenderer = true;
var scheduleDeferredCallback = scheduleWork;
var cancelDeferredCallback = cancelScheduledWork;

// -------------------
//     Mutation
// -------------------

var supportsMutation = true;

function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}

function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps$1(domElement, newProps);
  // Apply the diff to the DOM node.
  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}

function resetTextContent(domElement) {
  setTextContent(domElement, '');
}

function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}

function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function appendChildToContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, container);
  } else {
    container.appendChild(child);
  }
}

function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}

function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}

function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}

// -------------------
//     Hydration
// -------------------

var supportsHydration = true;

function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  }
  // This has now been refined to an element node.
  return instance;
}

function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  }
  // This has now been refined to a text node.
  return instance;
}

function getNextHydratableSibling(instance) {
  var node = instance.nextSibling;
  // Skip non-hydratable nodes.
  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
    node = node.nextSibling;
  }
  return node;
}

function getFirstHydratableChild(parentInstance) {
  var next = parentInstance.firstChild;
  // Skip non-hydratable nodes.
  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
    next = next.nextSibling;
  }
  return next;
}

function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode$1(internalInstanceHandle, instance);
  // TODO: Possibly defer this until the commit phase where all the events
  // get attached.
  updateFiberProps$1(instance, props);
  var parentNamespace = void 0;
  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }
  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
}

function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode$1(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}

function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === 1) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}

function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    if (instance.nodeType === 1) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}

function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type, props);
  }
}

function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}

function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedElement(parentInstance, type, props);
  }
}

function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}

// Exports ReactDOM.createRoot
var enableUserTimingAPI = true;

// Experimental error-boundary API that can recover from errors within a single
// render phase
var enableGetDerivedStateFromCatch = false;
// Suspense
var enableSuspense = false;
// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
var debugRenderPhaseSideEffects = false;

// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:
var debugRenderPhaseSideEffectsForStrictMode = true;

// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.
var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
var warnAboutDeprecatedLifecycles = false;

// Warn about legacy context API
var warnAboutLegacyContextAPI = false;

// Gather advanced timing metrics for Profiler subtrees.
var enableProfilerTimer = true;

// Fires getDerivedStateFromProps for state *or* props changes
var fireGetDerivedStateFromPropsOnStateUpdates = true;

// Only used in www builds.

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = '\u269B';
var warningEmoji = '\u26D4';
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

// Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
var currentFiber = null;
// If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).
var currentPhase = null;
var currentPhaseFiber = null;
// Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.
var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
var isWaitingForCallback = false;
// During commits, we only show a measurement once per method name
// to avoid stretch the commit phase with measurement overhead.
var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + ' ' + markName;
};

var formatLabel = function (label, warning$$1) {
  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
  return '' + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning$$1) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning$$1);
  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {}
  // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.

  // Clear marks immediately to avoid growing buffer.
  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + ' (#' + debugID + ')';
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
  } else {
    // Composite component methods.
    return componentName + '.' + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }
  labelsInCurrentCommit.add(label);

  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning$$1) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning$$1);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
    case Mode:
      return true;
    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }
  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;
  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }
    fiber = fiber.return;
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber.return !== null) {
    resumeTimersRecursively(fiber.return);
  }
  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}

function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }
    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}

function startRequestCallbackTimer() {
  if (enableUserTimingAPI) {
    if (supportsUserTiming && !isWaitingForCallback) {
      isWaitingForCallback = true;
      beginMark('(Waiting for async callback...)');
    }
  }
}

function stopRequestCallbackTimer(didExpire, expirationTime) {
  if (enableUserTimingAPI) {
    if (supportsUserTiming) {
      isWaitingForCallback = false;
      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning$$1);
    }
  }
}

function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, this is the fiber to unwind from.
    currentFiber = fiber;
    if (!beginFiberMark(fiber, null)) {
      return;
    }
    fiber._debugIsCurrentlyTiming = true;
  }
}

function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.
    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}

function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}

function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    var warning$$1 = 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning$$1);
  }
}

function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    clearPendingPhaseMeasurement();
    if (!beginFiberMark(fiber, phase)) {
      return;
    }
    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}

function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
    }
    currentPhase = null;
    currentPhaseFiber = null;
  }
}

function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;
    if (!supportsUserTiming) {
      return;
    }
    commitCountInCurrentWorkLoop = 0;
    // This is top level call.
    // Any other measurements are performed within.
    beginMark('(React Tree Reconciliation)');
    // Resume any measurements that were in progress during the last loop.
    resumeTimers();
  }
}

function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var warning$$1 = null;
    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning$$1 = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy) || 'Unknown';
        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning$$1 = 'There were cascading updates';
    }
    commitCountInCurrentWorkLoop = 0;
    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
    // Pause any measurements until the next loop.
    pauseTimers();
    endMark(label, '(React Tree Reconciliation)', warning$$1);
  }
}

function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}

function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning$$1 = null;
    if (hasScheduledUpdateInCurrentCommit) {
      warning$$1 = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning$$1 = 'Caused by a cascading update in earlier commit';
    }
    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();

    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
  }
}

function startCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Snapshot Effects)');
  }
}

function stopCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
  }
}

function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}

function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
  }
}

function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}

function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
  }
}

var valueStack = [];

var fiberStack = void 0;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      warning(false, 'Unexpected pop.');
    }
    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warning(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

function checkThatStackIsEmpty() {
  {
    if (index !== -1) {
      warning(false, 'Expected an empty stack. Something was not reset properly.');
    }
  }
}

function resetStackAfterFatalErrorInDev() {
  {
    index = -1;
    valueStack.length = 0;
    fiberStack.length = 0;
  }
}

var warnedAboutMissingGetChildContext = void 0;

{
  warnedAboutMissingGetChildContext = {};
}

// A cursor to the current merged context object on the stack.
var contextStackCursor = createCursor(emptyObject);
// A cursor to a boolean indicating whether the context has changed.
var didPerformWorkStackCursor = createCursor(false);
// Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.
var previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
  var hasOwnContext = isContextProvider(workInProgress);
  if (hasOwnContext) {
    // If the fiber is a context provider itself, when we read its context
    // we have already pushed its own child context on the stack. A context
    // provider should not "see" its own child context. Therefore we read the
    // previous (parent) context instead for a context provider.
    return previousContext;
  }
  return contextStackCursor.current;
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  var instance = workInProgress.stateNode;
  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

function getMaskedContext(workInProgress, unmaskedContext) {
  var type = workInProgress.type;
  var contextTypes = type.contextTypes;
  if (!contextTypes) {
    return emptyObject;
  }

  // Avoid recreating masked context unless unmasked context has changed.
  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
  // This may trigger infinite loops if componentWillReceiveProps calls setState.
  var instance = workInProgress.stateNode;
  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
    return instance.__reactInternalMemoizedMaskedChildContext;
  }

  var context = {};
  for (var key in contextTypes) {
    context[key] = unmaskedContext[key];
  }

  {
    var name = getComponentName(workInProgress) || 'Unknown';
    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // Context is created before the class component is instantiated so check for instance.
  if (instance) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return context;
}

function hasContextChanged() {
  return didPerformWorkStackCursor.current;
}

function isContextConsumer(fiber) {
  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
}

function isContextProvider(fiber) {
  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
}

function popContextProvider(fiber) {
  if (!isContextProvider(fiber)) {
    return;
  }

  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function popTopLevelContextObject(fiber) {
  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function pushTopLevelContextObject(fiber, context, didChange) {
  !(contextStackCursor.current === emptyObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  push(contextStackCursor, context, fiber);
  push(didPerformWorkStackCursor, didChange, fiber);
}

function processChildContext(fiber, parentContext) {
  var instance = fiber.stateNode;
  var childContextTypes = fiber.type.childContextTypes;

  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
  if (typeof instance.getChildContext !== 'function') {
    {
      var componentName = getComponentName(fiber) || 'Unknown';

      if (!warnedAboutMissingGetChildContext[componentName]) {
        warnedAboutMissingGetChildContext[componentName] = true;
        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
      }
    }
    return parentContext;
  }

  var childContext = void 0;
  {
    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
  }
  startPhaseTimer(fiber, 'getChildContext');
  childContext = instance.getChildContext();
  stopPhaseTimer();
  {
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  for (var contextKey in childContext) {
    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
  }
  {
    var name = getComponentName(fiber) || 'Unknown';
    checkPropTypes(childContextTypes, childContext, 'child context', name,
    // In practice, there is one case in which we won't get a stack. It's when
    // somebody calls unstable_renderSubtreeIntoContainer() and we process
    // context from the parent component instance. The stack will be missing
    // because it's outside of the reconciliation, and so the pointer has not
    // been set. This is rare and doesn't matter. We'll also remove that API.
    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  return _assign({}, parentContext, childContext);
}

function pushContextProvider(workInProgress) {
  if (!isContextProvider(workInProgress)) {
    return false;
  }

  var instance = workInProgress.stateNode;
  // We push the context as early as possible to ensure stack integrity.
  // If the instance does not exist yet, we will push null at first,
  // and replace it on the stack later when invalidating the context.
  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

  // Remember the parent context so we can merge with it later.
  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
  previousContext = contextStackCursor.current;
  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

  return true;
}

function invalidateContextProvider(workInProgress, didChange) {
  var instance = workInProgress.stateNode;
  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  if (didChange) {
    // Merge parent and own context.
    // Skip this if we're not updating due to sCU.
    // This avoids unnecessarily recomputing memoized values.
    var mergedContext = processChildContext(workInProgress, previousContext);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

    // Replace the old (or empty) context with the new one.
    // It is important to unwind the context in the reverse order.
    pop(didPerformWorkStackCursor, workInProgress);
    pop(contextStackCursor, workInProgress);
    // Now push the new context and mark that it has changed.
    push(contextStackCursor, mergedContext, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  } else {
    pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }
}

function findCurrentUnmaskedContext(fiber) {
  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
  // makes sense elsewhere
  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  var node = fiber;
  while (node.tag !== HostRoot) {
    if (isContextProvider(node)) {
      return node.stateNode.__reactInternalMemoizedMergedChildContext;
    }
    var parent = node.return;
    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    node = parent;
  }
  return node.stateNode.context;
}

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

// TODO: Use an opaque type once ESLint et al support the syntax


var NoWork = 0;
var Sync = 1;
var Never = MAX_SIGNED_31_BIT_INT;

var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = 2;

// 1 unit of expiration time represents 10ms.
function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
}

function expirationTimeToMs(expirationTime) {
  return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return MAGIC_NUMBER_OFFSET + ceiling(currentTime - MAGIC_NUMBER_OFFSET + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
}

var NoContext = 0;
var AsyncMode = 1;
var StrictMode = 2;
var ProfileMode = 4;

var hasBadMapPolyfill = void 0;

{
  hasBadMapPolyfill = false;
  try {
    var nonExtensibleObject = Object.preventExtensions({});
    var testMap = new Map([[nonExtensibleObject, null]]);
    var testSet = new Set([nonExtensibleObject]);
    // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.
    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

// A Fiber is work on a Component that needs to be done or was done. There can
// be more than one per component.


var debugCounter = void 0;

{
  debugCounter = 1;
}

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.type = null;
  this.stateNode = null;

  // Fiber
  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;

  this.ref = null;

  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;

  this.mode = mode;

  // Effects
  this.effectTag = NoEffect;
  this.nextEffect = null;

  this.firstEffect = null;
  this.lastEffect = null;

  this.expirationTime = NoWork;

  this.alternate = null;

  if (enableProfilerTimer) {
    this.selfBaseTime = 0;
    this.treeBaseTime = 0;
  }

  {
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugIsCurrentlyTiming = false;
    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
}

// This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.
var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

// This is used to create an alternate fiber to do work on.
function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;
  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps;

    // We already have an alternate.
    // Reset the effect tag.
    workInProgress.effectTag = NoEffect;

    // The effect list is no longer valid.
    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;
  }

  workInProgress.expirationTime = expirationTime;

  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;

  // These will be overridden during the parent's reconciliation
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  if (enableProfilerTimer) {
    workInProgress.selfBaseTime = current.selfBaseTime;
    workInProgress.treeBaseTime = current.treeBaseTime;
  }

  return workInProgress;
}

function createHostRootFiber(isAsync) {
  var mode = isAsync ? AsyncMode | StrictMode : NoContext;
  return createFiber(HostRoot, null, null, mode);
}

function createFiberFromElement(element, mode, expirationTime) {
  var owner = null;
  {
    owner = element._owner;
  }

  var fiber = void 0;
  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;

  var fiberTag = void 0;
  if (typeof type === 'function') {
    fiberTag = shouldConstruct(type) ? ClassComponent : IndeterminateComponent;
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
      case REACT_ASYNC_MODE_TYPE:
        fiberTag = Mode;
        mode |= AsyncMode | StrictMode;
        break;
      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;
      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
      case REACT_TIMEOUT_TYPE:
        fiberTag = TimeoutComponent;
        // Suspense does not require async, but its children should be strict
        // mode compatible.
        mode |= StrictMode;
        break;
      default:
        fiberTag = getFiberTagFromObjectType(type, owner);
        break;
    }
  }

  fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.type = type;
  fiber.expirationTime = expirationTime;

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}

function getFiberTagFromObjectType(type, owner) {
  var $$typeof = typeof type === 'object' && type !== null ? type.$$typeof : null;

  switch ($$typeof) {
    case REACT_PROVIDER_TYPE:
      return ContextProvider;
    case REACT_CONTEXT_TYPE:
      // This is a consumer
      return ContextConsumer;
    case REACT_FORWARD_REF_TYPE:
      return ForwardRef;
    default:
      {
        var info = '';
        {
          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
          }
          var ownerName = owner ? getComponentName(owner) : null;
          if (ownerName) {
            info += '\n\nCheck the render method of `' + ownerName + '`.';
          }
        }
        invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
      }
  }
}

function createFiberFromFragment(elements, mode, expirationTime, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
  {
    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
      invariant(false, 'Profiler must specify an "id" string and "onRender" function as props');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
  fiber.type = REACT_PROFILER_TYPE;
  fiber.expirationTime = expirationTime;
  if (enableProfilerTimer) {
    fiber.stateNode = {
      elapsedPauseTimeAtStart: 0,
      duration: 0,
      startTime: 0
    };
  }

  return fiber;
}

function createFiberFromText(content, mode, expirationTime) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoContext);
  fiber.type = 'DELETED';
  return fiber;
}

function createFiberFromPortal(portal, mode, expirationTime) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null, // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
}

// Used for stashing WIP properties to replay failed work in DEV.
function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoContext);
  }

  // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.

  target.tag = source.tag;
  target.key = source.key;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.mode = source.mode;
  target.effectTag = source.effectTag;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.expirationTime = source.expirationTime;
  target.alternate = source.alternate;
  if (enableProfilerTimer) {
    target.selfBaseTime = source.selfBaseTime;
    target.treeBaseTime = source.treeBaseTime;
  }
  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
  return target;
}

// TODO: This should be lifted into the renderer.


function createFiberRoot(containerInfo, isAsync, hydrate) {
  // Cyclic construction. This cheats the type system right now because
  // stateNode is any.
  var uninitializedFiber = createHostRootFiber(isAsync);
  var root = {
    current: uninitializedFiber,
    containerInfo: containerInfo,
    pendingChildren: null,

    earliestPendingTime: NoWork,
    latestPendingTime: NoWork,
    earliestSuspendedTime: NoWork,
    latestSuspendedTime: NoWork,
    latestPingedTime: NoWork,

    pendingCommitExpirationTime: NoWork,
    finishedWork: null,
    context: null,
    pendingContext: null,
    hydrate: hydrate,
    remainingExpirationTime: NoWork,
    firstBatch: null,
    nextScheduledRoot: null
  };
  uninitializedFiber.stateNode = root;
  return root;
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;

function catchErrors(fn) {
  return function (arg) {
    try {
      return fn(arg);
    } catch (err) {
      if (true && !hasLoggedError) {
        hasLoggedError = true;
        warning(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };
}

function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }
  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }
  if (!hook.supportsFiber) {
    {
      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    }
    // DevTools exists, even though it doesn't support Fiber.
    return true;
  }
  try {
    var rendererID = hook.inject(internals);
    // We have successfully injected, so now it is safe to set up hooks.
    onCommitFiberRoot = catchErrors(function (root) {
      return hook.onCommitFiberRoot(rendererID, root);
    });
    onCommitFiberUnmount = catchErrors(function (fiber) {
      return hook.onCommitFiberUnmount(rendererID, fiber);
    });
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warning(false, 'React DevTools encountered an error: %s.', err);
    }
  }
  // DevTools exists
  return true;
}

function onCommitRoot(root) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root);
  }
}

function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var ReactStrictModeWarnings = {
  discardPendingWarnings: function () {},
  flushPendingDeprecationWarnings: function () {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordDeprecationWarnings: function (fiber, instance) {},
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {}
};

{
  var LIFECYCLE_SUGGESTIONS = {
    UNSAFE_componentWillMount: 'componentDidMount',
    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
    UNSAFE_componentWillUpdate: 'componentDidUpdate'
  };

  var pendingComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUnsafeLifecycleWarnings = new Map();
  var pendingLegacyContextWarning = new Map();

  // Tracks components we have already warned about.
  var didWarnAboutDeprecatedLifecycles = new Set();
  var didWarnAboutUnsafeLifecycles = new Set();
  var didWarnAboutLegacyContext = new Set();

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUnsafeLifecycleWarnings = new Map();
    pendingLegacyContextWarning = new Map();
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
      var lifecyclesWarningMesages = [];

      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
        if (lifecycleWarnings.length > 0) {
          var componentNames = new Set();
          lifecycleWarnings.forEach(function (fiber) {
            componentNames.add(getComponentName(fiber) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });

          var formatted = lifecycle.replace('UNSAFE_', '');
          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
          var sortedComponentNames = setToSortedString(componentNames);

          lifecyclesWarningMesages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
        }
      });

      if (lifecyclesWarningMesages.length > 0) {
        var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

        warning(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMesages.join('\n\n'));
      }
    });

    pendingUnsafeLifecycleWarnings = new Map();
  };

  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;

    var node = fiber;
    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }
      node = node.return;
    }

    return maybeStrictRoot;
  };

  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
    if (pendingComponentWillMountWarnings.length > 0) {
      var uniqueNames = new Set();
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);

      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);

      pendingComponentWillMountWarnings = [];
    }

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      var _uniqueNames = new Set();
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        _uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames = setToSortedString(_uniqueNames);

      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);

      pendingComponentWillReceivePropsWarnings = [];
    }

    if (pendingComponentWillUpdateWarnings.length > 0) {
      var _uniqueNames2 = new Set();
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        _uniqueNames2.add(getComponentName(fiber) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames2 = setToSortedString(_uniqueNames2);

      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);

      pendingComponentWillUpdateWarnings = [];
    }
  };

  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
      return;
    }

    // Don't warn about react-lifecycles-compat polyfilled components.
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    // This is difficult to track any other way since component names
    // are often vague and are likely to collide between 3rd party libraries.
    // An expand property is probably okay to use here since it's DEV-only,
    // and will only be set in the event of serious warnings.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    var warningsForRoot = void 0;
    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
      warningsForRoot = {
        UNSAFE_componentWillMount: [],
        UNSAFE_componentWillReceiveProps: [],
        UNSAFE_componentWillUpdate: []
      };

      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
    } else {
      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
    }

    var unsafeLifecycles = [];
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillMount');
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillUpdate');
    }

    if (unsafeLifecycles.length > 0) {
      unsafeLifecycles.forEach(function (lifecycle) {
        warningsForRoot[lifecycle].push(fiber);
      });
    }
  };

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }
      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);
      var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

      warning(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
    });
  };
}

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};

var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

// TODO: Offscreen updates

function markPendingPriorityLevel(root, expirationTime) {
  if (enableSuspense) {
    // Update the latest and earliest pending times
    var earliestPendingTime = root.earliestPendingTime;
    if (earliestPendingTime === NoWork) {
      // No other pending updates.
      root.earliestPendingTime = root.latestPendingTime = expirationTime;
    } else {
      if (earliestPendingTime > expirationTime) {
        // This is the earliest pending update.
        root.earliestPendingTime = expirationTime;
      } else {
        var latestPendingTime = root.latestPendingTime;
        if (latestPendingTime < expirationTime) {
          // This is the latest pending update
          root.latestPendingTime = expirationTime;
        }
      }
    }
  }
}

function markCommittedPriorityLevels(root, currentTime, earliestRemainingTime) {
  if (enableSuspense) {
    if (earliestRemainingTime === NoWork) {
      // Fast path. There's no remaining work. Clear everything.
      root.earliestPendingTime = NoWork;
      root.latestPendingTime = NoWork;
      root.earliestSuspendedTime = NoWork;
      root.latestSuspendedTime = NoWork;
      root.latestPingedTime = NoWork;
      return;
    }

    // Let's see if the previous latest known pending level was just flushed.
    var latestPendingTime = root.latestPendingTime;
    if (latestPendingTime !== NoWork) {
      if (latestPendingTime < earliestRemainingTime) {
        // We've flushed all the known pending levels.
        root.earliestPendingTime = root.latestPendingTime = NoWork;
      } else {
        var earliestPendingTime = root.earliestPendingTime;
        if (earliestPendingTime < earliestRemainingTime) {
          // We've flushed the earliest known pending level. Set this to the
          // latest pending time.
          root.earliestPendingTime = root.latestPendingTime;
        }
      }
    }

    // Now let's handle the earliest remaining level in the whole tree. We need to
    // decide whether to treat it as a pending level or as suspended. Check
    // it falls within the range of known suspended levels.

    var earliestSuspendedTime = root.earliestSuspendedTime;
    if (earliestSuspendedTime === NoWork) {
      // There's no suspended work. Treat the earliest remaining level as a
      // pending level.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    var latestSuspendedTime = root.latestSuspendedTime;
    if (earliestRemainingTime > latestSuspendedTime) {
      // The earliest remaining level is later than all the suspended work. That
      // means we've flushed all the suspended work.
      root.earliestSuspendedTime = NoWork;
      root.latestSuspendedTime = NoWork;
      root.latestPingedTime = NoWork;

      // There's no suspended work. Treat the earliest remaining level as a
      // pending level.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    if (earliestRemainingTime < earliestSuspendedTime) {
      // The earliest remaining time is earlier than all the suspended work.
      // Treat it as a pending update.
      markPendingPriorityLevel(root, earliestRemainingTime);
      return;
    }

    // The earliest remaining time falls within the range of known suspended
    // levels. We should treat this as suspended work.
  }
}

function markSuspendedPriorityLevel(root, suspendedTime) {
  if (enableSuspense) {
    // First, check the known pending levels and update them if needed.
    var earliestPendingTime = root.earliestPendingTime;
    var latestPendingTime = root.latestPendingTime;
    if (earliestPendingTime === suspendedTime) {
      if (latestPendingTime === suspendedTime) {
        // Both known pending levels were suspended. Clear them.
        root.earliestPendingTime = root.latestPendingTime = NoWork;
      } else {
        // The earliest pending level was suspended. Clear by setting it to the
        // latest pending level.
        root.earliestPendingTime = latestPendingTime;
      }
    } else if (latestPendingTime === suspendedTime) {
      // The latest pending level was suspended. Clear by setting it to the
      // latest pending level.
      root.latestPendingTime = earliestPendingTime;
    }

    // Next, if we're working on the lowest known suspended level, clear the ping.
    // TODO: What if a promise suspends and pings before the root completes?
    var latestSuspendedTime = root.latestSuspendedTime;
    if (latestSuspendedTime === suspendedTime) {
      root.latestPingedTime = NoWork;
    }

    // Finally, update the known suspended levels.
    var earliestSuspendedTime = root.earliestSuspendedTime;
    if (earliestSuspendedTime === NoWork) {
      // No other suspended levels.
      root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
    } else {
      if (earliestSuspendedTime > suspendedTime) {
        // This is the earliest suspended level.
        root.earliestSuspendedTime = suspendedTime;
      } else if (latestSuspendedTime < suspendedTime) {
        // This is the latest suspended level
        root.latestSuspendedTime = suspendedTime;
      }
    }
  }
}

function markPingedPriorityLevel(root, pingedTime) {
  if (enableSuspense) {
    var latestSuspendedTime = root.latestSuspendedTime;
    if (latestSuspendedTime !== NoWork && latestSuspendedTime <= pingedTime) {
      var latestPingedTime = root.latestPingedTime;
      if (latestPingedTime === NoWork || latestPingedTime < pingedTime) {
        root.latestPingedTime = pingedTime;
      }
    }
  }
}

function findNextPendingPriorityLevel(root) {
  if (enableSuspense) {
    var earliestSuspendedTime = root.earliestSuspendedTime;
    var earliestPendingTime = root.earliestPendingTime;
    if (earliestSuspendedTime === NoWork) {
      // Fast path. There's no suspended work.
      return earliestPendingTime;
    }

    // First, check if there's known pending work.
    if (earliestPendingTime !== NoWork) {
      return earliestPendingTime;
    }

    // Finally, if a suspended level was pinged, work on that. Otherwise there's
    // nothing to work on.
    return root.latestPingedTime;
  } else {
    return root.current.expirationTime;
  }
}

// UpdateQueue is a linked list of prioritized updates.
//
// Like fibers, update queues come in pairs: a current queue, which represents
// the visible state of the screen, and a work-in-progress queue, which is
// can be mutated and processed asynchronously before it is committed — a form
// of double buffering. If a work-in-progress render is discarded before
// finishing, we create a new work-in-progress by cloning the current queue.
//
// Both queues share a persistent, singly-linked list structure. To schedule an
// update, we append it to the end of both queues. Each queue maintains a
// pointer to first update in the persistent list that hasn't been processed.
// The work-in-progress pointer always has a position equal to or greater than
// the current queue, since we always work on that one. The current queue's
// pointer is only updated during the commit phase, when we swap in the
// work-in-progress.
//
// For example:
//
//   Current pointer:           A - B - C - D - E - F
//   Work-in-progress pointer:              D - E - F
//                                          ^
//                                          The work-in-progress queue has
//                                          processed more updates than current.
//
// The reason we append to both queues is because otherwise we might drop
// updates without ever processing them. For example, if we only add updates to
// the work-in-progress queue, some updates could be lost whenever a work-in
// -progress render restarts by cloning from current. Similarly, if we only add
// updates to the current queue, the updates will be lost whenever an already
// in-progress queue commits and swaps with the current queue. However, by
// adding to both queues, we guarantee that the update will be part of the next
// work-in-progress. (And because the work-in-progress queue becomes the
// current queue once it commits, there's no danger of applying the same
// update twice.)
//
// Prioritization
// --------------
//
// Updates are not sorted by priority, but by insertion; new updates are always
// appended to the end of the list.
//
// The priority is still important, though. When processing the update queue
// during the render phase, only the updates with sufficient priority are
// included in the result. If we skip an update because it has insufficient
// priority, it remains in the queue to be processed later, during a lower
// priority render. Crucially, all updates subsequent to a skipped update also
// remain in the queue *regardless of their priority*. That means high priority
// updates are sometimes processed twice, at two separate priorities. We also
// keep track of a base state, that represents the state before the first
// update in the queue is applied.
//
// For example:
//
//   Given a base state of '', and the following queue of updates
//
//     A1 - B2 - C1 - D2
//
//   where the number indicates the priority, and the update is applied to the
//   previous state by appending a letter, React will process these updates as
//   two separate renders, one per distinct priority level:
//
//   First render, at priority 1:
//     Base state: ''
//     Updates: [A1, C1]
//     Result state: 'AC'
//
//   Second render, at priority 2:
//     Base state: 'A'            <-  The base state does not include C1,
//                                    because B2 was skipped.
//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
//     Result state: 'ABCD'
//
// Because we process updates in insertion order, and rebase high priority
// updates when preceding updates are skipped, the final result is deterministic
// regardless of priority. Intermediate state may vary according to system
// resources, but the final state is always the same.

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3;

// Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.
var hasForceUpdate = false;

var didWarnUpdateInsideUpdate = void 0;
var currentlyProcessingQueue = void 0;
var resetCurrentlyProcessingQueue = void 0;
{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
  resetCurrentlyProcessingQueue = function () {
    currentlyProcessingQueue = null;
  };
}

function createUpdateQueue(baseState) {
  var queue = {
    expirationTime: NoWork,
    baseState: baseState,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function cloneUpdateQueue(currentQueue) {
  var queue = {
    expirationTime: currentQueue.expirationTime,
    baseState: currentQueue.baseState,
    firstUpdate: currentQueue.firstUpdate,
    lastUpdate: currentQueue.lastUpdate,

    // TODO: With resuming, if we bail out and resuse the child tree, we should
    // keep these effects.
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,

    firstEffect: null,
    lastEffect: null,

    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function createUpdate(expirationTime) {
  return {
    expirationTime: expirationTime,

    tag: UpdateState,
    payload: null,
    callback: null,

    next: null,
    nextEffect: null
  };
}

function appendUpdateToQueue(queue, update, expirationTime) {
  // Append the update to the end of the list.
  if (queue.lastUpdate === null) {
    // Queue is empty
    queue.firstUpdate = queue.lastUpdate = update;
  } else {
    queue.lastUpdate.next = update;
    queue.lastUpdate = update;
  }
  if (queue.expirationTime === NoWork || queue.expirationTime > expirationTime) {
    // The incoming update has the earliest expiration of any update in the
    // queue. Update the queue's expiration time.
    queue.expirationTime = expirationTime;
  }
}

function enqueueUpdate(fiber, update, expirationTime) {
  // Update queues are created lazily.
  var alternate = fiber.alternate;
  var queue1 = void 0;
  var queue2 = void 0;
  if (alternate === null) {
    // There's only one fiber.
    queue1 = fiber.updateQueue;
    queue2 = null;
    if (queue1 === null) {
      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
    }
  } else {
    // There are two owners.
    queue1 = fiber.updateQueue;
    queue2 = alternate.updateQueue;
    if (queue1 === null) {
      if (queue2 === null) {
        // Neither fiber has an update queue. Create new ones.
        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
      } else {
        // Only one fiber has an update queue. Clone to create a new one.
        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
      }
    } else {
      if (queue2 === null) {
        // Only one fiber has an update queue. Clone to create a new one.
        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
      } else {
        // Both owners have an update queue.
      }
    }
  }
  if (queue2 === null || queue1 === queue2) {
    // There's only a single queue.
    appendUpdateToQueue(queue1, update, expirationTime);
  } else {
    // There are two queues. We need to append the update to both queues,
    // while accounting for the persistent structure of the list — we don't
    // want the same update to be added multiple times.
    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
      // One of the queues is not empty. We must add the update to both queues.
      appendUpdateToQueue(queue1, update, expirationTime);
      appendUpdateToQueue(queue2, update, expirationTime);
    } else {
      // Both queues are non-empty. The last update is the same in both lists,
      // because of structural sharing. So, only append to one of the lists.
      appendUpdateToQueue(queue1, update, expirationTime);
      // But we still need to update the `lastUpdate` pointer of queue2.
      queue2.lastUpdate = update;
    }
  }

  {
    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }
}

function enqueueCapturedUpdate(workInProgress, update, renderExpirationTime) {
  // Captured updates go into a separate list, and only on the work-in-
  // progress queue.
  var workInProgressQueue = workInProgress.updateQueue;
  if (workInProgressQueue === null) {
    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
  } else {
    // TODO: I put this here rather than createWorkInProgress so that we don't
    // clone the queue unnecessarily. There's probably a better way to
    // structure this.
    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
  }

  // Append the update to the end of the list.
  if (workInProgressQueue.lastCapturedUpdate === null) {
    // This is the first render phase update
    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
  } else {
    workInProgressQueue.lastCapturedUpdate.next = update;
    workInProgressQueue.lastCapturedUpdate = update;
  }
  if (workInProgressQueue.expirationTime === NoWork || workInProgressQueue.expirationTime > renderExpirationTime) {
    // The incoming update has the earliest expiration of any update in the
    // queue. Update the queue's expiration time.
    workInProgressQueue.expirationTime = renderExpirationTime;
  }
}

function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
  var current = workInProgress.alternate;
  if (current !== null) {
    // If the work-in-progress queue is equal to the current queue,
    // we need to clone it first.
    if (queue === current.updateQueue) {
      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
    }
  }
  return queue;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var _payload = update.payload;
        if (typeof _payload === 'function') {
          // Updater function
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload.call(instance, prevState, nextProps);
            }
          }
          return _payload.call(instance, prevState, nextProps);
        }
        // State object
        return _payload;
      }
    case CaptureUpdate:
      {
        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough
    case UpdateState:
      {
        var _payload2 = update.payload;
        var partialState = void 0;
        if (typeof _payload2 === 'function') {
          // Updater function
          {
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload2.call(instance, prevState, nextProps);
            }
          }
          partialState = _payload2.call(instance, prevState, nextProps);
        } else {
          // Partial state object
          partialState = _payload2;
        }
        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        }
        // Merge the partial state and the previous state.
        return _assign({}, prevState, partialState);
      }
    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }
  return prevState;
}

function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
  hasForceUpdate = false;

  if (queue.expirationTime === NoWork || queue.expirationTime > renderExpirationTime) {
    // Insufficient priority. Bailout.
    return;
  }

  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

  {
    currentlyProcessingQueue = queue;
  }

  // These values may change as we process the queue.
  var newBaseState = queue.baseState;
  var newFirstUpdate = null;
  var newExpirationTime = NoWork;

  // Iterate through the list of updates to compute the result.
  var update = queue.firstUpdate;
  var resultState = newBaseState;
  while (update !== null) {
    var updateExpirationTime = update.expirationTime;
    if (updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstUpdate === null) {
        // This is the first skipped update. It will be the first update in
        // the new list.
        newFirstUpdate = update;
        // Since this is the first update that was skipped, the current result
        // is the new base state.
        newBaseState = resultState;
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime === NoWork || newExpirationTime > updateExpirationTime) {
        newExpirationTime = updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback = update.callback;
      if (_callback !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastEffect === null) {
          queue.firstEffect = queue.lastEffect = update;
        } else {
          queue.lastEffect.nextEffect = update;
          queue.lastEffect = update;
        }
      }
    }
    // Continue to the next update.
    update = update.next;
  }

  // Separately, iterate though the list of captured updates.
  var newFirstCapturedUpdate = null;
  update = queue.firstCapturedUpdate;
  while (update !== null) {
    var _updateExpirationTime = update.expirationTime;
    if (_updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstCapturedUpdate === null) {
        // This is the first skipped captured update. It will be the first
        // update in the new list.
        newFirstCapturedUpdate = update;
        // If this is the first update that was skipped, the current result is
        // the new base state.
        if (newFirstUpdate === null) {
          newBaseState = resultState;
        }
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime === NoWork || newExpirationTime > _updateExpirationTime) {
        newExpirationTime = _updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback2 = update.callback;
      if (_callback2 !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastCapturedEffect === null) {
          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
        } else {
          queue.lastCapturedEffect.nextEffect = update;
          queue.lastCapturedEffect = update;
        }
      }
    }
    update = update.next;
  }

  if (newFirstUpdate === null) {
    queue.lastUpdate = null;
  }
  if (newFirstCapturedUpdate === null) {
    queue.lastCapturedUpdate = null;
  } else {
    workInProgress.effectTag |= Callback;
  }
  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
    // We processed every update, without skipping. That means the new base
    // state is the same as the result state.
    newBaseState = resultState;
  }

  queue.baseState = newBaseState;
  queue.firstUpdate = newFirstUpdate;
  queue.firstCapturedUpdate = newFirstCapturedUpdate;
  queue.expirationTime = newExpirationTime;

  workInProgress.memoizedState = resultState;

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}

function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}

function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
  // If the finished render included captured updates, and there are still
  // lower priority updates left over, we need to keep the captured updates
  // in the queue so that they are rebased and not dropped once we process the
  // queue again at the lower priority.
  if (finishedQueue.firstCapturedUpdate !== null) {
    // Join the captured update list to the end of the normal list.
    if (finishedQueue.lastUpdate !== null) {
      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
    }
    // Clear the list of captured updates.
    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
  }

  // Commit the effects
  var effect = finishedQueue.firstEffect;
  finishedQueue.firstEffect = finishedQueue.lastEffect = null;
  while (effect !== null) {
    var _callback3 = effect.callback;
    if (_callback3 !== null) {
      effect.callback = null;
      callCallback(_callback3, instance);
    }
    effect = effect.nextEffect;
  }

  effect = finishedQueue.firstCapturedEffect;
  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  while (effect !== null) {
    var _callback4 = effect.callback;
    if (_callback4 !== null) {
      effect.callback = null;
      callCallback(_callback4, instance);
    }
    effect = effect.nextEffect;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackAddendumByWorkInProgressFiber(source)
  };
}

var providerCursor = createCursor(null);
var valueCursor = createCursor(null);
var changedBitsCursor = createCursor(0);

var rendererSigil = void 0;
{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

function pushProvider(providerFiber) {
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    push(changedBitsCursor, context._changedBits, providerFiber);
    push(valueCursor, context._currentValue, providerFiber);
    push(providerCursor, providerFiber, providerFiber);

    context._currentValue = providerFiber.pendingProps.value;
    context._changedBits = providerFiber.stateNode;
    {
      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer = rendererSigil;
    }
  } else {
    push(changedBitsCursor, context._changedBits2, providerFiber);
    push(valueCursor, context._currentValue2, providerFiber);
    push(providerCursor, providerFiber, providerFiber);

    context._currentValue2 = providerFiber.pendingProps.value;
    context._changedBits2 = providerFiber.stateNode;
    {
      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer2 = rendererSigil;
    }
  }
}

function popProvider(providerFiber) {
  var changedBits = changedBitsCursor.current;
  var currentValue = valueCursor.current;

  pop(providerCursor, providerFiber);
  pop(valueCursor, providerFiber);
  pop(changedBitsCursor, providerFiber);

  var context = providerFiber.type._context;
  if (isPrimaryRenderer) {
    context._currentValue = currentValue;
    context._changedBits = changedBits;
  } else {
    context._currentValue2 = currentValue;
    context._changedBits2 = changedBits;
  }
}

function getContextCurrentValue(context) {
  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
}

function getContextChangedBits(context) {
  return isPrimaryRenderer ? context._changedBits : context._changedBits2;
}

var NO_CONTEXT = {};

var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber);
  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);

  // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.
  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance);
  // Now that we know this function doesn't throw, replace it.
  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

  // Don't push this Fiber's context unless it's unique.
  if (context === nextContext) {
    return;
  }

  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var commitTime = 0;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {
  if (!enableProfilerTimer) {
    return;
  }
  commitTime = now();
}

/**
 * The "actual" render time is total time required to render the descendants of a Profiler component.
 * This time is stored as a stack, since Profilers can be nested.
 * This time is started during the "begin" phase and stopped during the "complete" phase.
 * It is paused (and accumulated) in the event of an interruption or an aborted render.
 */

var fiberStack$1 = void 0;

{
  fiberStack$1 = [];
}

var timerPausedAt = 0;
var totalElapsedPauseTime = 0;

function checkActualRenderTimeStackEmpty() {
  if (!enableProfilerTimer) {
    return;
  }
  {
    !(fiberStack$1.length === 0) ? warning(false, 'Expected an empty stack. Something was not reset properly.') : void 0;
  }
}

function markActualRenderTimeStarted(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  {
    fiberStack$1.push(fiber);
  }
  var stateNode = fiber.stateNode;
  stateNode.elapsedPauseTimeAtStart = totalElapsedPauseTime;
  stateNode.startTime = now();
}

function pauseActualRenderTimerIfRunning() {
  if (!enableProfilerTimer) {
    return;
  }
  if (timerPausedAt === 0) {
    timerPausedAt = now();
  }
}

function recordElapsedActualRenderTime(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  {
    !(fiber === fiberStack$1.pop()) ? warning(false, 'Unexpected Fiber popped.') : void 0;
  }
  var stateNode = fiber.stateNode;
  stateNode.duration += now() - (totalElapsedPauseTime - stateNode.elapsedPauseTimeAtStart) - stateNode.startTime;
}

function resetActualRenderTimer() {
  if (!enableProfilerTimer) {
    return;
  }
  totalElapsedPauseTime = 0;
}

function resumeActualRenderTimerIfPaused() {
  if (!enableProfilerTimer) {
    return;
  }
  if (timerPausedAt > 0) {
    totalElapsedPauseTime += now() - timerPausedAt;
    timerPausedAt = 0;
  }
}

/**
 * The "base" render time is the duration of the “begin” phase of work for a particular fiber.
 * This time is measured and stored on each fiber.
 * The time for all sibling fibers are accumulated and stored on their parent during the "complete" phase.
 * If a fiber bails out (sCU false) then its "base" timer is cancelled and the fiber is not updated.
 */

var baseStartTime = -1;

function recordElapsedBaseRenderTimeIfRunning(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  if (baseStartTime !== -1) {
    fiber.selfBaseTime = now() - baseStartTime;
  }
}

function startBaseRenderTimer() {
  if (!enableProfilerTimer) {
    return;
  }
  {
    if (baseStartTime !== -1) {
      warning(false, 'Cannot start base timer that is already running. ' + 'This error is likely caused by a bug in React. ' + 'Please file an issue.');
    }
  }
  baseStartTime = now();
}

function stopBaseRenderTimerIfRunning() {
  if (!enableProfilerTimer) {
    return;
  }
  baseStartTime = -1;
}

var fakeInternalInstance = {};
var isArray = Array.isArray;

var didWarnAboutStateAssignmentForComponent = void 0;
var didWarnAboutUninitializedState = void 0;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
var didWarnAboutUndefinedDerivedState = void 0;
var warnOnUndefinedDerivedState = void 0;
var warnOnInvalidCallback$1 = void 0;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();

  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback$1 = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }
    var key = callerName + '_' + callback;
    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);
      warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (workInProgress, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);
        warning(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  };

  // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.
  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Invoke the function an extra time to help detect side-effects.
      getDerivedStateFromProps(nextProps, prevState);
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(workInProgress, partialState);
  }
  // Merge the partial state and the previous state.
  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState;

  // Once the update queue is empty, persist the derived state onto the
  // base state.
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null && updateQueue.expirationTime === NoWork) {
    updateQueue.baseState = memoizedState;
  }
}

var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.payload = payload;
    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'setState');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'replaceState');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var currentTime = recalculateCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'forceUpdate');
      }
      update.callback = callback;
    }

    enqueueUpdate(fiber, update, expirationTime);
    scheduleWork$1(fiber, expirationTime);
  }
};

function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
  var instance = workInProgress.stateNode;
  var ctor = workInProgress.type;
  if (typeof instance.shouldComponentUpdate === 'function') {
    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
    stopPhaseTimer();

    {
      !(shouldUpdate !== undefined) ? warning(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Component') : void 0;
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress) {
  var instance = workInProgress.stateNode;
  var type = workInProgress.type;
  {
    var name = getComponentName(workInProgress) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (type.prototype && typeof type.prototype.render === 'function') {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
    !noGetInitialStateOnES6 ? warning(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
    !noGetDefaultPropsOnES6 ? warning(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
    var noInstancePropTypes = !instance.propTypes;
    !noInstancePropTypes ? warning(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
    var noInstanceContextTypes = !instance.contextTypes;
    !noInstanceContextTypes ? warning(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;
    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
    !noComponentShouldUpdate ? warning(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
    if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
    }
    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
    !noComponentDidUnmount ? warning(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
    !noComponentDidReceiveProps ? warning(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
    !noComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
    !noUnsafeComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
    var hasMutatedProps = instance.props !== workInProgress.pendingProps;
    !(instance.props === undefined || !hasMutatedProps) ? warning(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
    var noInstanceDefaultProps = !instance.defaultProps;
    !noInstanceDefaultProps ? warning(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(type)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(type);
      warning(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(workInProgress));
    }

    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
    !noInstanceGetDerivedStateFromProps ? warning(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromCatch !== 'function';
    !noInstanceGetDerivedStateFromCatch ? warning(false, '%s: getDerivedStateFromCatch() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noStaticGetSnapshotBeforeUpdate = typeof type.getSnapshotBeforeUpdate !== 'function';
    !noStaticGetSnapshotBeforeUpdate ? warning(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
    var _state = instance.state;
    if (_state && (typeof _state !== 'object' || isArray(_state))) {
      warning(false, '%s.state: must be set to an object or null', name);
    }
    if (typeof instance.getChildContext === 'function') {
      !(typeof type.childContextTypes === 'object') ? warning(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance;
  // The instance needs access to the fiber so that it can schedule updates
  set(instance, workInProgress);
  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, props, renderExpirationTime) {
  var ctor = workInProgress.type;
  var unmaskedContext = getUnmaskedContext(workInProgress);
  var needsContext = isContextConsumer(workInProgress);
  var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;

  // Instantiate twice to help detect side-effects.
  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      new ctor(props, context); // eslint-disable-line no-new
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);
        warning(false, '%s: Did not properly initialize state during construction. ' + 'Expected state to be an object, but it was %s.', componentName, instance.state === null ? 'null' : 'undefined');
      }
    }

    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.
    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;
      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }
      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }
      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }
      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(workInProgress) || 'Component';
        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
          warning(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
        }
      }
    }
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.
  if (needsContext) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  startPhaseTimer(workInProgress, 'componentWillMount');
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }
  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  stopPhaseTimer();

  if (oldState !== instance.state) {
    {
      warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress) || 'Component');
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
  var oldState = instance.state;
  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, newContext);
  }
  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, newContext);
  }
  stopPhaseTimer();

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress) || 'Component';
      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);
        warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

// Invokes the mount life-cycles on a previously never rendered instance.
function mountClassInstance(workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;

  {
    checkClassInstance(workInProgress);
  }

  var instance = workInProgress.stateNode;
  var props = workInProgress.pendingProps;
  var unmaskedContext = getUnmaskedContext(workInProgress);

  instance.props = props;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyObject;
  instance.context = getMaskedContext(workInProgress, unmaskedContext);

  {
    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);

      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
    }
  }

  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
    instance.state = workInProgress.memoizedState;
  }

  var getDerivedStateFromProps = workInProgress.type.getDerivedStateFromProps;
  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
    instance.state = workInProgress.memoizedState;
  }

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance);
    // If we had additional state updates during this life-cycle, let's
    // process them now.
    updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
      instance.state = workInProgress.memoizedState;
    }
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.effectTag |= Update;
  }
}

function resumeMountClassInstance(workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  var newProps = workInProgress.pendingProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var newUnmaskedContext = getUnmaskedContext(workInProgress);
  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== newContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }
  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }
      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = newContext;

  return shouldUpdate;
}

// Invokes the update life-cycles and returns false if it shouldn't rerender.
function updateClassInstance(current, workInProgress, renderExpirationTime) {
  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  var newProps = workInProgress.pendingProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var newUnmaskedContext = getUnmaskedContext(workInProgress);
  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== newContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    if (fireGetDerivedStateFromPropsOnStateUpdates || oldProps !== newProps) {
      applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
      newState = workInProgress.memoizedState;
    }
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillUpdate');
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, newContext);
      }
      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, newContext);
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.effectTag |= Update;
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.effectTag |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = newContext;

  return shouldUpdate;
}

var getCurrentFiberStackAddendum$7 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnAboutMaps = void 0;
var didWarnAboutStringRefInStrictMode = void 0;
var ownerHasKeyUseWarning = void 0;
var ownerHasFunctionTypeWarning = void 0;
var warnForMissingKey = function (child) {};

{
  didWarnAboutMaps = false;
  didWarnAboutStringRefInStrictMode = {};

  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }
    if (!child._store || child._store.validated || child.key != null) {
      return;
    }
    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    child._store.validated = true;

    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$7() || '');
    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }
    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$7());
  };
}

var isArray$1 = Array.isArray;

function coerceRef(returnFiber, current, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      if (returnFiber.mode & StrictMode) {
        var componentName = getComponentName(returnFiber) || 'Component';
        if (!didWarnAboutStringRefInStrictMode[componentName]) {
          warning(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackAddendumByWorkInProgressFiber(returnFiber));
          didWarnAboutStringRefInStrictMode[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        var ownerFiber = owner;
        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
        inst = ownerFiber.stateNode;
      }
      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
      var stringRef = '' + mixedRef;
      // Check if previous string ref matches new string ref
      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
        return current.ref;
      }
      var ref = function (value) {
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    } else {
      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a functional component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$7() || '');
    }
    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$7() || '');

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$7() || '');
}

// This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.
function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }
    // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    }

    // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.
    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }
    var current = newFiber.alternate;
    if (current !== null) {
      var oldIndex = current.index;
      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, expirationTime) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, expirationTime) {
    if (current !== null && current.type === element.type) {
      // Move based on index
      var existing = useFiber(current, element.props, expirationTime);
      existing.ref = coerceRef(returnFiber, current, element);
      existing.return = returnFiber;
      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
      created.ref = coerceRef(returnFiber, current, element);
      created.return = returnFiber;
      return created;
    }
  }

  function updatePortal(returnFiber, current, portal, expirationTime) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || [], expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }
        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }
              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }
            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }
        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  /**
   * Warns if there is a duplicate or missing key
   */
  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$7());
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from boths ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.

    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.

    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.

    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.

    {
      // First, validate keys.
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
        if (!_newFiber) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
      if (_newFiber2) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.

    var iteratorFn = getIteratorFn(newChildrenIterable);
    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    {
      // Warn about using Maps as children
      if (newChildrenIterable.entries === iteratorFn) {
        !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$7()) : void 0;
        didWarnAboutMaps = true;
      }

      // First, validate keys.
      // We'll get a different iterator later for the main pass.
      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (!oldFiber) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
    // The existing first child is not a text node so we need to create one
    // and delete the existing ones.
    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, child, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.
  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.

    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    if (typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null) {
      newChild = newChild.props.children;
    }

    // Handle object types
    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray$1(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }
    if (typeof newChild === 'undefined') {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough
        case FunctionalComponent:
          {
            var Component = returnFiber.type;
            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
          }
      }
    }

    // Remaining cases are all treated as empty.
    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);

function cloneChildFibers(current, workInProgress) {
  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;

  newChild.return = workInProgress;
  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild.return = workInProgress;
  }
  newChild.sibling = null;
}

// The deepest Fiber on the stack involved in a hydration context.
// This may have been an insertion or a hydration.
var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function enterHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;
      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.effectTag = Deletion;

  // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.
  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.effectTag |= Placement;
  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;
          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type, props);
              break;
            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;
          }
          break;
        }
      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;
          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
              break;
            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;
          }
          break;
        }
      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type, props);
        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }
        return false;
      }
    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);
        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }
        return false;
      }
    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }
  var nextInstance = nextHydratableInstance;
  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }
  var firstAttemptedInstance = nextInstance;
  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    }
    // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.
    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }
  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
  // TODO: Type this specific to this type of component.
  fiber.updateQueue = updatePayload;
  // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.
  if (updatePayload !== null) {
    return true;
  }
  return false;
}

function prepareToHydrateHostTextInstance(fiber) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;
      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }
          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }
  return shouldUpdate;
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;
  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
    parent = parent.return;
  }
  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }
  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }
  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type;

  // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.
  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;
    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);
  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  return true;
}

function resetHydrationState() {
  if (!supportsHydration) {
    return;
  }

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


var didWarnAboutBadClass = void 0;
var didWarnAboutGetDerivedStateOnFunctionalComponent = void 0;
var didWarnAboutStatelessRefs = void 0;

{
  didWarnAboutBadClass = {};
  didWarnAboutGetDerivedStateOnFunctionalComponent = {};
  didWarnAboutStatelessRefs = {};
}

// TODO: Remove this and use reconcileChildrenAtExpirationTime directly.
function reconcileChildren(current, workInProgress, nextChildren) {
  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
}

function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
  if (current === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.

    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderExpirationTime);
  }
}

function updateForwardRef(current, workInProgress) {
  var render = workInProgress.type.render;
  var nextProps = workInProgress.pendingProps;
  var ref = workInProgress.ref;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextProps) {
    var currentRef = current !== null ? current.ref : null;
    if (ref === currentRef) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
  }

  var nextChildren = void 0;
  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    nextChildren = render(nextProps, ref);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }

  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateFragment(current, workInProgress) {
  var nextChildren = workInProgress.pendingProps;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextChildren);
  return workInProgress.child;
}

function updateMode(current, workInProgress) {
  var nextChildren = workInProgress.pendingProps.children;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextChildren);
  return workInProgress.child;
}

function updateProfiler(current, workInProgress) {
  var nextProps = workInProgress.pendingProps;
  if (enableProfilerTimer) {
    // Start render timer here and push start time onto queue
    markActualRenderTimeStarted(workInProgress);

    // Let the "complete" phase know to stop the timer,
    // And the scheduler to record the measured time.
    workInProgress.effectTag |= Update;
  }
  if (workInProgress.memoizedProps === nextProps) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  var nextChildren = nextProps.children;
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function markRef(current, workInProgress) {
  var ref = workInProgress.ref;
  if (current === null && ref !== null || current !== null && current.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.effectTag |= Ref;
  }
}

function updateFunctionalComponent(current, workInProgress) {
  var fn = workInProgress.type;
  var nextProps = workInProgress.pendingProps;

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else {
    if (workInProgress.memoizedProps === nextProps) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    // TODO: consider bringing fn.shouldComponentUpdate() back.
    // It used to be here.
  }

  var unmaskedContext = getUnmaskedContext(workInProgress);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  var nextChildren = void 0;

  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    nextChildren = fn(nextProps, context);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateClassComponent(current, workInProgress, renderExpirationTime) {
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.
  var hasContext = pushContextProvider(workInProgress);
  var shouldUpdate = void 0;
  if (current === null) {
    if (workInProgress.stateNode === null) {
      // In the initial pass we might need to construct the instance.
      constructClassInstance(workInProgress, workInProgress.pendingProps, renderExpirationTime);
      mountClassInstance(workInProgress, renderExpirationTime);

      shouldUpdate = true;
    } else {
      // In a resume, we'll already have an instance we can reuse.
      shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
    }
  } else {
    shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
  }
  return finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime);
}

function finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current, workInProgress);

  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, false);
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  var ctor = workInProgress.type;
  var instance = workInProgress.stateNode;

  // Rerender
  ReactCurrentOwner.current = workInProgress;
  var nextChildren = void 0;
  if (didCaptureError && (!enableGetDerivedStateFromCatch || typeof ctor.getDerivedStateFromCatch !== 'function')) {
    // If we captured an error, but getDerivedStateFrom catch is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    if (enableProfilerTimer) {
      stopBaseRenderTimerIfRunning();
    }
  } else {
    {
      ReactDebugCurrentFiber.setCurrentPhase('render');
      nextChildren = instance.render();
      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        instance.render();
      }
      ReactDebugCurrentFiber.setCurrentPhase(null);
    }
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  if (didCaptureError) {
    // If we're recovering from an error, reconcile twice: first to delete
    // all the existing children.
    reconcileChildrenAtExpirationTime(current, workInProgress, null, renderExpirationTime);
    workInProgress.child = null;
    // Now we can continue reconciling like normal. This has the effect of
    // remounting all children regardless of whether their their
    // identity matches.
  }
  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);
  // Memoize props and state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.
  memoizeState(workInProgress, instance.state);
  memoizeProps(workInProgress, instance.props);

  // The context might have changed so we need to recalculate it.
  if (hasContext) {
    invalidateContextProvider(workInProgress, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;
  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }
  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current, workInProgress, renderExpirationTime) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    var nextProps = workInProgress.pendingProps;
    var prevState = workInProgress.memoizedState;
    var prevChildren = prevState !== null ? prevState.element : null;
    processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
    var nextState = workInProgress.memoizedState;
    // Caution: React DevTools currently depends on this property
    // being called "element".
    var nextChildren = nextState.element;

    if (nextChildren === prevChildren) {
      // If the state is the same as before, that's a bailout because we had
      // no work that expires at this time.
      resetHydrationState();
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    var root = workInProgress.stateNode;
    if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
      // If we don't have any current children this might be the first pass.
      // We always try to hydrate. If this isn't a hydration pass there won't
      // be any children to hydrate which is effectively the same thing as
      // not hydrating.

      // This is a bit of a hack. We track the host root as a placement to
      // know that we're currently in a mounting state. That way isMounted
      // works as expected. We must reset this before committing.
      // TODO: Delete this when we delete isMounted and findDOMNode.
      workInProgress.effectTag |= Placement;

      // Ensure that children mount into this root without tracking
      // side-effects. This ensures that we don't store Placement effects on
      // nodes that will be hydrated.
      workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    } else {
      // Otherwise reset hydration state in case we aborted and resumed another
      // root.
      resetHydrationState();
      reconcileChildren(current, workInProgress, nextChildren);
    }
    return workInProgress.child;
  }
  resetHydrationState();
  // If there is no update queue, that's a bailout because the root has no props.
  return bailoutOnAlreadyFinishedWork(current, workInProgress);
}

function updateHostComponent(current, workInProgress, renderExpirationTime) {
  pushHostContext(workInProgress);

  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var memoizedProps = workInProgress.memoizedProps;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current !== null ? current.memoizedProps : null;

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (memoizedProps === nextProps) {
    var isHidden = workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps);
    if (isHidden) {
      // Before bailing out, make sure we've deprioritized a hidden component.
      workInProgress.expirationTime = Never;
    }
    if (!isHidden || renderExpirationTime !== Never) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    // If we're rendering a hidden node at hidden priority, don't bailout. The
    // parent is complete, but the children may not be.
  }

  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also have access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.effectTag |= ContentReset;
  }

  markRef(current, workInProgress);

  // Check the host config to see if the children are offscreen/hidden.
  if (renderExpirationTime !== Never && workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps)) {
    // Down-prioritize the children.
    workInProgress.expirationTime = Never;
    // Bailout and come back to this fiber later.
    workInProgress.memoizedProps = nextProps;
    return null;
  }

  reconcileChildren(current, workInProgress, nextChildren);
  memoizeProps(workInProgress, nextProps);
  return workInProgress.child;
}

function updateHostText(current, workInProgress) {
  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }
  var nextProps = workInProgress.pendingProps;
  memoizeProps(workInProgress, nextProps);
  // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.
  return null;
}

function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
  !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var fn = workInProgress.type;
  var props = workInProgress.pendingProps;
  var unmaskedContext = getUnmaskedContext(workInProgress);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  var value = void 0;

  {
    if (fn.prototype && typeof fn.prototype.render === 'function') {
      var componentName = getComponentName(workInProgress) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    ReactCurrentOwner.current = workInProgress;
    value = fn(props, context);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;

  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    var Component = workInProgress.type;

    // Proceed under the assumption that this is a class instance
    workInProgress.tag = ClassComponent;

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
    }

    // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.
    var hasContext = pushContextProvider(workInProgress);
    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, renderExpirationTime);
    return finishClassComponent(current, workInProgress, true, hasContext, renderExpirationTime);
  } else {
    // Proceed under the assumption that this is a functional component
    workInProgress.tag = FunctionalComponent;
    {
      var _Component = workInProgress.type;

      if (_Component) {
        !!_Component.childContextTypes ? warning(false, '%s(...): childContextTypes cannot be defined on a functional component.', _Component.displayName || _Component.name || 'Component') : void 0;
      }
      if (workInProgress.ref !== null) {
        var info = '';
        var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }

        var warningKey = ownerName || workInProgress._debugID || '';
        var debugSource = workInProgress._debugSource;
        if (debugSource) {
          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
        }
        if (!didWarnAboutStatelessRefs[warningKey]) {
          didWarnAboutStatelessRefs[warningKey] = true;
          warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
        }
      }

      if (typeof fn.getDerivedStateFromProps === 'function') {
        var _componentName = getComponentName(workInProgress) || 'Unknown';

        if (!didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName]) {
          warning(false, '%s: Stateless functional components do not support getDerivedStateFromProps.', _componentName);
          didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName] = true;
        }
      }
    }
    reconcileChildren(current, workInProgress, value);
    memoizeProps(workInProgress, props);
    return workInProgress.child;
  }
}

function updateTimeoutComponent(current, workInProgress, renderExpirationTime) {
  if (enableSuspense) {
    var nextProps = workInProgress.pendingProps;
    var prevProps = workInProgress.memoizedProps;

    var prevDidTimeout = workInProgress.memoizedState;

    // Check if we already attempted to render the normal state. If we did,
    // and we timed out, render the placeholder state.
    var alreadyCaptured = (workInProgress.effectTag & DidCapture) === NoEffect;
    var nextDidTimeout = !alreadyCaptured;

    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
    } else if (nextProps === prevProps && nextDidTimeout === prevDidTimeout) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var render = nextProps.children;
    var nextChildren = render(nextDidTimeout);
    workInProgress.memoizedProps = nextProps;
    workInProgress.memoizedState = nextDidTimeout;
    reconcileChildren(current, workInProgress, nextChildren);
    return workInProgress.child;
  } else {
    return null;
  }
}

function updatePortalComponent(current, workInProgress, renderExpirationTime) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;
  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (workInProgress.memoizedProps === nextChildren) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  if (current === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    memoizeProps(workInProgress, nextChildren);
  } else {
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextChildren);
  }
  return workInProgress.child;
}

function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
  var fiber = workInProgress.child;
  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }
  while (fiber !== null) {
    var nextFiber = void 0;
    // Visit this fiber.
    switch (fiber.tag) {
      case ContextConsumer:
        // Check if the context matches.
        var observedBits = fiber.stateNode | 0;
        if (fiber.type === context && (observedBits & changedBits) !== 0) {
          // Update the expiration time of all the ancestors, including
          // the alternates.
          var node = fiber;
          while (node !== null) {
            var alternate = node.alternate;
            if (node.expirationTime === NoWork || node.expirationTime > renderExpirationTime) {
              node.expirationTime = renderExpirationTime;
              if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
                alternate.expirationTime = renderExpirationTime;
              }
            } else if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
              alternate.expirationTime = renderExpirationTime;
            } else {
              // Neither alternate was updated, which means the rest of the
              // ancestor path already has sufficient priority.
              break;
            }
            node = node.return;
          }
          // Don't scan deeper than a matching consumer. When we render the
          // consumer, we'll continue scanning from that point. This way the
          // scanning work is time-sliced.
          nextFiber = null;
        } else {
          // Traverse down.
          nextFiber = fiber.child;
        }
        break;
      case ContextProvider:
        // Don't scan deeper if this is a matching provider
        nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
        break;
      default:
        // Traverse down.
        nextFiber = fiber.child;
        break;
    }
    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;
      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }
        var sibling = nextFiber.sibling;
        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        }
        // No more siblings. Traverse up.
        nextFiber = nextFiber.return;
      }
    }
    fiber = nextFiber;
  }
}

function updateContextProvider(current, workInProgress, renderExpirationTime) {
  var providerType = workInProgress.type;
  var context = providerType._context;

  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var canBailOnProps = true;

  if (hasContextChanged()) {
    canBailOnProps = false;
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (oldProps === newProps) {
    workInProgress.stateNode = 0;
    pushProvider(workInProgress);
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  var newValue = newProps.value;
  workInProgress.memoizedProps = newProps;

  {
    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackAddendum$6);
    }
  }

  var changedBits = void 0;
  if (oldProps === null) {
    // Initial render
    changedBits = MAX_SIGNED_31_BIT_INT;
  } else {
    if (oldProps.value === newProps.value) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && canBailOnProps) {
        workInProgress.stateNode = 0;
        pushProvider(workInProgress);
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      changedBits = 0;
    } else {
      var oldValue = oldProps.value;
      // Use Object.is to compare the new context value to the old value.
      // Inlined Object.is polyfill.
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
      if (oldValue === newValue && (oldValue !== 0 || 1 / oldValue === 1 / newValue) || oldValue !== oldValue && newValue !== newValue // eslint-disable-line no-self-compare
      ) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && canBailOnProps) {
            workInProgress.stateNode = 0;
            pushProvider(workInProgress);
            return bailoutOnAlreadyFinishedWork(current, workInProgress);
          }
          changedBits = 0;
        } else {
        changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
        {
          !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
        }
        changedBits |= 0;

        if (changedBits === 0) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && canBailOnProps) {
            workInProgress.stateNode = 0;
            pushProvider(workInProgress);
            return bailoutOnAlreadyFinishedWork(current, workInProgress);
          }
        } else {
          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
        }
      }
    }
  }

  workInProgress.stateNode = changedBits;
  pushProvider(workInProgress);

  var newChildren = newProps.children;
  reconcileChildren(current, workInProgress, newChildren);
  return workInProgress.child;
}

function updateContextConsumer(current, workInProgress, renderExpirationTime) {
  var context = workInProgress.type;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;

  var newValue = getContextCurrentValue(context);
  var changedBits = getContextChangedBits(context);

  if (hasContextChanged()) {
    // Normally we can bail out on props equality but if context has changed
    // we don't do the bailout and we have to reuse existing props instead.
  } else if (changedBits === 0 && oldProps === newProps) {
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  workInProgress.memoizedProps = newProps;

  var observedBits = newProps.unstable_observedBits;
  if (observedBits === undefined || observedBits === null) {
    // Subscribe to all changes by default
    observedBits = MAX_SIGNED_31_BIT_INT;
  }
  // Store the observedBits on the fiber's stateNode for quick access.
  workInProgress.stateNode = observedBits;

  if ((changedBits & observedBits) !== 0) {
    // Context change propagation stops at matching consumers, for time-
    // slicing. Continue the propagation here.
    propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
  } else if (oldProps === newProps) {
    // Skip over a memoized parent with a bitmask bailout even
    // if we began working on it because of a deeper matching child.
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }
  // There is no bailout on `children` equality because we expect people
  // to often pass a bound method as a child, but it may reference
  // `this.state` or `this.props` (and thus needs to re-render on `setState`).

  var render = newProps.children;

  {
    !(typeof render === 'function') ? warning(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
  }

  var newChildren = void 0;
  {
    ReactCurrentOwner.current = workInProgress;
    ReactDebugCurrentFiber.setCurrentPhase('render');
    newChildren = render(newValue);
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current, workInProgress, newChildren);
  return workInProgress.child;
}

/*
  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
    let child = firstChild;
    do {
      // Ensure that the first and last effect of the parent corresponds
      // to the children's first and last effect.
      if (!returnFiber.firstEffect) {
        returnFiber.firstEffect = child.firstEffect;
      }
      if (child.lastEffect) {
        if (returnFiber.lastEffect) {
          returnFiber.lastEffect.nextEffect = child.firstEffect;
        }
        returnFiber.lastEffect = child.lastEffect;
      }
    } while (child = child.sibling);
  }
  */

function bailoutOnAlreadyFinishedWork(current, workInProgress) {
  cancelWorkTimer(workInProgress);

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopBaseRenderTimerIfRunning();
  }

  // TODO: We should ideally be able to bail out early if the children have no
  // more work to do. However, since we don't have a separation of this
  // Fiber's priority and its children yet - we don't know without doing lots
  // of the same work we do anyway. Once we have that separation we can just
  // bail out here if the children has no more work at this priority level.
  // if (workInProgress.priorityOfChildren <= priorityLevel) {
  //   // If there are side-effects in these children that have not yet been
  //   // committed we need to ensure that they get properly transferred up.
  //   if (current && current.child !== workInProgress.child) {
  //     reuseChildrenEffects(workInProgress, child);
  //   }
  //   return null;
  // }

  cloneChildFibers(current, workInProgress);
  return workInProgress.child;
}

function bailoutOnLowPriority(current, workInProgress) {
  cancelWorkTimer(workInProgress);

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopBaseRenderTimerIfRunning();
  }

  // TODO: Handle HostComponent tags here as well and call pushHostContext()?
  // See PR 8590 discussion for context
  switch (workInProgress.tag) {
    case HostRoot:
      pushHostRootContext(workInProgress);
      break;
    case ClassComponent:
      pushContextProvider(workInProgress);
      break;
    case HostPortal:
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      break;
    case ContextProvider:
      pushProvider(workInProgress);
      break;
    case Profiler:
      if (enableProfilerTimer) {
        markActualRenderTimeStarted(workInProgress);
      }
      break;
  }
  // TODO: What if this is currently in progress?
  // How can that happen? How is this not being cloned?
  return null;
}

// TODO: Delete memoizeProps/State and move to reconcile/bailout instead
function memoizeProps(workInProgress, nextProps) {
  workInProgress.memoizedProps = nextProps;
}

function memoizeState(workInProgress, nextState) {
  workInProgress.memoizedState = nextState;
  // Don't reset the updateQueue, in case there are pending updates. Resetting
  // is handled by processUpdateQueue.
}

function beginWork(current, workInProgress, renderExpirationTime) {
  if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
    return bailoutOnLowPriority(current, workInProgress);
  }

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
    case FunctionalComponent:
      return updateFunctionalComponent(current, workInProgress);
    case ClassComponent:
      return updateClassComponent(current, workInProgress, renderExpirationTime);
    case HostRoot:
      return updateHostRoot(current, workInProgress, renderExpirationTime);
    case HostComponent:
      return updateHostComponent(current, workInProgress, renderExpirationTime);
    case HostText:
      return updateHostText(current, workInProgress);
    case TimeoutComponent:
      return updateTimeoutComponent(current, workInProgress, renderExpirationTime);
    case HostPortal:
      return updatePortalComponent(current, workInProgress, renderExpirationTime);
    case ForwardRef:
      return updateForwardRef(current, workInProgress);
    case Fragment:
      return updateFragment(current, workInProgress);
    case Mode:
      return updateMode(current, workInProgress);
    case Profiler:
      return updateProfiler(current, workInProgress);
    case ContextProvider:
      return updateContextProvider(current, workInProgress, renderExpirationTime);
    case ContextConsumer:
      return updateContextConsumer(current, workInProgress, renderExpirationTime);
    default:
      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
  }
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.effectTag |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.effectTag |= Ref;
}

function appendAllChildren(parent, workInProgress) {
  // We only have the top Fiber that was created but we need recurse down its
  // children to find all the terminal nodes.
  var node = workInProgress.child;
  while (node !== null) {
    if (node.tag === HostComponent || node.tag === HostText) {
      appendInitialChild(parent, node.stateNode);
    } else if (node.tag === HostPortal) {
      // If we have a portal child, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === workInProgress) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

var updateHostContainer = void 0;
var updateHostComponent$1 = void 0;
var updateHostText$1 = void 0;
if (supportsMutation) {
  // Mutation mode

  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // TODO: Type this specific to this type of component.
    workInProgress.updateQueue = updatePayload;
    // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.
    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
} else if (supportsPersistence) {
  // Persistent host tree mode

  // An unfortunate fork of appendAllChildren because we have two different parent types.
  var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendChildToContainerChildSet(containerChildSet, node.stateNode);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };
  updateHostContainer = function (workInProgress) {
    var portalOrRoot = workInProgress.stateNode;
    var childrenUnchanged = workInProgress.firstEffect === null;
    if (childrenUnchanged) {
      // No changes, just reuse the existing instance.
    } else {
      var container = portalOrRoot.containerInfo;
      var newChildSet = createContainerChildSet(container);
      // If children might have changed, we have to add them all to the set.
      appendAllChildrenToContainer(newChildSet, workInProgress);
      portalOrRoot.pendingChildren = newChildSet;
      // Schedule an update on the container to swap out the container.
      markUpdate(workInProgress);
      finalizeContainerChildren(container, newChildSet);
    }
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // If there are no effects associated with this node, then none of our children had any updates.
    // This guarantees that we can reuse all of them.
    var childrenUnchanged = workInProgress.firstEffect === null;
    var currentInstance = current.stateNode;
    if (childrenUnchanged && updatePayload === null) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
    } else {
      var recyclableInstance = workInProgress.stateNode;
      var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
      if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
        markUpdate(workInProgress);
      }
      workInProgress.stateNode = newInstance;
      if (childrenUnchanged) {
        // If there are no other effects in this tree, we need to flag this node as having one.
        // Even though we're not going to use it for anything.
        // Otherwise parents won't know that there are new children to propagate upwards.
        markUpdate(workInProgress);
      } else {
        // If children might have changed, we have to add them all to the set.
        appendAllChildren(newInstance, workInProgress);
      }
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    if (oldText !== newText) {
      // If the text content differs, we'll create a new text instance for it.
      var rootContainerInstance = getRootHostContainer();
      var currentHostContext = getHostContext();
      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
      // This lets the parents know that at least one of their children has changed.
      markUpdate(workInProgress);
    }
  };
} else {
  // No host operations
  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
    // Noop
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // Noop
  };
}

function completeWork(current, workInProgress, renderExpirationTime) {
  var newProps = workInProgress.pendingProps;
  switch (workInProgress.tag) {
    case FunctionalComponent:
      return null;
    case ClassComponent:
      {
        // We are leaving this subtree, so pop context if any.
        popContextProvider(workInProgress);
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var fiberRoot = workInProgress.stateNode;
        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }
        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          popHydrationState(workInProgress);
          // This resets the hacky state to fix isMounted before committing.
          // TODO: Delete this when we delete isMounted and findDOMNode.
          workInProgress.effectTag &= ~Placement;
        }
        updateHostContainer(workInProgress);
        return null;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;
        if (current !== null && workInProgress.stateNode != null) {
          // If we have an alternate, that means this is an update and we need to
          // schedule a side-effect to do the updates.
          var oldProps = current.memoizedProps;
          // If we get updated because one of our children updated, we don't
          // have newProps so we'll have to reuse them.
          // TODO: Split the update API as separate for the props vs. children.
          // Even better would be if children weren't special cased at all tho.
          var instance = workInProgress.stateNode;
          var currentHostContext = getHostContext();
          // TODO: Experiencing an error where oldProps is null. Suggests a host
          // component is hitting the resume path. Figure out why. Possibly
          // related to `hidden`.
          var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

          updateHostComponent$1(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
            return null;
          }

          var _currentHostContext = getHostContext();
          // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on we want to add then top->down or
          // bottom->up. Top->down is faster in IE11.
          var wasHydrated = popHydrationState(workInProgress);
          if (wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
              // If changes to the hydrated node needs to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

            appendAllChildren(_instance, workInProgress);

            // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.
            if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance, _currentHostContext)) {
              markUpdate(workInProgress);
            }
            workInProgress.stateNode = _instance;
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }
        return null;
      }
    case HostText:
      {
        var newText = newProps;
        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps;
          // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.
          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
            return null;
          }
          var _rootContainerInstance = getRootHostContainer();
          var _currentHostContext2 = getHostContext();
          var _wasHydrated = popHydrationState(workInProgress);
          if (_wasHydrated) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
          }
        }
        return null;
      }
    case ForwardRef:
      return null;
    case TimeoutComponent:
      return null;
    case Fragment:
      return null;
    case Mode:
      return null;
    case Profiler:
      if (enableProfilerTimer) {
        recordElapsedActualRenderTime(workInProgress);
      }
      return null;
    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);
      return null;
    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      return null;
    case ContextConsumer:
      return null;
    // Error cases
    case IndeterminateComponent:
      invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
    // eslint-disable-next-line no-fallthrough
    default:
      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
  }
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(capturedError) {
  return true;
}

function logCapturedError(capturedError) {
  var logError = showErrorDialog(capturedError);

  // Allow injected showErrorDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.
  if (logError === false) {
    return;
  }

  var error = capturedError.error;
  var suppressLogging = error && error.suppressReactErrorLogging;
  if (suppressLogging) {
    return;
  }

  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;


    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

    var errorBoundaryMessage = void 0;
    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }
    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

    // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
    console.error(combinedMessage);
  }
}

var invokeGuardedCallback$3 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

function logError(boundary, errorInfo) {
  var source = errorInfo.source;
  var stack = errorInfo.stack;
  if (stack === null && source !== null) {
    stack = getStackAddendumByWorkInProgressFiber(source);
  }

  var capturedError = {
    componentName: source !== null ? getComponentName(source) : null,
    componentStack: stack !== null ? stack : '',
    error: errorInfo.value,
    errorBoundary: null,
    errorBoundaryName: null,
    errorBoundaryFound: false,
    willRetry: false
  };

  if (boundary !== null && boundary.tag === ClassComponent) {
    capturedError.errorBoundary = boundary.stateNode;
    capturedError.errorBoundaryName = getComponentName(boundary);
    capturedError.errorBoundaryFound = true;
    capturedError.willRetry = true;
  }

  try {
    logCapturedError(capturedError);
  } catch (e) {
    // Prevent cycle if logCapturedError() throws.
    // A cycle may still occur if logCapturedError renders a component that throws.
    var suppressLogging = e && e.suppressReactErrorLogging;
    if (!suppressLogging) {
      console.error(e);
    }
  }
}

var callComponentWillUnmountWithTimer = function (current, instance) {
  startPhaseTimer(current, 'componentWillUnmount');
  instance.props = current.memoizedProps;
  instance.state = current.memoizedState;
  instance.componentWillUnmount();
  stopPhaseTimer();
};

// Capture errors so they don't interrupt unmounting.
function safelyCallComponentWillUnmount(current, instance) {
  {
    invokeGuardedCallback$3(null, callComponentWillUnmountWithTimer, null, current, instance);
    if (hasCaughtError$1()) {
      var unmountError = clearCaughtError$1();
      captureCommitPhaseError(current, unmountError);
    }
  }
}

function safelyDetachRef(current) {
  var ref = current.ref;
  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback$3(null, ref, null, null);
        if (hasCaughtError$1()) {
          var refError = clearCaughtError$1();
          captureCommitPhaseError(current, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function commitBeforeMutationLifeCycles(current, finishedWork) {
  switch (finishedWork.tag) {
    case ClassComponent:
      {
        if (finishedWork.effectTag & Snapshot) {
          if (current !== null) {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
            var instance = finishedWork.stateNode;
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            var snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);
            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);
                warning(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork));
              }
            }
            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
            stopPhaseTimer();
          }
        }
        return;
      }
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
      // Nothing to do for these component types
      return;
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitLifeCycles(finishedRoot, current, finishedWork, currentTime, committedExpirationTime) {
  switch (finishedWork.tag) {
    case ClassComponent:
      {
        var instance = finishedWork.stateNode;
        if (finishedWork.effectTag & Update) {
          if (current === null) {
            startPhaseTimer(finishedWork, 'componentDidMount');
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            instance.componentDidMount();
            stopPhaseTimer();
          } else {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            startPhaseTimer(finishedWork, 'componentDidUpdate');
            instance.props = finishedWork.memoizedProps;
            instance.state = finishedWork.memoizedState;
            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            stopPhaseTimer();
          }
        }
        var updateQueue = finishedWork.updateQueue;
        if (updateQueue !== null) {
          instance.props = finishedWork.memoizedProps;
          instance.state = finishedWork.memoizedState;
          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
        }
        return;
      }
    case HostRoot:
      {
        var _updateQueue = finishedWork.updateQueue;
        if (_updateQueue !== null) {
          var _instance = null;
          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;
              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }
          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
        }
        return;
      }
    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode;

        // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.
        if (current === null && finishedWork.effectTag & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props, finishedWork);
        }

        return;
      }
    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }
    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }
    case Profiler:
      {
        // We have no life-cycles associated with Profiler.
        return;
      }
    case TimeoutComponent:
      {
        // We have no life-cycles associated with Timeouts.
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;
  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse = void 0;
    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;
      default:
        instanceToUse = instance;
    }
    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          warning(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork), getStackAddendumByWorkInProgressFiber(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current) {
  var currentRef = current.ref;
  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
}

// User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay
function commitUnmount(current) {
  if (typeof onCommitUnmount === 'function') {
    onCommitUnmount(current);
  }

  switch (current.tag) {
    case ClassComponent:
      {
        safelyDetachRef(current);
        var instance = current.stateNode;
        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current, instance);
        }
        return;
      }
    case HostComponent:
      {
        safelyDetachRef(current);
        return;
      }
    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        if (supportsMutation) {
          unmountHostComponents(current);
        } else if (supportsPersistence) {
          emptyPortalContainer(current);
        }
        return;
      }
  }
}

function commitNestedUnmounts(root) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  var node = root;
  while (true) {
    commitUnmount(node);
    // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.
    if (node.child !== null && (
    // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
    !supportsMutation || node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === root) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiber(current) {
  // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.
  current.return = null;
  current.child = null;
  if (current.alternate) {
    current.alternate.child = null;
    current.alternate.return = null;
  }
}

function emptyPortalContainer(current) {
  if (!supportsPersistence) {
    return;
  }

  var portal = current.stateNode;
  var containerInfo = portal.containerInfo;

  var emptyChildSet = createContainerChildSet(containerInfo);
  replaceContainerChildren(containerInfo, emptyChildSet);
}

function commitContainer(finishedWork) {
  if (!supportsPersistence) {
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        return;
      }
    case HostText:
      {
        return;
      }
    case HostRoot:
    case HostPortal:
      {
        var portalOrRoot = finishedWork.stateNode;
        var containerInfo = portalOrRoot.containerInfo,
            _pendingChildren = portalOrRoot.pendingChildren;

        replaceContainerChildren(containerInfo, _pendingChildren);
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;
  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }
    parent = parent.return;
  }
  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  var node = fiber;
  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
    while (node.tag !== HostComponent && node.tag !== HostText) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.effectTag & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      }
      // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.
      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    }
    // Check if this host node is stable or about to be placed.
    if (!(node.effectTag & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {
  if (!supportsMutation) {
    return;
  }

  // Recursively insert all host nodes into the parent.
  var parentFiber = getHostParentFiber(finishedWork);
  var parent = void 0;
  var isContainer = void 0;
  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentFiber.stateNode;
      isContainer = false;
      break;
    case HostRoot:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    case HostPortal:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    default:
      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
  }
  if (parentFiber.effectTag & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent);
    // Clear ContentReset from the effect tag
    parentFiber.effectTag &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork);
  // We only have the top Fiber that was inserted but we need recurse down its
  // children to find all the terminal nodes.
  var node = finishedWork;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      if (before) {
        if (isContainer) {
          insertInContainerBefore(parent, node.stateNode, before);
        } else {
          insertBefore(parent, node.stateNode, before);
        }
      } else {
        if (isContainer) {
          appendChildToContainer(parent, node.stateNode);
        } else {
          appendChild(parent, node.stateNode);
        }
      }
    } else if (node.tag === HostPortal) {
      // If the insertion itself is a portal, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === finishedWork) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function unmountHostComponents(current) {
  // We only have the top Fiber that was inserted but we need recurse down its
  var node = current;

  // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.
  var currentParentIsValid = false;
  var currentParent = void 0;
  var currentParentIsContainer = void 0;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;
      findParent: while (true) {
        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        switch (parent.tag) {
          case HostComponent:
            currentParent = parent.stateNode;
            currentParentIsContainer = false;
            break findParent;
          case HostRoot:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
          case HostPortal:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
        }
        parent = parent.return;
      }
      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(node);
      // After all the children have unmounted, it is now safe to remove the
      // node from the tree.
      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      }
      // Don't visit children because we already visited them.
    } else if (node.tag === HostPortal) {
      // When we go into a portal, it becomes the parent to remove from.
      // We will reassign it back when we pop the portal on the way up.
      currentParent = node.stateNode.containerInfo;
      // Visit children because portals might contain host components.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(node);
      // Visit children because we may find more host components below.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }
    if (node === current) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === current) {
        return;
      }
      node = node.return;
      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(current) {
  if (supportsMutation) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(current);
  } else {
    // Detach refs and call componentWillUnmount() on the whole subtree.
    commitNestedUnmounts(current);
  }
  detachFiber(current);
}

function commitWork(current, finishedWork) {
  if (!supportsMutation) {
    commitContainer(finishedWork);
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        var instance = finishedWork.stateNode;
        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps;
          // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.
          var oldProps = current !== null ? current.memoizedProps : newProps;
          var type = finishedWork.type;
          // TODO: Type the updateQueue to be specific to host components.
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
          }
        }
        return;
      }
    case HostText:
      {
        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps;
        // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.
        var oldText = current !== null ? current.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }
    case HostRoot:
      {
        return;
      }
    case Profiler:
      {
        if (enableProfilerTimer) {
          var onRender = finishedWork.memoizedProps.onRender;
          onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.stateNode.duration, finishedWork.treeBaseTime, finishedWork.stateNode.startTime, getCommitTime());

          // Reset actualTime after successful commit.
          // By default, we append to this time to account for errors and pauses.
          finishedWork.stateNode.duration = 0;
        }
        return;
      }
    case TimeoutComponent:
      {
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitResetTextContent(current) {
  if (!supportsMutation) {
    return;
  }
  resetTextContent(current.stateNode);
}

function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  // Unmount the root by rendering null.
  update.tag = CaptureUpdate;
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: null };
  var error = errorInfo.value;
  update.callback = function () {
    onUncaughtError(error);
    logError(fiber, errorInfo);
  };
  return update;
}

function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  update.tag = CaptureUpdate;
  var getDerivedStateFromCatch = fiber.type.getDerivedStateFromCatch;
  if (enableGetDerivedStateFromCatch && typeof getDerivedStateFromCatch === 'function') {
    var error = errorInfo.value;
    update.payload = function () {
      return getDerivedStateFromCatch(error);
    };
  }

  var inst = fiber.stateNode;
  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      if (!enableGetDerivedStateFromCatch || getDerivedStateFromCatch !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromCatch is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this);
      }
      var error = errorInfo.value;
      var stack = errorInfo.stack;
      logError(fiber, errorInfo);
      this.componentDidCatch(error, {
        componentStack: stack !== null ? stack : ''
      });
    };
  }
  return update;
}

function schedulePing(finishedWork) {
  // Once the promise resolves, we should try rendering the non-
  // placeholder state again.
  var currentTime = recalculateCurrentTime();
  var expirationTime = computeExpirationForFiber(currentTime, finishedWork);
  var recoveryUpdate = createUpdate(expirationTime);
  enqueueUpdate(finishedWork, recoveryUpdate, expirationTime);
  scheduleWork$1(finishedWork, expirationTime);
}

function throwException(root, returnFiber, sourceFiber, value, renderIsExpired, renderExpirationTime, currentTimeMs) {
  // The source fiber did not complete.
  sourceFiber.effectTag |= Incomplete;
  // Its effect list is no longer valid.
  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (enableSuspense && value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a thenable.
    var thenable = value;

    var expirationTimeMs = expirationTimeToMs(renderExpirationTime);
    var startTimeMs = expirationTimeMs - 5000;
    var elapsedMs = currentTimeMs - startTimeMs;
    if (elapsedMs < 0) {
      elapsedMs = 0;
    }
    var remainingTimeMs = expirationTimeMs - currentTimeMs;

    // Find the earliest timeout of all the timeouts in the ancestor path.
    // TODO: Alternatively, we could store the earliest timeout on the context
    // stack, rather than searching on every suspend.
    var _workInProgress = returnFiber;
    var earliestTimeoutMs = -1;
    searchForEarliestTimeout: do {
      if (_workInProgress.tag === TimeoutComponent) {
        var current = _workInProgress.alternate;
        if (current !== null && current.memoizedState === true) {
          // A parent Timeout already committed in a placeholder state. We
          // need to handle this promise immediately. In other words, we
          // should never suspend inside a tree that already expired.
          earliestTimeoutMs = 0;
          break searchForEarliestTimeout;
        }
        var timeoutPropMs = _workInProgress.pendingProps.ms;
        if (typeof timeoutPropMs === 'number') {
          if (timeoutPropMs <= 0) {
            earliestTimeoutMs = 0;
            break searchForEarliestTimeout;
          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
            earliestTimeoutMs = timeoutPropMs;
          }
        } else if (earliestTimeoutMs === -1) {
          earliestTimeoutMs = remainingTimeMs;
        }
      }
      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null);

    // Compute the remaining time until the timeout.
    var msUntilTimeout = earliestTimeoutMs - elapsedMs;

    if (renderExpirationTime === Never || msUntilTimeout > 0) {
      // There's still time remaining.
      suspendRoot(root, thenable, msUntilTimeout, renderExpirationTime);
      var onResolveOrReject = function () {
        retrySuspendedRoot(root, renderExpirationTime);
      };
      thenable.then(onResolveOrReject, onResolveOrReject);
      return;
    } else {
      // No time remaining. Need to fallback to placeholder.
      // Find the nearest timeout that can be retried.
      _workInProgress = returnFiber;
      do {
        switch (_workInProgress.tag) {
          case HostRoot:
            {
              // The root expired, but no fallback was provided. Throw a
              // helpful error.
              var message = renderExpirationTime === Sync ? 'A synchronous update was suspended, but no fallback UI ' + 'was provided.' : 'An update was suspended for longer than the timeout, ' + 'but no fallback UI was provided.';
              value = new Error(message);
              break;
            }
          case TimeoutComponent:
            {
              if ((_workInProgress.effectTag & DidCapture) === NoEffect) {
                _workInProgress.effectTag |= ShouldCapture;
                var _onResolveOrReject = schedulePing.bind(null, _workInProgress);
                thenable.then(_onResolveOrReject, _onResolveOrReject);
                return;
              }
              // Already captured during this render. Continue to the next
              // Timeout ancestor.
              break;
            }
        }
        _workInProgress = _workInProgress.return;
      } while (_workInProgress !== null);
    }
  }

  // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;
  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.effectTag |= ShouldCapture;
          var update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, update, renderExpirationTime);
          return;
        }
      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;
        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromCatch === 'function' && enableGetDerivedStateFromCatch || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.effectTag |= ShouldCapture;
          // Schedule the error boundary to re-render using updated state
          var _update = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, _update, renderExpirationTime);
          return;
        }
        break;
      default:
        break;
    }
    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

function unwindWork(workInProgress, renderIsExpired, renderExpirationTime) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        popContextProvider(workInProgress);
        var effectTag = workInProgress.effectTag;
        if (effectTag & ShouldCapture) {
          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var _effectTag = workInProgress.effectTag;
        if (_effectTag & ShouldCapture) {
          workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        return null;
      }
    case TimeoutComponent:
      {
        var _effectTag2 = workInProgress.effectTag;
        if (_effectTag2 & ShouldCapture) {
          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostPortal:
      popHostContainer(workInProgress);
      return null;
    case ContextProvider:
      popProvider(workInProgress);
      return null;
    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        popContextProvider(interruptedWork);
        break;
      }
    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        break;
      }
    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }
    case HostPortal:
      popHostContainer(interruptedWork);
      break;
    case ContextProvider:
      popProvider(interruptedWork);
      break;
    case Profiler:
      if (enableProfilerTimer) {
        // Resume in case we're picking up on work that was paused.
        resumeActualRenderTimerIfPaused();
        recordElapsedActualRenderTime(interruptedWork);
      }
      break;
    default:
      break;
  }
}

var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError = ReactErrorUtils.hasCaughtError;
var clearCaughtError = ReactErrorUtils.clearCaughtError;


var didWarnAboutStateTransition = void 0;
var didWarnSetStateChildContext = void 0;
var warnAboutUpdateOnUnmounted = void 0;
var warnAboutInvalidUpdates = void 0;

{
  didWarnAboutStateTransition = false;
  didWarnSetStateChildContext = false;
  var didWarnStateUpdateForUnmountedComponent = {};

  warnAboutUpdateOnUnmounted = function (fiber) {
    // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.
    var componentName = getComponentName(fiber) || 'ReactClass';
    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
      return;
    }
    warning(false, "Can't call setState (or forceUpdate) on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in the ' + 'componentWillUnmount method.%s', getStackAddendumByWorkInProgressFiber(fiber));
    didWarnStateUpdateForUnmountedComponent[componentName] = true;
  };

  warnAboutInvalidUpdates = function (instance) {
    switch (ReactDebugCurrentFiber.phase) {
      case 'getChildContext':
        if (didWarnSetStateChildContext) {
          return;
        }
        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
        didWarnSetStateChildContext = true;
        break;
      case 'render':
        if (didWarnAboutStateTransition) {
          return;
        }
        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
        didWarnAboutStateTransition = true;
        break;
    }
  };
}

// Represents the current time in ms.
var originalStartTimeMs = now();
var mostRecentCurrentTime = msToExpirationTime(0);
var mostRecentCurrentTimeMs = originalStartTimeMs;

// Used to ensure computeUniqueAsyncExpiration is monotonically increases.
var lastUniqueAsyncExpiration = 0;

// Represents the expiration time that incoming updates should use. (If this
// is NoWork, use the default strategy: async updates in async mode, sync
// updates in sync mode.)
var expirationContext = NoWork;

var isWorking = false;

// The next work in progress fiber that we're currently working on.
var nextUnitOfWork = null;
var nextRoot = null;
// The time at which we're currently rendering work.
var nextRenderExpirationTime = NoWork;
var nextLatestTimeoutMs = -1;
var nextRenderIsExpired = false;

// The next fiber with an effect that we're currently committing.
var nextEffect = null;

var isCommitting$1 = false;

var isRootReadyForCommit = false;

var legacyErrorBoundariesThatAlreadyFailed = null;

// Used for performance tracking.
var interruptedBy = null;

var stashedWorkInProgressProperties = void 0;
var replayUnitOfWork = void 0;
var isReplayingFailedUnitOfWork = void 0;
var originalReplayError = void 0;
var rethrowOriginalError = void 0;
if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
  stashedWorkInProgressProperties = null;
  isReplayingFailedUnitOfWork = false;
  originalReplayError = null;
  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isAsync) {
    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
      // Don't replay promises. Treat everything else like an error.
      // TODO: Need to figure out a different strategy if/when we add
      // support for catching other types.
      return;
    }

    // Restore the original state of the work-in-progress
    if (stashedWorkInProgressProperties === null) {
      // This should never happen. Don't throw because this code is DEV-only.
      warning(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
      return;
    }
    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

    switch (failedUnitOfWork.tag) {
      case HostRoot:
        popHostContainer(failedUnitOfWork);
        popTopLevelContextObject(failedUnitOfWork);
        break;
      case HostComponent:
        popHostContext(failedUnitOfWork);
        break;
      case ClassComponent:
        popContextProvider(failedUnitOfWork);
        break;
      case HostPortal:
        popHostContainer(failedUnitOfWork);
        break;
      case ContextProvider:
        popProvider(failedUnitOfWork);
        break;
    }
    // Replay the begin phase.
    isReplayingFailedUnitOfWork = true;
    originalReplayError = thrownValue;
    invokeGuardedCallback$2(null, workLoop, null, isAsync);
    isReplayingFailedUnitOfWork = false;
    originalReplayError = null;
    if (hasCaughtError()) {
      clearCaughtError();

      if (enableProfilerTimer) {
        // Stop "base" render timer again (after the re-thrown error).
        stopBaseRenderTimerIfRunning();
      }
    } else {
      // If the begin phase did not fail the second time, set this pointer
      // back to the original value.
      nextUnitOfWork = failedUnitOfWork;
    }
  };
  rethrowOriginalError = function () {
    throw originalReplayError;
  };
}

function resetStack() {
  if (nextUnitOfWork !== null) {
    var interruptedWork = nextUnitOfWork.return;
    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
    checkThatStackIsEmpty();
  }

  nextRoot = null;
  nextRenderExpirationTime = NoWork;
  nextLatestTimeoutMs = -1;
  nextRenderIsExpired = false;
  nextUnitOfWork = null;

  isRootReadyForCommit = false;
}

function commitAllHostEffects() {
  while (nextEffect !== null) {
    {
      ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
    }
    recordEffect();

    var effectTag = nextEffect.effectTag;

    if (effectTag & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (effectTag & Ref) {
      var current = nextEffect.alternate;
      if (current !== null) {
        commitDetachRef(current);
      }
    }

    // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every
    // possible bitmap value, we remove the secondary effects from the
    // effect tag and switch on that value.
    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
    switch (primaryEffectTag) {
      case Placement:
        {
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted
          // does and isMounted is deprecated anyway so we should be able
          // to kill this.
          nextEffect.effectTag &= ~Placement;
          break;
        }
      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          nextEffect.effectTag &= ~Placement;

          // Update
          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }
      case Update:
        {
          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }
      case Deletion:
        {
          commitDeletion(nextEffect);
          break;
        }
    }
    nextEffect = nextEffect.nextEffect;
  }

  {
    ReactDebugCurrentFiber.resetCurrentFiber();
  }
}

function commitBeforeMutationLifecycles() {
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if (effectTag & Snapshot) {
      recordEffect();
      var current = nextEffect.alternate;
      commitBeforeMutationLifeCycles(current, nextEffect);
    }

    // Don't cleanup effects yet;
    // This will be done by commitAllLifeCycles()
    nextEffect = nextEffect.nextEffect;
  }
}

function commitAllLifeCycles(finishedRoot, currentTime, committedExpirationTime) {
  {
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.flushPendingDeprecationWarnings();
    }

    if (warnAboutLegacyContextAPI) {
      ReactStrictModeWarnings.flushLegacyContextWarning();
    }
  }
  while (nextEffect !== null) {
    var effectTag = nextEffect.effectTag;

    if (effectTag & (Update | Callback)) {
      recordEffect();
      var current = nextEffect.alternate;
      commitLifeCycles(finishedRoot, current, nextEffect, currentTime, committedExpirationTime);
    }

    if (effectTag & Ref) {
      recordEffect();
      commitAttachRef(nextEffect);
    }

    var next = nextEffect.nextEffect;
    // Ensure that we clean these up so that we don't accidentally keep them.
    // I'm not actually sure this matters because we can't reset firstEffect
    // and lastEffect since they're on every node, not just the effectful
    // ones. So we have to clean everything as we reuse nodes anyway.
    nextEffect.nextEffect = null;
    // Ensure that we reset the effectTag here so that we can rely on effect
    // tags to reason about the current life-cycle.
    nextEffect = next;
  }
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}

function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function commitRoot(finishedWork) {
  isWorking = true;
  isCommitting$1 = true;
  startCommitTimer();

  var root = finishedWork.stateNode;
  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var committedExpirationTime = root.pendingCommitExpirationTime;
  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  root.pendingCommitExpirationTime = NoWork;

  var currentTime = recalculateCurrentTime();

  // Reset this to null before calling lifecycles
  ReactCurrentOwner.current = null;

  var firstEffect = void 0;
  if (finishedWork.effectTag > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if
    // it had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  prepareForCommit(root.containerInfo);

  // Invoke instances of getSnapshotBeforeUpdate before mutation.
  nextEffect = firstEffect;
  startCommitSnapshotEffectsTimer();
  while (nextEffect !== null) {
    var didError = false;
    var error = void 0;
    {
      invokeGuardedCallback$2(null, commitBeforeMutationLifecycles, null);
      if (hasCaughtError()) {
        didError = true;
        error = clearCaughtError();
      }
    }
    if (didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitSnapshotEffectsTimer();

  if (enableProfilerTimer) {
    recordCommitTime();
  }

  // Commit all the side-effects within a tree. We'll do this in two passes.
  // The first pass performs all the host insertions, updates, deletions and
  // ref unmounts.
  nextEffect = firstEffect;
  startCommitHostEffectsTimer();
  while (nextEffect !== null) {
    var _didError = false;
    var _error = void 0;
    {
      invokeGuardedCallback$2(null, commitAllHostEffects, null);
      if (hasCaughtError()) {
        _didError = true;
        _error = clearCaughtError();
      }
    }
    if (_didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitHostEffectsTimer();

  resetAfterCommit(root.containerInfo);

  // The work-in-progress tree is now the current tree. This must come after
  // the first pass of the commit phase, so that the previous tree is still
  // current during componentWillUnmount, but before the second pass, so that
  // the finished work is current during componentDidMount/Update.
  root.current = finishedWork;

  // In the second pass we'll perform all life-cycles and ref callbacks.
  // Life-cycles happen as a separate pass so that all placements, updates,
  // and deletions in the entire tree have already been invoked.
  // This pass also triggers any renderer-specific initial effects.
  nextEffect = firstEffect;
  startCommitLifeCyclesTimer();
  while (nextEffect !== null) {
    var _didError2 = false;
    var _error2 = void 0;
    {
      invokeGuardedCallback$2(null, commitAllLifeCycles, null, root, currentTime, committedExpirationTime);
      if (hasCaughtError()) {
        _didError2 = true;
        _error2 = clearCaughtError();
      }
    }
    if (_didError2) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error2);
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }

  if (enableProfilerTimer) {
    {
      checkActualRenderTimeStackEmpty();
    }
    resetActualRenderTimer();
  }

  isCommitting$1 = false;
  isWorking = false;
  stopCommitLifeCyclesTimer();
  stopCommitTimer();
  if (typeof onCommitRoot === 'function') {
    onCommitRoot(finishedWork.stateNode);
  }
  if (true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
  }

  markCommittedPriorityLevels(root, currentTime, root.current.expirationTime);
  var remainingTime = findNextPendingPriorityLevel(root);
  if (remainingTime === NoWork) {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }
  return remainingTime;
}

function resetExpirationTime(workInProgress, renderTime) {
  if (renderTime !== Never && workInProgress.expirationTime === Never) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  // Check for pending updates.
  var newExpirationTime = NoWork;
  switch (workInProgress.tag) {
    case HostRoot:
    case ClassComponent:
      {
        var updateQueue = workInProgress.updateQueue;
        if (updateQueue !== null) {
          newExpirationTime = updateQueue.expirationTime;
        }
      }
  }

  // TODO: Calls need to visit stateNode

  // Bubble up the earliest expiration time.
  // (And "base" render timers if that feature flag is enabled)
  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
    var treeBaseTime = workInProgress.selfBaseTime;
    var child = workInProgress.child;
    while (child !== null) {
      treeBaseTime += child.treeBaseTime;
      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
        newExpirationTime = child.expirationTime;
      }
      child = child.sibling;
    }
    workInProgress.treeBaseTime = treeBaseTime;
  } else {
    var _child = workInProgress.child;
    while (_child !== null) {
      if (_child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > _child.expirationTime)) {
        newExpirationTime = _child.expirationTime;
      }
      _child = _child.sibling;
    }
  }

  workInProgress.expirationTime = newExpirationTime;
}

function completeUnitOfWork(workInProgress) {
  // Attempt to complete the current unit of work, then move to the
  // next sibling. If there are no more siblings, return to the
  // parent fiber.
  while (true) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current = workInProgress.alternate;
    {
      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
    }

    var returnFiber = workInProgress.return;
    var siblingFiber = workInProgress.sibling;

    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
      // This fiber completed.
      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
      stopWorkTimer(workInProgress);
      resetExpirationTime(workInProgress, nextRenderExpirationTime);
      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      if (next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        return next;
      }

      if (returnFiber !== null &&
      // Do not append effects to parents if a sibling failed to complete
      (returnFiber.effectTag & Incomplete) === NoEffect) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if
        // needed, by doing multiple passes over the effect list. We don't want
        // to schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.
        var effectTag = workInProgress.effectTag;
        // Skip both NoWork and PerformedWork tags when creating the effect list.
        // PerformedWork effect is read by React DevTools but shouldn't be committed.
        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        // We've reached the root.
        isRootReadyForCommit = true;
        return null;
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(workInProgress, nextRenderIsExpired, nextRenderExpirationTime);
      // Because this fiber did not complete, don't reset its expiration time.
      if (workInProgress.effectTag & DidCapture) {
        // Restarting an error boundary
        stopFailedWorkTimer(workInProgress);
      } else {
        stopWorkTimer(workInProgress);
      }

      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      if (_next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        _next.effectTag &= HostEffectMask;
        return _next;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.effectTag |= Incomplete;
      }

      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        return null;
      }
    }
  }

  // Without this explicit null return Flow complains of invalid return type
  // TODO Remove the above while(true) loop
  // eslint-disable-next-line no-unreachable
  return null;
}

function performUnitOfWork(workInProgress) {
  // The current, flushed, state of this fiber is the alternate.
  // Ideally nothing should rely on this, but relying on it here
  // means that we don't need an additional field on the work in
  // progress.
  var current = workInProgress.alternate;

  // See if beginning this work spawns more work.
  startWorkTimer(workInProgress);
  {
    ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
  }

  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
  }

  var next = void 0;
  if (enableProfilerTimer) {
    if (workInProgress.mode & ProfileMode) {
      startBaseRenderTimer();
    }

    next = beginWork(current, workInProgress, nextRenderExpirationTime);

    if (workInProgress.mode & ProfileMode) {
      // Update "base" time if the render wasn't bailed out on.
      recordElapsedBaseRenderTimeIfRunning(workInProgress);
      stopBaseRenderTimerIfRunning();
    }
  } else {
    next = beginWork(current, workInProgress, nextRenderExpirationTime);
  }

  {
    ReactDebugCurrentFiber.resetCurrentFiber();
    if (isReplayingFailedUnitOfWork) {
      // Currently replaying a failed unit of work. This should be unreachable,
      // because the render phase is meant to be idempotent, and it should
      // have thrown again. Since it didn't, rethrow the original error, so
      // React's internal stack is not misaligned.
      rethrowOriginalError();
    }
  }
  if (true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
  }

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    next = completeUnitOfWork(workInProgress);
  }

  ReactCurrentOwner.current = null;

  return next;
}

function workLoop(isAsync) {
  if (!isAsync) {
    // Flush all expired work.
    while (nextUnitOfWork !== null) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }
  } else {
    // Flush asynchronous work until the deadline runs out of time.
    while (nextUnitOfWork !== null && !shouldYield()) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }

    if (enableProfilerTimer) {
      // If we didn't finish, pause the "actual" render timer.
      // We'll restart it when we resume work.
      pauseActualRenderTimerIfRunning();
    }
  }
}

function renderRoot(root, expirationTime, isAsync) {
  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  isWorking = true;

  // Check if we're starting from a fresh stack, or if we're resuming from
  // previously yielded work.
  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
    // Reset the stack and start working from the root.
    resetStack();
    nextRoot = root;
    nextRenderExpirationTime = expirationTime;
    nextLatestTimeoutMs = -1;
    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
    root.pendingCommitExpirationTime = NoWork;
  }

  var didFatal = false;

  nextRenderIsExpired = !isAsync || nextRenderExpirationTime <= mostRecentCurrentTime;

  startWorkLoopTimer(nextUnitOfWork);

  do {
    try {
      workLoop(isAsync);
    } catch (thrownValue) {
      if (enableProfilerTimer) {
        // Stop "base" render timer in the event of an error.
        stopBaseRenderTimerIfRunning();
      }

      if (nextUnitOfWork === null) {
        // This is a fatal error.
        didFatal = true;
        onUncaughtError(thrownValue);
      } else {
        {
          // Reset global debug state
          // We assume this is defined in DEV
          resetCurrentlyProcessingQueue();
        }

        var failedUnitOfWork = nextUnitOfWork;
        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
          replayUnitOfWork(failedUnitOfWork, thrownValue, isAsync);
        }

        // TODO: we already know this isn't true in some cases.
        // At least this shows a nicer error message until we figure out the cause.
        // https://github.com/facebook/react/issues/12449#issuecomment-386727431
        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;

        var sourceFiber = nextUnitOfWork;
        var returnFiber = sourceFiber.return;
        if (returnFiber === null) {
          // This is the root. The root could capture its own errors. However,
          // we don't know if it errors before or after we pushed the host
          // context. This information is needed to avoid a stack mismatch.
          // Because we're not sure, treat this as a fatal error. We could track
          // which phase it fails in, but doesn't seem worth it. At least
          // for now.
          didFatal = true;
          onUncaughtError(thrownValue);
          break;
        }
        throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderIsExpired, nextRenderExpirationTime, mostRecentCurrentTimeMs);
        nextUnitOfWork = completeUnitOfWork(sourceFiber);
      }
    }
    break;
  } while (true);

  // We're done performing work. Time to clean up.
  var didCompleteRoot = false;
  isWorking = false;

  // Yield back to main thread.
  if (didFatal) {
    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
    interruptedBy = null;
    // There was a fatal error.
    {
      resetStackAfterFatalErrorInDev();
    }
    return null;
  } else if (nextUnitOfWork === null) {
    // We reached the root.
    if (isRootReadyForCommit) {
      didCompleteRoot = true;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
      // The root successfully completed. It's ready for commit.
      root.pendingCommitExpirationTime = expirationTime;
      var finishedWork = root.current.alternate;
      return finishedWork;
    } else {
      // The root did not complete.
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
      !!nextRenderIsExpired ? invariant(false, 'Expired work should have completed. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      markSuspendedPriorityLevel(root, expirationTime);
      if (nextLatestTimeoutMs >= 0) {
        setTimeout(function () {
          retrySuspendedRoot(root, expirationTime);
        }, nextLatestTimeoutMs);
      }
      var firstUnblockedExpirationTime = findNextPendingPriorityLevel(root);
      onBlock(firstUnblockedExpirationTime);
      return null;
    }
  } else {
    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
    interruptedBy = null;
    // There's more work to do, but we ran out of time. Yield back to
    // the renderer.
    return null;
  }
}

function dispatch(sourceFiber, value, expirationTime) {
  !(!isWorking || isCommitting$1) ? invariant(false, 'dispatch: Cannot dispatch during the render phase.') : void 0;

  var fiber = sourceFiber.return;
  while (fiber !== null) {
    switch (fiber.tag) {
      case ClassComponent:
        var ctor = fiber.type;
        var instance = fiber.stateNode;
        if (typeof ctor.getDerivedStateFromCatch === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
          var errorInfo = createCapturedValue(value, sourceFiber);
          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
          enqueueUpdate(fiber, update, expirationTime);
          scheduleWork$1(fiber, expirationTime);
          return;
        }
        break;
      case HostRoot:
        {
          var _errorInfo = createCapturedValue(value, sourceFiber);
          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
          enqueueUpdate(fiber, _update, expirationTime);
          scheduleWork$1(fiber, expirationTime);
          return;
        }
    }
    fiber = fiber.return;
  }

  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    var rootFiber = sourceFiber;
    var _errorInfo2 = createCapturedValue(value, rootFiber);
    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
    enqueueUpdate(rootFiber, _update2, expirationTime);
    scheduleWork$1(rootFiber, expirationTime);
  }
}

function captureCommitPhaseError(fiber, error) {
  return dispatch(fiber, error, Sync);
}

function computeAsyncExpiration(currentTime) {
  // Given the current clock time, returns an expiration time. We use rounding
  // to batch like updates together.
  // Should complete within ~1000ms. 1200ms max.
  var expirationMs = 5000;
  var bucketSizeMs = 250;
  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
}

function computeInteractiveExpiration(currentTime) {
  var expirationMs = void 0;
  // We intentionally set a higher expiration time for interactive updates in
  // dev than in production.
  // If the main thread is being blocked so long that you hit the expiration,
  // it's a problem that could be solved with better scheduling.
  // People will be more likely to notice this and fix it with the long
  // expiration time in development.
  // In production we opt for better UX at the risk of masking scheduling
  // problems, by expiring fast.
  {
    // Should complete within ~500ms. 600ms max.
    expirationMs = 500;
  }
  var bucketSizeMs = 100;
  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
}

// Creates a unique async expiration time.
function computeUniqueAsyncExpiration() {
  var currentTime = recalculateCurrentTime();
  var result = computeAsyncExpiration(currentTime);
  if (result <= lastUniqueAsyncExpiration) {
    // Since we assume the current time monotonically increases, we only hit
    // this branch when computeUniqueAsyncExpiration is fired multiple times
    // within a 200ms window (or whatever the async bucket size is).
    result = lastUniqueAsyncExpiration + 1;
  }
  lastUniqueAsyncExpiration = result;
  return lastUniqueAsyncExpiration;
}

function computeExpirationForFiber(currentTime, fiber) {
  var expirationTime = void 0;
  if (expirationContext !== NoWork) {
    // An explicit expiration context was set;
    expirationTime = expirationContext;
  } else if (isWorking) {
    if (isCommitting$1) {
      // Updates that occur during the commit phase should have sync priority
      // by default.
      expirationTime = Sync;
    } else {
      // Updates during the render phase should expire at the same time as
      // the work that is being rendered.
      expirationTime = nextRenderExpirationTime;
    }
  } else {
    // No explicit expiration context was set, and we're not currently
    // performing work. Calculate a new expiration time.
    if (fiber.mode & AsyncMode) {
      if (isBatchingInteractiveUpdates) {
        // This is an interactive update
        expirationTime = computeInteractiveExpiration(currentTime);
      } else {
        // This is an async update
        expirationTime = computeAsyncExpiration(currentTime);
      }
    } else {
      // This is a sync update
      expirationTime = Sync;
    }
  }
  if (isBatchingInteractiveUpdates) {
    // This is an interactive update. Keep track of the lowest pending
    // interactive expiration time. This allows us to synchronously flush
    // all interactive updates when needed.
    if (lowestPendingInteractiveExpirationTime === NoWork || expirationTime > lowestPendingInteractiveExpirationTime) {
      lowestPendingInteractiveExpirationTime = expirationTime;
    }
  }
  return expirationTime;
}

// TODO: Rename this to scheduleTimeout or something
function suspendRoot(root, thenable, timeoutMs, suspendedTime) {
  // Schedule the timeout.
  if (timeoutMs >= 0 && nextLatestTimeoutMs < timeoutMs) {
    nextLatestTimeoutMs = timeoutMs;
  }
}

function retrySuspendedRoot(root, suspendedTime) {
  markPingedPriorityLevel(root, suspendedTime);
  var retryTime = findNextPendingPriorityLevel(root);
  if (retryTime !== NoWork) {
    requestRetry(root, retryTime);
  }
}

function scheduleWork$1(fiber, expirationTime) {
  recordScheduleUpdate();

  {
    if (fiber.tag === ClassComponent) {
      var instance = fiber.stateNode;
      warnAboutInvalidUpdates(instance);
    }
  }

  var node = fiber;
  while (node !== null) {
    // Walk the parent path to the root and update each node's
    // expiration time.
    if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
      node.expirationTime = expirationTime;
    }
    if (node.alternate !== null) {
      if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
        node.alternate.expirationTime = expirationTime;
      }
    }
    if (node.return === null) {
      if (node.tag === HostRoot) {
        var root = node.stateNode;
        if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime < nextRenderExpirationTime) {
          // This is an interruption. (Used for performance tracking.)
          interruptedBy = fiber;
          resetStack();
        }
        markPendingPriorityLevel(root, expirationTime);
        var nextExpirationTimeToWorkOn = findNextPendingPriorityLevel(root);
        if (
        // If we're in the render phase, we don't need to schedule this root
        // for an update, because we'll do it before we exit...
        !isWorking || isCommitting$1 ||
        // ...unless this is a different root than the one we're rendering.
        nextRoot !== root) {
          requestWork(root, nextExpirationTimeToWorkOn);
        }
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
          invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
        }
      } else {
        {
          if (fiber.tag === ClassComponent) {
            warnAboutUpdateOnUnmounted(fiber);
          }
        }
        return;
      }
    }
    node = node.return;
  }
}

function recalculateCurrentTime() {
  // Subtract initial time so it fits inside 32bits
  mostRecentCurrentTimeMs = now() - originalStartTimeMs;
  mostRecentCurrentTime = msToExpirationTime(mostRecentCurrentTimeMs);
  return mostRecentCurrentTime;
}

function deferredUpdates(fn) {
  var previousExpirationContext = expirationContext;
  var currentTime = recalculateCurrentTime();
  expirationContext = computeAsyncExpiration(currentTime);
  try {
    return fn();
  } finally {
    expirationContext = previousExpirationContext;
  }
}
function syncUpdates(fn, a, b, c, d) {
  var previousExpirationContext = expirationContext;
  expirationContext = Sync;
  try {
    return fn(a, b, c, d);
  } finally {
    expirationContext = previousExpirationContext;
  }
}

// TODO: Everything below this is written as if it has been lifted to the
// renderers. I'll do this in a follow-up.

// Linked-list of roots
var firstScheduledRoot = null;
var lastScheduledRoot = null;

var callbackExpirationTime = NoWork;
var callbackID = -1;
var isRendering = false;
var nextFlushedRoot = null;
var nextFlushedExpirationTime = NoWork;
var lowestPendingInteractiveExpirationTime = NoWork;
var deadlineDidExpire = false;
var hasUnhandledError = false;
var unhandledError = null;
var deadline = null;

var isBatchingUpdates = false;
var isUnbatchingUpdates = false;
var isBatchingInteractiveUpdates = false;

var completedBatches = null;

// Use these to prevent an infinite loop of nested updates
var NESTED_UPDATE_LIMIT = 1000;
var nestedUpdateCount = 0;

var timeHeuristicForUnitOfWork = 1;

function scheduleCallbackWithExpiration(expirationTime) {
  if (callbackExpirationTime !== NoWork) {
    // A callback is already scheduled. Check its expiration time (timeout).
    if (expirationTime > callbackExpirationTime) {
      // Existing callback has sufficient timeout. Exit.
      return;
    } else {
      // Existing callback has insufficient timeout. Cancel and schedule a
      // new one.
      cancelDeferredCallback(callbackID);
    }
    // The request callback timer is already running. Don't start a new one.
  } else {
    startRequestCallbackTimer();
  }

  // Compute a timeout for the given expiration time.
  var currentMs = now() - originalStartTimeMs;
  var expirationMs = expirationTimeToMs(expirationTime);
  var timeout = expirationMs - currentMs;

  callbackExpirationTime = expirationTime;
  callbackID = scheduleDeferredCallback(performAsyncWork, { timeout: timeout });
}

function requestRetry(root, expirationTime) {
  if (root.remainingExpirationTime === NoWork || root.remainingExpirationTime < expirationTime) {
    // For a retry, only update the remaining expiration time if it has a
    // *lower priority* than the existing value. This is because, on a retry,
    // we should attempt to coalesce as much as possible.
    requestWork(root, expirationTime);
  }
}

// requestWork is called by the scheduler whenever a root receives an update.
// It's up to the renderer to call renderRoot at some point in the future.
function requestWork(root, expirationTime) {
  addRootToSchedule(root, expirationTime);

  if (isRendering) {
    // Prevent reentrancy. Remaining work will be scheduled at the end of
    // the currently rendering batch.
    return;
  }

  if (isBatchingUpdates) {
    // Flush work at the end of the batch.
    if (isUnbatchingUpdates) {
      // ...unless we're inside unbatchedUpdates, in which case we should
      // flush it now.
      nextFlushedRoot = root;
      nextFlushedExpirationTime = Sync;
      performWorkOnRoot(root, Sync, false);
    }
    return;
  }

  // TODO: Get rid of Sync and use current time?
  if (expirationTime === Sync) {
    performSyncWork();
  } else {
    scheduleCallbackWithExpiration(expirationTime);
  }
}

function addRootToSchedule(root, expirationTime) {
  // Add the root to the schedule.
  // Check if this root is already part of the schedule.
  if (root.nextScheduledRoot === null) {
    // This root is not already scheduled. Add it.
    root.remainingExpirationTime = expirationTime;
    if (lastScheduledRoot === null) {
      firstScheduledRoot = lastScheduledRoot = root;
      root.nextScheduledRoot = root;
    } else {
      lastScheduledRoot.nextScheduledRoot = root;
      lastScheduledRoot = root;
      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
    }
  } else {
    // This root is already scheduled, but its priority may have increased.
    var remainingExpirationTime = root.remainingExpirationTime;
    if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
      // Update the priority.
      root.remainingExpirationTime = expirationTime;
    }
  }
}

function findHighestPriorityRoot() {
  var highestPriorityWork = NoWork;
  var highestPriorityRoot = null;
  if (lastScheduledRoot !== null) {
    var previousScheduledRoot = lastScheduledRoot;
    var root = firstScheduledRoot;
    while (root !== null) {
      var remainingExpirationTime = root.remainingExpirationTime;
      if (remainingExpirationTime === NoWork) {
        // This root no longer has work. Remove it from the scheduler.

        // TODO: This check is redudant, but Flow is confused by the branch
        // below where we set lastScheduledRoot to null, even though we break
        // from the loop right after.
        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        if (root === root.nextScheduledRoot) {
          // This is the only root in the list.
          root.nextScheduledRoot = null;
          firstScheduledRoot = lastScheduledRoot = null;
          break;
        } else if (root === firstScheduledRoot) {
          // This is the first root in the list.
          var next = root.nextScheduledRoot;
          firstScheduledRoot = next;
          lastScheduledRoot.nextScheduledRoot = next;
          root.nextScheduledRoot = null;
        } else if (root === lastScheduledRoot) {
          // This is the last root in the list.
          lastScheduledRoot = previousScheduledRoot;
          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
          root.nextScheduledRoot = null;
          break;
        } else {
          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
          root.nextScheduledRoot = null;
        }
        root = previousScheduledRoot.nextScheduledRoot;
      } else {
        if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
          // Update the priority, if it's higher
          highestPriorityWork = remainingExpirationTime;
          highestPriorityRoot = root;
        }
        if (root === lastScheduledRoot) {
          break;
        }
        previousScheduledRoot = root;
        root = root.nextScheduledRoot;
      }
    }
  }

  // If the next root is the same as the previous root, this is a nested
  // update. To prevent an infinite loop, increment the nested update count.
  var previousFlushedRoot = nextFlushedRoot;
  if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot && highestPriorityWork === Sync) {
    nestedUpdateCount++;
  } else {
    // Reset whenever we switch roots.
    nestedUpdateCount = 0;
  }
  nextFlushedRoot = highestPriorityRoot;
  nextFlushedExpirationTime = highestPriorityWork;
}

function performAsyncWork(dl) {
  performWork(NoWork, true, dl);
}

function performSyncWork() {
  performWork(Sync, false, null);
}

function performWork(minExpirationTime, isAsync, dl) {
  deadline = dl;

  // Keep working on roots until there's no more work, or until the we reach
  // the deadline.
  findHighestPriorityRoot();

  if (enableProfilerTimer) {
    resumeActualRenderTimerIfPaused();
  }

  if (enableUserTimingAPI && deadline !== null) {
    var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
    var timeout = expirationTimeToMs(nextFlushedExpirationTime);
    stopRequestCallbackTimer(didExpire, timeout);
  }

  if (isAsync) {
    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime) && (!deadlineDidExpire || recalculateCurrentTime() >= nextFlushedExpirationTime)) {
      recalculateCurrentTime();
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, !deadlineDidExpire);
      findHighestPriorityRoot();
    }
  } else {
    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime)) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
      findHighestPriorityRoot();
    }
  }

  // We're done flushing work. Either we ran out of time in this callback,
  // or there's no more work left with sufficient priority.

  // If we're inside a callback, set this to false since we just completed it.
  if (deadline !== null) {
    callbackExpirationTime = NoWork;
    callbackID = -1;
  }
  // If there's work left over, schedule a new callback.
  if (nextFlushedExpirationTime !== NoWork) {
    scheduleCallbackWithExpiration(nextFlushedExpirationTime);
  }

  // Clean-up.
  deadline = null;
  deadlineDidExpire = false;

  finishRendering();
}

function flushRoot(root, expirationTime) {
  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
  // Perform work on root as if the given expiration time is the current time.
  // This has the effect of synchronously flushing all work up to and
  // including the given time.
  nextFlushedRoot = root;
  nextFlushedExpirationTime = expirationTime;
  performWorkOnRoot(root, expirationTime, false);
  // Flush any sync work that was scheduled by lifecycles
  performSyncWork();
  finishRendering();
}

function finishRendering() {
  nestedUpdateCount = 0;

  if (completedBatches !== null) {
    var batches = completedBatches;
    completedBatches = null;
    for (var i = 0; i < batches.length; i++) {
      var batch = batches[i];
      try {
        batch._onComplete();
      } catch (error) {
        if (!hasUnhandledError) {
          hasUnhandledError = true;
          unhandledError = error;
        }
      }
    }
  }

  if (hasUnhandledError) {
    var error = unhandledError;
    unhandledError = null;
    hasUnhandledError = false;
    throw error;
  }
}

function performWorkOnRoot(root, expirationTime, isAsync) {
  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  isRendering = true;

  // Check if this is async work or sync/expired work.
  if (!isAsync) {
    // Flush sync work.
    var finishedWork = root.finishedWork;
    if (finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, finishedWork, expirationTime);
    } else {
      root.finishedWork = null;
      finishedWork = renderRoot(root, expirationTime, false);
      if (finishedWork !== null) {
        // We've completed the root. Commit it.
        completeRoot(root, finishedWork, expirationTime);
      }
    }
  } else {
    // Flush async work.
    var _finishedWork = root.finishedWork;
    if (_finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, _finishedWork, expirationTime);
    } else {
      root.finishedWork = null;
      _finishedWork = renderRoot(root, expirationTime, true);
      if (_finishedWork !== null) {
        // We've completed the root. Check the deadline one more time
        // before committing.
        if (!shouldYield()) {
          // Still time left. Commit the root.
          completeRoot(root, _finishedWork, expirationTime);
        } else {
          // There's no time left. Mark this root as complete. We'll come
          // back and commit it later.
          root.finishedWork = _finishedWork;

          if (enableProfilerTimer) {
            // If we didn't finish, pause the "actual" render timer.
            // We'll restart it when we resume work.
            pauseActualRenderTimerIfRunning();
          }
        }
      }
    }
  }

  isRendering = false;
}

function completeRoot(root, finishedWork, expirationTime) {
  // Check if there's a batch that matches this expiration time.
  var firstBatch = root.firstBatch;
  if (firstBatch !== null && firstBatch._expirationTime <= expirationTime) {
    if (completedBatches === null) {
      completedBatches = [firstBatch];
    } else {
      completedBatches.push(firstBatch);
    }
    if (firstBatch._defer) {
      // This root is blocked from committing by a batch. Unschedule it until
      // we receive another update.
      root.finishedWork = finishedWork;
      root.remainingExpirationTime = NoWork;
      return;
    }
  }

  // Commit the root.
  root.finishedWork = null;
  root.remainingExpirationTime = commitRoot(finishedWork);
}

// When working on async work, the reconciler asks the renderer if it should
// yield execution. For DOM, we implement this with requestIdleCallback.
function shouldYield() {
  if (deadline === null) {
    return false;
  }
  if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
    // Disregard deadline.didTimeout. Only expired work should be flushed
    // during a timeout. This path is only hit for non-expired work.
    return false;
  }
  deadlineDidExpire = true;
  return true;
}

function onUncaughtError(error) {
  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  // Unschedule this root so we don't work on it again until there's
  // another update.
  nextFlushedRoot.remainingExpirationTime = NoWork;
  if (!hasUnhandledError) {
    hasUnhandledError = true;
    unhandledError = error;
  }
}

function onBlock(remainingExpirationTime) {
  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  // This root was blocked. Unschedule it until there's another update.
  nextFlushedRoot.remainingExpirationTime = remainingExpirationTime;
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function batchedUpdates$1(fn, a) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return fn(a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function unbatchedUpdates(fn, a) {
  if (isBatchingUpdates && !isUnbatchingUpdates) {
    isUnbatchingUpdates = true;
    try {
      return fn(a);
    } finally {
      isUnbatchingUpdates = false;
    }
  }
  return fn(a);
}

// TODO: Batching should be implemented at the renderer level, not within
// the reconciler.
function flushSync(fn, a) {
  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return syncUpdates(fn, a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    performSyncWork();
  }
}

function interactiveUpdates$1(fn, a, b) {
  if (isBatchingInteractiveUpdates) {
    return fn(a, b);
  }
  // If there are any pending interactive updates, synchronously flush them.
  // This needs to happen before we read any handlers, because the effect of
  // the previous event may influence which handlers are called during
  // this event.
  if (!isBatchingUpdates && !isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPendingInteractiveExpirationTime, false, null);
    lowestPendingInteractiveExpirationTime = NoWork;
  }
  var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingInteractiveUpdates = true;
  isBatchingUpdates = true;
  try {
    return fn(a, b);
  } finally {
    isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

function flushInteractiveUpdates$1() {
  if (!isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPendingInteractiveExpirationTime, false, null);
    lowestPendingInteractiveExpirationTime = NoWork;
  }
}

function flushControlled(fn) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    syncUpdates(fn);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performWork(Sync, false, null);
    }
  }
}

// 0 is PROD, 1 is DEV.
// Might add PROFILE later.


var didWarnAboutNestedUpdates = void 0;

{
  didWarnAboutNestedUpdates = false;
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);
  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
}

function scheduleRootUpdate(current, element, expirationTime, callback) {
  {
    if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;
      warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
    }
  }

  var update = createUpdate(expirationTime);
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: element };

  callback = callback === undefined ? null : callback;
  if (callback !== null) {
    !(typeof callback === 'function') ? warning(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
    update.callback = callback;
  }
  enqueueUpdate(current, update, expirationTime);

  scheduleWork$1(current, expirationTime);
  return expirationTime;
}

function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
  // TODO: If this is a nested container, this won't be the root.
  var current = container.current;

  {
    if (ReactFiberInstrumentation_1.debugTool) {
      if (current.alternate === null) {
        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
      } else if (element === null) {
        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
      } else {
        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
      }
    }
  }

  var context = getContextForSubtree(parentComponent);
  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  return scheduleRootUpdate(current, element, expirationTime, callback);
}

function findHostInstance(component) {
  var fiber = get(component);
  if (fiber === undefined) {
    if (typeof component.render === 'function') {
      invariant(false, 'Unable to find node on an unmounted component.');
    } else {
      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
    }
  }
  var hostFiber = findCurrentHostFiber(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function createContainer(containerInfo, isAsync, hydrate) {
  return createFiberRoot(containerInfo, isAsync, hydrate);
}

function updateContainer(element, container, parentComponent, callback) {
  var current = container.current;
  var currentTime = recalculateCurrentTime();
  var expirationTime = computeExpirationForFiber(currentTime, current);
  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
}

function getPublicRootInstance(container) {
  var containerFiber = container.current;
  if (!containerFiber.child) {
    return null;
  }
  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);
    default:
      return containerFiber.child.stateNode;
  }
}

function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

  return injectInternals(_assign({}, devToolsConfig, {
    findHostInstanceByFiber: function (fiber) {
      var hostFiber = findCurrentHostFiber(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    },
    findFiberByHostInstance: function (instance) {
      if (!findFiberByHostInstance) {
        // Might not be implemented by the renderer.
        return null;
      }
      return findFiberByHostInstance(instance);
    }
  }));
}

// This file intentionally does *not* have the Flow annotation.
// Don't add it. See `./inline-typed.js` for an explanation.



var DOMRenderer = Object.freeze({
	updateContainerAtExpirationTime: updateContainerAtExpirationTime,
	createContainer: createContainer,
	updateContainer: updateContainer,
	flushRoot: flushRoot,
	requestWork: requestWork,
	computeUniqueAsyncExpiration: computeUniqueAsyncExpiration,
	batchedUpdates: batchedUpdates$1,
	unbatchedUpdates: unbatchedUpdates,
	deferredUpdates: deferredUpdates,
	syncUpdates: syncUpdates,
	interactiveUpdates: interactiveUpdates$1,
	flushInteractiveUpdates: flushInteractiveUpdates$1,
	flushControlled: flushControlled,
	flushSync: flushSync,
	getPublicRootInstance: getPublicRootInstance,
	findHostInstance: findHostInstance,
	findHostInstanceWithNoPortals: findHostInstanceWithNoPortals,
	injectIntoDevTools: injectIntoDevTools
});

function createPortal$1(children, containerInfo,
// TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.4.0';

// TODO: This type is shared between the reconciler and ReactDOM, but will
// eventually be lifted out to the renderer.
var topLevelUpdateWarnings = void 0;
var warnOnInvalidCallback = void 0;
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }

  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
      if (hostInstance) {
        !(hostInstance.parentNode === container) ? warning(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warning(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warning(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
  };

  warnOnInvalidCallback = function (callback, callerName) {
    !(callback === null || typeof callback === 'function') ? warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
  };
}

injection$2.injectFiberControlledHostComponent(ReactDOMFiberComponent);

function ReactBatch(root) {
  var expirationTime = computeUniqueAsyncExpiration();
  this._expirationTime = expirationTime;
  this._root = root;
  this._next = null;
  this._callbacks = null;
  this._didComplete = false;
  this._hasChildren = false;
  this._children = null;
  this._defer = true;
}
ReactBatch.prototype.render = function (children) {
  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
  this._hasChildren = true;
  this._children = children;
  var internalRoot = this._root._internalRoot;
  var expirationTime = this._expirationTime;
  var work = new ReactWork();
  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
  return work;
};
ReactBatch.prototype.then = function (onComplete) {
  if (this._didComplete) {
    onComplete();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onComplete);
};
ReactBatch.prototype.commit = function () {
  var internalRoot = this._root._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

  if (!this._hasChildren) {
    // This batch is empty. Return.
    this._next = null;
    this._defer = false;
    return;
  }

  var expirationTime = this._expirationTime;

  // Ensure this is the first batch in the list.
  if (firstBatch !== this) {
    // This batch is not the earliest batch. We need to move it to the front.
    // Update its expiration time to be the expiration time of the earliest
    // batch, so that we can flush it without flushing the other batches.
    if (this._hasChildren) {
      expirationTime = this._expirationTime = firstBatch._expirationTime;
      // Rendering this batch again ensures its children will be the final state
      // when we flush (updates are processed in insertion order: last
      // update wins).
      // TODO: This forces a restart. Should we print a warning?
      this.render(this._children);
    }

    // Remove the batch from the list.
    var previous = null;
    var batch = firstBatch;
    while (batch !== this) {
      previous = batch;
      batch = batch._next;
    }
    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
    previous._next = batch._next;

    // Add it to the front.
    this._next = firstBatch;
    firstBatch = internalRoot.firstBatch = this;
  }

  // Synchronously flush all the work up to this batch's expiration time.
  this._defer = false;
  flushRoot(internalRoot, expirationTime);

  // Pop the batch from the list.
  var next = this._next;
  this._next = null;
  firstBatch = internalRoot.firstBatch = next;

  // Append the next earliest batch's children to the update queue.
  if (firstBatch !== null && firstBatch._hasChildren) {
    firstBatch.render(firstBatch._children);
  }
};
ReactBatch.prototype._onComplete = function () {
  if (this._didComplete) {
    return;
  }
  this._didComplete = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback = callbacks[i];
    _callback();
  }
};

function ReactWork() {
  this._callbacks = null;
  this._didCommit = false;
  // TODO: Avoid need to bind by replacing callbacks in the update queue with
  // list of Work objects.
  this._onCommit = this._onCommit.bind(this);
}
ReactWork.prototype.then = function (onCommit) {
  if (this._didCommit) {
    onCommit();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onCommit);
};
ReactWork.prototype._onCommit = function () {
  if (this._didCommit) {
    return;
  }
  this._didCommit = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback2 = callbacks[i];
    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
    _callback2();
  }
};

function ReactRoot(container, isAsync, hydrate) {
  var root = createContainer(container, isAsync, hydrate);
  this._internalRoot = root;
}
ReactRoot.prototype.render = function (children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.unmount = function (callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(null, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, parentComponent, work._onCommit);
  return work;
};
ReactRoot.prototype.createBatch = function () {
  var batch = new ReactBatch(this);
  var expirationTime = batch._expirationTime;

  var internalRoot = this._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  if (firstBatch === null) {
    internalRoot.firstBatch = batch;
    batch._next = null;
  } else {
    // Insert sorted by expiration time then insertion order
    var insertAfter = null;
    var insertBefore = firstBatch;
    while (insertBefore !== null && insertBefore._expirationTime <= expirationTime) {
      insertAfter = insertBefore;
      insertBefore = insertBefore._next;
    }
    batch._next = insertBefore;
    if (insertAfter !== null) {
      insertAfter._next = batch;
    }
  }

  return batch;
};

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

injection$3.injectRenderer(DOMRenderer);

var warnedAboutHydrateAPI = false;

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
  // First clear any existing content.
  if (!shouldHydrate) {
    var warned = false;
    var rootSibling = void 0;
    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;
          warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }
      container.removeChild(rootSibling);
    }
  }
  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;
      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }
  // Legacy roots are not async by default.
  var isAsync = false;
  return new ReactRoot(container, isAsync, shouldHydrate);
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  // TODO: Ensure all entry points contain this check
  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

  {
    topLevelUpdateWarnings(container);
  }

  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.
  var root = container._reactRootContainer;
  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    if (typeof callback === 'function') {
      var originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        originalCallback.call(instance);
      };
    }
    // Initial mount should not be batched.
    unbatchedUpdates(function () {
      if (parentComponent != null) {
        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
      } else {
        root.render(children, callback);
      }
    });
  } else {
    if (typeof callback === 'function') {
      var _originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        _originalCallback.call(instance);
      };
    }
    // Update
    if (parentComponent != null) {
      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
    } else {
      root.render(children, callback);
    }
  }
  return getPublicRootInstance(root._internalRoot);
}

function createPortal(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
  // TODO: pass ReactDOM portal implementation as third argument
  return createPortal$1(children, container, null, key);
}

var ReactDOM = {
  createPortal: createPortal,

  findDOMNode: function (componentOrElement) {
    {
      var owner = ReactCurrentOwner.current;
      if (owner !== null && owner.stateNode !== null) {
        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
        !warnedAboutRefsInRender ? warning(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component') : void 0;
        owner.stateNode._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === ELEMENT_NODE) {
      return componentOrElement;
    }

    return findHostInstance(componentOrElement);
  },
  hydrate: function (element, container, callback) {
    // TODO: throw or warn if we couldn't hydrate?
    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
  },
  render: function (element, container, callback) {
    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
  },
  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
  },
  unmountComponentAtNode: function (container) {
    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

    if (container._reactRootContainer) {
      {
        var rootEl = getReactRootElementInContainer(container);
        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
        !!renderedByDifferentReact ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
      }

      // Unmount should not be batched.
      unbatchedUpdates(function () {
        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
          container._reactRootContainer = null;
        });
      });
      // If you call unmountComponentAtNode twice in quick succession, you'll
      // get `true` twice. That's probably fine?
      return true;
    } else {
      {
        var _rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

        !!hasNonRootReactChild ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
  },


  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: function () {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;
      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }
    return createPortal.apply(undefined, arguments);
  },


  unstable_batchedUpdates: batchedUpdates$1,

  unstable_deferredUpdates: deferredUpdates,

  flushSync: flushSync,

  unstable_flushControlled: flushControlled,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // For TapEventPlugin which is popular in open source
    EventPluginHub: EventPluginHub,
    // Used by test-utils
    EventPluginRegistry: EventPluginRegistry,
    EventPropagators: EventPropagators,
    ReactControlledComponent: ReactControlledComponent,
    ReactDOMComponentTree: ReactDOMComponentTree,
    ReactDOMEventListener: ReactDOMEventListener
  }
};

ReactDOM.unstable_createRoot = function createRoot(container, options) {
  var hydrate = options != null && options.hydrate === true;
  return new ReactRoot(container, true, hydrate);
};

var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol;
      // Don't warn in exotic cases like chrome-extension://.
      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactDom = ReactDOM$3.default ? ReactDOM$3.default : ReactDOM$3;

module.exports = reactDom;
  })();
}


/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js");
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.4.0
 * react.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");
var invariant = __webpack_require__(/*! fbjs/lib/invariant */ "./node_modules/fbjs/lib/invariant.js");
var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ "./node_modules/fbjs/lib/emptyObject.js");
var warning = __webpack_require__(/*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js");
var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js");
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.4.0';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

// Relying on the `invariant()` implementation lets us
// have preserve the format and params in the www builds.

// Exports ReactDOM.createRoot


// Experimental error-boundary API that can recover from errors within a single
// render phase

// Suspense
var enableSuspense = false;
// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:


// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.


// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


// Warn about legacy context API


// Gather advanced timing metrics for Profiler subtrees.


// Fires getDerivedStateFromProps for state *or* props changes


// Only used in www builds.

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;
    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }
    warning(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

/**
 * Base class helpers for the updating state of a component.
 */
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
Component.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;

/**
 * Convenience component with default shallow equality check for sCU.
 */
function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent;
// Avoid an extra prototype jump for these methods.
_assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };
  {
    Object.seal(refObject);
  }
  return refObject;
}

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown = void 0;
var specialPropRefWarningShown = void 0;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    });
    // self and source are DEV only properties.
    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    });
    // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.
    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */
function createElement(type, config, children) {
  var propName = void 0;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
}

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */
function cloneElement(element, config, children) {
  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;

  var propName = void 0;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps = void 0;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}

/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var ReactDebugCurrentFrame = {};

{
  // Component that is being worked on
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var impl = ReactDebugCurrentFrame.getCurrentStack;
    if (impl) {
      return impl();
    }
    return null;
  };
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];
function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;
  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;
      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }
    }
  }

  if (invokeCallback) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child = void 0;
  var nextName = void 0;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum()) : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step = void 0;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children) {
  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warning(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    _defaultValue: defaultValue,
    _currentValue: defaultValue,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue2: defaultValue,
    _changedBits: 0,
    _changedBits2: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };

  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  context.Consumer = context;

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function forwardRef(render) {
  {
    !(typeof render === 'function') ? warning(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render) : void 0;

    if (render != null) {
      !(render.defaultProps == null && render.propTypes == null) ? warning(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_ASYNC_MODE_TYPE:
      return 'AsyncMode';
    case REACT_CONTEXT_TYPE:
      return 'Context.Consumer';
    case REACT_FRAGMENT_TYPE:
      return 'ReactFragment';
    case REACT_PORTAL_TYPE:
      return 'ReactPortal';
    case REACT_PROFILER_TYPE:
      return 'Profiler(' + fiber.pendingProps.id + ')';
    case REACT_PROVIDER_TYPE:
      return 'Context.Provider';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_TIMEOUT_TYPE:
      return 'Timeout';
  }
  if (typeof type === 'object' && type !== null) {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        var functionName = type.render.displayName || type.render.name || '';
        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
    }
  }
  return null;
}

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

var currentlyValidatingElement = void 0;
var propTypesMisspellWarningShown = void 0;

var getDisplayName = function () {};
var getStackAddendum = function () {};

{
  currentlyValidatingElement = null;

  propTypesMisspellWarningShown = false;

  getDisplayName = function (element) {
    if (element == null) {
      return '#empty';
    } else if (typeof element === 'string' || typeof element === 'number') {
      return '#text';
    } else if (typeof element.type === 'string') {
      return element.type;
    } else if (element.type === REACT_FRAGMENT_TYPE) {
      return 'React.Fragment';
    } else {
      return element.type.displayName || element.type.name || 'Unknown';
    }
  };

  getStackAddendum = function () {
    var stack = '';
    if (currentlyValidatingElement) {
      var name = getDisplayName(currentlyValidatingElement);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
    }
    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
    return stack;
  };
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
  }

  currentlyValidatingElement = element;
  {
    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
  }
  currentlyValidatingElement = null;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step = void 0;
        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  var propTypes = componentClass.propTypes;
  if (propTypes) {
    currentlyValidatingElement = element;
    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
    currentlyValidatingElement = null;
  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    !componentClass.getDefaultProps.isReactClassApproved ? warning(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */
function validateFragmentProps(fragment) {
  currentlyValidatingElement = fragment;

  var keys = Object.keys(fragment.props);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (key !== 'children' && key !== 'key') {
      warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
      break;
    }
  }

  if (fragment.ref !== null) {
    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
  }

  currentlyValidatingElement = null;
}

function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type);

  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(props);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    info += getStackAddendum() || '';

    var typeString = void 0;
    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else {
      typeString = typeof type;
    }

    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = createElement.apply(this, arguments);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;
  // Legacy hook: remove it
  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}

function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);
  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }
  validatePropTypes(newElement);
  return newElement;
}

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },

  createRef: createRef,
  Component: Component,
  PureComponent: PureComponent,

  createContext: createContext,
  forwardRef: forwardRef,

  Fragment: REACT_FRAGMENT_TYPE,
  StrictMode: REACT_STRICT_MODE_TYPE,
  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,
  unstable_Profiler: REACT_PROFILER_TYPE,

  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,

  version: ReactVersion,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: ReactCurrentOwner,
    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
    assign: _assign
  }
};

if (enableSuspense) {
  React.Timeout = REACT_TIMEOUT_TYPE;
}

{
  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var react = React$3.default ? React$3.default : React$3;

module.exports = react;
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/readable-stream/duplex-browser.js":
/*!********************************************************!*\
  !*** ./node_modules/readable-stream/duplex-browser.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/readable-stream/lib/_stream_duplex.js");


/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_duplex.js":
/*!************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_duplex.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/readable-stream/lib/_stream_readable.js");
var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/readable-stream/lib/_stream_writable.js");

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_passthrough.js":
/*!*****************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/readable-stream/lib/_stream_transform.js");

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_readable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_readable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js");
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(/*! util */ 0);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ "./node_modules/readable-stream/lib/internal/streams/BufferList.js");
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_transform.js":
/*!***************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_transform.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/readable-stream/lib/_stream_writable.js":
/*!**************************************************************!*\
  !*** ./node_modules/readable-stream/lib/_stream_writable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/readable-stream/lib/internal/streams/destroy.js");

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/readable-stream/lib/_stream_duplex.js");

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js"), __webpack_require__(/*! ./../../timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!*************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
var util = __webpack_require__(/*! util */ 1);

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!**********************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),

/***/ "./node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;


/***/ }),

/***/ "./node_modules/readable-stream/passthrough.js":
/*!*****************************************************!*\
  !*** ./node_modules/readable-stream/passthrough.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./readable */ "./node_modules/readable-stream/readable-browser.js").PassThrough


/***/ }),

/***/ "./node_modules/readable-stream/readable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/readable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/readable-stream/lib/_stream_readable.js");
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/readable-stream/lib/_stream_writable.js");
exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/readable-stream/lib/_stream_duplex.js");
exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/readable-stream/lib/_stream_transform.js");
exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/readable-stream/lib/_stream_passthrough.js");


/***/ }),

/***/ "./node_modules/readable-stream/transform.js":
/*!***************************************************!*\
  !*** ./node_modules/readable-stream/transform.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./readable */ "./node_modules/readable-stream/readable-browser.js").Transform


/***/ }),

/***/ "./node_modules/readable-stream/writable-browser.js":
/*!**********************************************************!*\
  !*** ./node_modules/readable-stream/writable-browser.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/readable-stream/lib/_stream_writable.js");


/***/ }),

/***/ "./node_modules/ripemd160/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ripemd160/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(/*! buffer */ "./node_modules/node-libs-browser/node_modules/buffer/index.js").Buffer
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160


/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/node-libs-browser/node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/sha.js/hash.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/hash.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash


/***/ }),

/***/ "./node_modules/sha.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/sha.js/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = __webpack_require__(/*! ./sha */ "./node_modules/sha.js/sha.js")
exports.sha1 = __webpack_require__(/*! ./sha1 */ "./node_modules/sha.js/sha1.js")
exports.sha224 = __webpack_require__(/*! ./sha224 */ "./node_modules/sha.js/sha224.js")
exports.sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
exports.sha384 = __webpack_require__(/*! ./sha384 */ "./node_modules/sha.js/sha384.js")
exports.sha512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")


/***/ }),

/***/ "./node_modules/sha.js/sha.js":
/*!************************************!*\
  !*** ./node_modules/sha.js/sha.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha


/***/ }),

/***/ "./node_modules/sha.js/sha1.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/sha1.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1


/***/ }),

/***/ "./node_modules/sha.js/sha224.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha224.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224


/***/ }),

/***/ "./node_modules/sha.js/sha256.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha256.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256


/***/ }),

/***/ "./node_modules/sha.js/sha384.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha384.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var SHA512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384


/***/ }),

/***/ "./node_modules/sha.js/sha512.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha512.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512


/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

inherits(Stream, EE);
Stream.Readable = __webpack_require__(/*! readable-stream/readable.js */ "./node_modules/readable-stream/readable-browser.js");
Stream.Writable = __webpack_require__(/*! readable-stream/writable.js */ "./node_modules/readable-stream/writable-browser.js");
Stream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ "./node_modules/readable-stream/duplex-browser.js");
Stream.Transform = __webpack_require__(/*! readable-stream/transform.js */ "./node_modules/readable-stream/transform.js");
Stream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ "./node_modules/readable-stream/passthrough.js");

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};


/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/varint/decode.js":
/*!***************************************!*\
  !*** ./node_modules/varint/decode.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = read

var MSB = 0x80
  , REST = 0x7F

function read(buf, offset) {
  var res    = 0
    , offset = offset || 0
    , shift  = 0
    , counter = offset
    , b
    , l = buf.length

  do {
    if (counter >= l) {
      read.bytes = 0
      throw new RangeError('Could not decode varint')
    }
    b = buf[counter++]
    res += shift < 28
      ? (b & REST) << shift
      : (b & REST) * Math.pow(2, shift)
    shift += 7
  } while (b >= MSB)

  read.bytes = counter - offset

  return res
}


/***/ }),

/***/ "./node_modules/varint/encode.js":
/*!***************************************!*\
  !*** ./node_modules/varint/encode.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = encode

var MSB = 0x80
  , REST = 0x7F
  , MSBALL = ~REST
  , INT = Math.pow(2, 31)

function encode(num, out, offset) {
  out = out || []
  offset = offset || 0
  var oldOffset = offset

  while(num >= INT) {
    out[offset++] = (num & 0xFF) | MSB
    num /= 128
  }
  while(num & MSBALL) {
    out[offset++] = (num & 0xFF) | MSB
    num >>>= 7
  }
  out[offset] = num | 0
  
  encode.bytes = offset - oldOffset + 1
  
  return out
}


/***/ }),

/***/ "./node_modules/varint/index.js":
/*!**************************************!*\
  !*** ./node_modules/varint/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
    encode: __webpack_require__(/*! ./encode.js */ "./node_modules/varint/encode.js")
  , decode: __webpack_require__(/*! ./decode.js */ "./node_modules/varint/decode.js")
  , encodingLength: __webpack_require__(/*! ./length.js */ "./node_modules/varint/length.js")
}


/***/ }),

/***/ "./node_modules/varint/length.js":
/*!***************************************!*\
  !*** ./node_modules/varint/length.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {


var N1 = Math.pow(2,  7)
var N2 = Math.pow(2, 14)
var N3 = Math.pow(2, 21)
var N4 = Math.pow(2, 28)
var N5 = Math.pow(2, 35)
var N6 = Math.pow(2, 42)
var N7 = Math.pow(2, 49)
var N8 = Math.pow(2, 56)
var N9 = Math.pow(2, 63)

module.exports = function (value) {
  return (
    value < N1 ? 1
  : value < N2 ? 2
  : value < N3 ? 3
  : value < N4 ? 4
  : value < N5 ? 5
  : value < N6 ? 6
  : value < N7 ? 7
  : value < N8 ? 8
  : value < N9 ? 9
  :              10
  )
}


/***/ }),

/***/ "./node_modules/vm-browserify/index.js":
/*!*********************************************!*\
  !*** ./node_modules/vm-browserify/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var indexOf = __webpack_require__(/*! indexof */ "./node_modules/indexof/index.js");

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};


/***/ }),

/***/ "./node_modules/webcrypto/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/webcrypto/src/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const isNode = __webpack_require__(/*! detect-node */ "./node_modules/detect-node/index.js")

if (isNode) {
  module.exports = __webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js")
} else {
  module.exports = __webpack_require__(/*! crypto-browserify */ "./node_modules/crypto-browserify/index.js")
}


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.constants = exports.Type = undefined;

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _immutable = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultGetValue = function defaultGetValue(event) {
    return JSON.stringify(event.target.value);
};
var defaultSetValue = function defaultSetValue(value) {
    return (0, _immutable.Map)({ value: value ? JSON.parse(value) : "" });
};
var defaultProps = (0, _immutable.Map)({ type: "text" });

var Type = exports.Type = function (_Record) {
    (0, _inherits3.default)(Type, _Record);

    function Type(params) {
        (0, _classCallCheck3.default)(this, Type);

        if (params) {
            ;

            var _this = (0, _possibleConstructorReturn3.default)(this, (Type.__proto__ || Object.getPrototypeOf(Type)).call(this, params));
        } else {
            ;

            var _this = (0, _possibleConstructorReturn3.default)(this, (Type.__proto__ || Object.getPrototypeOf(Type)).call(this));
        }return (0, _possibleConstructorReturn3.default)(_this);
    }

    (0, _createClass3.default)(Type, [{
        key: "with",
        value: function _with(values) {
            return this.merge(values);
        }
    }]);
    return Type;
}((0, _immutable.Record)({
    getValue: defaultGetValue,
    setValue: defaultSetValue,
    props: defaultProps
}));

var defaultType = new Type();
var nameType = function nameType(type) {
    return defaultType.with({ props: (0, _immutable.Map)({ type: type }) });
};
var numberType = nameType("number");
var floatType = numberType.with({
    getValue: function getValue(event) {
        return parseFloat(event.target.value).toString();
    }
});
var integerType = numberType.with({
    getValue: function getValue(event) {
        return parseInt(event.target.value).toString();
    }
});
var booleanType = nameType("checkbox").with({
    getValue: function getValue(event) {
        return JSON.stringify(event.target.checked);
    },
    setValue: function setValue(value) {
        return (0, _immutable.Map)({ checked: value ? JSON.parse(value) : false });
    }
});
var constants = exports.constants = {
    "http://schema.org/Text": defaultType,
    "http://schema.org/URL": nameType("url"),
    "http://schema.org/Number": floatType,
    "http://schema.org/Float": floatType,
    "http://schema.org/Integer": integerType,
    "http://schema.org/Boolean": booleanType,
    "http://schema.org/Date": nameType("date"),
    "http://schema.org/Time": nameType("time"),
    "http://schema.org/DateTime": nameType("datetime-local")
};

/***/ }),

/***/ "./src/form.tsx":
/*!**********************!*\
  !*** ./src/form.tsx ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FormValue = exports.Inline = exports.Reference = exports.Constant = exports.FormValueType = undefined;

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "./node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _immutable = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.js");

var _constants = __webpack_require__(/*! ./schema/constants */ "./src/schema/constants.ts");

var _schema = __webpack_require__(/*! ./schema */ "./src/schema/index.ts");

var _select = __webpack_require__(/*! ./select */ "./src/select.tsx");

var _select2 = _interopRequireDefault(_select);

var _property = __webpack_require__(/*! ./property */ "./src/property.tsx");

var _property2 = _interopRequireDefault(_property);

var _constants2 = __webpack_require__(/*! ./constants */ "./src/constants.ts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormValueType = exports.FormValueType = undefined;
(function (FormValueType) {
    FormValueType["Constant"] = "constant";
    FormValueType["Reference"] = "reference";
    FormValueType["Inline"] = "inline";
})(FormValueType || (exports.FormValueType = FormValueType = {}));
var _FormValueType = FormValueType;
var Constant = _FormValueType.Constant,
    Reference = _FormValueType.Reference,
    Inline = _FormValueType.Inline;
exports.Constant = Constant;
exports.Reference = Reference;
exports.Inline = Inline;

var FormValue = exports.FormValue = function (_Record) {
    (0, _inherits3.default)(FormValue, _Record);

    function FormValue(params) {
        var _this, _this;

        (0, _classCallCheck3.default)(this, FormValue);

        params ? (_this = (0, _possibleConstructorReturn3.default)(this, (FormValue.__proto__ || Object.getPrototypeOf(FormValue)).call(this, params)), _this) : (_this = (0, _possibleConstructorReturn3.default)(this, (FormValue.__proto__ || Object.getPrototypeOf(FormValue)).call(this)), _this);
        return (0, _possibleConstructorReturn3.default)(_this);
    }

    (0, _createClass3.default)(FormValue, [{
        key: "with",
        value: function _with(values) {
            return this.merge(values);
        }
    }]);
    return FormValue;
}((0, _immutable.Record)({
    type: null,
    value: null,
    constant: null,
    reference: null,
    inline: null
}));

var FormView = function (_React$Component) {
    (0, _inherits3.default)(FormView, _React$Component);

    function FormView(props) {
        (0, _classCallCheck3.default)(this, FormView);

        var _this2 = (0, _possibleConstructorReturn3.default)(this, (FormView.__proto__ || Object.getPrototypeOf(FormView)).call(this, props));

        _this2.state = {
            focus: null
        };
        _this2.renderProperty = _this2.renderProperty.bind(_this2);
        return _this2;
    }

    (0, _createClass3.default)(FormView, [{
        key: "render",
        value: function render() {
            var _this3 = this;

            var _props = this.props,
                id = _props.id,
                label = _props.label,
                graph = _props.graph,
                onChange = _props.onChange,
                _onClick = _props.onClick,
                form = _props.form;

            var catalog = FormView.generateProperties(graph.get(id));
            console.log("form", form.toJS());
            return _react2.default.createElement("div", { className: "form" }, _react2.default.createElement("h3", { className: "mono" }, id), graph.get(id).map(function (type, key) {
                return _react2.default.createElement(_react.Fragment, { key: key }, key ? ", " : null, _react2.default.createElement("span", { className: "mono" }, _schema.nodes[type][_constants.LABEL]));
            }), _react2.default.createElement("input", { className: "float", value: label, type: "button", onClick: function onClick(event) {
                    event.preventDefault();
                    _onClick();
                } }), _react2.default.createElement("hr", null), _react2.default.createElement(_select2.default, { parentProperty: _constants.SUBPROPERTY, parentDescription: "Subproperty", childDescription: "Children", placeholder: "Search for a property to enter values", catalog: catalog, inheritance: _schema.propertyInheritance, onSubmit: function onSubmit(property) {
                    var _flattenValues = (0, _schema.flattenValues)(_schema.nodes[property][_constants.RANGE]),
                        _flattenValues2 = (0, _slicedToArray3.default)(_flattenValues, 1),
                        type = _flattenValues2[0];

                    var formValue = FormView.defaultFormValue(type, graph);
                    if (form.has(property)) {
                        var path = [property, form.get(property).size];
                        var focus = path.join("/");
                        _this3.setState({ focus: focus });
                        onChange(form.setIn(path, formValue));
                    } else {
                        var _focus = [property, 0].join("/");
                        _this3.setState({ focus: _focus });
                        onChange(form.set(property, (0, _immutable.List)([formValue])));
                    }
                } }), _react2.default.createElement("div", { className: "table-scroller" }, _react2.default.createElement("table", null, _react2.default.createElement("tbody", null, form.entrySeq().map(this.renderProperty)))));
        }
    }, {
        key: "renderProperty",
        value: function renderProperty(_ref, key) {
            var _this4 = this;

            var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
                property = _ref2[0],
                values = _ref2[1];

            console.log("rendering", property);
            var label = _schema.nodes[property][_constants.LABEL];
            return values.map(function (formValue, index) {
                return _react2.default.createElement("tr", { key: key + "/" + index }, index === 0 && _react2.default.createElement("td", { className: "mono", rowSpan: values.size }, label), _react2.default.createElement("td", { className: "type" }, _this4.renderType(property, index, formValue)), _react2.default.createElement("td", { className: "value" }, _this4.renderValue(property, index, formValue)));
            });
        }
        // private renderTypeSelect(
        // 	property: string,
        // 	index: number,
        // 	formValue: FormValue
        // ) {
        // 	const range = flattenValues(nodes[property][RANGE])
        // 	const catalog = List(range.map(type => List([type])))
        // 	console.log("catalog", catalog.toJS())
        // 	return (
        // 		<Select
        // 			placeholder="Select value type"
        // 			parentProperty={SUBCLASS}
        // 			parentDescription="Subclass"
        // 			childDescription="Children"
        // 			inheritance={classInheritance}
        // 			catalog={catalog}
        // 			onSubmit={value => {
        // 				if (value !== formValue.type) {
        // 					const path = [property, index]
        // 					const formValue = FormView.defaultFormValue(value, this.props.graph)
        // 					const form = this.props.form.setIn(path, formValue)
        // 					this.props.onChange(form)
        // 				}
        // 			}}
        // 		/>
        // 	)
        // }

    }, {
        key: "renderType",
        value: function renderType(property, index, formValue) {
            var _this5 = this;

            var range = (0, _schema.flattenValues)(_schema.nodes[property][_constants.RANGE]);
            return _react2.default.createElement("select", { value: formValue.type, disabled: range.length === 1, onChange: function onChange(event) {
                    var type = event.target.value;
                    if (type !== formValue.type) {
                        var path = [property, index];
                        var _formValue = FormView.defaultFormValue(type, _this5.props.graph);
                        var form = _this5.props.form.setIn(path, _formValue);
                        _this5.props.onChange(form);
                    }
                } }, range.map(function (type, key) {
                return _react2.default.createElement("option", { key: key, value: type }, _schema.nodes[type][_constants.LABEL]);
            }));
        }
    }, {
        key: "renderValue",
        value: function renderValue(property, index, formValue) {
            var _this6 = this;

            var _props2 = this.props,
                createNode = _props2.createNode,
                graph = _props2.graph,
                id = _props2.id;

            var label = _schema.nodes[property][_constants.LABEL];
            var path = id.split("/").concat([label, index.toString()]);
            return _react2.default.createElement(_property2.default, { path: path, graph: graph, formValue: formValue, createNode: createNode, onChange: function onChange(value, newId, newForm) {
                    var path = [property, index];
                    var form = _this6.props.form.setIn(path, value);
                    _this6.props.onChange(form, newId, newForm);
                } }, _react2.default.createElement("input", { type: "button", value: "Remove", onClick: function onClick() {
                    return _this6.removeProperty(property, index);
                } }));
        }
    }, {
        key: "removeProperty",
        value: function removeProperty(property, index) {
            var form = this.props.form;

            if (form.get(property).size > 1) {
                var path = [property, index];
                this.props.onChange(form.deleteIn(path));
            } else {
                this.props.onChange(form.delete(property));
            }
        }
    }], [{
        key: "generateProperties",
        value: function generateProperties(types) {
            var set = new Set();
            var props = types.reduce(function (props, type) {
                return props.concat((0, _schema.enumerateAncestry)(type, _constants.SUBCLASS).reduce(function (props, type) {
                    var filter = function filter(prop) {
                        return !set.has(prop) && !!set.add(prop);
                    };
                    var properties = (0, _schema.enumerateProperties)(type).filter(filter);
                    return props.concat(properties.map(function (prop) {
                        return (0, _immutable.List)([prop, type]);
                    }));
                }, (0, _immutable.List)([])));
            }, (0, _immutable.List)([]));
            return (0, _immutable.List)(props);
        }
    }, {
        key: "defaultFormValue",
        value: function defaultFormValue(type, nodes) {
            var props = { type: type };
            if (_constants2.constants.hasOwnProperty(type)) {
                props.value = Constant;
                props.constant = FormView.defaultValues.hasOwnProperty(type) ? FormView.defaultValues[type] : FormView.defaultValue;
            } else {
                var id = nodes.findKey(function (types) {
                    return types.some(function (t) {
                        return (0, _schema.searchAncestry)(t, type, _constants.SUBCLASS);
                    });
                });
                if (id !== undefined) {
                    props.value = Reference;
                    props.reference = id;
                } else {
                    props.value = Inline;
                    props.inline = (0, _immutable.Map)({});
                }
            }
            return new FormValue(props);
        }
    }]);
    return FormView;
}(_react2.default.Component);

exports.default = FormView;

FormView.defaultValues = { "http://schema.org/Boolean": false };
FormView.defaultValue = "";

/***/ }),

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");

var _reactDom2 = _interopRequireDefault(_reactDom);

var _underground = __webpack_require__(/*! ./underground */ "./src/underground.tsx");

var _underground2 = _interopRequireDefault(_underground);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var main = document.querySelector("main");
_reactDom2.default.render(_react2.default.createElement(_underground2.default, { onSubmit: handleSubmit }), main);
function handleSubmit(assertion, hash) {
    console.log(assertion);
    download(JSON.stringify(assertion), hash);
}
function download(data, name) {
    var element = document.createElement("a");
    element.setAttribute("href", "data:application/json;charset=utf-8," + encodeURIComponent(data));
    element.setAttribute("download", name + ".json");
    element.style.display = "none";
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
}

/***/ }),

/***/ "./src/property.tsx":
/*!**************************!*\
  !*** ./src/property.tsx ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "./node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

exports.default = PropertyView;

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _immutable = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.js");

var _schema = __webpack_require__(/*! ./schema */ "./src/schema/index.ts");

var _constants = __webpack_require__(/*! ./schema/constants */ "./src/schema/constants.ts");

var _form = __webpack_require__(/*! ./form */ "./src/form.tsx");

var _form2 = _interopRequireDefault(_form);

var _constants2 = __webpack_require__(/*! ./constants */ "./src/constants.ts");

var _select = __webpack_require__(/*! ./select */ "./src/select.tsx");

var _select2 = _interopRequireDefault(_select);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function renderInline(props, onClick) {
    var createNode = props.createNode,
        formValue = props.formValue;

    var id = props.path.join("/");
    var graph = props.graph.set(id, [formValue.type]);
    var onChange = function onChange(inline, newId, newForm) {
        // the newId and newForm here are passed up in case a *nested* form
        // way down the line tries to split into a new object
        props.onChange(formValue.with({ inline: inline }), newId, newForm);
    };
    var form = formValue.inline;
    var formProps = {
        createNode: createNode,
        graph: graph,
        id: id,
        onChange: onChange,
        form: form,
        label: "Split into new Object",
        onClick: onClick
    };
    return _react2.default.createElement(_react.Fragment, null, _react2.default.createElement("br", null), _react2.default.createElement(_form2.default, Object.assign({}, formProps)));
}
function PropertyView(props) {
    var formValue = props.formValue,
        createNode = props.createNode,
        _onChange = props.onChange;
    var value = formValue.value,
        type = formValue.type;

    if (_constants2.constants.hasOwnProperty(type) && value === _form.Constant) {
        var _constants$type = _constants2.constants[type],
            _props = _constants$type.props,
            getValue = _constants$type.getValue,
            setValue = _constants$type.setValue;

        return _react2.default.createElement("input", Object.assign({}, _props.merge(setValue(formValue.constant)).toJS(), { onChange: function onChange(event) {
                return _onChange(formValue.with({ constant: getValue(event) }));
            }, onKeyDown: function onKeyDown(event) {
                return event.keyCode === 13 && event.preventDefault();
            } }));
    } else if (_schema.things.has(type)) {
        var objects = (0, _immutable.List)(props.graph.entrySeq().filter(function (_ref) {
            var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
                _ = _ref2[0],
                types = _ref2[1];

            return types.some(function (t) {
                return (0, _schema.searchAncestry)(t, type, _constants.SUBCLASS);
            });
        }));
        var hasObjects = objects.size > 0;
        var hasEnumerations = _schema.enumerations.hasOwnProperty(type);
        var disabled = !hasObjects && !hasEnumerations;
        var label = _schema.nodes[type][_constants.LABEL];
        var defaultValue = hasObjects ? objects.get(0)[0] : hasEnumerations ? Array.from(_schema.enumerations[type])[0] : "";
        var radio = function radio(valueType) {
            return {
                type: "radio",
                name: props.path.join("/"),
                value: valueType.toString(),
                checked: value === valueType,
                onChange: function onChange(_ref3) {
                    var value = _ref3.target.value;

                    var newValue = formValue.with({ value: value });
                    if (value === _form.Inline && newValue.inline === null) {
                        _onChange(newValue.with({ inline: (0, _immutable.Map)({}) }));
                    } else {
                        _onChange(newValue);
                    }
                }
            };
        };
        return _react2.default.createElement(_react.Fragment, null, _react2.default.createElement("div", null, _react2.default.createElement("input", Object.assign({}, radio(_form.Reference), { disabled: disabled })), _react2.default.createElement("select", { disabled: disabled || value !== _form.Reference, value: formValue.reference || defaultValue, onChange: function onChange(event) {
                event.preventDefault();
                var reference = event.target.value;
                var props = { value: _form.Reference, reference: reference, inline: null };
                _onChange(formValue.with(props));
            } }, disabled && _react2.default.createElement("option", { value: "" }, "No ", label, " objects found."), Array.from(_schema.enumerations[type] || []).map(function (id, key) {
            return _react2.default.createElement("option", { key: -(key + 1), value: id }, _schema.nodes[id][_constants.LABEL]);
        }), objects.map(function (_ref4, key) {
            var _ref5 = (0, _slicedToArray3.default)(_ref4, 1),
                id = _ref5[0];

            return _react2.default.createElement("option", { key: key, value: id }, id);
        })), props.children), _react2.default.createElement("div", null, _react2.default.createElement("input", Object.assign({}, radio(_form.Inline))), _react2.default.createElement(_select2.default, { placeholder: "Select object type", parentProperty: _constants.SUBCLASS, parentDescription: "Subclass", childDescription: "Children", inheritance: _schema.classInheritance, catalog: (0, _immutable.List)([(0, _immutable.List)([type])]), onSubmit: function onSubmit(type) {
                return _onChange(formValue.with({ type: type }));
            } }), value === _form.Inline && renderInline(props, function () {
            var reference = createNode([type]);
            var inline = (0, _immutable.Map)({});
            var values = { value: _form.Reference, reference: reference, inline: inline };
            _onChange(formValue.with(values), reference, props.formValue.inline);
        })));
    } else {
        return _react2.default.createElement("span", null, "\"Cannot enter this kind of value yet\"");
    }
}

/***/ }),

/***/ "./src/schema/constants.ts":
/*!*********************************!*\
  !*** ./src/schema/constants.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var ID = exports.ID = "@id";
var TYPE = exports.TYPE = "@type";
var DATA = exports.DATA = "@data";
var VALUE = exports.VALUE = "@value";
var CONTEXT = exports.CONTEXT = "@context";
var GRAPH = exports.GRAPH = "@graph";
var SOURCE = exports.SOURCE = "http://underlay.mit.edu/source";
var TIME = exports.TIME = "http://underlay.mit.edu/time";
var LABEL = exports.LABEL = "rdfs:label";
var COMMENT = exports.COMMENT = "rdfs:comment";
var DOMAIN = exports.DOMAIN = "http://schema.org/domainIncludes";
var RANGE = exports.RANGE = "http://schema.org/rangeIncludes";
var SUBPROPERTY = exports.SUBPROPERTY = "rdfs:subPropertyOf";
var SUBCLASS = exports.SUBCLASS = "rdfs:subClassOf";
var enumeration = exports.enumeration = "http://schema.org/Enumeration";
var thing = exports.thing = "http://schema.org/Thing";
var property = exports.property = "rdf:Property";

/***/ }),

/***/ "./src/schema/index.ts":
/*!*****************************!*\
  !*** ./src/schema/index.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.enumerations = exports.propertyInheritance = exports.classInheritance = exports.things = exports.properties = exports.nodes = exports.schema = undefined;

var _typeof2 = __webpack_require__(/*! babel-runtime/helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js");

var _typeof3 = _interopRequireDefault(_typeof2);

exports.flattenValues = flattenValues;
exports.searchAncestry = searchAncestry;
exports.enumerateAncestry = enumerateAncestry;
exports.enumerateProperties = enumerateProperties;

var _constants = __webpack_require__(/*! ./constants */ "./src/schema/constants.ts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function flattenValue(propertyValue) {
    if ((typeof propertyValue === "undefined" ? "undefined" : (0, _typeof3.default)(propertyValue)) === "object") {
        return propertyValue["@id"];
    } else if (typeof propertyValue === "string") {
        return propertyValue;
    }
}
function flattenValues(propertyValues) {
    if (propertyValues === null || propertyValues === undefined) {
        return [];
    } else if (Array.isArray(propertyValues)) {
        return propertyValues.map(flattenValue);
    } else {
        return [flattenValue(propertyValues)];
    }
}
var schema = exports.schema = __webpack_require__(/*! ./schema.json */ "./src/schema/schema.json");
window.schema = schema;
var nodes = exports.nodes = {};
schema[_constants.GRAPH].forEach(function (node) {
    return nodes[node[_constants.ID]] = node;
});
window.nodes = nodes;
var properties = exports.properties = new Set([]);
function traverseProperties(node) {
    if (node[_constants.TYPE] === _constants.property) {
        properties.add(node[_constants.ID]);
    }
}
var things = exports.things = new Set([_constants.thing]);
function traverseThings(node) {
    var isThing = false;
    if (!things.has(node[_constants.ID])) {
        flattenValues(node[_constants.SUBCLASS]).forEach(function (subclass) {
            if (things.has(subclass)) {
                things.add(node[_constants.ID]);
                isThing = true;
            } else if (nodes.hasOwnProperty(subclass)) {
                if (traverseThings(nodes[subclass])) {
                    things.add(node[_constants.ID]);
                    isThing = true;
                }
            }
        });
    }
    return isThing;
}
schema[_constants.GRAPH].forEach(function (node) {
    traverseProperties(node);
    traverseThings(node);
});
window.things = things;
window.properties = properties;
function searchAncestry(type, target, parent) {
    if (type === target) return true;else if (nodes[type] && nodes[type][parent]) {
        return flattenValues(nodes[type][parent]).some(function (t) {
            return searchAncestry(t, target, parent);
        });
    } else return false;
}
function traverseAncestry(type, parent, ancestry) {
    ancestry.push(type);
    if (nodes[type] && nodes[type][parent]) {
        flattenValues(nodes[type][parent]).forEach(function (value) {
            return traverseAncestry(value, parent, ancestry);
        });
    }
}
function enumerateAncestry(type, parent) {
    var ancestry = [];
    traverseAncestry(type, parent, ancestry);
    return ancestry;
}
function enumerateProperties(type) {
    return schema[_constants.GRAPH].filter(function (node) {
        return node[_constants.DOMAIN] && flattenValues(node[_constants.DOMAIN]).includes(type);
    }).map(function (node) {
        return node[_constants.ID];
    });
}
function traverseInheritance(inheritance, pool, parent) {
    pool.forEach(function (id) {
        if (!inheritance[id]) inheritance[id] = new Set([]);
        flattenValues(nodes[id][parent]).forEach(function (ancestor) {
            if (!inheritance[ancestor]) inheritance[ancestor] = new Set([]);
            inheritance[ancestor].add(id);
        });
    });
}
var classInheritance = exports.classInheritance = {};
var propertyInheritance = exports.propertyInheritance = {};
traverseInheritance(classInheritance, things, _constants.SUBCLASS);
traverseInheritance(propertyInheritance, properties, _constants.SUBPROPERTY);
window.classInheritance = classInheritance;
window.propertyInheritance = propertyInheritance;
var enumerations = exports.enumerations = {};
schema[_constants.GRAPH].forEach(function (_ref) {
    var id = _ref[_constants.ID];

    if (id !== _constants.enumeration && searchAncestry(id, _constants.enumeration, _constants.SUBCLASS)) {
        enumerations[id] = new Set([]);
    }
});
schema[_constants.GRAPH].forEach(function (_ref2) {
    var id = _ref2[_constants.ID],
        type = _ref2[_constants.TYPE];

    flattenValues(type).forEach(function (type) {
        if (enumerations.hasOwnProperty(type)) {
            enumerations[type].add(id);
        }
    });
});
window.enumerations = enumerations;

/***/ }),

/***/ "./src/schema/schema.json":
/*!********************************!*\
  !*** ./src/schema/schema.json ***!
  \********************************/
/*! exports provided: @context, @graph, @id, default */
/***/ (function(module) {

module.exports = {"@context":{"rdf":"http://www.w3.org/1999/02/22-rdf-syntax-ns#","rdfs":"http://www.w3.org/2000/01/rdf-schema#","xsd":"http://www.w3.org/2001/XMLSchema#"},"@graph":[{"@id":"http://schema.org/downloadUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"If the file can be downloaded, URL to download the binary.","rdfs:label":"downloadUrl"},{"@id":"http://schema.org/UserLikes","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserLikes","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/CafeOrCoffeeShop","@type":"rdfs:Class","rdfs:comment":"A cafe or coffee shop.","rdfs:label":"CafeOrCoffeeShop","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/pagination","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/PublicationIssue"},{"@id":"http://schema.org/Article"},{"@id":"http://schema.org/PublicationVolume"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/bibo/pages"},"rdfs:comment":"Any description of pages that is not separated into pageStart and pageEnd; for example, \"1-6, 9, 55\" or \"10-12, 46-49\".","rdfs:label":"pagination"},{"@id":"http://schema.org/about","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/CommunicateAction"},{"@id":"http://schema.org/Event"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The subject matter of the content.","rdfs:label":"about"},{"@id":"http://schema.org/Recipe","@type":"rdfs:Class","rdfs:comment":"A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via <a class=\"localLink\" href=\"http://schema.org/suitableForDiet\">suitableForDiet</a>. The <a class=\"localLink\" href=\"http://schema.org/keywords\">keywords</a> property can also be used to add more detail.","rdfs:label":"Recipe","rdfs:subClassOf":{"@id":"http://schema.org/HowTo"}},{"@id":"http://schema.org/gameItem","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Game"},{"@id":"http://schema.org/VideoGameSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.","rdfs:label":"gameItem"},{"@id":"http://schema.org/Photograph","@type":"rdfs:Class","rdfs:comment":"A photograph.","rdfs:label":"Photograph","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/Volcano","@type":"rdfs:Class","rdfs:comment":"A volcano, like Fuji san.","rdfs:label":"Volcano","rdfs:subClassOf":{"@id":"http://schema.org/Landform"}},{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology","@type":"http://schema.org/Organization","rdfs:comment":"This element is based on the STI Accommodation Ontology, see <a href=\"http://ontologies.sti-innsbruck.at/acco/ns.html\">http://ontologies.sti-innsbruck.at/acco/ns.html</a> for details.\n    Many class and property definitions are inspired by or based on abstracts from Wikipedia, the free encyclopedia.","rdfs:label":"STI Accommodation Ontology"},{"@id":"http://schema.org/departureStation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TrainTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/TrainStation"},"rdfs:comment":"The station from which the train departs.","rdfs:label":"departureStation"},{"@id":"http://schema.org/SportsTeam","@type":"rdfs:Class","rdfs:comment":"Organization: Sports team.","rdfs:label":"SportsTeam","rdfs:subClassOf":{"@id":"http://schema.org/SportsOrganization"}},{"@id":"http://schema.org/GroceryStore","@type":"rdfs:Class","rdfs:comment":"A grocery store.","rdfs:label":"GroceryStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/True","@type":"http://schema.org/Boolean","rdfs:comment":"The boolean value true.","rdfs:label":"True"},{"@id":"http://schema.org/Demand","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.","rdfs:label":"Demand","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/musicCompositionForm","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The type of composition (e.g. overture, sonata, symphony, etc.).","rdfs:label":"musicCompositionForm"},{"@id":"http://schema.org/AboutPage","@type":"rdfs:Class","rdfs:comment":"Web page type: About page.","rdfs:label":"AboutPage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/result","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The result produced in the action. e.g. John wrote <em>a book</em>.","rdfs:label":"result"},{"@id":"http://schema.org/isbn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Book"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/bibo/isbn"},"rdfs:comment":"The ISBN of the book.","rdfs:label":"isbn","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/ExerciseAction","@type":"rdfs:Class","rdfs:comment":"The act of participating in exertive activity for the purposes of improving health and fitness.","rdfs:label":"ExerciseAction","rdfs:subClassOf":{"@id":"http://schema.org/PlayAction"}},{"@id":"http://schema.org/UserPlays","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserPlays","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/FoodService","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A food service, like breakfast, lunch, or dinner.","rdfs:label":"FoodService","rdfs:subClassOf":{"@id":"http://schema.org/Service"}},{"@id":"http://schema.org/EBook","@type":"http://schema.org/BookFormatType","rdfs:comment":"Book format: Ebook.","rdfs:label":"EBook"},{"@id":"http://schema.org/SeaBodyOfWater","@type":"rdfs:Class","rdfs:comment":"A sea (for example, the Caspian sea).","rdfs:label":"SeaBodyOfWater","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/ConvenienceStore","@type":"rdfs:Class","rdfs:comment":"A convenience store.","rdfs:label":"ConvenienceStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/orderDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"Date order was placed.","rdfs:label":"orderDate"},{"@id":"http://schema.org/VeganDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet exclusive of all animal products.","rdfs:label":"VeganDiet"},{"@id":"http://schema.org/serviceArea","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/GeoShape"},{"@id":"http://schema.org/AdministrativeArea"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/areaServed"},"rdfs:comment":"The geographic area where the service is provided.","rdfs:label":"serviceArea"},{"@id":"http://schema.org/Dataset","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass"},"http://www.w3.org/2002/07/owl#equivalentClass":[{"@id":"http://www.w3.org/ns/dcat#Dataset"},{"@id":"http://rdfs.org/ns/void#Dataset"},{"@id":"http://purl.org/dc/dcmitype/Dataset"}],"rdfs:comment":"A body of structured information describing some topic(s) of interest.","rdfs:label":"Dataset","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/DigitalAudioTapeFormat","@type":"http://schema.org/MusicReleaseFormatType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"DigitalAudioTapeFormat.","rdfs:label":"DigitalAudioTapeFormat"},{"@id":"http://schema.org/vehicleSpecialUsage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.","rdfs:label":"vehicleSpecialUsage"},{"@id":"http://schema.org/OutOfStock","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item is out of stock.","rdfs:label":"OutOfStock"},{"@id":"http://schema.org/Action","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass"},"rdfs:comment":"An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.</p>\n\n<p>See also <a href=\"http://blog.schema.org/2014/04/announcing-schemaorg-actions.html\">blog post</a> and <a href=\"http://schema.org/docs/actions.html\">Actions overview document</a>.","rdfs:label":"Action","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/InsuranceAgency","@type":"rdfs:Class","rdfs:comment":"An Insurance agency.","rdfs:label":"InsuranceAgency","rdfs:subClassOf":{"@id":"http://schema.org/FinancialService"}},{"@id":"http://schema.org/DamagedCondition","@type":"http://schema.org/OfferItemCondition","rdfs:comment":"Indicates that the item is damaged.","rdfs:label":"DamagedCondition"},{"@id":"http://schema.org/nextItem","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ListItem"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ListItem"},"rdfs:comment":"A link to the ListItem that follows the current one.","rdfs:label":"nextItem"},{"@id":"http://schema.org/AudioObject","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"rdfs:comment":"An audio file.","rdfs:label":"AudioObject","rdfs:subClassOf":{"@id":"http://schema.org/MediaObject"}},{"@id":"http://schema.org/recordingOf","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRecording"},"http://schema.org/inverseOf":{"@id":"http://schema.org/recordedAs"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicComposition"},"rdfs:comment":"The composition this track is a recording of.","rdfs:label":"recordingOf"},{"@id":"http://schema.org/TaxiReservation","@type":"rdfs:Class","rdfs:comment":"A reservation for a taxi.</p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\"localLink\" href=\"http://schema.org/Offer\">Offer</a>.","rdfs:label":"TaxiReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/audienceType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Audience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).","rdfs:label":"audienceType"},{"@id":"http://schema.org/Game","@type":"rdfs:Class","rdfs:comment":"The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.","rdfs:label":"Game","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/AlbumRelease","@type":"http://schema.org/MusicAlbumReleaseType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"AlbumRelease.","rdfs:label":"AlbumRelease"},{"@id":"http://schema.org/interactionService","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/InteractionCounter"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/WebSite"},{"@id":"http://schema.org/SoftwareApplication"}],"rdfs:comment":"The WebSite or SoftwareApplication where the interactions took place.","rdfs:label":"interactionService"},{"@id":"http://schema.org/SoldOut","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item has sold out.","rdfs:label":"SoldOut"},{"@id":"http://schema.org/targetDescription","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AlignmentObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The description of a node in an established educational framework.","rdfs:label":"targetDescription"},{"@id":"http://schema.org/Vehicle","@type":"rdfs:Class","rdfs:comment":"A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.","rdfs:label":"Vehicle","rdfs:subClassOf":{"@id":"http://schema.org/Product"}},{"@id":"http://schema.org/photo","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Photograph"},{"@id":"http://schema.org/ImageObject"}],"rdfs:comment":"A photograph of this place.","rdfs:label":"photo","rdfs:subPropertyOf":{"@id":"http://schema.org/image"}},{"@id":"http://schema.org/ratingValue","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Rating"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The rating for the content.","rdfs:label":"ratingValue"},{"@id":"http://schema.org/Permit","@type":"rdfs:Class","rdfs:comment":"A permit issued by an organization, e.g. a parking pass.","rdfs:label":"Permit","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/educationalAlignment","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/AlignmentObject"},"rdfs:comment":"An alignment to an established educational framework.","rdfs:label":"educationalAlignment"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews","@type":"http://schema.org/Organization","rdfs:comment":"This class contains derivatives of IPTC rNews properties. rNews is a data model of publishing metadata with serializations currently available for RDFa as well as HTML5 Microdata. More information about the IPTC and rNews can be found at <a href=\"http://rnews.org\">rnews.org</a>.","rdfs:label":"rNews"},{"@id":"http://schema.org/spouse","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"The person's spouse.","rdfs:label":"spouse"},{"@id":"http://schema.org/uploadDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Date when this media object was uploaded to this site.","rdfs:label":"uploadDate"},{"@id":"http://schema.org/AutoPartsStore","@type":"rdfs:Class","rdfs:comment":"An auto parts store.","rdfs:label":"AutoPartsStore","rdfs:subClassOf":[{"@id":"http://schema.org/AutomotiveBusiness"},{"@id":"http://schema.org/Store"}]},{"@id":"http://schema.org/manufacturer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Product"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The manufacturer of the product.","rdfs:label":"manufacturer"},{"@id":"http://schema.org/Painting","@type":"rdfs:Class","rdfs:comment":"A painting.","rdfs:label":"Painting","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/SomeProducts","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A placeholder for multiple similar products of the same kind.","rdfs:label":"SomeProducts","rdfs:subClassOf":{"@id":"http://schema.org/Product"}},{"@id":"http://schema.org/urlTemplate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EntryPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An url template (RFC6570) that will be used to construct the target of the execution of the action.","rdfs:label":"urlTemplate"},{"@id":"http://schema.org/MoveAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of an agent relocating to a place.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/TransferAction\">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li>\n</ul>\n","rdfs:label":"MoveAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/CreativeWork","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"rdfs:comment":"The most generic kind of creative work, including books, movies, photographs, software programs, etc.","rdfs:label":"CreativeWork","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/upvoteCount","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Comment"},{"@id":"http://schema.org/Question"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of upvotes this question, answer or comment has received from the community.","rdfs:label":"upvoteCount"},{"@id":"http://schema.org/sku","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.","rdfs:label":"sku","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/AddAction","@type":"rdfs:Class","rdfs:comment":"The act of editing by adding an object to a collection.","rdfs:label":"AddAction","rdfs:subClassOf":{"@id":"http://schema.org/UpdateAction"}},{"@id":"http://schema.org/broadcastChannelId","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.","rdfs:label":"broadcastChannelId"},{"@id":"http://schema.org/JewelryStore","@type":"rdfs:Class","rdfs:comment":"A jewelry store.","rdfs:label":"JewelryStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/ViewAction","@type":"rdfs:Class","rdfs:comment":"The act of consuming static visual content.","rdfs:label":"ViewAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/WPFooter","@type":"rdfs:Class","rdfs:comment":"The footer section of the page.","rdfs:label":"WPFooter","rdfs:subClassOf":{"@id":"http://schema.org/WebPageElement"}},{"@id":"http://schema.org/associatedMedia","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MediaObject"},"rdfs:comment":"A media object that encodes this CreativeWork. This property is a synonym for encoding.","rdfs:label":"associatedMedia"},{"@id":"http://schema.org/QAPage","@type":"rdfs:Class","rdfs:comment":"A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).","rdfs:label":"QAPage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/exifData","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ImageObject"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/PropertyValue"}],"rdfs:comment":"exif data for this object.","rdfs:label":"exifData"},{"@id":"http://schema.org/query","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SearchAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A sub property of instrument. The query used on this action.","rdfs:label":"query","rdfs:subPropertyOf":{"@id":"http://schema.org/instrument"}},{"@id":"http://schema.org/sameAs","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.","rdfs:label":"sameAs"},{"@id":"http://schema.org/funder","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A person or organization that supports (sponsors) something through some kind of financial contribution.","rdfs:label":"funder","rdfs:subPropertyOf":{"@id":"http://schema.org/sponsor"}},{"@id":"http://schema.org/LikeAction","@type":"rdfs:Class","rdfs:comment":"The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.","rdfs:label":"LikeAction","rdfs:subClassOf":{"@id":"http://schema.org/ReactAction"}},{"@id":"http://schema.org/PublicationEvent","@type":"rdfs:Class","rdfs:comment":"A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.","rdfs:label":"PublicationEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/Course","@type":"rdfs:Class","rdfs:comment":"A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.","rdfs:label":"Course","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/position","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/ListItem"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Integer"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The position of an item in a series or sequence of items.","rdfs:label":"position"},{"@id":"http://schema.org/colleagues","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/colleague"},"rdfs:comment":"A colleague of the person.","rdfs:label":"colleagues"},{"@id":"http://schema.org/ParcelService","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"<p>A private parcel service as the delivery mode available for a certain offer.</p>\n\n<p>Commonly used values:</p>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#DHL</li>\n<li>http://purl.org/goodrelations/v1#FederalExpress</li>\n<li>http://purl.org/goodrelations/v1#UPS</li>\n</ul>\n","rdfs:label":"ParcelService","rdfs:subClassOf":{"@id":"http://schema.org/DeliveryMethod"}},{"@id":"http://schema.org/BefriendAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/FollowAction\">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li>\n</ul>\n","rdfs:label":"BefriendAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/playerType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Player type required&#x2014;for example, Flash or Silverlight.","rdfs:label":"playerType"},{"@id":"http://schema.org/unitCode","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/UnitPriceSpecification"},{"@id":"http://schema.org/PropertyValue"},{"@id":"http://schema.org/TypeAndQuantityNode"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.","rdfs:label":"unitCode"},{"@id":"http://schema.org/produces","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Service"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/supersededBy":{"@id":"http://schema.org/serviceOutput"},"rdfs:comment":"The tangible thing generated by the service, e.g. a passport, permit, etc.","rdfs:label":"produces"},{"@id":"http://schema.org/OrderReturned","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing that an order has been returned.","rdfs:label":"OrderReturned"},{"@id":"http://schema.org/HowTo","@type":"rdfs:Class","rdfs:comment":"Instructions that explain how to achieve a result by performing a sequence of steps.","rdfs:label":"HowTo","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/PoliceStation","@type":"rdfs:Class","rdfs:comment":"A police station.","rdfs:label":"PoliceStation","rdfs:subClassOf":[{"@id":"http://schema.org/EmergencyService"},{"@id":"http://schema.org/CivicStructure"}]},{"@id":"http://schema.org/LeftHandDriving","@type":"http://schema.org/SteeringPositionValue","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"The steering position is on the left side of the vehicle (viewed from the main direction of driving).","rdfs:label":"LeftHandDriving"},{"@id":"http://schema.org/latitude","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoCoordinates"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The latitude of a location. For example <code>37.42242</code> (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).","rdfs:label":"latitude"},{"@id":"http://schema.org/arrivalAirport","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Airport"},"rdfs:comment":"The airport where the flight terminates.","rdfs:label":"arrivalAirport"},{"@id":"http://schema.org/bestRating","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Rating"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.","rdfs:label":"bestRating"},{"@id":"http://schema.org/HealthClub","@type":"rdfs:Class","rdfs:comment":"A health club.","rdfs:label":"HealthClub","rdfs:subClassOf":[{"@id":"http://schema.org/SportsActivityLocation"},{"@id":"http://schema.org/HealthAndBeautyBusiness"}]},{"@id":"http://schema.org/DrinkAction","@type":"rdfs:Class","rdfs:comment":"The act of swallowing liquids.","rdfs:label":"DrinkAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/softwareRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).","rdfs:label":"softwareRequirements"},{"@id":"http://schema.org/DownloadAction","@type":"rdfs:Class","rdfs:comment":"The act of downloading an object.","rdfs:label":"DownloadAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/typeOfGood","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/TypeAndQuantityNode"},{"@id":"http://schema.org/OwnershipInfo"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/Product"}],"rdfs:comment":"The product that this structured value is referring to.","rdfs:label":"typeOfGood"},{"@id":"http://schema.org/TireShop","@type":"rdfs:Class","rdfs:comment":"A tire shop.","rdfs:label":"TireShop","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/Synagogue","@type":"rdfs:Class","rdfs:comment":"A synagogue.","rdfs:label":"Synagogue","rdfs:subClassOf":{"@id":"http://schema.org/PlaceOfWorship"}},{"@id":"http://schema.org/numberOfForwardGears","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The total number of forward gears available for the transmission system of the vehicle.</p>\n\n<p>Typical unit code(s): C62","rdfs:label":"numberOfForwardGears"},{"@id":"http://schema.org/AnimalShelter","@type":"rdfs:Class","rdfs:comment":"Animal shelter.","rdfs:label":"AnimalShelter","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/actionStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ActionStatusType"},"rdfs:comment":"Indicates the current disposition of the Action.","rdfs:label":"actionStatus"},{"@id":"http://schema.org/Bakery","@type":"rdfs:Class","rdfs:comment":"A bakery.","rdfs:label":"Bakery","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/audio","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/AudioObject"},"rdfs:comment":"An embedded audio object.","rdfs:label":"audio"},{"@id":"http://schema.org/deathDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Date of death.","rdfs:label":"deathDate"},{"@id":"http://schema.org/PreOrder","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item is available for pre-order, but will be delivered when generally available.","rdfs:label":"PreOrder"},{"@id":"http://schema.org/workExample","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/inverseOf":{"@id":"http://schema.org/exampleOfWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.","rdfs:label":"workExample"},{"@id":"http://schema.org/HowToSection","@type":"rdfs:Class","rdfs:comment":"A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).","rdfs:label":"HowToSection","rdfs:subClassOf":{"@id":"http://schema.org/ItemList"}},{"@id":"http://schema.org/seasons","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/RadioSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWorkSeason"},"http://schema.org/supersededBy":{"@id":"http://schema.org/season"},"rdfs:comment":"A season in a media series.","rdfs:label":"seasons"},{"@id":"http://schema.org/MusicAlbum","@type":"rdfs:Class","rdfs:comment":"A collection of music tracks.","rdfs:label":"MusicAlbum","rdfs:subClassOf":{"@id":"http://schema.org/MusicPlaylist"}},{"@id":"http://schema.org/mileageFromOdometer","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The total distance travelled by the particular vehicle since its initial production, as read from its odometer.</p>\n\n<p>Typical unit code(s): KMT for kilometers, SMI for statute miles","rdfs:label":"mileageFromOdometer"},{"@id":"http://schema.org/Person","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"http://www.w3.org/2002/07/owl#equivalentClass":{"@id":"http://xmlns.com/foaf/0.1/Person"},"rdfs:comment":"A person (alive, dead, undead, or fictional).","rdfs:label":"Person","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/permissions","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).","rdfs:label":"permissions"},{"@id":"http://schema.org/RsvpResponseYes","@type":"http://schema.org/RsvpResponseType","rdfs:comment":"The invitee will attend.","rdfs:label":"RsvpResponseYes"},{"@id":"http://schema.org/provider","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Reservation"},{"@id":"http://schema.org/Invoice"},{"@id":"http://schema.org/Flight"},{"@id":"http://schema.org/BusTrip"},{"@id":"http://schema.org/ParcelDelivery"},{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/TrainTrip"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.","rdfs:label":"provider"},{"@id":"http://schema.org/DeliveryChargeSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"The price for the delivery of an offer using a particular delivery method.","rdfs:label":"DeliveryChargeSpecification","rdfs:subClassOf":{"@id":"http://schema.org/PriceSpecification"}},{"@id":"http://schema.org/screenCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MovieTheater"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The number of screens in the movie theater.","rdfs:label":"screenCount"},{"@id":"http://schema.org/openingHoursSpecification","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/OpeningHoursSpecification"},"rdfs:comment":"The opening hours of a certain place.","rdfs:label":"openingHoursSpecification"},{"@id":"http://schema.org/occupancy","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Suite"},{"@id":"http://schema.org/Apartment"},{"@id":"http://schema.org/HotelRoom"},{"@id":"http://schema.org/SingleFamilyResidence"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).\nTypical unit code(s): C62 for person","rdfs:label":"occupancy"},{"@id":"http://schema.org/saturatedFatContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of saturated fat.","rdfs:label":"saturatedFatContent"},{"@id":"http://schema.org/LendAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/BorrowAction\">BorrowAction</a>: Reciprocal of LendAction.</li>\n</ul>\n","rdfs:label":"LendAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/availabilityStarts","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The beginning of the availability of the product or service included in the offer.","rdfs:label":"availabilityStarts"},{"@id":"http://schema.org/FoodEstablishment","@type":"rdfs:Class","rdfs:comment":"A food-related business.","rdfs:label":"FoodEstablishment","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/encoding","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MediaObject"},"rdfs:comment":"A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.","rdfs:label":"encoding"},{"@id":"http://schema.org/interactivityType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.","rdfs:label":"interactivityType"},{"@id":"http://schema.org/ListenAction","@type":"rdfs:Class","rdfs:comment":"The act of consuming audio content.","rdfs:label":"ListenAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/TransferAction","@type":"rdfs:Class","rdfs:comment":"The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.","rdfs:label":"TransferAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/SoundtrackAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"SoundtrackAlbum.","rdfs:label":"SoundtrackAlbum"},{"@id":"http://schema.org/NutritionInformation","@type":"rdfs:Class","rdfs:comment":"Nutritional information about the recipe.","rdfs:label":"NutritionInformation","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/benefits","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/jobBenefits"},"rdfs:comment":"Description of benefits associated with the job.","rdfs:label":"benefits"},{"@id":"http://schema.org/SiteNavigationElement","@type":"rdfs:Class","rdfs:comment":"A navigation element of the page.","rdfs:label":"SiteNavigationElement","rdfs:subClassOf":{"@id":"http://schema.org/WebPageElement"}},{"@id":"http://schema.org/albums","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicGroup"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicAlbum"},"http://schema.org/supersededBy":{"@id":"http://schema.org/album"},"rdfs:comment":"A collection of music albums.","rdfs:label":"albums"},{"@id":"http://schema.org/gamePlatform","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/VideoGameSeries"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Thing"},{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"The electronic systems used to play <a href=\"http://en.wikipedia.org/wiki/Category:Video_game_platforms\">video games</a>.","rdfs:label":"gamePlatform"},{"@id":"http://schema.org/orderItemStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/OrderItem"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/OrderStatus"},"rdfs:comment":"The current status of the order item.","rdfs:label":"orderItemStatus"},{"@id":"http://schema.org/Organization","@type":"rdfs:Class","rdfs:comment":"An organization such as a school, NGO, corporation, club, etc.","rdfs:label":"Organization","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/programMembershipUsed","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ProgramMembership"},"rdfs:comment":"Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.","rdfs:label":"programMembershipUsed"},{"@id":"http://schema.org/DeleteAction","@type":"rdfs:Class","rdfs:comment":"The act of editing a recipient by removing one of its objects.","rdfs:label":"DeleteAction","rdfs:subClassOf":{"@id":"http://schema.org/UpdateAction"}},{"@id":"http://schema.org/Wednesday","@type":"http://schema.org/DayOfWeek","http://schema.org/sameAs":{"@id":"http://www.wikidata.org/entity/Q128"},"rdfs:comment":"The day of the week between Tuesday and Thursday.","rdfs:label":"Wednesday"},{"@id":"http://schema.org/trackingUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"Tracking url for the parcel delivery.","rdfs:label":"trackingUrl"},{"@id":"http://schema.org/RefurbishedCondition","@type":"http://schema.org/OfferItemCondition","rdfs:comment":"Indicates that the item is refurbished.","rdfs:label":"RefurbishedCondition"},{"@id":"http://schema.org/bookEdition","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Book"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The edition of the book.","rdfs:label":"bookEdition"},{"@id":"http://schema.org/TradeAction","@type":"rdfs:Class","rdfs:comment":"The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.","rdfs:label":"TradeAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/processorRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Processor architecture required to run the application (e.g. IA64).","rdfs:label":"processorRequirements"},{"@id":"http://schema.org/LegalService","@type":"rdfs:Class","rdfs:comment":"A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.</p>\n\n<p>As a <a class=\"localLink\" href=\"http://schema.org/LocalBusiness\">LocalBusiness</a> it can be described as a <a class=\"localLink\" href=\"http://schema.org/provider\">provider</a> of one or more <a class=\"localLink\" href=\"http://schema.org/Service\">Service</a>(s).","rdfs:label":"LegalService","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/grantee","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DigitalDocumentPermission"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Audience"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The person, organization, contact point, or audience that has been granted this permission.","rdfs:label":"grantee"},{"@id":"http://schema.org/RemixAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"RemixAlbum.","rdfs:label":"RemixAlbum"},{"@id":"http://schema.org/membershipNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ProgramMembership"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A unique identifier for the membership.","rdfs:label":"membershipNumber"},{"@id":"http://schema.org/OrderProcessing","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing that an order is being processed.","rdfs:label":"OrderProcessing"},{"@id":"http://schema.org/VisualArtwork","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_VisualArtworkClass"},"rdfs:comment":"A work of art that is primarily visual in character.","rdfs:label":"VisualArtwork","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/recipeYield","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The quantity produced by the recipe (for example, number of people served, number of servings, etc).","rdfs:label":"recipeYield","rdfs:subPropertyOf":{"@id":"http://schema.org/yield"}},{"@id":"http://schema.org/qualifications","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Specific qualifications required for this role.","rdfs:label":"qualifications"},{"@id":"http://schema.org/gameServer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VideoGame"},"http://schema.org/inverseOf":{"@id":"http://schema.org/game"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/GameServer"},"rdfs:comment":"The server on which  it is possible to play the game.","rdfs:label":"gameServer"},{"@id":"http://schema.org/arrivalPlatform","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TrainTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The platform where the train arrives.","rdfs:label":"arrivalPlatform"},{"@id":"http://schema.org/Attorney","@type":"rdfs:Class","rdfs:comment":"Professional service: Attorney. </p>\n\n<p>This type is deprecated - <a class=\"localLink\" href=\"http://schema.org/LegalService\">LegalService</a> is more inclusive and less ambiguous.","rdfs:label":"Attorney","rdfs:subClassOf":{"@id":"http://schema.org/LegalService"}},{"@id":"http://schema.org/RsvpAction","@type":"rdfs:Class","rdfs:comment":"The act of notifying an event organizer as to whether you expect to attend the event.","rdfs:label":"RsvpAction","rdfs:subClassOf":{"@id":"http://schema.org/InformAction"}},{"@id":"http://schema.org/url","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"URL of the item.","rdfs:label":"url"},{"@id":"http://schema.org/Rating","@type":"rdfs:Class","rdfs:comment":"A rating is an evaluation on a numeric scale, such as 1 to 5 stars.","rdfs:label":"Rating","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/bed","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Suite"},{"@id":"http://schema.org/HotelRoom"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/BedDetails"}],"rdfs:comment":"The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.\n      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.","rdfs:label":"bed"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ","@type":"http://schema.org/Organization","rdfs:comment":"This vocabulary was improved through collaboration with the MusicBrainz project\n    (<a href=\"http://www.musicbrainz.org\">www.musicbrainz.org</a>), and is partially inspired by the MusicBrainz and\n    <a href=\"http://musicontology.com/docs/getting-started.html\">Music Ontology</a> schemas.","rdfs:label":"MBZ"},{"@id":"http://schema.org/bookFormat","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Book"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BookFormatType"},"rdfs:comment":"The format of the book.","rdfs:label":"bookFormat"},{"@id":"http://schema.org/Time","@type":["rdfs:Class","http://schema.org/DataType"],"rdfs:comment":"A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href=\"http://www.w3.org/TR/xmlschema-2/#time\">XML schema for details</a>).","rdfs:label":"Time"},{"@id":"http://schema.org/availableDeliveryMethod","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DeliveryMethod"},"rdfs:comment":"The delivery method(s) available for this offer.","rdfs:label":"availableDeliveryMethod"},{"@id":"http://schema.org/VegetarianDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet exclusive of animal meat.","rdfs:label":"VegetarianDiet"},{"@id":"http://schema.org/KosherDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet conforming to Jewish dietary practices.","rdfs:label":"KosherDiet"},{"@id":"http://schema.org/ApartmentComplex","@type":"rdfs:Class","rdfs:comment":"Residence type: Apartment complex.","rdfs:label":"ApartmentComplex","rdfs:subClassOf":{"@id":"http://schema.org/Residence"}},{"@id":"http://schema.org/accessibilitySummary","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://github.com/schemaorg/schemaorg/issues/1100"},"http://schema.org/category":"issue-1110","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed.\"","rdfs:label":"accessibilitySummary"},{"@id":"http://schema.org/HousePainter","@type":"rdfs:Class","rdfs:comment":"A house painting service.","rdfs:label":"HousePainter","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/WinAction","@type":"rdfs:Class","rdfs:comment":"The act of achieving victory in a competitive activity.","rdfs:label":"WinAction","rdfs:subClassOf":{"@id":"http://schema.org/AchieveAction"}},{"@id":"http://schema.org/MovieRentalStore","@type":"rdfs:Class","rdfs:comment":"A movie rental store.","rdfs:label":"MovieRentalStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/WatchAction","@type":"rdfs:Class","rdfs:comment":"The act of consuming dynamic/moving visual content.","rdfs:label":"WatchAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/workFeatured","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"A work featured in some event, e.g. exhibited in an ExhibitionEvent.\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).","rdfs:label":"workFeatured"},{"@id":"http://schema.org/PropertyValueSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass"},"rdfs:comment":"A Property value specification.","rdfs:label":"PropertyValueSpecification","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/EducationEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Education event.","rdfs:label":"EducationEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/serviceAudience","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Service"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Audience"},"http://schema.org/supersededBy":{"@id":"http://schema.org/audience"},"rdfs:comment":"The audience eligible for this service.","rdfs:label":"serviceAudience"},{"@id":"http://schema.org/recipeCategory","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The category of the recipe—for example, appetizer, entree, etc.","rdfs:label":"recipeCategory"},{"@id":"http://schema.org/fatContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of fat.","rdfs:label":"fatContent"},{"@id":"http://schema.org/character","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"Fictional person connected with a creative work.","rdfs:label":"character"},{"@id":"http://schema.org/ResumeAction","@type":"rdfs:Class","rdfs:comment":"The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).","rdfs:label":"ResumeAction","rdfs:subClassOf":{"@id":"http://schema.org/ControlAction"}},{"@id":"http://schema.org/ToyStore","@type":"rdfs:Class","rdfs:comment":"A toy store.","rdfs:label":"ToyStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/BedAndBreakfast","@type":"rdfs:Class","rdfs:comment":"Bed and breakfast.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"BedAndBreakfast","rdfs:subClassOf":{"@id":"http://schema.org/LodgingBusiness"}},{"@id":"http://schema.org/Sunday","@type":"http://schema.org/DayOfWeek","http://schema.org/sameAs":{"@id":"http://www.wikidata.org/entity/Q132"},"rdfs:comment":"The day of the week between Saturday and Monday.","rdfs:label":"Sunday"},{"@id":"http://schema.org/Suite","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Suite_(hotel)\">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Suite","rdfs:subClassOf":{"@id":"http://schema.org/Accommodation"}},{"@id":"http://schema.org/areaServed","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/DeliveryChargeSpecification"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/GeoShape"},{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/AdministrativeArea"}],"rdfs:comment":"The geographic area where a service or offered item is provided.","rdfs:label":"areaServed"},{"@id":"http://schema.org/postOfficeBoxNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PostalAddress"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The post office box number for PO box addresses.","rdfs:label":"postOfficeBoxNumber"},{"@id":"http://schema.org/audience","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/PlayAction"},{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/LodgingBusiness"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Audience"},"rdfs:comment":"An intended audience, i.e. a group for whom something was created.","rdfs:label":"audience"},{"@id":"http://schema.org/awayTeam","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SportsEvent"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/SportsTeam"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The away team in a sports event.","rdfs:label":"awayTeam","rdfs:subPropertyOf":{"@id":"http://schema.org/competitor"}},{"@id":"http://schema.org/GenderType","@type":"rdfs:Class","rdfs:comment":"An enumeration of genders.","rdfs:label":"GenderType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/InstallAction","@type":"rdfs:Class","rdfs:comment":"The act of installing an application.","rdfs:label":"InstallAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/EventVenue","@type":"rdfs:Class","rdfs:comment":"An event venue.","rdfs:label":"EventVenue","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/providesService","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ServiceChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Service"},"rdfs:comment":"The service provided by this channel.","rdfs:label":"providesService"},{"@id":"http://schema.org/GiveAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/TakeAction\">TakeAction</a>: Reciprocal of GiveAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/SendAction\">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li>\n</ul>\n","rdfs:label":"GiveAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/instructor","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CourseInstance"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A person assigned to instruct or provide instructional assistance for the <a class=\"localLink\" href=\"http://schema.org/CourseInstance\">CourseInstance</a>.","rdfs:label":"instructor"},{"@id":"http://schema.org/sourceOrganization","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The Organization on whose behalf the creator was working.","rdfs:label":"sourceOrganization"},{"@id":"http://schema.org/remainingAttendeeCapacity","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of attendee places for an event that remain unallocated.","rdfs:label":"remainingAttendeeCapacity"},{"@id":"http://schema.org/mpn","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.","rdfs:label":"mpn"},{"@id":"http://schema.org/memberOf","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/inverseOf":{"@id":"http://schema.org/member"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/ProgramMembership"}],"rdfs:comment":"An Organization (or ProgramMembership) to which this Person or Organization belongs.","rdfs:label":"memberOf"},{"@id":"http://schema.org/OrderPickupAvailable","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing availability of an order for pickup.","rdfs:label":"OrderPickupAvailable"},{"@id":"http://schema.org/BuyAction","@type":"rdfs:Class","rdfs:comment":"The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.","rdfs:label":"BuyAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/PostOffice","@type":"rdfs:Class","rdfs:comment":"A post office.","rdfs:label":"PostOffice","rdfs:subClassOf":{"@id":"http://schema.org/GovernmentOffice"}},{"@id":"http://schema.org/CheckoutPage","@type":"rdfs:Class","rdfs:comment":"Web page type: Checkout page.","rdfs:label":"CheckoutPage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/Accommodation","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.\nFor more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Accommodation","rdfs:subClassOf":{"@id":"http://schema.org/Place"}},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass","@type":"http://schema.org/Organization","rdfs:comment":"The schema.org Actions mechanism benefited from extensive discussions across the Web standards community around W3C, in particular from the <a href=\"http://purl.org/hydra/\">Hydra project</a>'s community group.","rdfs:label":"ActionCollabClass"},{"@id":"http://schema.org/isPartOf","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/inverseOf":{"@id":"http://schema.org/hasPart"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"Indicates a CreativeWork that this CreativeWork is (in some sense) part of.","rdfs:label":"isPartOf"},{"@id":"http://schema.org/LandmarksOrHistoricalBuildings","@type":"rdfs:Class","rdfs:comment":"An historical landmark or building.","rdfs:label":"LandmarksOrHistoricalBuildings","rdfs:subClassOf":{"@id":"http://schema.org/Place"}},{"@id":"http://schema.org/actor","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/MovieSeries"},{"@id":"http://schema.org/Clip"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/CreativeWorkSeason"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.","rdfs:label":"actor"},{"@id":"http://schema.org/defaultValue","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Thing"}],"rdfs:comment":"The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.","rdfs:label":"defaultValue"},{"@id":"http://schema.org/DiabeticDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet appropriate for people with diabetes.","rdfs:label":"DiabeticDiet"},{"@id":"http://schema.org/LiveAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"LiveAlbum.","rdfs:label":"LiveAlbum"},{"@id":"http://schema.org/beforeMedia","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/HowToDirection"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MediaObject"},"rdfs:comment":"A media object representing the circumstances before performing this direction.","rdfs:label":"beforeMedia"},{"@id":"http://schema.org/PerformingArtsTheater","@type":"rdfs:Class","rdfs:comment":"A theater or other performing art center.","rdfs:label":"PerformingArtsTheater","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/AggregateOffer","@type":"rdfs:Class","rdfs:comment":"When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.","rdfs:label":"AggregateOffer","rdfs:subClassOf":{"@id":"http://schema.org/Offer"}},{"@id":"http://schema.org/actionOption","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ChooseAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Thing"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"A sub property of object. The options subject to this action.","rdfs:label":"actionOption","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/Museum","@type":"rdfs:Class","rdfs:comment":"A museum.","rdfs:label":"Museum","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/height","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/MediaObject"},{"@id":"http://schema.org/VisualArtwork"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Distance"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The height of the item.","rdfs:label":"height"},{"@id":"http://schema.org/PotentialActionStatus","@type":"http://schema.org/ActionStatusType","rdfs:comment":"A description of an action that is supported.","rdfs:label":"PotentialActionStatus"},{"@id":"http://schema.org/HowToSupply","@type":"rdfs:Class","rdfs:comment":"A supply consumed when performing the instructions for how to achieve a result.","rdfs:label":"HowToSupply","rdfs:subClassOf":{"@id":"http://schema.org/HowToItem"}},{"@id":"http://schema.org/deliveryAddress","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PostalAddress"},"rdfs:comment":"Destination address.","rdfs:label":"deliveryAddress"},{"@id":"http://schema.org/performers","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/performer"},"rdfs:comment":"The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.","rdfs:label":"performers"},{"@id":"http://schema.org/serialNumber","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/IndividualProduct"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.","rdfs:label":"serialNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/trackingNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Shipper tracking number.","rdfs:label":"trackingNumber"},{"@id":"http://schema.org/AutoRepair","@type":"rdfs:Class","rdfs:comment":"Car repair business.","rdfs:label":"AutoRepair","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/broadcastTimezone","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastService"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The timezone in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 format</a> for which the service bases its broadcasts","rdfs:label":"broadcastTimezone"},{"@id":"http://schema.org/ExerciseGym","@type":"rdfs:Class","rdfs:comment":"A gym.","rdfs:label":"ExerciseGym","rdfs:subClassOf":{"@id":"http://schema.org/SportsActivityLocation"}},{"@id":"http://schema.org/Embassy","@type":"rdfs:Class","rdfs:comment":"An embassy.","rdfs:label":"Embassy","rdfs:subClassOf":{"@id":"http://schema.org/GovernmentBuilding"}},{"@id":"http://schema.org/ProfilePage","@type":"rdfs:Class","rdfs:comment":"Web page type: Profile page.","rdfs:label":"ProfilePage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/DisagreeAction","@type":"rdfs:Class","rdfs:comment":"The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.","rdfs:label":"DisagreeAction","rdfs:subClassOf":{"@id":"http://schema.org/ReactAction"}},{"@id":"http://schema.org/partOfSeries","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/Clip"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWorkSeries"},"rdfs:comment":"The series to which this episode or season belongs.","rdfs:label":"partOfSeries","rdfs:subPropertyOf":{"@id":"http://schema.org/isPartOf"}},{"@id":"http://schema.org/childMaxAge","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParentAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"Maximal age of the child.","rdfs:label":"childMaxAge"},{"@id":"http://schema.org/includedInDataCatalog","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Dataset"},"http://schema.org/inverseOf":{"@id":"http://schema.org/dataset"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DataCatalog"},"rdfs:comment":"A data catalog which contains this dataset.","rdfs:label":"includedInDataCatalog"},{"@id":"http://schema.org/ImageObject","@type":"rdfs:Class","http://www.w3.org/2002/07/owl#equivalentClass":{"@id":"http://purl.org/dc/dcmitype/Image"},"rdfs:comment":"An image file.","rdfs:label":"ImageObject","rdfs:subClassOf":{"@id":"http://schema.org/MediaObject"}},{"@id":"http://schema.org/workLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/ContactPoint"}],"rdfs:comment":"A contact location for a person's place of work.","rdfs:label":"workLocation","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/ReservationPackage","@type":"rdfs:Class","rdfs:comment":"A group of multiple reservations with common values for all sub-reservations.","rdfs:label":"ReservationPackage","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/FinancialProduct","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.","rdfs:label":"FinancialProduct","rdfs:subClassOf":{"@id":"http://schema.org/Service"}},{"@id":"http://schema.org/DigitalDocument","@type":"rdfs:Class","rdfs:comment":"An electronic file or document.","rdfs:label":"DigitalDocument","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/coverageStartTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LiveBlogPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.","rdfs:label":"coverageStartTime"},{"@id":"http://schema.org/HomeAndConstructionBusiness","@type":"rdfs:Class","rdfs:comment":"A construction business.</p>\n\n<p>A HomeAndConstructionBusiness is a <a class=\"localLink\" href=\"http://schema.org/LocalBusiness\">LocalBusiness</a> that provides services around homes and buildings.</p>\n\n<p>As a <a class=\"localLink\" href=\"http://schema.org/LocalBusiness\">LocalBusiness</a> it can be described as a <a class=\"localLink\" href=\"http://schema.org/provider\">provider</a> of one or more <a class=\"localLink\" href=\"http://schema.org/Service\">Service</a>(s).","rdfs:label":"HomeAndConstructionBusiness","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/ProgramMembership","@type":"rdfs:Class","rdfs:comment":"Used to describe membership in a loyalty programs (e.g. \"StarAliance\"), traveler clubs (e.g. \"AAA\"), purchase clubs (\"Safeway Club\"), etc.","rdfs:label":"ProgramMembership","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/ControlAction","@type":"rdfs:Class","rdfs:comment":"An agent controls a device or application.","rdfs:label":"ControlAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/CheckAction","@type":"rdfs:Class","rdfs:comment":"An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.","rdfs:label":"CheckAction","rdfs:subClassOf":{"@id":"http://schema.org/FindAction"}},{"@id":"http://schema.org/busName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BusTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The name of the bus (e.g. Bolt Express).","rdfs:label":"busName"},{"@id":"http://schema.org/vehicleInteriorColor","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The color or color combination of the interior of the vehicle.","rdfs:label":"vehicleInteriorColor"},{"@id":"http://schema.org/browserRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.","rdfs:label":"browserRequirements"},{"@id":"http://schema.org/floorSize","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Accommodation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The size of the accommodation, e.g. in square meter or squarefoot.\nTypical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard","rdfs:label":"floorSize"},{"@id":"http://schema.org/appliesToPaymentMethod","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/PaymentChargeSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PaymentMethod"},"rdfs:comment":"The payment method(s) to which the payment charge specification applies.","rdfs:label":"appliesToPaymentMethod"},{"@id":"http://schema.org/EPRelease","@type":"http://schema.org/MusicAlbumReleaseType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"EPRelease.","rdfs:label":"EPRelease"},{"@id":"http://schema.org/BroadcastRelease","@type":"http://schema.org/MusicAlbumReleaseType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"BroadcastRelease.","rdfs:label":"BroadcastRelease"},{"@id":"http://schema.org/departureBusStop","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BusTrip"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/BusStation"},{"@id":"http://schema.org/BusStop"}],"rdfs:comment":"The stop or station from which the bus departs.","rdfs:label":"departureBusStop"},{"@id":"http://schema.org/DiscussionForumPosting","@type":"rdfs:Class","rdfs:comment":"A posting to a discussion forum.","rdfs:label":"DiscussionForumPosting","rdfs:subClassOf":{"@id":"http://schema.org/SocialMediaPosting"}},{"@id":"http://schema.org/bitrate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The bitrate of the media object.","rdfs:label":"bitrate"},{"@id":"http://schema.org/events","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Place"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/supersededBy":{"@id":"http://schema.org/event"},"rdfs:comment":"Upcoming or past events associated with this place or organization.","rdfs:label":"events"},{"@id":"http://schema.org/TouristAttraction","@type":"rdfs:Class","http://purl.org/dc/terms/source":[{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it"}],"rdfs:comment":"A tourist attraction.  In principle any Thing can be a <a class=\"localLink\" href=\"http://schema.org/TouristAttraction\">TouristAttraction</a>, from a <a class=\"localLink\" href=\"http://schema.org/Mountain\">Mountain</a> and <a class=\"localLink\" href=\"http://schema.org/LandmarksOrHistoricalBuildings\">LandmarksOrHistoricalBuildings</a> to a <a class=\"localLink\" href=\"http://schema.org/LocalBusiness\">LocalBusiness</a>.  This Type can be used on its own to describe a general <a class=\"localLink\" href=\"http://schema.org/TourstAttraction\">TourstAttraction</a>, or be used as an <a class=\"localLink\" href=\"http://schema.org/additionalType\">additionalType</a> to add tourist attraction properties to any other type.  (See examples below)","rdfs:label":"TouristAttraction","rdfs:subClassOf":{"@id":"http://schema.org/Place"}},{"@id":"http://schema.org/Car","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"A car is a wheeled, self-powered motor vehicle used for transportation.","rdfs:label":"Car","rdfs:subClassOf":{"@id":"http://schema.org/Vehicle"}},{"@id":"http://schema.org/PriceSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class=\"localLink\" href=\"http://schema.org/MonetaryAmount\">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc.","rdfs:label":"PriceSpecification","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/netWorth","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/MonetaryAmount"},{"@id":"http://schema.org/PriceSpecification"}],"rdfs:comment":"The total financial value of the person as calculated by subtracting assets from liabilities.","rdfs:label":"netWorth"},{"@id":"http://schema.org/videoFormat","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/BroadcastService"},{"@id":"http://schema.org/BroadcastEvent"},{"@id":"http://schema.org/ScreeningEvent"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).","rdfs:label":"videoFormat"},{"@id":"http://schema.org/Season","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/CreativeWorkSeason"},"rdfs:comment":"A media season e.g. tv, radio, video game etc.","rdfs:label":"Season","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/ineligibleRegion","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/DeliveryChargeSpecification"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/GeoShape"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.</p>\n\n<p>See also <a class=\"localLink\" href=\"http://schema.org/eligibleRegion\">eligibleRegion</a>.","rdfs:label":"ineligibleRegion"},{"@id":"http://schema.org/servesCuisine","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FoodEstablishment"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The cuisine of the restaurant.","rdfs:label":"servesCuisine"},{"@id":"http://schema.org/DrawAction","@type":"rdfs:Class","rdfs:comment":"The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.","rdfs:label":"DrawAction","rdfs:subClassOf":{"@id":"http://schema.org/CreateAction"}},{"@id":"http://schema.org/paymentDue","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Order"},{"@id":"http://schema.org/Invoice"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"http://schema.org/supersededBy":{"@id":"http://schema.org/paymentDueDate"},"rdfs:comment":"The date that payment is due.","rdfs:label":"paymentDue"},{"@id":"http://schema.org/PaymentCard","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A payment method using a credit, debit, store or other card to associate the payment with an account.","rdfs:label":"PaymentCard","rdfs:subClassOf":[{"@id":"http://schema.org/FinancialProduct"},{"@id":"http://schema.org/PaymentMethod"}]},{"@id":"http://schema.org/numberOfEpisodes","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/RadioSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of episodes in this season or series.","rdfs:label":"numberOfEpisodes"},{"@id":"http://schema.org/PublicationVolume","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"rdfs:comment":"<p>A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.</p>\n\n<pre><code>  &lt;br/&gt;&lt;br/&gt;See also &lt;a href=\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\"&gt;blog post&lt;/a&gt;.\n</code></pre>\n","rdfs:label":"PublicationVolume","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/LocalBusiness","@type":"rdfs:Class","rdfs:comment":"A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.","rdfs:label":"LocalBusiness","rdfs:subClassOf":[{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Organization"}]},{"@id":"http://schema.org/requiresSubscription","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').","rdfs:label":"requiresSubscription"},{"@id":"http://schema.org/CancelAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of asserting that a future event/action is no longer going to happen.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/ConfirmAction\">ConfirmAction</a>: The antonym of CancelAction.</li>\n</ul>\n","rdfs:label":"CancelAction","rdfs:subClassOf":{"@id":"http://schema.org/PlanAction"}},{"@id":"http://schema.org/RsvpResponseMaybe","@type":"http://schema.org/RsvpResponseType","rdfs:comment":"The invitee may or may not attend.","rdfs:label":"RsvpResponseMaybe"},{"@id":"http://schema.org/minValue","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/PropertyValue"},{"@id":"http://schema.org/MonetaryAmount"},{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/PropertyValueSpecification"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The lower value of some characteristic or property.","rdfs:label":"minValue"},{"@id":"http://schema.org/actionApplication","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EntryPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SoftwareApplication"},"rdfs:comment":"An application that can complete the request.","rdfs:label":"actionApplication"},{"@id":"http://schema.org/trailer","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/MovieSeries"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/RadioSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/VideoObject"},"rdfs:comment":"The trailer of a movie or tv/radio series, season, episode, etc.","rdfs:label":"trailer"},{"@id":"http://schema.org/IgnoreAction","@type":"rdfs:Class","rdfs:comment":"The act of intentionally disregarding the object. An agent ignores an object.","rdfs:label":"IgnoreAction","rdfs:subClassOf":{"@id":"http://schema.org/AssessAction"}},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO","@type":"http://schema.org/Organization","rdfs:comment":"This element is based on the work of the Financial Industry Business Ontology project (see <a href=\"http://www.fibo.org/schema\">http://www.fibo.org/schema</a> for details), in support of the W3C Financial Industry Business Ontology Community Group (<a href=\"http://www.fibo.org/community\">http://www.fibo.org/community</a>). Many class and property definitions are inspired by or based on <a href=\"http://www.fibo.org\">http://www.fibo.org</a>.","rdfs:label":"FIBO"},{"@id":"http://schema.org/steeringPosition","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SteeringPositionValue"},"rdfs:comment":"The position of the steering wheel or similar device (mostly for cars).","rdfs:label":"steeringPosition"},{"@id":"http://schema.org/MusicRecording","@type":"rdfs:Class","rdfs:comment":"A music recording (track), usually a single song.","rdfs:label":"MusicRecording","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/arrivalGate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Identifier of the flight's arrival gate.","rdfs:label":"arrivalGate"},{"@id":"http://schema.org/loanTerm","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/LoanOrCredit"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The duration of the loan or credit agreement.","rdfs:label":"loanTerm","rdfs:subPropertyOf":{"@id":"http://schema.org/duration"}},{"@id":"http://schema.org/target","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/EntryPoint"},"rdfs:comment":"Indicates a target EntryPoint for an Action.","rdfs:label":"target"},{"@id":"http://schema.org/includedComposition","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicComposition"},"rdfs:comment":"Smaller compositions included in this work (e.g. a movement in a symphony).","rdfs:label":"includedComposition"},{"@id":"http://schema.org/line","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoShape"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.","rdfs:label":"line"},{"@id":"http://schema.org/minPrice","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/PriceSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The lowest price if the price is a range.","rdfs:label":"minPrice"},{"@id":"http://schema.org/MotorcycleDealer","@type":"rdfs:Class","rdfs:comment":"A motorcycle dealer.","rdfs:label":"MotorcycleDealer","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/regionsAllowed","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href=\"http://en.wikipedia.org/wiki/ISO_3166\">ISO 3166 format</a>.","rdfs:label":"regionsAllowed"},{"@id":"http://schema.org/CheckOutAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/CheckInAction\">CheckInAction</a>: The antonym of CheckOutAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/DepartAction\">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/CancelAction\">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>\n</ul>\n","rdfs:label":"CheckOutAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/priceRange","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LocalBusiness"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The price range of the business, for example <code>$$$</code>.","rdfs:label":"priceRange"},{"@id":"http://schema.org/BankAccount","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.","rdfs:label":"BankAccount","rdfs:subClassOf":{"@id":"http://schema.org/FinancialProduct"}},{"@id":"http://schema.org/Duration","@type":"rdfs:Class","rdfs:comment":"Quantity: Duration (use <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 duration format</a>).","rdfs:label":"Duration","rdfs:subClassOf":{"@id":"http://schema.org/Quantity"}},{"@id":"http://schema.org/RealEstateAgent","@type":"rdfs:Class","rdfs:comment":"A real-estate agent.","rdfs:label":"RealEstateAgent","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/children","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A child of the person.","rdfs:label":"children"},{"@id":"http://schema.org/MapCategoryType","@type":"rdfs:Class","rdfs:comment":"An enumeration of several kinds of Map.","rdfs:label":"MapCategoryType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/SportsOrganization","@type":"rdfs:Class","rdfs:comment":"Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.","rdfs:label":"SportsOrganization","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/EndorseAction","@type":"rdfs:Class","rdfs:comment":"An agent approves/certifies/likes/supports/sanction an object.","rdfs:label":"EndorseAction","rdfs:subClassOf":{"@id":"http://schema.org/ReactAction"}},{"@id":"http://schema.org/EducationalOrganization","@type":"rdfs:Class","rdfs:comment":"An educational organization.","rdfs:label":"EducationalOrganization","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/orderNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The identifier of the transaction.","rdfs:label":"orderNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/gtin8","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.","rdfs:label":"gtin8","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/image","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ImageObject"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>.","rdfs:label":"image"},{"@id":"http://schema.org/CableOrSatelliteService","@type":"rdfs:Class","rdfs:comment":"A service which provides access to media programming like TV or radio. Access may be via cable or satellite.","rdfs:label":"CableOrSatelliteService","rdfs:subClassOf":{"@id":"http://schema.org/Service"}},{"@id":"http://schema.org/endDate","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWorkSeries"},{"@id":"http://schema.org/DatedMoneySpecification"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/Role"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Date"},{"@id":"http://schema.org/DateTime"}],"rdfs:comment":"The end date and time of the item (in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>).","rdfs:label":"endDate"},{"@id":"http://schema.org/annualPercentageRate","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/FinancialProduct"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.","rdfs:label":"annualPercentageRate"},{"@id":"http://schema.org/HinduTemple","@type":"rdfs:Class","rdfs:comment":"A Hindu temple.","rdfs:label":"HinduTemple","rdfs:subClassOf":{"@id":"http://schema.org/PlaceOfWorship"}},{"@id":"http://schema.org/TVSeason","@type":"rdfs:Class","rdfs:comment":"Season dedicated to TV broadcast and associated online delivery.","rdfs:label":"TVSeason","rdfs:subClassOf":[{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/CreativeWork"}]},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms","@type":"http://schema.org/Organization","rdfs:comment":"This term <a href=\"http://blog.schema.org/2012/11/good-relations-and-schemaorg.html\">uses</a> terminology from the GoodRelations Vocabulary for E-Commerce, created by Martin Hepp. GoodRelations is a data model for sharing e-commerce data on the Web. More information about GoodRelations can be found at <a href=\"http://purl.org/goodrelations/\">http://purl.org/goodrelations/</a>.","rdfs:label":"GoodRelationsTerms"},{"@id":"http://schema.org/SearchResultsPage","@type":"rdfs:Class","rdfs:comment":"Web page type: Search results page.","rdfs:label":"SearchResultsPage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/UserBlocks","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserBlocks","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/hasDeliveryMethod","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/DeliveryEvent"},{"@id":"http://schema.org/ParcelDelivery"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DeliveryMethod"},"rdfs:comment":"Method used for delivery or shipping.","rdfs:label":"hasDeliveryMethod"},{"@id":"http://schema.org/DanceEvent","@type":"rdfs:Class","rdfs:comment":"Event type: A social dance.","rdfs:label":"DanceEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/flightNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.","rdfs:label":"flightNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/season","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/TVSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWorkSeason"},"http://schema.org/supersededBy":{"@id":"http://schema.org/containsSeason"},"rdfs:comment":"A season in a media series.","rdfs:label":"season","rdfs:subPropertyOf":{"@id":"http://schema.org/hasPart"}},{"@id":"http://schema.org/itemListElement","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ItemList"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ListItem"},{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Thing"}],"rdfs:comment":"For itemListElement values, you can use simple strings (e.g. \"Peter\", \"Paul\", \"Mary\"), existing entities, or use ListItem.</p>\n\n<p>Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.</p>\n\n<p>Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.","rdfs:label":"itemListElement"},{"@id":"http://schema.org/paymentUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"The URL for sending a payment.","rdfs:label":"paymentUrl"},{"@id":"http://schema.org/greater","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/QualitativeValue"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QualitativeValue"},"rdfs:comment":"This ordering relation for qualitative values indicates that the subject is greater than the object.","rdfs:label":"greater"},{"@id":"http://schema.org/blogPosts","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Blog"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BlogPosting"},"http://schema.org/supersededBy":{"@id":"http://schema.org/blogPost"},"rdfs:comment":"The postings that are part of this blog.","rdfs:label":"blogPosts"},{"@id":"http://schema.org/artMedium","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VisualArtwork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)","rdfs:label":"artMedium","rdfs:subPropertyOf":{"@id":"http://schema.org/material"}},{"@id":"http://schema.org/partOfEpisode","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Clip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Episode"},"rdfs:comment":"The episode to which this clip belongs.","rdfs:label":"partOfEpisode","rdfs:subPropertyOf":{"@id":"http://schema.org/isPartOf"}},{"@id":"http://schema.org/BookStore","@type":"rdfs:Class","rdfs:comment":"A bookstore.","rdfs:label":"BookStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/orderStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/OrderStatus"},"rdfs:comment":"The current status of the order.","rdfs:label":"orderStatus"},{"@id":"http://schema.org/prepTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/HowToDirection"},{"@id":"http://schema.org/HowTo"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"The length of time it takes to prepare the items to be used in instructions or a direction, in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 duration format</a>.","rdfs:label":"prepTime"},{"@id":"http://schema.org/recordLabel","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRelease"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/mo/label"},"rdfs:comment":"The label that issued the release.","rdfs:label":"recordLabel"},{"@id":"http://schema.org/agent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book.","rdfs:label":"agent"},{"@id":"http://schema.org/reservationStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ReservationStatusType"},"rdfs:comment":"The current status of the reservation.","rdfs:label":"reservationStatus"},{"@id":"http://schema.org/namedPosition","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Role"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/roleName"},"rdfs:comment":"A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.","rdfs:label":"namedPosition"},{"@id":"http://schema.org/validFor","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Permit"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"The time validity of the permit.","rdfs:label":"validFor"},{"@id":"http://schema.org/EntryPoint","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_ActionCollabClass"},"rdfs:comment":"An entry point, within some Web-based protocol.","rdfs:label":"EntryPoint","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/SaleEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Sales event.","rdfs:label":"SaleEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/FoodEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Food event.","rdfs:label":"FoodEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/DigitalDocumentPermission","@type":"rdfs:Class","rdfs:comment":"A permission for a particular person or group to access a particular file.","rdfs:label":"DigitalDocumentPermission","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/incentiveCompensation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Description of bonus and commission compensation aspects of the job.","rdfs:label":"incentiveCompensation"},{"@id":"http://schema.org/OutletStore","@type":"rdfs:Class","rdfs:comment":"An outlet store.","rdfs:label":"OutletStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/reviewRating","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Review"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Rating"},"rdfs:comment":"The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class=\"localLink\" href=\"http://schema.org/aggregateRating\">aggregateRating</a> property applies to the review itself, as a creative work.","rdfs:label":"reviewRating"},{"@id":"http://schema.org/jobTitle","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The job title of the person (for example, Financial Manager).","rdfs:label":"jobTitle"},{"@id":"http://schema.org/propertyID","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValue"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be\n(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)\na URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).\nStandards bodies should promote a standard prefix for the identifiers of properties from their standards.","rdfs:label":"propertyID"},{"@id":"http://schema.org/appliesToDeliveryMethod","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/PaymentChargeSpecification"},{"@id":"http://schema.org/DeliveryChargeSpecification"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DeliveryMethod"},"rdfs:comment":"The delivery method(s) to which the delivery charge or payment charge specification applies.","rdfs:label":"appliesToDeliveryMethod"},{"@id":"http://schema.org/InviteAction","@type":"rdfs:Class","rdfs:comment":"The act of asking someone to attend an event. Reciprocal of RsvpAction.","rdfs:label":"InviteAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/LowFatDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet focused on reduced fat and cholesterol intake.","rdfs:label":"LowFatDiet"},{"@id":"http://schema.org/video","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/VideoObject"},"rdfs:comment":"An embedded video object.","rdfs:label":"video"},{"@id":"http://schema.org/targetProduct","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareSourceCode"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SoftwareApplication"},"rdfs:comment":"Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.","rdfs:label":"targetProduct"},{"@id":"http://schema.org/episodes","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/VideoGameSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Episode"},"http://schema.org/supersededBy":{"@id":"http://schema.org/episode"},"rdfs:comment":"An episode of a TV/radio series or season.","rdfs:label":"episodes"},{"@id":"http://schema.org/course","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ExerciseAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/supersededBy":{"@id":"http://schema.org/exerciseCourse"},"rdfs:comment":"A sub property of location. The course where this action was taken.","rdfs:label":"course","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF","@type":"http://schema.org/Organization","rdfs:comment":"The implementation and use of Legal Entity Identifier (LEI) is supported by Global Legal Entity Identifier Foundation <a href=\"https://www.gleif.org\">https://www.gleif.org</a>.","rdfs:label":"GLEIF"},{"@id":"http://schema.org/TVEpisode","@type":"rdfs:Class","rdfs:comment":"A TV episode which can be part of a series or season.","rdfs:label":"TVEpisode","rdfs:subClassOf":{"@id":"http://schema.org/Episode"}},{"@id":"http://schema.org/MusicGroup","@type":"rdfs:Class","rdfs:comment":"A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.","rdfs:label":"MusicGroup","rdfs:subClassOf":{"@id":"http://schema.org/PerformingGroup"}},{"@id":"http://schema.org/AmusementPark","@type":"rdfs:Class","rdfs:comment":"An amusement park.","rdfs:label":"AmusementPark","rdfs:subClassOf":{"@id":"http://schema.org/EntertainmentBusiness"}},{"@id":"http://schema.org/ContactPointOption","@type":"rdfs:Class","rdfs:comment":"Enumerated options related to a ContactPoint.","rdfs:label":"ContactPointOption","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/doorTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The time admission will commence.","rdfs:label":"doorTime"},{"@id":"http://schema.org/subOrganization","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/inverseOf":{"@id":"http://schema.org/parentOrganization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.","rdfs:label":"subOrganization"},{"@id":"http://schema.org/dateRead","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Message"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date/time at which the message has been read by the recipient if a single recipient exists.","rdfs:label":"dateRead"},{"@id":"http://schema.org/publisher","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The publisher of the creative work.","rdfs:label":"publisher"},{"@id":"http://schema.org/workHours","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).","rdfs:label":"workHours"},{"@id":"http://schema.org/MobilePhoneStore","@type":"rdfs:Class","rdfs:comment":"A store that sells mobile phones and related accessories.","rdfs:label":"MobilePhoneStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/Casino","@type":"rdfs:Class","rdfs:comment":"A casino.","rdfs:label":"Casino","rdfs:subClassOf":{"@id":"http://schema.org/EntertainmentBusiness"}},{"@id":"http://schema.org/HearingImpairedSupported","@type":"http://schema.org/ContactPointOption","rdfs:comment":"Uses devices to support users with hearing impairments.","rdfs:label":"HearingImpairedSupported"},{"@id":"http://schema.org/broadcastServiceTier","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The type of service required to have access to the channel (e.g. Standard or Premium).","rdfs:label":"broadcastServiceTier"},{"@id":"http://schema.org/startTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/FoodEstablishmentReservation"},{"@id":"http://schema.org/Action"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.","rdfs:label":"startTime"},{"@id":"http://schema.org/SubscribeAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/FollowAction\">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/RegisterAction\">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/JoinAction\">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>\n</ul>\n","rdfs:label":"SubscribeAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/isrcCode","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRecording"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The International Standard Recording Code for the recording.","rdfs:label":"isrcCode"},{"@id":"http://schema.org/hasOfferCatalog","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Service"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/OfferCatalog"},"rdfs:comment":"Indicates an OfferCatalog listing for this Organization, Person, or Service.","rdfs:label":"hasOfferCatalog"},{"@id":"http://schema.org/additionalType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.","rdfs:label":"additionalType","rdfs:subPropertyOf":{"@id":"rdf:type"}},{"@id":"http://schema.org/valuePattern","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Specifies a regular expression for testing literal values according to the HTML spec.","rdfs:label":"valuePattern"},{"@id":"http://schema.org/publication","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PublicationEvent"},"rdfs:comment":"A publication event associated with the item.","rdfs:label":"publication"},{"@id":"http://schema.org/underName","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Reservation"},{"@id":"http://schema.org/Ticket"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The person or organization the reservation or ticket is for.","rdfs:label":"underName"},{"@id":"http://schema.org/BusinessEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Business event.","rdfs:label":"BusinessEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/broadcastAffiliateOf","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastService"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The media network(s) whose content is broadcast on this station.","rdfs:label":"broadcastAffiliateOf"},{"@id":"http://schema.org/RiverBodyOfWater","@type":"rdfs:Class","rdfs:comment":"A river (for example, the broad majestic Shannon).","rdfs:label":"RiverBodyOfWater","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/vehicleEngine","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/EngineSpecification"},"rdfs:comment":"Information about the engine or engines of the vehicle.","rdfs:label":"vehicleEngine"},{"@id":"http://schema.org/GameServer","@type":"rdfs:Class","rdfs:comment":"Server that provides game interaction in a multiplayer game.","rdfs:label":"GameServer","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/DepositAccount","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.","rdfs:label":"DepositAccount","rdfs:subClassOf":[{"@id":"http://schema.org/InvestmentOrDeposit"},{"@id":"http://schema.org/BankAccount"}]},{"@id":"http://schema.org/DigitalDocumentPermissionType","@type":"rdfs:Class","rdfs:comment":"A type of permission which can be granted for accessing a digital document.","rdfs:label":"DigitalDocumentPermissionType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/Motel","@type":"rdfs:Class","rdfs:comment":"A motel.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Motel","rdfs:subClassOf":{"@id":"http://schema.org/LodgingBusiness"}},{"@id":"http://schema.org/WPAdBlock","@type":"rdfs:Class","rdfs:comment":"An advertising section of the page.","rdfs:label":"WPAdBlock","rdfs:subClassOf":{"@id":"http://schema.org/WebPageElement"}},{"@id":"http://schema.org/text","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The textual content of this CreativeWork.","rdfs:label":"text"},{"@id":"http://schema.org/deathPlace","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The place where the person died.","rdfs:label":"deathPlace"},{"@id":"http://schema.org/name","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The name of the item.","rdfs:label":"name"},{"@id":"http://schema.org/loser","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WinAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A sub property of participant. The loser of the action.","rdfs:label":"loser","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/MultiPlayer","@type":"http://schema.org/GamePlayMode","rdfs:comment":"Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.","rdfs:label":"MultiPlayer"},{"@id":"http://schema.org/ChildCare","@type":"rdfs:Class","rdfs:comment":"A Childcare center.","rdfs:label":"ChildCare","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/smokingAllowed","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.","rdfs:label":"smokingAllowed"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex","@type":"http://schema.org/Organization","rdfs:comment":"The W3C <a href=\"http://www.w3.org/community/schemabibex/\">Schema Bib Extend</a> (BibEx) group led the work to improve schema.org for bibliographic information, including terms for periodicals, articles and multi-volume works. The design was inspired in places (e.g. <a class=\"localLink\" href=\"http://schema.org/pageStart\">pageStart</a>, <a class=\"localLink\" href=\"http://schema.org/pageEnd\">pageEnd</a>, <a class=\"localLink\" href=\"http://schema.org/pagination\">pagination</a>) by the <a href=\"http://bibliontology.com/\">Bibliographic Ontology</a>, 'bibo'.","rdfs:label":"BibExTerm"},{"@id":"http://schema.org/globalLocationNumber","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.","rdfs:label":"globalLocationNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/vehicleModelDate","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The release date of a vehicle model (often used to differentiate versions of the same make and model).","rdfs:label":"vehicleModelDate"},{"@id":"http://schema.org/expires","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Date the content expires and is no longer useful or available. For example a <a class=\"localLink\" href=\"http://schema.org/VideoObject\">VideoObject</a> or <a class=\"localLink\" href=\"http://schema.org/NewsArticle\">NewsArticle</a> whose availability or relevance is time-limited, or a <a class=\"localLink\" href=\"http://schema.org/ClaimReview\">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.","rdfs:label":"expires"},{"@id":"http://schema.org/videoFrameSize","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VideoObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The frame size of the video.","rdfs:label":"videoFrameSize"},{"@id":"http://schema.org/publishedOn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PublicationEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BroadcastService"},"rdfs:comment":"A broadcast service associated with the publication event.","rdfs:label":"publishedOn"},{"@id":"http://schema.org/InternetCafe","@type":"rdfs:Class","rdfs:comment":"An internet cafe.","rdfs:label":"InternetCafe","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/cheatCode","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/VideoGame"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"Cheat codes to the game.","rdfs:label":"cheatCode"},{"@id":"http://schema.org/PaymentStatusType","@type":"rdfs:Class","rdfs:comment":"A specific payment status. For example, PaymentDue, PaymentComplete, etc.","rdfs:label":"PaymentStatusType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/MusicAlbumReleaseType","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"The kind of release which this album is: single, EP or album.","rdfs:label":"MusicAlbumReleaseType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/contributor","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Event"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A secondary contributor to the CreativeWork or Event.","rdfs:label":"contributor"},{"@id":"http://schema.org/numberOfDoors","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The number of doors.</p>\n\n<p>Typical unit code(s): C62","rdfs:label":"numberOfDoors"},{"@id":"http://schema.org/Pharmacy","@type":"rdfs:Class","rdfs:comment":"A pharmacy or drugstore.","rdfs:label":"Pharmacy","rdfs:subClassOf":{"@id":"http://schema.org/MedicalOrganization"}},{"@id":"http://schema.org/deliveryStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DeliveryEvent"},"rdfs:comment":"New entry added as the package passes through each leg of its journey (from shipment to final delivery).","rdfs:label":"deliveryStatus"},{"@id":"http://schema.org/DefenceEstablishment","@type":"rdfs:Class","rdfs:comment":"A defence establishment, such as an army or navy base.","rdfs:label":"DefenceEstablishment","rdfs:subClassOf":{"@id":"http://schema.org/GovernmentBuilding"}},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_WikiDoc","@type":"http://schema.org/Organization","rdfs:comment":"This class contains information contributed by <a href=\"http://wikidoc.org>WikiDoc\">http://wikidoc.org>WikiDoc</a>.","rdfs:label":"WikiDoc"},{"@id":"http://schema.org/BreadcrumbList","@type":"rdfs:Class","rdfs:comment":"A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.</p>\n\n<p>The <a class=\"localLink\" href=\"http://schema.org/position\">position</a> property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an <a class=\"localLink\" href=\"http://schema.org/itemListOrder\">itemListOrder</a> of <a class=\"localLink\" href=\"http://schema.org/ItemListOrderAscending\">ItemListOrderAscending</a> (lower values listed first), and that the first items in this list correspond to the \"top\" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.","rdfs:label":"BreadcrumbList","rdfs:subClassOf":{"@id":"http://schema.org/ItemList"}},{"@id":"http://schema.org/Church","@type":"rdfs:Class","rdfs:comment":"A church.","rdfs:label":"Church","rdfs:subClassOf":{"@id":"http://schema.org/PlaceOfWorship"}},{"@id":"http://schema.org/LiquorStore","@type":"rdfs:Class","rdfs:comment":"A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.","rdfs:label":"LiquorStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/dataFeedElement","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DataFeed"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Thing"},{"@id":"http://schema.org/DataFeedItem"}],"rdfs:comment":"An item within in a data feed. Data feeds may have many elements.","rdfs:label":"dataFeedElement"},{"@id":"http://schema.org/PublicationIssue","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://www.w3.org/2002/07/owl#equivalentClass":{"@id":"http://purl.org/ontology/bibo/Issue"},"rdfs:comment":"A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.</p>\n\n<p><a href=\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\">blog post</a>.","rdfs:label":"PublicationIssue","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/GameServerStatus","@type":"rdfs:Class","rdfs:comment":"Status of a game server.","rdfs:label":"GameServerStatus","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/Continent","@type":"rdfs:Class","rdfs:comment":"One of the continents (for example, Europe or Africa).","rdfs:label":"Continent","rdfs:subClassOf":{"@id":"http://schema.org/Landform"}},{"@id":"http://schema.org/coursePrerequisites","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Course"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/AlignmentObject"},{"@id":"http://schema.org/Course"}],"rdfs:comment":"Requirements for taking the Course. May be completion of another <a class=\"localLink\" href=\"http://schema.org/Course\">Course</a> or a textual description like \"permission of instructor\". Requirements may be a pre-requisite competency, referenced using <a class=\"localLink\" href=\"http://schema.org/AlignmentObject\">AlignmentObject</a>.","rdfs:label":"coursePrerequisites"},{"@id":"http://schema.org/Article","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"rdfs:comment":"An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.</p>\n\n<p>See also <a href=\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\">blog post</a>.","rdfs:label":"Article","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/characterAttribute","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/Game"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).","rdfs:label":"characterAttribute"},{"@id":"http://schema.org/albumProductionType","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicAlbum"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicAlbumProductionType"},"rdfs:comment":"Classification of the album by it's type of content: soundtrack, live album, studio album, etc.","rdfs:label":"albumProductionType"},{"@id":"http://schema.org/UserTweets","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserTweets","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/yearsInOperation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BusinessAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The age of the business.","rdfs:label":"yearsInOperation"},{"@id":"http://schema.org/amountOfThisGood","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/TypeAndQuantityNode"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The quantity of the goods included in the offer.","rdfs:label":"amountOfThisGood"},{"@id":"http://schema.org/datasetTimeInterval","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Dataset"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"http://schema.org/supersededBy":{"@id":"http://schema.org/temporalCoverage"},"rdfs:comment":"The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).","rdfs:label":"datasetTimeInterval"},{"@id":"http://schema.org/Enumeration","@type":"rdfs:Class","rdfs:comment":"Lists or enumerations—for example, a list of cuisines or music genres, etc.","rdfs:label":"Enumeration","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/ParkingMap","@type":"http://schema.org/MapCategoryType","rdfs:comment":"A parking map.","rdfs:label":"ParkingMap"},{"@id":"http://schema.org/checkinTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/LodgingReservation"},{"@id":"http://schema.org/LodgingBusiness"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The earliest someone may check into a lodging establishment.","rdfs:label":"checkinTime"},{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP-draws","@type":"http://schema.org/Organization","rdfs:comment":"This term and associated definitions draws upon the work of <a href=\"http://thetrustproject.org/\">The Trust Project</a>.","rdfs:label":"The Trust Project"},{"@id":"http://schema.org/WebPageElement","@type":"rdfs:Class","rdfs:comment":"A web page element, like a table or an image.","rdfs:label":"WebPageElement","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/VideoGame","@type":"rdfs:Class","rdfs:comment":"A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.","rdfs:label":"VideoGame","rdfs:subClassOf":[{"@id":"http://schema.org/Game"},{"@id":"http://schema.org/SoftwareApplication"}]},{"@id":"http://schema.org/resultReview","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ReviewAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Review"},"rdfs:comment":"A sub property of result. The review that resulted in the performing of the action.","rdfs:label":"resultReview","rdfs:subPropertyOf":{"@id":"http://schema.org/result"}},{"@id":"http://schema.org/partOfTVSeries","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TVClip"},{"@id":"http://schema.org/TVEpisode"},{"@id":"http://schema.org/TVSeason"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/TVSeries"},"http://schema.org/supersededBy":{"@id":"http://schema.org/partOfSeries"},"rdfs:comment":"The TV series to which this episode or season belongs.","rdfs:label":"partOfTVSeries","rdfs:subPropertyOf":{"@id":"http://schema.org/isPartOf"}},{"@id":"http://schema.org/UserInteraction","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserInteraction","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/carrier","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Flight"},{"@id":"http://schema.org/ParcelDelivery"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/supersededBy":{"@id":"http://schema.org/provider"},"rdfs:comment":"'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.","rdfs:label":"carrier"},{"@id":"http://schema.org/unsaturatedFatContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of unsaturated fat.","rdfs:label":"unsaturatedFatContent"},{"@id":"http://schema.org/numberedPosition","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/OrganizationRole"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"A number associated with a role in an organization, for example, the number on an athlete's jersey.","rdfs:label":"numberedPosition"},{"@id":"http://schema.org/billingAddress","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PostalAddress"},"rdfs:comment":"The billing address for the order.","rdfs:label":"billingAddress"},{"@id":"http://schema.org/maximumAttendeeCapacity","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Event"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The total number of individuals that may attend an event or venue.","rdfs:label":"maximumAttendeeCapacity"},{"@id":"http://schema.org/Airline","@type":"rdfs:Class","rdfs:comment":"An organization that provides flights for passengers.","rdfs:label":"Airline","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/birthPlace","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The place where the person was born.","rdfs:label":"birthPlace"},{"@id":"http://schema.org/LiveBlogPosting","@type":"rdfs:Class","rdfs:comment":"A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates.","rdfs:label":"LiveBlogPosting","rdfs:subClassOf":{"@id":"http://schema.org/BlogPosting"}},{"@id":"http://schema.org/parentService","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastService"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BroadcastService"},"rdfs:comment":"A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.","rdfs:label":"parentService"},{"@id":"http://schema.org/reviews","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Place"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Review"},"http://schema.org/supersededBy":{"@id":"http://schema.org/review"},"rdfs:comment":"Review of the item.","rdfs:label":"reviews"},{"@id":"http://schema.org/typicalAgeRange","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The typical expected age range, e.g. '7-9', '11-'.","rdfs:label":"typicalAgeRange"},{"@id":"http://schema.org/bookingAgent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/broker"},"rdfs:comment":"'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.","rdfs:label":"bookingAgent"},{"@id":"http://schema.org/codeRepository","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareSourceCode"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex).","rdfs:label":"codeRepository"},{"@id":"http://schema.org/vehicleConfiguration","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.","rdfs:label":"vehicleConfiguration"},{"@id":"http://schema.org/BikeStore","@type":"rdfs:Class","rdfs:comment":"A bike store.","rdfs:label":"BikeStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/BuddhistTemple","@type":"rdfs:Class","rdfs:comment":"A Buddhist temple.","rdfs:label":"BuddhistTemple","rdfs:subClassOf":{"@id":"http://schema.org/PlaceOfWorship"}},{"@id":"http://schema.org/endTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Action"},{"@id":"http://schema.org/FoodEstablishmentReservation"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.</p>\n\n<p>Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.","rdfs:label":"endTime"},{"@id":"http://schema.org/MovieSeries","@type":"rdfs:Class","rdfs:comment":"A series of movies. Included movies can be indicated with the hasPart property.","rdfs:label":"MovieSeries","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWorkSeries"}},{"@id":"http://schema.org/billingPeriod","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Invoice"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"The time interval used to compute the invoice.","rdfs:label":"billingPeriod"},{"@id":"http://schema.org/gender","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/GenderType"}],"rdfs:comment":"Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.","rdfs:label":"gender"},{"@id":"http://schema.org/originAddress","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PostalAddress"},"rdfs:comment":"Shipper's address.","rdfs:label":"originAddress"},{"@id":"http://schema.org/isLiveBroadcast","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"True is the broadcast is of a live event.","rdfs:label":"isLiveBroadcast"},{"@id":"http://schema.org/numChildren","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LodgingReservation"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Integer"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The number of children staying in the unit.","rdfs:label":"numChildren"},{"@id":"http://schema.org/hoursAvailable","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/LocationFeatureSpecification"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Service"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/OpeningHoursSpecification"},"rdfs:comment":"The hours during which this service or contact is available.","rdfs:label":"hoursAvailable"},{"@id":"http://schema.org/MenuSection","@type":"rdfs:Class","rdfs:comment":"A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.","rdfs:label":"MenuSection","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/iataCode","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Airline"},{"@id":"http://schema.org/Airport"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"IATA identifier for an airline or airport.","rdfs:label":"iataCode"},{"@id":"http://schema.org/DigitalFormat","@type":"http://schema.org/MusicReleaseFormatType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"DigitalFormat.","rdfs:label":"DigitalFormat"},{"@id":"http://schema.org/AutoRental","@type":"rdfs:Class","rdfs:comment":"A car rental business.","rdfs:label":"AutoRental","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/ReadPermission","@type":"http://schema.org/DigitalDocumentPermissionType","rdfs:comment":"Permission to read or view the document.","rdfs:label":"ReadPermission"},{"@id":"http://schema.org/PublicHolidays","@type":"http://schema.org/DayOfWeek","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a \"day of the week\", it can be used with <a class=\"localLink\" href=\"http://schema.org/OpeningHoursSpecification\">OpeningHoursSpecification</a>. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.","rdfs:label":"PublicHolidays"},{"@id":"http://schema.org/AchieveAction","@type":"rdfs:Class","rdfs:comment":"The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.","rdfs:label":"AchieveAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/CDFormat","@type":"http://schema.org/MusicReleaseFormatType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"CDFormat.","rdfs:label":"CDFormat"},{"@id":"http://schema.org/predecessorOf","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/ProductModel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ProductModel"},"rdfs:comment":"A pointer from a previous, often discontinued variant of the product to its newer variant.","rdfs:label":"predecessorOf"},{"@id":"http://schema.org/HotelRoom","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A hotel room is a single room in a hotel.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"HotelRoom","rdfs:subClassOf":{"@id":"http://schema.org/Room"}},{"@id":"http://schema.org/departurePlatform","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TrainTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The platform from which the train departs.","rdfs:label":"departurePlatform"},{"@id":"http://schema.org/pickupTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TaxiReservation"},{"@id":"http://schema.org/RentalCarReservation"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"When a taxi will pickup a passenger or a rental car can be picked up.","rdfs:label":"pickupTime"},{"@id":"http://schema.org/organizer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"An organizer of an Event.","rdfs:label":"organizer"},{"@id":"http://schema.org/parentItem","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Comment"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Question"},"rdfs:comment":"The parent of a question, answer or item in general.","rdfs:label":"parentItem"},{"@id":"http://schema.org/Zoo","@type":"rdfs:Class","rdfs:comment":"A zoo.","rdfs:label":"Zoo","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/broadcastDisplayName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastService"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The name displayed in the channel guide. For many US affiliates, it is the network name.","rdfs:label":"broadcastDisplayName"},{"@id":"http://schema.org/WebSite","@type":"rdfs:Class","rdfs:comment":"A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.","rdfs:label":"WebSite","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/Movie","@type":"rdfs:Class","rdfs:comment":"A movie.","rdfs:label":"Movie","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/EventReservation","@type":"rdfs:Class","rdfs:comment":"A reservation for an event like a concert, sporting event, or lecture.</p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\"localLink\" href=\"http://schema.org/Offer\">Offer</a>.","rdfs:label":"EventReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/EventPostponed","@type":"http://schema.org/EventStatusType","rdfs:comment":"The event has been postponed and no new date has been set. The event's previousStartDate should be set.","rdfs:label":"EventPostponed"},{"@id":"http://schema.org/OrganizeAction","@type":"rdfs:Class","rdfs:comment":"The act of manipulating/administering/supervising/controlling one or more objects.","rdfs:label":"OrganizeAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/Audience","@type":"rdfs:Class","rdfs:comment":"Intended audience for an item, i.e. the group for whom the item was created.","rdfs:label":"Audience","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/members","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/ProgramMembership"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/member"},"rdfs:comment":"A member of this organization.","rdfs:label":"members"},{"@id":"http://schema.org/printColumn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NewsArticle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The number of the column in which the NewsArticle appears in the print edition.","rdfs:label":"printColumn"},{"@id":"http://schema.org/EventRescheduled","@type":"http://schema.org/EventStatusType","rdfs:comment":"The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated).","rdfs:label":"EventRescheduled"},{"@id":"http://schema.org/Restaurant","@type":"rdfs:Class","rdfs:comment":"A restaurant.","rdfs:label":"Restaurant","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/AgreeAction","@type":"rdfs:Class","rdfs:comment":"The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.","rdfs:label":"AgreeAction","rdfs:subClassOf":{"@id":"http://schema.org/ReactAction"}},{"@id":"http://schema.org/Integer","@type":"rdfs:Class","rdfs:comment":"Data type: Integer.","rdfs:label":"Integer","rdfs:subClassOf":{"@id":"http://schema.org/Number"}},{"@id":"http://schema.org/UseAction","@type":"rdfs:Class","rdfs:comment":"The act of applying an object to its intended purpose.","rdfs:label":"UseAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/APIReference","@type":"rdfs:Class","rdfs:comment":"Reference documentation for application programming interfaces (APIs).","rdfs:label":"APIReference","rdfs:subClassOf":{"@id":"http://schema.org/TechArticle"}},{"@id":"http://schema.org/TravelAction","@type":"rdfs:Class","rdfs:comment":"The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants.","rdfs:label":"TravelAction","rdfs:subClassOf":{"@id":"http://schema.org/MoveAction"}},{"@id":"http://schema.org/FilmAction","@type":"rdfs:Class","rdfs:comment":"The act of capturing sound and moving images on film, video, or digitally.","rdfs:label":"FilmAction","rdfs:subClassOf":{"@id":"http://schema.org/CreateAction"}},{"@id":"http://schema.org/arrivalBusStop","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BusTrip"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/BusStation"},{"@id":"http://schema.org/BusStop"}],"rdfs:comment":"The stop or station from which the bus arrives.","rdfs:label":"arrivalBusStop"},{"@id":"http://schema.org/programmingLanguage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareSourceCode"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ComputerLanguage"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The computer programming language.","rdfs:label":"programmingLanguage"},{"@id":"http://schema.org/MobileApplication","@type":"rdfs:Class","rdfs:comment":"A software application designed specifically to work well on a mobile device such as a telephone.","rdfs:label":"MobileApplication","rdfs:subClassOf":{"@id":"http://schema.org/SoftwareApplication"}},{"@id":"http://schema.org/Tuesday","@type":"http://schema.org/DayOfWeek","http://schema.org/sameAs":{"@id":"http://www.wikidata.org/entity/Q127"},"rdfs:comment":"The day of the week between Monday and Wednesday.","rdfs:label":"Tuesday"},{"@id":"http://schema.org/partOfInvoice","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Invoice"},"rdfs:comment":"The order is being paid as part of the referenced Invoice.","rdfs:label":"partOfInvoice"},{"@id":"http://schema.org/bccRecipient","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Message"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/ContactPoint"}],"rdfs:comment":"A sub property of recipient. The recipient blind copied on a message.","rdfs:label":"bccRecipient","rdfs:subPropertyOf":{"@id":"http://schema.org/recipient"}},{"@id":"http://schema.org/SoftwareApplication","@type":"rdfs:Class","rdfs:comment":"A software application.","rdfs:label":"SoftwareApplication","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/fuelType","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/EngineSpecification"},{"@id":"http://schema.org/Vehicle"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QualitativeValue"},{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.","rdfs:label":"fuelType"},{"@id":"http://schema.org/availability","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ItemAvailability"},"rdfs:comment":"The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.","rdfs:label":"availability"},{"@id":"http://schema.org/icaoCode","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Airport"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"ICAO identifier for an airport.","rdfs:label":"icaoCode"},{"@id":"http://schema.org/Code","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/SoftwareSourceCode"},"rdfs:comment":"Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.","rdfs:label":"Code","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/vehicleIdentificationNumber","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.","rdfs:label":"vehicleIdentificationNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/serialNumber"}},{"@id":"http://schema.org/SportingGoodsStore","@type":"rdfs:Class","rdfs:comment":"A sporting goods store.","rdfs:label":"SportingGoodsStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/durationOfWarranty","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/WarrantyPromise"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.","rdfs:label":"durationOfWarranty"},{"@id":"http://schema.org/gameTip","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VideoGame"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"Links to tips, tactics, etc.","rdfs:label":"gameTip"},{"@id":"http://schema.org/partySize","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TaxiReservation"},{"@id":"http://schema.org/FoodEstablishmentReservation"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Integer"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"Number of people the reservation should accommodate.","rdfs:label":"partySize"},{"@id":"http://schema.org/TextDigitalDocument","@type":"rdfs:Class","rdfs:comment":"A file composed primarily of text.","rdfs:label":"TextDigitalDocument","rdfs:subClassOf":{"@id":"http://schema.org/DigitalDocument"}},{"@id":"http://schema.org/priceSpecification","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/TradeAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PriceSpecification"},"rdfs:comment":"One or more detailed price specifications, indicating the unit price and delivery or payment charges.","rdfs:label":"priceSpecification"},{"@id":"http://schema.org/providerMobility","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Service"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Indicates the mobility of a provided service (e.g. 'static', 'dynamic').","rdfs:label":"providerMobility"},{"@id":"http://schema.org/DemoAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"DemoAlbum.","rdfs:label":"DemoAlbum"},{"@id":"http://schema.org/CoOp","@type":"http://schema.org/GamePlayMode","rdfs:comment":"Play mode: CoOp. Co-operative games, where you play on the same team with friends.","rdfs:label":"CoOp"},{"@id":"http://schema.org/releasedEvent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PublicationEvent"},"rdfs:comment":"The place and time the release was issued, expressed as a PublicationEvent.","rdfs:label":"releasedEvent"},{"@id":"http://schema.org/educationalUse","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The purpose of a work in the context of education; for example, 'assignment', 'group work'.","rdfs:label":"educationalUse"},{"@id":"http://schema.org/Waterfall","@type":"rdfs:Class","rdfs:comment":"A waterfall, like Niagara.","rdfs:label":"Waterfall","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/itemReviewed","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Review"},{"@id":"http://schema.org/AggregateRating"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The item that is being reviewed/rated.","rdfs:label":"itemReviewed"},{"@id":"http://schema.org/availableOnDevice","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Device required to run the application. Used in cases where a specific make/model is required to run the application.","rdfs:label":"availableOnDevice"},{"@id":"http://schema.org/OfficeEquipmentStore","@type":"rdfs:Class","rdfs:comment":"An office equipment store.","rdfs:label":"OfficeEquipmentStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/attendees","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/attendee"},"rdfs:comment":"A person attending the event.","rdfs:label":"attendees"},{"@id":"http://schema.org/stepValue","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.","rdfs:label":"stepValue"},{"@id":"http://schema.org/RightHandDriving","@type":"http://schema.org/SteeringPositionValue","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"The steering position is on the right side of the vehicle (viewed from the main direction of driving).","rdfs:label":"RightHandDriving"},{"@id":"http://schema.org/currency","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/DatedMoneySpecification"},{"@id":"http://schema.org/MonetaryAmount"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The currency in which the monetary amount is expressed (in 3-letter <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a> format).","rdfs:label":"currency"},{"@id":"http://schema.org/inventoryLevel","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/SomeProducts"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The current approximate inventory level for the item or items.","rdfs:label":"inventoryLevel"},{"@id":"http://schema.org/salaryCurrency","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/EmployeeRole"},{"@id":"http://schema.org/JobPosting"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The currency (coded using <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a> ) used for the main salary information in this job posting or for this employee.","rdfs:label":"salaryCurrency"},{"@id":"http://schema.org/PaymentComplete","@type":"http://schema.org/PaymentStatusType","rdfs:comment":"The payment has been received and processed.","rdfs:label":"PaymentComplete"},{"@id":"http://schema.org/PlanAction","@type":"rdfs:Class","rdfs:comment":"The act of planning the execution of an event/task/action/reservation/plan to a future date.","rdfs:label":"PlanAction","rdfs:subClassOf":{"@id":"http://schema.org/OrganizeAction"}},{"@id":"http://schema.org/landlord","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/RentAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"A sub property of participant. The owner of the real estate property.","rdfs:label":"landlord","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/confirmationNumber","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Order"},{"@id":"http://schema.org/Invoice"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A number that confirms the given order or payment has been received.","rdfs:label":"confirmationNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/alumniOf","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/inverseOf":{"@id":"http://schema.org/alumni"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/EducationalOrganization"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"An organization that the person is an alumni of.","rdfs:label":"alumniOf"},{"@id":"http://schema.org/MovieTheater","@type":"rdfs:Class","rdfs:comment":"A movie theater.","rdfs:label":"MovieTheater","rdfs:subClassOf":[{"@id":"http://schema.org/CivicStructure"},{"@id":"http://schema.org/EntertainmentBusiness"}]},{"@id":"http://schema.org/commentText","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/UserComments"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The text of the UserComment.","rdfs:label":"commentText"},{"@id":"http://schema.org/contentLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The location depicted or described in the content. For example, the location in a photograph or painting.","rdfs:label":"contentLocation"},{"@id":"http://schema.org/fuelConsumption","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"<p>The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).</p>\n\n<ul>\n<li>Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use <a class=\"localLink\" href=\"http://schema.org/unitText\">unitText</a> to indicate the unit of measurement, e.g. L/100 km.</li>\n<li>Note 2: There are two ways of indicating the fuel consumption, <a class=\"localLink\" href=\"http://schema.org/fuelConsumption\">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class=\"localLink\" href=\"http://schema.org/fuelEfficiency\">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>\n<li>Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use <a class=\"localLink\" href=\"http://schema.org/valueReference\">valueReference</a> to link the value for the fuel consumption to another value.</li>\n</ul>\n","rdfs:label":"fuelConsumption"},{"@id":"http://schema.org/childMinAge","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParentAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"Minimal age of the child.","rdfs:label":"childMinAge"},{"@id":"http://schema.org/catalog","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Dataset"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DataCatalog"},"http://schema.org/supersededBy":{"@id":"http://schema.org/includedInDataCatalog"},"rdfs:comment":"A data catalog which contains this dataset.","rdfs:label":"catalog"},{"@id":"http://schema.org/schemaVersion","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.","rdfs:label":"schemaVersion"},{"@id":"http://schema.org/GatedResidenceCommunity","@type":"rdfs:Class","rdfs:comment":"Residence type: Gated community.","rdfs:label":"GatedResidenceCommunity","rdfs:subClassOf":{"@id":"http://schema.org/Residence"}},{"@id":"http://schema.org/dateSent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Message"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date/time at which the message was sent.","rdfs:label":"dateSent"},{"@id":"http://schema.org/Country","@type":"rdfs:Class","rdfs:comment":"A country.","rdfs:label":"Country","rdfs:subClassOf":{"@id":"http://schema.org/AdministrativeArea"}},{"@id":"http://schema.org/PlaceOfWorship","@type":"rdfs:Class","rdfs:comment":"Place of worship, such as a church, synagogue, or mosque.","rdfs:label":"PlaceOfWorship","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/HowToTip","@type":"rdfs:Class","rdfs:comment":"An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).","rdfs:label":"HowToTip","rdfs:subClassOf":{"@id":"http://schema.org/ListItem"}},{"@id":"http://schema.org/accessibilityFeature","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).","rdfs:label":"accessibilityFeature"},{"@id":"http://schema.org/dateIssued","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Ticket"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date the ticket was issued.","rdfs:label":"dateIssued"},{"@id":"http://schema.org/PerformanceRole","@type":"rdfs:Class","rdfs:comment":"A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.","rdfs:label":"PerformanceRole","rdfs:subClassOf":{"@id":"http://schema.org/Role"}},{"@id":"http://schema.org/UnitPriceSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"The price asked for a given offer by the respective organization or person.","rdfs:label":"UnitPriceSpecification","rdfs:subClassOf":{"@id":"http://schema.org/PriceSpecification"}},{"@id":"http://schema.org/aggregateRating","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Brand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/AggregateRating"},"rdfs:comment":"The overall rating, based on a collection of reviews or ratings, of the item.","rdfs:label":"aggregateRating"},{"@id":"http://schema.org/subtitleLanguage","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/ScreeningEvent"},{"@id":"http://schema.org/TVEpisode"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Language"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Languages in which subtitles/captions are available, in <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard format</a>.","rdfs:label":"subtitleLanguage"},{"@id":"http://schema.org/PerformAction","@type":"rdfs:Class","rdfs:comment":"The act of participating in performance arts.","rdfs:label":"PerformAction","rdfs:subClassOf":{"@id":"http://schema.org/PlayAction"}},{"@id":"http://schema.org/HinduDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet conforming to Hindu dietary practices, in particular, beef-free.","rdfs:label":"HinduDiet"},{"@id":"http://schema.org/Mountain","@type":"rdfs:Class","rdfs:comment":"A mountain, like Mount Whitney or Mount Everest.","rdfs:label":"Mountain","rdfs:subClassOf":{"@id":"http://schema.org/Landform"}},{"@id":"http://schema.org/alternativeHeadline","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A secondary title of the CreativeWork.","rdfs:label":"alternativeHeadline"},{"@id":"http://schema.org/recipeIngredient","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A single ingredient used in the recipe, e.g. sugar, flour or garlic.","rdfs:label":"recipeIngredient","rdfs:subPropertyOf":{"@id":"http://schema.org/supply"}},{"@id":"http://schema.org/trainName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TrainTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The name of the train (e.g. The Orient Express).","rdfs:label":"trainName"},{"@id":"http://schema.org/locationCreated","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.","rdfs:label":"locationCreated"},{"@id":"http://schema.org/recipeInstructions","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/ItemList"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.","rdfs:label":"recipeInstructions","rdfs:subPropertyOf":{"@id":"http://schema.org/steps"}},{"@id":"http://schema.org/value","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/PropertyValue"},{"@id":"http://schema.org/MonetaryAmount"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/StructuredValue"},{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Boolean"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"<p>The value of the quantitative value or property value node.</p>\n\n<ul>\n<li>For <a class=\"localLink\" href=\"http://schema.org/QuantitativeValue\">QuantitativeValue</a> and <a class=\"localLink\" href=\"http://schema.org/MonetaryAmount\">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>\n<li>For <a class=\"localLink\" href=\"http://schema.org/PropertyValue\">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>\n</ul>\n","rdfs:label":"value"},{"@id":"http://schema.org/ReceiveAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/SendAction\">SendAction</a>: The reciprocal of ReceiveAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/TakeAction\">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li>\n</ul>\n","rdfs:label":"ReceiveAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/VideoGameClip","@type":"rdfs:Class","rdfs:comment":"A short segment/part of a video game.","rdfs:label":"VideoGameClip","rdfs:subClassOf":{"@id":"http://schema.org/Clip"}},{"@id":"http://schema.org/inAlbum","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRecording"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicAlbum"},"rdfs:comment":"The album to which this recording belongs.","rdfs:label":"inAlbum"},{"@id":"http://schema.org/itemShipped","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Product"},"rdfs:comment":"Item(s) being shipped.","rdfs:label":"itemShipped"},{"@id":"http://schema.org/free","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PublicationEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"http://schema.org/supersededBy":{"@id":"http://schema.org/isAccessibleForFree"},"rdfs:comment":"A flag to signal that the item, event, or place is accessible for free.","rdfs:label":"free"},{"@id":"http://schema.org/MusicStore","@type":"rdfs:Class","rdfs:comment":"A music store.","rdfs:label":"MusicStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/Crematorium","@type":"rdfs:Class","rdfs:comment":"A crematorium.","rdfs:label":"Crematorium","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/contentSize","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"File size in (mega/kilo) bytes.","rdfs:label":"contentSize"},{"@id":"http://schema.org/isConsumableFor","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Product"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Product"},"rdfs:comment":"A pointer to another product (or multiple products) for which this product is a consumable.","rdfs:label":"isConsumableFor"},{"@id":"http://schema.org/accessModeSufficient","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://github.com/schemaorg/schemaorg/issues/1100"},"http://schema.org/category":"issue-1110","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.","rdfs:label":"accessModeSufficient"},{"@id":"http://schema.org/itemListOrder","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ItemList"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/ItemListOrderType"}],"rdfs:comment":"Type of ordering (e.g. Ascending, Descending, Unordered).","rdfs:label":"itemListOrder"},{"@id":"http://schema.org/QuoteAction","@type":"rdfs:Class","rdfs:comment":"An agent quotes/estimates/appraises an object/product/service with a price at a location/store.","rdfs:label":"QuoteAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/artform","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VisualArtwork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.","rdfs:label":"artform"},{"@id":"http://schema.org/temporalCoverage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/DateTime"},{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/dc/terms/temporal"},"rdfs:comment":"The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\">ISO 8601 time interval format</a>. In\n      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.\n      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\".","rdfs:label":"temporalCoverage"},{"@id":"http://schema.org/PropertyValue","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.</p>\n\n<p>Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.","rdfs:label":"PropertyValue","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/codeSampleType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareSourceCode"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.","rdfs:label":"codeSampleType"},{"@id":"http://schema.org/ListItem","@type":"rdfs:Class","rdfs:comment":"An list item, e.g. a step in a checklist or how-to description.","rdfs:label":"ListItem","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/ContactPage","@type":"rdfs:Class","rdfs:comment":"Web page type: Contact page.","rdfs:label":"ContactPage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/WebApplication","@type":"rdfs:Class","rdfs:comment":"Web applications.","rdfs:label":"WebApplication","rdfs:subClassOf":{"@id":"http://schema.org/SoftwareApplication"}},{"@id":"http://schema.org/BlogPosting","@type":"rdfs:Class","rdfs:comment":"A blog post.","rdfs:label":"BlogPosting","rdfs:subClassOf":{"@id":"http://schema.org/SocialMediaPosting"}},{"@id":"http://schema.org/eligibleTransactionVolume","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PriceSpecification"},"rdfs:comment":"The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.","rdfs:label":"eligibleTransactionVolume"},{"@id":"http://schema.org/equal","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/QualitativeValue"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QualitativeValue"},"rdfs:comment":"This ordering relation for qualitative values indicates that the subject is equal to the object.","rdfs:label":"equal"},{"@id":"http://schema.org/LodgingReservation","@type":"rdfs:Class","rdfs:comment":"A reservation for lodging at a hotel, motel, inn, etc.</p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.","rdfs:label":"LodgingReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/subEvent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/inverseOf":{"@id":"http://schema.org/superEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"rdfs:comment":"An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.","rdfs:label":"subEvent"},{"@id":"http://schema.org/PresentationDigitalDocument","@type":"rdfs:Class","rdfs:comment":"A file containing slides or used for a presentation.","rdfs:label":"PresentationDigitalDocument","rdfs:subClassOf":{"@id":"http://schema.org/DigitalDocument"}},{"@id":"http://schema.org/blogPost","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Blog"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BlogPosting"},"rdfs:comment":"A posting that is part of this blog.","rdfs:label":"blogPost"},{"@id":"http://schema.org/GlutenFreeDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet exclusive of gluten.","rdfs:label":"GlutenFreeDiet"},{"@id":"http://schema.org/Report","@type":"rdfs:Class","rdfs:comment":"A Report generated by governmental or non-governmental organization.","rdfs:label":"Report","rdfs:subClassOf":{"@id":"http://schema.org/Article"}},{"@id":"http://schema.org/accountablePerson","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"Specifies the Person that is legally accountable for the CreativeWork.","rdfs:label":"accountablePerson"},{"@id":"http://schema.org/homeLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Place"}],"rdfs:comment":"A contact location for a person's residence.","rdfs:label":"homeLocation","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/nutrition","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Recipe"},{"@id":"http://schema.org/MenuItem"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/NutritionInformation"},"rdfs:comment":"Nutrition information about the recipe or menu item.","rdfs:label":"nutrition"},{"@id":"http://schema.org/embedUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.","rdfs:label":"embedUrl"},{"@id":"http://schema.org/area","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastService"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/supersededBy":{"@id":"http://schema.org/serviceArea"},"rdfs:comment":"The area within which users can expect to reach the broadcast service.","rdfs:label":"area"},{"@id":"http://schema.org/Monday","@type":"http://schema.org/DayOfWeek","http://schema.org/sameAs":{"@id":"http://www.wikidata.org/entity/Q105"},"rdfs:comment":"The day of the week between Sunday and Tuesday.","rdfs:label":"Monday"},{"@id":"http://schema.org/partOfSeason","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/Clip"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWorkSeason"},"rdfs:comment":"The season to which this episode belongs.","rdfs:label":"partOfSeason","rdfs:subPropertyOf":{"@id":"http://schema.org/isPartOf"}},{"@id":"http://schema.org/Book","@type":"rdfs:Class","rdfs:comment":"A book.","rdfs:label":"Book","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/interestRate","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/FinancialProduct"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.","rdfs:label":"interestRate"},{"@id":"http://schema.org/partOfOrder","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Order"},"rdfs:comment":"The overall order the items in this delivery were included in.","rdfs:label":"partOfOrder"},{"@id":"http://schema.org/totalPrice","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Ticket"},{"@id":"http://schema.org/Reservation"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/PriceSpecification"}],"rdfs:comment":"The total price for the reservation or ticket, including applicable taxes, shipping, etc.","rdfs:label":"totalPrice"},{"@id":"http://schema.org/OfferItemCondition","@type":"rdfs:Class","rdfs:comment":"A list of possible conditions for the item.","rdfs:label":"OfferItemCondition","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/inPlaylist","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRecording"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicPlaylist"},"rdfs:comment":"The playlist to which this recording belongs.","rdfs:label":"inPlaylist"},{"@id":"http://schema.org/subEvents","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/supersededBy":{"@id":"http://schema.org/subEvent"},"rdfs:comment":"Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.","rdfs:label":"subEvents"},{"@id":"http://schema.org/LocationFeatureSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.","rdfs:label":"LocationFeatureSpecification","rdfs:subClassOf":{"@id":"http://schema.org/PropertyValue"}},{"@id":"http://schema.org/identifier","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/PropertyValue"},{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/dc/terms/identifier"},"rdfs:comment":"The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details.","rdfs:label":"identifier"},{"@id":"http://schema.org/MusicRelease","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"A MusicRelease is a specific release of a music album.","rdfs:label":"MusicRelease","rdfs:subClassOf":{"@id":"http://schema.org/MusicPlaylist"}},{"@id":"http://schema.org/ReservationConfirmed","@type":"http://schema.org/ReservationStatusType","rdfs:comment":"The status of a confirmed reservation.","rdfs:label":"ReservationConfirmed"},{"@id":"http://schema.org/availableAtOrFrom","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The place(s) from which the offer can be obtained (e.g. store locations).","rdfs:label":"availableAtOrFrom","rdfs:subPropertyOf":{"@id":"http://schema.org/areaServed"}},{"@id":"http://schema.org/TechArticle","@type":"rdfs:Class","rdfs:comment":"A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.","rdfs:label":"TechArticle","rdfs:subClassOf":{"@id":"http://schema.org/Article"}},{"@id":"http://schema.org/maxPrice","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/PriceSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The highest price if the price is a range.","rdfs:label":"maxPrice"},{"@id":"http://schema.org/countryOfOrigin","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TVEpisode"},{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/TVSeason"},{"@id":"http://schema.org/TVSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Country"},"rdfs:comment":"The country of the principal offices of the production company or individual responsible for the movie or program.","rdfs:label":"countryOfOrigin"},{"@id":"http://schema.org/tickerSymbol","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Corporation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we reccommend using the controlled vocaulary of Market Identifier Codes (MIC) specified in ISO15022.","rdfs:label":"tickerSymbol"},{"@id":"http://schema.org/Sculpture","@type":"rdfs:Class","rdfs:comment":"A piece of sculpture.","rdfs:label":"Sculpture","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/scheduledPaymentDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Invoice"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date the invoice is scheduled to be paid.","rdfs:label":"scheduledPaymentDate"},{"@id":"http://schema.org/lodgingUnitDescription","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LodgingReservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A full description of the lodging unit.","rdfs:label":"lodgingUnitDescription"},{"@id":"http://schema.org/duns","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The Dun &amp; Bradstreet DUNS number for identifying an organization or business person.","rdfs:label":"duns","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/ComputerStore","@type":"rdfs:Class","rdfs:comment":"A computer store.","rdfs:label":"ComputerStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/jobBenefits","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Description of benefits associated with the job.","rdfs:label":"jobBenefits"},{"@id":"http://schema.org/RadioStation","@type":"rdfs:Class","rdfs:comment":"A radio station.","rdfs:label":"RadioStation","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/option","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ChooseAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Thing"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/actionOption"},"rdfs:comment":"A sub property of object. The options subject to this action.","rdfs:label":"option","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/SingleRelease","@type":"http://schema.org/MusicAlbumReleaseType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"SingleRelease.","rdfs:label":"SingleRelease"},{"@id":"http://schema.org/gameLocation","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/Game"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/PostalAddress"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"Real or fictional location of the game (or part of game).","rdfs:label":"gameLocation"},{"@id":"http://schema.org/OrderProblem","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing that there is a problem with the order.","rdfs:label":"OrderProblem"},{"@id":"http://schema.org/Map","@type":"rdfs:Class","rdfs:comment":"A map.","rdfs:label":"Map","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/hasMenu","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FoodEstablishment"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Menu"}],"rdfs:comment":"Either the actual menu as a structured representation, as text, or a URL of the menu.","rdfs:label":"hasMenu"},{"@id":"http://schema.org/taxID","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.","rdfs:label":"taxID","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/courseMode","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CourseInstance"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. \"online\", \"onsite\" or \"blended\"; \"synchronous\" or \"asynchronous\"; \"full-time\" or \"part-time\") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).","rdfs:label":"courseMode"},{"@id":"http://schema.org/spatialCoverage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/dc/terms/spatial"},"rdfs:comment":"The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of\n      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates\n      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.","rdfs:label":"spatialCoverage","rdfs:subPropertyOf":{"@id":"http://schema.org/contentLocation"}},{"@id":"http://schema.org/GolfCourse","@type":"rdfs:Class","rdfs:comment":"A golf course.","rdfs:label":"GolfCourse","rdfs:subClassOf":{"@id":"http://schema.org/SportsActivityLocation"}},{"@id":"http://schema.org/followee","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FollowAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A sub property of object. The person or organization being followed.","rdfs:label":"followee","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/recipe","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CookAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Recipe"},"rdfs:comment":"A sub property of instrument. The recipe/instructions used to perform the action.","rdfs:label":"recipe","rdfs:subPropertyOf":{"@id":"http://schema.org/instrument"}},{"@id":"http://schema.org/musicBy","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/MovieSeries"},{"@id":"http://schema.org/Clip"},{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/RadioSeries"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/MusicGroup"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The composer of the soundtrack.","rdfs:label":"musicBy"},{"@id":"http://schema.org/lyricist","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"The person who wrote the words.","rdfs:label":"lyricist"},{"@id":"http://schema.org/DepartAction","@type":"rdfs:Class","rdfs:comment":"The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants.","rdfs:label":"DepartAction","rdfs:subClassOf":{"@id":"http://schema.org/MoveAction"}},{"@id":"http://schema.org/TollFree","@type":"http://schema.org/ContactPointOption","rdfs:comment":"The associated telephone number is toll free.","rdfs:label":"TollFree"},{"@id":"http://schema.org/amount","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/InvestmentOrDeposit"},{"@id":"http://schema.org/DatedMoneySpecification"},{"@id":"http://schema.org/LoanOrCredit"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/MonetaryAmount"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The amount of money.","rdfs:label":"amount"},{"@id":"http://schema.org/feesAndCommissionsSpecification","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/FinancialProduct"},{"@id":"http://schema.org/FinancialService"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.","rdfs:label":"feesAndCommissionsSpecification"},{"@id":"http://schema.org/reservationFor","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The thing -- flight, event, restaurant,etc. being reserved.","rdfs:label":"reservationFor"},{"@id":"http://schema.org/priceCurrency","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Reservation"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/Ticket"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to <a class=\"localLink\" href=\"http://schema.org/PriceSpecification\">PriceSpecification</a> and its subtypes.","rdfs:label":"priceCurrency"},{"@id":"http://schema.org/Number","@type":["http://schema.org/DataType","rdfs:Class"],"rdfs:comment":"Data type: Number.","rdfs:label":"Number"},{"@id":"http://schema.org/Comment","@type":"rdfs:Class","rdfs:comment":"A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class=\"localLink\" href=\"http://schema.org/text\">text</a> property, and its topic via <a class=\"localLink\" href=\"http://schema.org/about\">about</a>, properties shared with all CreativeWorks.","rdfs:label":"Comment","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/ShoeStore","@type":"rdfs:Class","rdfs:comment":"A shoe store.","rdfs:label":"ShoeStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/serviceLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ServiceChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The location (e.g. civic structure, local business, etc.) where a person can go to access the service.","rdfs:label":"serviceLocation"},{"@id":"http://schema.org/executableLibraryName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/APIReference"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Library file name e.g., mscorlib.dll, system.web.dll.","rdfs:label":"executableLibraryName"},{"@id":"http://schema.org/trainNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TrainTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The unique identifier for the train.","rdfs:label":"trainNumber"},{"@id":"http://schema.org/sugarContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of sugar.","rdfs:label":"sugarContent"},{"@id":"http://schema.org/WPSideBar","@type":"rdfs:Class","rdfs:comment":"A sidebar section of the page.","rdfs:label":"WPSideBar","rdfs:subClassOf":{"@id":"http://schema.org/WebPageElement"}},{"@id":"http://schema.org/HobbyShop","@type":"rdfs:Class","rdfs:comment":"A store that sells materials useful or necessary for various hobbies.","rdfs:label":"HobbyShop","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/catalogNumber","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRelease"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The catalog number for the release.","rdfs:label":"catalogNumber"},{"@id":"http://schema.org/answerCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Question"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of answers this question has received.","rdfs:label":"answerCount"},{"@id":"http://schema.org/seatingType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Seat"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/QualitativeValue"}],"rdfs:comment":"The type/class of the seat.","rdfs:label":"seatingType"},{"@id":"http://schema.org/FlightReservation","@type":"rdfs:Class","rdfs:comment":"A reservation for air travel.</p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\"localLink\" href=\"http://schema.org/Offer\">Offer</a>.","rdfs:label":"FlightReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/offers","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/AggregateOffer"},{"@id":"http://schema.org/MenuItem"},{"@id":"http://schema.org/Service"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Offer"},"rdfs:comment":"An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.","rdfs:label":"offers"},{"@id":"http://schema.org/AlignmentObject","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass"},"rdfs:comment":"An intangible item that describes an alignment between a learning resource and a node in an educational framework.","rdfs:label":"AlignmentObject","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/editor","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"Specifies the Person who edited the CreativeWork.","rdfs:label":"editor"},{"@id":"http://schema.org/discussionUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"A link to the page containing the comments of the CreativeWork.","rdfs:label":"discussionUrl"},{"@id":"http://schema.org/SellAction","@type":"rdfs:Class","rdfs:comment":"The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.","rdfs:label":"SellAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/PetStore","@type":"rdfs:Class","rdfs:comment":"A pet store.","rdfs:label":"PetStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/coverageEndTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LiveBlogPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.","rdfs:label":"coverageEndTime"},{"@id":"http://schema.org/numberOfPreviousOwners","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The number of owners of the vehicle, including the current one.</p>\n\n<p>Typical unit code(s): C62","rdfs:label":"numberOfPreviousOwners"},{"@id":"http://schema.org/OnDemandEvent","@type":"rdfs:Class","rdfs:comment":"A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand.","rdfs:label":"OnDemandEvent","rdfs:subClassOf":{"@id":"http://schema.org/PublicationEvent"}},{"@id":"http://schema.org/artworkSurface","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VisualArtwork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.","rdfs:label":"artworkSurface"},{"@id":"http://schema.org/HalalDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet conforming to Islamic dietary practices.","rdfs:label":"HalalDiet"},{"@id":"http://schema.org/issueNumber","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/PublicationIssue"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Integer"}],"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/bibo/issue"},"rdfs:comment":"Identifies the issue of publication; for example, \"iii\" or \"2\".","rdfs:label":"issueNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/position"}},{"@id":"http://schema.org/AutoDealer","@type":"rdfs:Class","rdfs:comment":"An car dealership.","rdfs:label":"AutoDealer","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/ChooseAction","@type":"rdfs:Class","rdfs:comment":"The act of expressing a preference from a set of options or a large or unbounded set of choices/options.","rdfs:label":"ChooseAction","rdfs:subClassOf":{"@id":"http://schema.org/AssessAction"}},{"@id":"http://schema.org/customer","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Order"},{"@id":"http://schema.org/Invoice"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"Party placing the order or paying the invoice.","rdfs:label":"customer"},{"@id":"http://schema.org/RestrictedDiet","@type":"rdfs:Class","rdfs:comment":"A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons.","rdfs:label":"RestrictedDiet","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/GovernmentOffice","@type":"rdfs:Class","rdfs:comment":"A government office&#x2014;for example, an IRS or DMV office.","rdfs:label":"GovernmentOffice","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/Place","@type":"rdfs:Class","rdfs:comment":"Entities that have a somewhat fixed, physical extension.","rdfs:label":"Place","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/QualitativeValue","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.","rdfs:label":"QualitativeValue","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/petsAllowed","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/LodgingBusiness"},{"@id":"http://schema.org/Accommodation"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Boolean"}],"rdfs:comment":"Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.","rdfs:label":"petsAllowed"},{"@id":"http://schema.org/artEdition","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VisualArtwork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Integer"}],"rdfs:comment":"The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example \"20\").","rdfs:label":"artEdition"},{"@id":"http://schema.org/award","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Service"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An award won by or for this item.","rdfs:label":"award"},{"@id":"http://schema.org/application","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EntryPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/supersededBy":{"@id":"http://schema.org/actionApplication"},"rdfs:comment":"An application that can complete the request.","rdfs:label":"application"},{"@id":"http://schema.org/streetAddress","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PostalAddress"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The street address. For example, 1600 Amphitheatre Pkwy.","rdfs:label":"streetAddress"},{"@id":"http://schema.org/containsSeason","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/VideoGameSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWorkSeason"},"rdfs:comment":"A season that is part of the media series.","rdfs:label":"containsSeason","rdfs:subPropertyOf":{"@id":"http://schema.org/hasPart"}},{"@id":"http://schema.org/category","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Invoice"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Thing"}],"rdfs:comment":"A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.","rdfs:label":"category"},{"@id":"http://schema.org/contactOption","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ContactPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ContactPointOption"},"rdfs:comment":"An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).","rdfs:label":"contactOption"},{"@id":"http://schema.org/SendAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/ReceiveAction\">ReceiveAction</a>: The reciprocal of SendAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/GiveAction\">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li>\n</ul>\n","rdfs:label":"SendAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/VinylFormat","@type":"http://schema.org/MusicReleaseFormatType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"VinylFormat.","rdfs:label":"VinylFormat"},{"@id":"http://schema.org/LeaveAction","@type":"rdfs:Class","rdfs:comment":"<p>An agent leaves an event / group with participants/friends at a location.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/JoinAction\">JoinAction</a>: The antonym of LeaveAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/UnRegisterAction\">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li>\n</ul>\n","rdfs:label":"LeaveAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/claimReviewed","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://github.com/schemaorg/schemaorg/issues/1061"},"http://schema.org/category":"issue-1061","http://schema.org/domainIncludes":{"@id":"http://schema.org/ClaimReview"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A short summary of the specific claims reviewed in a ClaimReview.","rdfs:label":"claimReviewed"},{"@id":"http://schema.org/GasStation","@type":"rdfs:Class","rdfs:comment":"A gas station.","rdfs:label":"GasStation","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/pageEnd","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Article"},{"@id":"http://schema.org/PublicationIssue"},{"@id":"http://schema.org/PublicationVolume"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Integer"},{"@id":"http://schema.org/Text"}],"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/bibo/pageEnd"},"rdfs:comment":"The page on which the work ends; for example \"138\" or \"xvi\".","rdfs:label":"pageEnd"},{"@id":"http://schema.org/expectedArrivalFrom","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The earliest date the package may arrive.","rdfs:label":"expectedArrivalFrom"},{"@id":"http://schema.org/birthDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Date of birth.","rdfs:label":"birthDate"},{"@id":"http://schema.org/AssessAction","@type":"rdfs:Class","rdfs:comment":"The act of forming one's opinion, reaction or sentiment.","rdfs:label":"AssessAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/CommentAction","@type":"rdfs:Class","rdfs:comment":"The act of generating a comment about a subject.","rdfs:label":"CommentAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/ItemListOrderDescending","@type":"http://schema.org/ItemListOrderType","rdfs:comment":"An ItemList ordered with higher values listed first.","rdfs:label":"ItemListOrderDescending"},{"@id":"http://schema.org/Library","@type":"rdfs:Class","rdfs:comment":"A library.","rdfs:label":"Library","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/TouristInformationCenter","@type":"rdfs:Class","rdfs:comment":"A tourist information center.","rdfs:label":"TouristInformationCenter","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/MusicComposition","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"A musical composition.","rdfs:label":"MusicComposition","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/photos","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Photograph"},{"@id":"http://schema.org/ImageObject"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/photo"},"rdfs:comment":"Photographs of this place.","rdfs:label":"photos"},{"@id":"http://schema.org/makesOffer","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/inverseOf":{"@id":"http://schema.org/offeredBy"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Offer"},"rdfs:comment":"A pointer to products or services offered by the organization or person.","rdfs:label":"makesOffer"},{"@id":"http://schema.org/map","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"http://schema.org/supersededBy":{"@id":"http://schema.org/hasMap"},"rdfs:comment":"A URL to a map of the place.","rdfs:label":"map"},{"@id":"http://schema.org/ProfessionalService","@type":"rdfs:Class","rdfs:comment":"Original definition: \"provider of professional services.\"</p>\n\n<p>The general <a class=\"localLink\" href=\"http://schema.org/ProfessionalService\">ProfessionalService</a> type for local businesses was deprecated due to confusion with <a class=\"localLink\" href=\"http://schema.org/Service\">Service</a>. For reference, the types that it included were: <a class=\"localLink\" href=\"http://schema.org/Dentist\">Dentist</a>,\n        <a class=\"localLink\" href=\"http://schema.org/AccountingService\">AccountingService</a>, <a class=\"localLink\" href=\"http://schema.org/Attorney\">Attorney</a>, <a class=\"localLink\" href=\"http://schema.org/Notary\">Notary</a>, as well as types for several kinds of <a class=\"localLink\" href=\"http://schema.org/HomeAndConstructionBusiness\">HomeAndConstructionBusiness</a>: <a class=\"localLink\" href=\"http://schema.org/Electrician\">Electrician</a>, <a class=\"localLink\" href=\"http://schema.org/GeneralContractor\">GeneralContractor</a>,\n        <a class=\"localLink\" href=\"http://schema.org/HousePainter\">HousePainter</a>, <a class=\"localLink\" href=\"http://schema.org/Locksmith\">Locksmith</a>, <a class=\"localLink\" href=\"http://schema.org/Plumber\">Plumber</a>, <a class=\"localLink\" href=\"http://schema.org/RoofingContractor\">RoofingContractor</a>. <a class=\"localLink\" href=\"http://schema.org/LegalService\">LegalService</a> was introduced as a more inclusive supertype of <a class=\"localLink\" href=\"http://schema.org/Attorney\">Attorney</a>.","rdfs:label":"ProfessionalService","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/instrument","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>.","rdfs:label":"instrument"},{"@id":"http://schema.org/orderQuantity","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/OrderItem"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The number of the item ordered. If the property is not set, assume the quantity is one.","rdfs:label":"orderQuantity"},{"@id":"http://schema.org/width","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/VisualArtwork"},{"@id":"http://schema.org/MediaObject"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Distance"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The width of the item.","rdfs:label":"width"},{"@id":"http://schema.org/priceValidUntil","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Offer"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date after which the price is no longer available.","rdfs:label":"priceValidUntil"},{"@id":"http://schema.org/givenName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.","rdfs:label":"givenName"},{"@id":"http://schema.org/SelfStorage","@type":"rdfs:Class","rdfs:comment":"A self-storage facility.","rdfs:label":"SelfStorage","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/ticketNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Ticket"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The unique identifier for the ticket.","rdfs:label":"ticketNumber"},{"@id":"http://schema.org/ScholarlyArticle","@type":"rdfs:Class","rdfs:comment":"A scholarly article.","rdfs:label":"ScholarlyArticle","rdfs:subClassOf":{"@id":"http://schema.org/Article"}},{"@id":"http://schema.org/valueMaxLength","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"Specifies the allowed range for number of characters in a literal value.","rdfs:label":"valueMaxLength"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism","@type":"http://schema.org/Organization","rdfs:comment":"This element is based on the work of the <a href=\"https://www.w3.org/community/tourismdata\">Tourism Structured Web Data Community Group</a>.","rdfs:label":"Tourism"},{"@id":"http://schema.org/cholesterolContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of milligrams of cholesterol.","rdfs:label":"cholesterolContent"},{"@id":"http://schema.org/ReservationPending","@type":"http://schema.org/ReservationStatusType","rdfs:comment":"The status of a reservation when a request has been sent, but not confirmed.","rdfs:label":"ReservationPending"},{"@id":"http://schema.org/GeoShape","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"rdfs:comment":"The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.","rdfs:label":"GeoShape","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/EntertainmentBusiness","@type":"rdfs:Class","rdfs:comment":"A business providing entertainment.","rdfs:label":"EntertainmentBusiness","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/creditedTo","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRelease"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \"Stefani Germanotta Band\", but by Lady Gaga.","rdfs:label":"creditedTo"},{"@id":"http://schema.org/datePosted","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Publication date for the job posting.","rdfs:label":"datePosted"},{"@id":"http://schema.org/BroadcastChannel","@type":"rdfs:Class","rdfs:comment":"A unique instance of a BroadcastService on a CableOrSatelliteService lineup.","rdfs:label":"BroadcastChannel","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/Florist","@type":"rdfs:Class","rdfs:comment":"A florist.","rdfs:label":"Florist","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/directors","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/Clip"},{"@id":"http://schema.org/MovieSeries"},{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/Episode"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/director"},"rdfs:comment":"A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.","rdfs:label":"directors"},{"@id":"http://schema.org/runtimePlatform","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareSourceCode"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).","rdfs:label":"runtimePlatform"},{"@id":"http://schema.org/contactPoints","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ContactPoint"},"http://schema.org/supersededBy":{"@id":"http://schema.org/contactPoint"},"rdfs:comment":"A contact point for a person or organization.","rdfs:label":"contactPoints"},{"@id":"http://schema.org/skills","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Skills required to fulfill this role.","rdfs:label":"skills"},{"@id":"http://schema.org/copyrightHolder","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The party holding the legal copyright to the CreativeWork.","rdfs:label":"copyrightHolder"},{"@id":"http://schema.org/paymentStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Invoice"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/PaymentStatusType"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The status of payment; whether the invoice has been paid or not.","rdfs:label":"paymentStatus"},{"@id":"http://schema.org/characterName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PerformanceRole"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The name of a character played in some acting or performing role, i.e. in a PerformanceRole.","rdfs:label":"characterName"},{"@id":"http://schema.org/Mass","@type":"rdfs:Class","rdfs:comment":"Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.","rdfs:label":"Mass","rdfs:subClassOf":{"@id":"http://schema.org/Quantity"}},{"@id":"http://schema.org/breadcrumb","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/BreadcrumbList"}],"rdfs:comment":"A set of links that can help a user understand and navigate a website hierarchy.","rdfs:label":"breadcrumb"},{"@id":"http://schema.org/dependencies","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TechArticle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Prerequisites needed to fulfill steps in article.","rdfs:label":"dependencies"},{"@id":"http://schema.org/HowToTool","@type":"rdfs:Class","rdfs:comment":"A tool used (but not consumed) when performing instructions for how to achieve a result.","rdfs:label":"HowToTool","rdfs:subClassOf":{"@id":"http://schema.org/HowToItem"}},{"@id":"http://schema.org/CassetteFormat","@type":"http://schema.org/MusicReleaseFormatType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"CassetteFormat.","rdfs:label":"CassetteFormat"},{"@id":"http://schema.org/PaymentMethod","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"<p>A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.</p>\n\n<p>Commonly used values:</p>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>\n<li>http://purl.org/goodrelations/v1#ByInvoice</li>\n<li>http://purl.org/goodrelations/v1#Cash</li>\n<li>http://purl.org/goodrelations/v1#CheckInAdvance</li>\n<li>http://purl.org/goodrelations/v1#COD</li>\n<li>http://purl.org/goodrelations/v1#DirectDebit</li>\n<li>http://purl.org/goodrelations/v1#GoogleCheckout</li>\n<li>http://purl.org/goodrelations/v1#PayPal</li>\n<li>http://purl.org/goodrelations/v1#PaySwarm</li>\n</ul>\n","rdfs:label":"PaymentMethod","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/UserPlusOnes","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserPlusOnes","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/branchCode","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.</p>\n\n<p>For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.","rdfs:label":"branchCode"},{"@id":"http://schema.org/WebPage","@type":"rdfs:Class","rdfs:comment":"A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.","rdfs:label":"WebPage","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/merchant","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/seller"},"rdfs:comment":"'merchant' is an out-dated term for 'seller'.","rdfs:label":"merchant"},{"@id":"http://schema.org/broker","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/Reservation"},{"@id":"http://schema.org/Invoice"},{"@id":"http://schema.org/Order"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.","rdfs:label":"broker"},{"@id":"http://schema.org/Residence","@type":"rdfs:Class","rdfs:comment":"The place where a person lives.","rdfs:label":"Residence","rdfs:subClassOf":{"@id":"http://schema.org/Place"}},{"@id":"http://schema.org/UserPageVisits","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserPageVisits","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/Mosque","@type":"rdfs:Class","rdfs:comment":"A mosque.","rdfs:label":"Mosque","rdfs:subClassOf":{"@id":"http://schema.org/PlaceOfWorship"}},{"@id":"http://schema.org/UsedCondition","@type":"http://schema.org/OfferItemCondition","rdfs:comment":"Indicates that the item is used.","rdfs:label":"UsedCondition"},{"@id":"http://schema.org/addOn","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Offer"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Offer"},"rdfs:comment":"An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).","rdfs:label":"addOn"},{"@id":"http://schema.org/FrontWheelDriveConfiguration","@type":"http://schema.org/DriveWheelConfigurationValue","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"Front-wheel drive is a transmission layout where the engine drives the front wheels.","rdfs:label":"FrontWheelDriveConfiguration"},{"@id":"http://schema.org/sportsTeam","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ExerciseAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SportsTeam"},"rdfs:comment":"A sub property of participant. The sports team that participated on this action.","rdfs:label":"sportsTeam","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/inBroadcastLineup","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CableOrSatelliteService"},"rdfs:comment":"The CableOrSatelliteService offering the channel.","rdfs:label":"inBroadcastLineup"},{"@id":"http://schema.org/featureList","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"Features or modules provided by this application (and possibly required by other applications).","rdfs:label":"featureList"},{"@id":"http://schema.org/accessibilityHazard","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).","rdfs:label":"accessibilityHazard"},{"@id":"http://schema.org/albumReleaseType","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicAlbum"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicAlbumReleaseType"},"rdfs:comment":"The kind of release which this album is: single, EP or album.","rdfs:label":"albumReleaseType"},{"@id":"http://schema.org/surface","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VisualArtwork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/artworkSurface"},"rdfs:comment":"A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.","rdfs:label":"surface","rdfs:subPropertyOf":{"@id":"http://schema.org/material"}},{"@id":"http://schema.org/copyrightYear","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The year during which the claimed copyright for the CreativeWork was first asserted.","rdfs:label":"copyrightYear"},{"@id":"http://schema.org/sportsEvent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ExerciseAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SportsEvent"},"rdfs:comment":"A sub property of location. The sports event where this action occurred.","rdfs:label":"sportsEvent","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/ReplyAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of responding to a question/message asked/sent by the object. Related to <a class=\"localLink\" href=\"http://schema.org/AskAction\">AskAction</a></p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/AskAction\">AskAction</a>: Appears generally as an origin of a ReplyAction.</li>\n</ul>\n","rdfs:label":"ReplyAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/actionPlatform","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EntryPoint"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.","rdfs:label":"actionPlatform"},{"@id":"http://schema.org/distance","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TravelAction"},{"@id":"http://schema.org/ExerciseAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Distance"},"rdfs:comment":"The distance travelled, e.g. exercising or travelling.","rdfs:label":"distance"},{"@id":"http://schema.org/longitude","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoCoordinates"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The longitude of a location. For example <code>-122.08585</code> (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).","rdfs:label":"longitude"},{"@id":"http://schema.org/issn","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/WebSite"},{"@id":"http://schema.org/CreativeWorkSeries"},{"@id":"http://schema.org/Dataset"},{"@id":"http://schema.org/Blog"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/bibo/issn"},"rdfs:comment":"The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.","rdfs:label":"issn","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/hasMap","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Map"}],"rdfs:comment":"A URL to a map of the place.","rdfs:label":"hasMap"},{"@id":"http://schema.org/BusTrip","@type":"rdfs:Class","rdfs:comment":"A trip on a commercial bus line.","rdfs:label":"BusTrip","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/awards","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/award"},"rdfs:comment":"Awards won by or for this item.","rdfs:label":"awards"},{"@id":"http://schema.org/incentives","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/incentiveCompensation"},"rdfs:comment":"Description of bonus and commission compensation aspects of the job.","rdfs:label":"incentives"},{"@id":"http://schema.org/printEdition","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NewsArticle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The edition of the print product in which the NewsArticle appears.","rdfs:label":"printEdition"},{"@id":"http://schema.org/UnRegisterAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of un-registering from a service.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/RegisterAction\">RegisterAction</a>: antonym of UnRegisterAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/Leave\">Leave</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li>\n</ul>\n","rdfs:label":"UnRegisterAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/OfflinePermanently","@type":"http://schema.org/GameServerStatus","rdfs:comment":"Game server status: OfflinePermanently. Server is offline and not available.","rdfs:label":"OfflinePermanently"},{"@id":"http://schema.org/opponent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ExerciseAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A sub property of participant. The opponent on this action.","rdfs:label":"opponent","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/releaseOf","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRelease"},"http://schema.org/inverseOf":{"@id":"http://schema.org/albumRelease"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicAlbum"},"rdfs:comment":"The album this is a release of.","rdfs:label":"releaseOf"},{"@id":"http://schema.org/LoseAction","@type":"rdfs:Class","rdfs:comment":"The act of being defeated in a competitive activity.","rdfs:label":"LoseAction","rdfs:subClassOf":{"@id":"http://schema.org/AchieveAction"}},{"@id":"http://schema.org/participant","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>.","rdfs:label":"participant"},{"@id":"http://schema.org/educationRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Educational background needed for the position.","rdfs:label":"educationRequirements"},{"@id":"http://schema.org/ShoppingCenter","@type":"rdfs:Class","rdfs:comment":"A shopping center or mall.","rdfs:label":"ShoppingCenter","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/Flight","@type":"rdfs:Class","rdfs:comment":"An airline flight.","rdfs:label":"Flight","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/menu","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FoodEstablishment"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Menu"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/hasMenu"},"rdfs:comment":"Either the actual menu as a structured representation, as text, or a URL of the menu.","rdfs:label":"menu"},{"@id":"http://schema.org/servicePostalAddress","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ServiceChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PostalAddress"},"rdfs:comment":"The address for accessing the service by mail.","rdfs:label":"servicePostalAddress"},{"@id":"http://schema.org/HowToStep","@type":"rdfs:Class","rdfs:comment":"A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.","rdfs:label":"HowToStep","rdfs:subClassOf":{"@id":"http://schema.org/ItemList"}},{"@id":"http://schema.org/videoQuality","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VideoObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The quality of the video.","rdfs:label":"videoQuality"},{"@id":"http://schema.org/OfferCatalog","@type":"rdfs:Class","rdfs:comment":"An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.","rdfs:label":"OfferCatalog","rdfs:subClassOf":{"@id":"http://schema.org/ItemList"}},{"@id":"http://schema.org/warranty","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/WarrantyPromise"},"rdfs:comment":"The warranty promise(s) included in the offer.","rdfs:label":"warranty"},{"@id":"http://schema.org/includesObject","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/TypeAndQuantityNode"},"rdfs:comment":"This links to a node or nodes indicating the exact quantity of the products included in the offer.","rdfs:label":"includesObject"},{"@id":"http://schema.org/liveBlogUpdate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LiveBlogPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BlogPosting"},"rdfs:comment":"An update to the LiveBlog.","rdfs:label":"liveBlogUpdate"},{"@id":"http://schema.org/CreativeWorkSeries","@type":"rdfs:Class","rdfs:comment":"A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class=\"localLink\" href=\"http://schema.org/ItemList\">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).</p>\n\n<p>Specific subtypes are available for describing <a class=\"localLink\" href=\"http://schema.org/TVSeries\">TVSeries</a>, <a class=\"localLink\" href=\"http://schema.org/RadioSeries\">RadioSeries</a>, <a class=\"localLink\" href=\"http://schema.org/MovieSeries\">MovieSeries</a>, <a class=\"localLink\" href=\"http://schema.org/BookSeries\">BookSeries</a>, <a class=\"localLink\" href=\"http://schema.org/Periodical\">Periodical</a> and <a class=\"localLink\" href=\"http://schema.org/VideoGameSeries\">VideoGameSeries</a>. In each case, the <a class=\"localLink\" href=\"http://schema.org/hasPart\">hasPart</a> / <a class=\"localLink\" href=\"http://schema.org/isPartOf\">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.</p>\n\n<p>It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.","rdfs:label":"CreativeWorkSeries","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/eligibleQuantity","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.","rdfs:label":"eligibleQuantity"},{"@id":"http://schema.org/priceComponent","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/CompoundPriceSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/UnitPriceSpecification"},"rdfs:comment":"This property links to all <a class=\"localLink\" href=\"http://schema.org/UnitPriceSpecification\">UnitPriceSpecification</a> nodes that apply in parallel for the <a class=\"localLink\" href=\"http://schema.org/CompoundPriceSpecification\">CompoundPriceSpecification</a> node.","rdfs:label":"priceComponent"},{"@id":"http://schema.org/NightClub","@type":"rdfs:Class","rdfs:comment":"A nightclub or discotheque.","rdfs:label":"NightClub","rdfs:subClassOf":{"@id":"http://schema.org/EntertainmentBusiness"}},{"@id":"http://schema.org/ConfirmAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of notifying someone that a future event/action is going to happen as expected.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/CancelAction\">CancelAction</a>: The antonym of ConfirmAction.</li>\n</ul>\n","rdfs:label":"ConfirmAction","rdfs:subClassOf":{"@id":"http://schema.org/InformAction"}},{"@id":"http://schema.org/ccRecipient","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Message"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"A sub property of recipient. The recipient copied on a message.","rdfs:label":"ccRecipient","rdfs:subPropertyOf":{"@id":"http://schema.org/recipient"}},{"@id":"http://schema.org/significantLink","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.","rdfs:label":"significantLink"},{"@id":"http://schema.org/applicationSubCategory","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"Subcategory of the application, e.g. 'Arcade Game'.","rdfs:label":"applicationSubCategory"},{"@id":"http://schema.org/PaymentPastDue","@type":"http://schema.org/PaymentStatusType","rdfs:comment":"The payment is due and considered late.","rdfs:label":"PaymentPastDue"},{"@id":"http://schema.org/recordedAt","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/inverseOf":{"@id":"http://schema.org/recordedIn"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"rdfs:comment":"The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.","rdfs:label":"recordedAt"},{"@id":"http://schema.org/recordedAs","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/inverseOf":{"@id":"http://schema.org/recordingOf"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicRecording"},"rdfs:comment":"An audio recording of the work.","rdfs:label":"recordedAs"},{"@id":"http://schema.org/spatial","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Dataset"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/supersededBy":{"@id":"http://schema.org/spatialCoverage"},"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/dc/terms/spatial"},"rdfs:comment":"The range of spatial applicability of a dataset, e.g. for a dataset of New York weather, the state of New York.","rdfs:label":"spatial"},{"@id":"http://schema.org/FourWheelDriveConfiguration","@type":"http://schema.org/DriveWheelConfigurationValue","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.","rdfs:label":"FourWheelDriveConfiguration"},{"@id":"http://schema.org/additionalProperty","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/QualitativeValue"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PropertyValue"},"rdfs:comment":"A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.</p>\n\n<p>Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.","rdfs:label":"additionalProperty"},{"@id":"http://schema.org/serviceOutput","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Service"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The tangible thing generated by the service, e.g. a passport, permit, etc.","rdfs:label":"serviceOutput"},{"@id":"http://schema.org/DataFeed","@type":"rdfs:Class","rdfs:comment":"A single feed providing structured information about one or more entities or topics.","rdfs:label":"DataFeed","rdfs:subClassOf":{"@id":"http://schema.org/Dataset"}},{"@id":"http://schema.org/State","@type":"rdfs:Class","rdfs:comment":"A state or province of a country.","rdfs:label":"State","rdfs:subClassOf":{"@id":"http://schema.org/AdministrativeArea"}},{"@id":"http://schema.org/commentCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.","rdfs:label":"commentCount"},{"@id":"http://schema.org/Playground","@type":"rdfs:Class","rdfs:comment":"A playground.","rdfs:label":"Playground","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/relatedLink","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"A link related to this web page, for example to other related web pages.","rdfs:label":"relatedLink"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group","@type":"http://schema.org/Organization","rdfs:comment":"This element is based on the work of the Automotive Ontology Working Group, see <a href=\"http://www.automotive-ontology.org\">www.automotive-ontology.org</a> for details. Many class and property definitions are inspired by or based on abstracts from Wikipedia, the free encyclopedia.","rdfs:label":"AutomotiveOntologyWGClass"},{"@id":"http://schema.org/AppendAction","@type":"rdfs:Class","rdfs:comment":"The act of inserting at the end if an ordered collection.","rdfs:label":"AppendAction","rdfs:subClassOf":{"@id":"http://schema.org/InsertAction"}},{"@id":"http://schema.org/replacee","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ReplaceAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"A sub property of object. The object that is being replaced.","rdfs:label":"replacee","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/InteractionCounter","@type":"rdfs:Class","rdfs:comment":"A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.","rdfs:label":"InteractionCounter","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/PaymentAutomaticallyApplied","@type":"http://schema.org/PaymentStatusType","rdfs:comment":"An automatic payment system is in place and will be used.","rdfs:label":"PaymentAutomaticallyApplied"},{"@id":"http://schema.org/replacer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ReplaceAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"A sub property of object. The object that replaces.","rdfs:label":"replacer","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/ParkingFacility","@type":"rdfs:Class","rdfs:comment":"A parking lot or other parking facility.","rdfs:label":"ParkingFacility","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/reportNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Report"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The number or other unique designator assigned to a Report by the publishing organization.","rdfs:label":"reportNumber"},{"@id":"http://schema.org/CookAction","@type":"rdfs:Class","rdfs:comment":"The act of producing/preparing food.","rdfs:label":"CookAction","rdfs:subClassOf":{"@id":"http://schema.org/CreateAction"}},{"@id":"http://schema.org/Male","@type":"http://schema.org/GenderType","rdfs:comment":"The male gender.","rdfs:label":"Male"},{"@id":"http://schema.org/AuthorizeAction","@type":"rdfs:Class","rdfs:comment":"The act of granting permission to an object.","rdfs:label":"AuthorizeAction","rdfs:subClassOf":{"@id":"http://schema.org/AllocateAction"}},{"@id":"http://schema.org/BookSeries","@type":"rdfs:Class","rdfs:comment":"A series of books. Included books can be indicated with the hasPart property.","rdfs:label":"BookSeries","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWorkSeries"}},{"@id":"http://schema.org/SpokenWordAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"SpokenWordAlbum.","rdfs:label":"SpokenWordAlbum"},{"@id":"http://schema.org/vendor","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BuyAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/seller"},"rdfs:comment":"'vendor' is an earlier term for 'seller'.","rdfs:label":"vendor","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/UserDownloads","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserDownloads","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/PawnShop","@type":"rdfs:Class","rdfs:comment":"A shop that will buy, or lend money against the security of, personal possessions.","rdfs:label":"PawnShop","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/winner","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LoseAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A sub property of participant. The winner of the action.","rdfs:label":"winner","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/articleSection","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Article"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.","rdfs:label":"articleSection"},{"@id":"http://schema.org/AssignAction","@type":"rdfs:Class","rdfs:comment":"The act of allocating an action/event/task to some destination (someone or something).","rdfs:label":"AssignAction","rdfs:subClassOf":{"@id":"http://schema.org/AllocateAction"}},{"@id":"http://schema.org/PayAction","@type":"rdfs:Class","rdfs:comment":"An agent pays a price to a participant.","rdfs:label":"PayAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/HighSchool","@type":"rdfs:Class","rdfs:comment":"A high school.","rdfs:label":"HighSchool","rdfs:subClassOf":{"@id":"http://schema.org/EducationalOrganization"}},{"@id":"http://schema.org/tool","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/HowTo"},{"@id":"http://schema.org/HowToDirection"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/HowToTool"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.","rdfs:label":"tool","rdfs:subPropertyOf":{"@id":"http://schema.org/instrument"}},{"@id":"http://schema.org/fileFormat","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Media type, typically MIME format (see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.","rdfs:label":"fileFormat"},{"@id":"http://schema.org/TypeAndQuantityNode","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.","rdfs:label":"TypeAndQuantityNode","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/SteeringPositionValue","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"A value indicating a steering position.","rdfs:label":"SteeringPositionValue","rdfs:subClassOf":{"@id":"http://schema.org/QualitativeValue"}},{"@id":"http://schema.org/AudiobookFormat","@type":"http://schema.org/BookFormatType","rdfs:comment":"Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.","rdfs:label":"AudiobookFormat"},{"@id":"http://schema.org/SportsClub","@type":"rdfs:Class","rdfs:comment":"A sports club.","rdfs:label":"SportsClub","rdfs:subClassOf":{"@id":"http://schema.org/SportsActivityLocation"}},{"@id":"http://schema.org/Aquarium","@type":"rdfs:Class","rdfs:comment":"Aquarium.","rdfs:label":"Aquarium","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/OrderDelivered","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing successful delivery of an order.","rdfs:label":"OrderDelivered"},{"@id":"http://schema.org/validUntil","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Permit"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date when the item is no longer valid.","rdfs:label":"validUntil"},{"@id":"http://schema.org/TrainTrip","@type":"rdfs:Class","rdfs:comment":"A trip on a commercial train line.","rdfs:label":"TrainTrip","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/Bridge","@type":"rdfs:Class","rdfs:comment":"A bridge.","rdfs:label":"Bridge","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/TrainStation","@type":"rdfs:Class","rdfs:comment":"A train station.","rdfs:label":"TrainStation","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/typeOfBed","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/BedDetails"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.","rdfs:label":"typeOfBed"},{"@id":"http://schema.org/DatedMoneySpecification","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/MonetaryAmount"},"rdfs:comment":"A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. <strong>Note:</strong> This type has been superseded by <a class=\"localLink\" href=\"http://schema.org/MonetaryAmount\">MonetaryAmount</a> use of that type is recommended","rdfs:label":"DatedMoneySpecification","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/inLanguage","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/CommunicateAction"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/WriteAction"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Language"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>.","rdfs:label":"inLanguage"},{"@id":"http://schema.org/familyName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.","rdfs:label":"familyName"},{"@id":"http://schema.org/fuelEfficiency","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"<p>The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).</p>\n\n<ul>\n<li>Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use <a class=\"localLink\" href=\"http://schema.org/unitText\">unitText</a> to indicate the unit of measurement, e.g. mpg or km/L.</li>\n<li>Note 2: There are two ways of indicating the fuel consumption, <a class=\"localLink\" href=\"http://schema.org/fuelConsumption\">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class=\"localLink\" href=\"http://schema.org/fuelEfficiency\">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>\n<li>Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use <a class=\"localLink\" href=\"http://schema.org/valueReference\">valueReference</a> to link the value for the fuel economy to another value.</li>\n</ul>\n","rdfs:label":"fuelEfficiency"},{"@id":"http://schema.org/PaymentDue","@type":"http://schema.org/PaymentStatusType","rdfs:comment":"The payment is due, but still within an acceptable time to be received.","rdfs:label":"PaymentDue"},{"@id":"http://schema.org/track","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/MusicPlaylist"},{"@id":"http://schema.org/MusicGroup"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ItemList"},{"@id":"http://schema.org/MusicRecording"}],"rdfs:comment":"A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.","rdfs:label":"track"},{"@id":"http://schema.org/seeks","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Demand"},"rdfs:comment":"A pointer to products or services sought by the organization or person (demand).","rdfs:label":"seeks"},{"@id":"http://schema.org/member","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/ProgramMembership"},{"@id":"http://schema.org/Organization"}],"http://schema.org/inverseOf":{"@id":"http://schema.org/memberOf"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.","rdfs:label":"member"},{"@id":"http://schema.org/touristType","@type":"rdf:Property","http://purl.org/dc/terms/source":[{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Tourism"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it"}],"http://schema.org/domainIncludes":{"@id":"http://schema.org/TouristAttraction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Audience"}],"rdfs:comment":"Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc.","rdfs:label":"touristType"},{"@id":"http://schema.org/founders","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/founder"},"rdfs:comment":"A person who founded this organization.","rdfs:label":"founders"},{"@id":"http://schema.org/Friday","@type":"http://schema.org/DayOfWeek","http://schema.org/sameAs":{"@id":"http://www.wikidata.org/entity/Q130"},"rdfs:comment":"The day of the week between Thursday and Saturday.","rdfs:label":"Friday"},{"@id":"http://schema.org/suggestedMaxAge","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PeopleAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"Maximal age recommended for viewing content.","rdfs:label":"suggestedMaxAge"},{"@id":"http://schema.org/yearlyRevenue","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BusinessAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The size of the business in annual revenue.","rdfs:label":"yearlyRevenue"},{"@id":"http://schema.org/episodeNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Episode"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Integer"}],"rdfs:comment":"Position of the episode within an ordered group of episodes.","rdfs:label":"episodeNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/position"}},{"@id":"http://schema.org/temporal","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Dataset"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"http://schema.org/supersededBy":{"@id":"http://schema.org/temporalCoverage"},"rdfs:comment":"The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).","rdfs:label":"temporal"},{"@id":"http://schema.org/ReserveAction","@type":"rdfs:Class","rdfs:comment":"<p>Reserving a concrete object.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/ScheduleAction\">ScheduleAction</a></a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li>\n</ul>\n","rdfs:label":"ReserveAction","rdfs:subClassOf":{"@id":"http://schema.org/PlanAction"}},{"@id":"http://schema.org/WritePermission","@type":"http://schema.org/DigitalDocumentPermissionType","rdfs:comment":"Permission to write or edit the document.","rdfs:label":"WritePermission"},{"@id":"http://schema.org/sibling","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A sibling of the person.","rdfs:label":"sibling"},{"@id":"http://schema.org/boardingGroup","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FlightReservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The airline-specific indicator of boarding order / preference.","rdfs:label":"boardingGroup"},{"@id":"http://schema.org/SoftwareSourceCode","@type":"rdfs:Class","rdfs:comment":"Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.","rdfs:label":"SoftwareSourceCode","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/PaymentService","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A Service to transfer funds from a person or organization to a beneficiary person or organization.","rdfs:label":"PaymentService","rdfs:subClassOf":{"@id":"http://schema.org/FinancialProduct"}},{"@id":"http://schema.org/lesser","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/QualitativeValue"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QualitativeValue"},"rdfs:comment":"This ordering relation for qualitative values indicates that the subject is lesser than the object.","rdfs:label":"lesser"},{"@id":"http://schema.org/playMode","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/VideoGameSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/GamePlayMode"},"rdfs:comment":"Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.","rdfs:label":"playMode"},{"@id":"http://schema.org/alumni","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/EducationalOrganization"}],"http://schema.org/inverseOf":{"@id":"http://schema.org/alumniOf"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"Alumni of an organization.","rdfs:label":"alumni"},{"@id":"http://schema.org/RsvpResponseNo","@type":"http://schema.org/RsvpResponseType","rdfs:comment":"The invitee will not attend.","rdfs:label":"RsvpResponseNo"},{"@id":"http://schema.org/dissolutionDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date that this organization was dissolved.","rdfs:label":"dissolutionDate"},{"@id":"http://schema.org/InteractAction","@type":"rdfs:Class","rdfs:comment":"The act of interacting with another person or organization.","rdfs:label":"InteractAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/requiredMinAge","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PeopleAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"Audiences defined by a person's minimum age.","rdfs:label":"requiredMinAge"},{"@id":"http://schema.org/arrivalStation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TrainTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/TrainStation"},"rdfs:comment":"The station where the train trip ends.","rdfs:label":"arrivalStation"},{"@id":"http://schema.org/AutoBodyShop","@type":"rdfs:Class","rdfs:comment":"Auto body shop.","rdfs:label":"AutoBodyShop","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/address","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/GeoShape"},{"@id":"http://schema.org/GeoCoordinates"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/PostalAddress"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Physical address of the item.","rdfs:label":"address"},{"@id":"http://schema.org/LaserDiscFormat","@type":"http://schema.org/MusicReleaseFormatType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"LaserDiscFormat.","rdfs:label":"LaserDiscFormat"},{"@id":"http://schema.org/reviewCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AggregateRating"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The count of total number of reviews.","rdfs:label":"reviewCount"},{"@id":"http://schema.org/contentUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"Actual bytes of the media object, for example the image file or video file.","rdfs:label":"contentUrl"},{"@id":"http://schema.org/School","@type":"rdfs:Class","rdfs:comment":"A school.","rdfs:label":"School","rdfs:subClassOf":{"@id":"http://schema.org/EducationalOrganization"}},{"@id":"http://schema.org/TelevisionStation","@type":"rdfs:Class","rdfs:comment":"A television station.","rdfs:label":"TelevisionStation","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/HomeGoodsStore","@type":"rdfs:Class","rdfs:comment":"A home goods store.","rdfs:label":"HomeGoodsStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/LakeBodyOfWater","@type":"rdfs:Class","rdfs:comment":"A lake (for example, Lake Pontrachain).","rdfs:label":"LakeBodyOfWater","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/LowLactoseDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet appropriate for people with lactose intolerance.","rdfs:label":"LowLactoseDiet"},{"@id":"http://schema.org/circle","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoShape"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.","rdfs:label":"circle"},{"@id":"http://schema.org/BodyOfWater","@type":"rdfs:Class","rdfs:comment":"A body of water, such as a sea, ocean, or lake.","rdfs:label":"BodyOfWater","rdfs:subClassOf":{"@id":"http://schema.org/Landform"}},{"@id":"http://schema.org/availableLanguage","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/ServiceChannel"},{"@id":"http://schema.org/TouristAttraction"},{"@id":"http://schema.org/LodgingBusiness"},{"@id":"http://schema.org/ContactPoint"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Language"}],"rdfs:comment":"A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/inLanguage\">inLanguage</a>","rdfs:label":"availableLanguage"},{"@id":"http://schema.org/performerIn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"rdfs:comment":"Event that this person is a performer or participant in.","rdfs:label":"performerIn"},{"@id":"http://schema.org/RadioSeries","@type":"rdfs:Class","rdfs:comment":"CreativeWorkSeries dedicated to radio broadcast and associated online delivery.","rdfs:label":"RadioSeries","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWorkSeries"}},{"@id":"http://schema.org/MusicVideoObject","@type":"rdfs:Class","rdfs:comment":"A music video file.","rdfs:label":"MusicVideoObject","rdfs:subClassOf":{"@id":"http://schema.org/MediaObject"}},{"@id":"http://schema.org/question","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AskAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Question"},"rdfs:comment":"A sub property of object. A question.","rdfs:label":"question","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/numberOfItems","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ItemList"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.","rdfs:label":"numberOfItems"},{"@id":"http://schema.org/responsibilities","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Responsibilities associated with this role.","rdfs:label":"responsibilities"},{"@id":"http://schema.org/isGift","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Was the offer accepted as a gift for someone other than the buyer.","rdfs:label":"isGift"},{"@id":"http://schema.org/Beach","@type":"rdfs:Class","rdfs:comment":"Beach.","rdfs:label":"Beach","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/SpreadsheetDigitalDocument","@type":"rdfs:Class","rdfs:comment":"A spreadsheet file.","rdfs:label":"SpreadsheetDigitalDocument","rdfs:subClassOf":{"@id":"http://schema.org/DigitalDocument"}},{"@id":"http://schema.org/referencesOrder","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Invoice"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Order"},"rdfs:comment":"The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.","rdfs:label":"referencesOrder"},{"@id":"http://schema.org/HowToItem","@type":"rdfs:Class","rdfs:comment":"An item used as either a tool or supply when performing the instructions for how to to achieve a result.","rdfs:label":"HowToItem","rdfs:subClassOf":{"@id":"http://schema.org/ListItem"}},{"@id":"http://schema.org/ShareAction","@type":"rdfs:Class","rdfs:comment":"The act of distributing content to people for their amusement or edification.","rdfs:label":"ShareAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/validFrom","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/MonetaryAmount"},{"@id":"http://schema.org/OpeningHoursSpecification"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/LocationFeatureSpecification"},{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/Permit"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date when the item becomes valid.","rdfs:label":"validFrom"},{"@id":"http://schema.org/box","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoShape"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.","rdfs:label":"box"},{"@id":"http://schema.org/sportsActivityLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ExerciseAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SportsActivityLocation"},"rdfs:comment":"A sub property of location. The sports activity location where this action occurred.","rdfs:label":"sportsActivityLocation","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/subReservation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ReservationPackage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Reservation"},"rdfs:comment":"The individual reservations included in the package. Typically a repeated property.","rdfs:label":"subReservation"},{"@id":"http://schema.org/WPHeader","@type":"rdfs:Class","rdfs:comment":"The header section of the page.","rdfs:label":"WPHeader","rdfs:subClassOf":{"@id":"http://schema.org/WebPageElement"}},{"@id":"http://schema.org/device","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/availableOnDevice"},"rdfs:comment":"Device required to run the application. Used in cases where a specific make/model is required to run the application.","rdfs:label":"device"},{"@id":"http://schema.org/advanceBookingRequirement","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The amount of time that is required between accepting the offer and the actual usage of the resource or service.","rdfs:label":"advanceBookingRequirement"},{"@id":"http://schema.org/MarryAction","@type":"rdfs:Class","rdfs:comment":"The act of marrying a person.","rdfs:label":"MarryAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/baseSalary","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/JobPosting"},{"@id":"http://schema.org/EmployeeRole"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/MonetaryAmount"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The base salary of the job or of an employee in an EmployeeRole.","rdfs:label":"baseSalary"},{"@id":"http://schema.org/foodEvent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CookAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/FoodEvent"},"rdfs:comment":"A sub property of location. The specific food event where the action occurred.","rdfs:label":"foodEvent","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass","@type":"http://schema.org/Organization","rdfs:comment":"This class is based upon W3C DCAT work, and benefits from collaboration around the DCAT, ADMS and VoID vocabularies. See http://www.w3.org/wiki/WebSchemas/Datasets for full details and mappings.","rdfs:label":"DatasetClass"},{"@id":"http://schema.org/accessibilityAPI","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Indicates that the resource is compatible with the referenced accessibility API (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).","rdfs:label":"accessibilityAPI"},{"@id":"http://schema.org/Text","@type":["http://schema.org/DataType","rdfs:Class"],"rdfs:comment":"Data type: Text.","rdfs:label":"Text"},{"@id":"http://schema.org/boardingPolicy","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Airline"},{"@id":"http://schema.org/Flight"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BoardingPolicyType"},"rdfs:comment":"The type of boarding policy used by the airline (e.g. zone-based or group-based).","rdfs:label":"boardingPolicy"},{"@id":"http://schema.org/Notary","@type":"rdfs:Class","rdfs:comment":"A notary.","rdfs:label":"Notary","rdfs:subClassOf":{"@id":"http://schema.org/LegalService"}},{"@id":"http://schema.org/IceCreamShop","@type":"rdfs:Class","rdfs:comment":"An ice cream shop.","rdfs:label":"IceCreamShop","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/honorificPrefix","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.","rdfs:label":"honorificPrefix"},{"@id":"http://schema.org/specialOpeningHoursSpecification","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/OpeningHoursSpecification"},"rdfs:comment":"The special opening hours of a certain place.</p>\n\n<p>Use this to explicitly override general opening hours brought in scope by <a class=\"localLink\" href=\"http://schema.org/openingHoursSpecification\">openingHoursSpecification</a> or <a class=\"localLink\" href=\"http://schema.org/openingHours\">openingHours</a>.","rdfs:label":"specialOpeningHoursSpecification"},{"@id":"http://schema.org/byArtist","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/MusicAlbum"},{"@id":"http://schema.org/MusicRecording"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicGroup"},"rdfs:comment":"The artist that performed this album or recording.","rdfs:label":"byArtist"},{"@id":"http://schema.org/ReactAction","@type":"rdfs:Class","rdfs:comment":"The act of responding instinctively and emotionally to an object, expressing a sentiment.","rdfs:label":"ReactAction","rdfs:subClassOf":{"@id":"http://schema.org/AssessAction"}},{"@id":"http://schema.org/isAccessoryOrSparePartFor","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Product"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Product"},"rdfs:comment":"A pointer to another product (or multiple products) for which this product is an accessory or spare part.","rdfs:label":"isAccessoryOrSparePartFor"},{"@id":"http://schema.org/additionalName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An additional name for a Person, can be used for a middle name.","rdfs:label":"additionalName"},{"@id":"http://schema.org/passengerSequenceNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FlightReservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The passenger's sequence number as assigned by the airline.","rdfs:label":"passengerSequenceNumber"},{"@id":"http://schema.org/addressCountry","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/GeoCoordinates"},{"@id":"http://schema.org/PostalAddress"},{"@id":"http://schema.org/GeoShape"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Country"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The country. For example, USA. You can also provide the two-letter <a href=\"http://en.wikipedia.org/wiki/ISO_3166-1\">ISO 3166-1 alpha-2 country code</a>.","rdfs:label":"addressCountry"},{"@id":"http://schema.org/toLocation","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/ExerciseAction"},{"@id":"http://schema.org/InsertAction"},{"@id":"http://schema.org/MoveAction"},{"@id":"http://schema.org/TransferAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"A sub property of location. The final location of the object or the agent after the action.","rdfs:label":"toLocation","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/Message","@type":"rdfs:Class","rdfs:comment":"A single message from a sender to one or more organizations or people.","rdfs:label":"Message","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/InvestmentOrDeposit","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.","rdfs:label":"InvestmentOrDeposit","rdfs:subClassOf":{"@id":"http://schema.org/FinancialProduct"}},{"@id":"http://schema.org/DryCleaningOrLaundry","@type":"rdfs:Class","rdfs:comment":"A dry-cleaning business.","rdfs:label":"DryCleaningOrLaundry","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/interactionStatistic","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.","rdfs:label":"interactionStatistic"},{"@id":"http://schema.org/seatSection","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Seat"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The section location of the reserved seat (e.g. Orchestra).","rdfs:label":"seatSection"},{"@id":"http://schema.org/DeactivateAction","@type":"rdfs:Class","rdfs:comment":"The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).","rdfs:label":"DeactivateAction","rdfs:subClassOf":{"@id":"http://schema.org/ControlAction"}},{"@id":"http://schema.org/validThrough","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/MonetaryAmount"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/OpeningHoursSpecification"},{"@id":"http://schema.org/LocationFeatureSpecification"},{"@id":"http://schema.org/JobPosting"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.","rdfs:label":"validThrough"},{"@id":"http://schema.org/aircraft","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Vehicle"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The kind of aircraft (e.g., \"Boeing 747\").","rdfs:label":"aircraft"},{"@id":"http://schema.org/recipient","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/SendAction"},{"@id":"http://schema.org/AuthorizeAction"},{"@id":"http://schema.org/TipAction"},{"@id":"http://schema.org/ReturnAction"},{"@id":"http://schema.org/GiveAction"},{"@id":"http://schema.org/Message"},{"@id":"http://schema.org/CommunicateAction"},{"@id":"http://schema.org/PayAction"},{"@id":"http://schema.org/DonateAction"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Audience"}],"rdfs:comment":"A sub property of participant. The participant who is at the receiving end of the action.","rdfs:label":"recipient","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/FastFoodRestaurant","@type":"rdfs:Class","rdfs:comment":"A fast-food restaurant.","rdfs:label":"FastFoodRestaurant","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/DataFeedItem","@type":"rdfs:Class","rdfs:comment":"A single item within a larger data feed.","rdfs:label":"DataFeedItem","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/attendee","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A person or organization attending the event.","rdfs:label":"attendee"},{"@id":"http://schema.org/successorOf","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/ProductModel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ProductModel"},"rdfs:comment":"A pointer from a newer variant of a product  to its previous, often discontinued predecessor.","rdfs:label":"successorOf"},{"@id":"http://schema.org/collection","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/UpdateAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/supersededBy":{"@id":"http://schema.org/targetCollection"},"rdfs:comment":"A sub property of object. The collection target of the action.","rdfs:label":"collection","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/OrderStatus","@type":"rdfs:Class","rdfs:comment":"Enumerated status values for Order.","rdfs:label":"OrderStatus","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/SocialMediaPosting","@type":"rdfs:Class","rdfs:comment":"A post to a social media platform, including blog posts, tweets, Facebook posts, etc.","rdfs:label":"SocialMediaPosting","rdfs:subClassOf":{"@id":"http://schema.org/Article"}},{"@id":"http://schema.org/siblings","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/sibling"},"rdfs:comment":"A sibling of the person.","rdfs:label":"siblings"},{"@id":"http://schema.org/amenityFeature","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/LodgingBusiness"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Accommodation"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/LocationFeatureSpecification"},"rdfs:comment":"An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.","rdfs:label":"amenityFeature"},{"@id":"http://schema.org/Park","@type":"rdfs:Class","rdfs:comment":"A park.","rdfs:label":"Park","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/contentRating","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.","rdfs:label":"contentRating"},{"@id":"http://schema.org/starRating","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/LodgingBusiness"},{"@id":"http://schema.org/FoodEstablishment"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Rating"},"rdfs:comment":"An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).","rdfs:label":"starRating"},{"@id":"http://schema.org/applicationCategory","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"Type of software application, e.g. 'Game, Multimedia'.","rdfs:label":"applicationCategory"},{"@id":"http://schema.org/geoRadius","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoCircle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Distance"},{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).","rdfs:label":"geoRadius"},{"@id":"http://schema.org/VoteAction","@type":"rdfs:Class","rdfs:comment":"The act of expressing a preference from a fixed/finite/structured set of choices/options.","rdfs:label":"VoteAction","rdfs:subClassOf":{"@id":"http://schema.org/ChooseAction"}},{"@id":"http://schema.org/dropoffLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/RentalCarReservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"Where a rental car can be dropped off.","rdfs:label":"dropoffLocation"},{"@id":"http://schema.org/logo","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Brand"},{"@id":"http://schema.org/Service"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/ImageObject"}],"rdfs:comment":"An associated logo.","rdfs:label":"logo","rdfs:subPropertyOf":{"@id":"http://schema.org/image"}},{"@id":"http://schema.org/BookFormatType","@type":"rdfs:Class","rdfs:comment":"The publication format of the book.","rdfs:label":"BookFormatType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/LoanOrCredit","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A financial product for the loaning of an amount of money under agreed terms and charges.","rdfs:label":"LoanOrCredit","rdfs:subClassOf":{"@id":"http://schema.org/FinancialProduct"}},{"@id":"http://schema.org/lastReviewed","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Date on which the content on this web page was last reviewed for accuracy and/or completeness.","rdfs:label":"lastReviewed"},{"@id":"http://schema.org/Boolean","@type":["rdfs:Class","http://schema.org/DataType"],"rdfs:comment":"Boolean: True or False.","rdfs:label":"Boolean"},{"@id":"http://schema.org/ItemListOrderType","@type":"rdfs:Class","rdfs:comment":"Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.","rdfs:label":"ItemListOrderType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/athlete","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SportsTeam"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A person that acts as performing member of a sports team; a player as opposed to a coach.","rdfs:label":"athlete"},{"@id":"http://schema.org/ComedyClub","@type":"rdfs:Class","rdfs:comment":"A comedy club.","rdfs:label":"ComedyClub","rdfs:subClassOf":{"@id":"http://schema.org/EntertainmentBusiness"}},{"@id":"http://schema.org/ServiceChannel","@type":"rdfs:Class","rdfs:comment":"A means for accessing a service, e.g. a government office location, web site, or phone number.","rdfs:label":"ServiceChannel","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/requiredCollateral","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/LoanOrCredit"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Thing"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)","rdfs:label":"requiredCollateral"},{"@id":"http://schema.org/ExhibitionEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...","rdfs:label":"ExhibitionEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/isVariantOf","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/ProductModel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ProductModel"},"rdfs:comment":"A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.","rdfs:label":"isVariantOf"},{"@id":"http://schema.org/readonlyValue","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \"hidden\" input in an HTML form.","rdfs:label":"readonlyValue"},{"@id":"http://schema.org/numberOfAxles","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The number of axles.</p>\n\n<p>Typical unit code(s): C62","rdfs:label":"numberOfAxles"},{"@id":"http://schema.org/RentAction","@type":"rdfs:Class","rdfs:comment":"The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.","rdfs:label":"RentAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/sharedContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SocialMediaPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"A CreativeWork such as an image, video, or audio clip shared as part of this posting.","rdfs:label":"sharedContent"},{"@id":"http://schema.org/EmployeeRole","@type":"rdfs:Class","rdfs:comment":"A subclass of OrganizationRole used to describe employee relationships.","rdfs:label":"EmployeeRole","rdfs:subClassOf":{"@id":"http://schema.org/OrganizationRole"}},{"@id":"http://schema.org/price","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/TradeAction"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"<p>The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.</p>\n\n<p>Usage guidelines:</p>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with <a href=\"http://en.wikipedia.org/wiki/ISO_4217#Active_codes\">ISO 4217 codes</a> e.g. \"USD\") instead of\n  including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n","rdfs:label":"price"},{"@id":"http://schema.org/EmploymentAgency","@type":"rdfs:Class","rdfs:comment":"An employment agency.","rdfs:label":"EmploymentAgency","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/PrependAction","@type":"rdfs:Class","rdfs:comment":"The act of inserting at the beginning if an ordered collection.","rdfs:label":"PrependAction","rdfs:subClassOf":{"@id":"http://schema.org/InsertAction"}},{"@id":"http://schema.org/hiringOrganization","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"Organization offering the job position.","rdfs:label":"hiringOrganization"},{"@id":"http://schema.org/numberOfSeasons","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/TVSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of seasons in this series.","rdfs:label":"numberOfSeasons"},{"@id":"http://schema.org/FireStation","@type":"rdfs:Class","rdfs:comment":"A fire station. With firemen.","rdfs:label":"FireStation","rdfs:subClassOf":[{"@id":"http://schema.org/EmergencyService"},{"@id":"http://schema.org/CivicStructure"}]},{"@id":"http://schema.org/CourseInstance","@type":"rdfs:Class","rdfs:comment":"An instance of a <a class=\"localLink\" href=\"http://schema.org/Course\">Course</a> which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.","rdfs:label":"CourseInstance","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/valueMinLength","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"Specifies the minimum allowed range for number of characters in a literal value.","rdfs:label":"valueMinLength"},{"@id":"http://schema.org/Hotel","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Hotel","rdfs:subClassOf":{"@id":"http://schema.org/LodgingBusiness"}},{"@id":"http://schema.org/IndividualProduct","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A single, identifiable product instance (e.g. a laptop with a particular serial number).","rdfs:label":"IndividualProduct","rdfs:subClassOf":{"@id":"http://schema.org/Product"}},{"@id":"http://schema.org/StructuredValue","@type":"rdfs:Class","rdfs:comment":"Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.","rdfs:label":"StructuredValue","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/dropoffTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/RentalCarReservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"When a rental car can be dropped off.","rdfs:label":"dropoffTime"},{"@id":"http://schema.org/workPerformed","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"A work performed in some event, for example a play performed in a TheaterEvent.","rdfs:label":"workPerformed","rdfs:subPropertyOf":{"@id":"http://schema.org/workFeatured"}},{"@id":"http://schema.org/serviceSmsNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ServiceChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ContactPoint"},"rdfs:comment":"The number to access the service by text message.","rdfs:label":"serviceSmsNumber"},{"@id":"http://schema.org/RadioClip","@type":"rdfs:Class","rdfs:comment":"A short radio program or a segment/part of a radio program.","rdfs:label":"RadioClip","rdfs:subClassOf":{"@id":"http://schema.org/Clip"}},{"@id":"http://schema.org/Intangible","@type":"rdfs:Class","rdfs:comment":"A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.","rdfs:label":"Intangible","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/ElectronicsStore","@type":"rdfs:Class","rdfs:comment":"An electronics store.","rdfs:label":"ElectronicsStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/eventStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/EventStatusType"},"rdfs:comment":"An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.","rdfs:label":"eventStatus"},{"@id":"http://schema.org/gtin14","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-14.aspx\">GTIN-14</a> code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.","rdfs:label":"gtin14","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/gtin13","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-13.aspx\">GTIN-13</a> code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.","rdfs:label":"gtin13","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/gtin12","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-12.aspx\">GTIN-12</a> code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.","rdfs:label":"gtin12","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/OfflineTemporarily","@type":"http://schema.org/GameServerStatus","rdfs:comment":"Game server status: OfflineTemporarily. Server is offline now but it can be online soon.","rdfs:label":"OfflineTemporarily"},{"@id":"http://schema.org/employees","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/employee"},"rdfs:comment":"People working for this organization.","rdfs:label":"employees"},{"@id":"http://schema.org/learningResourceType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.","rdfs:label":"learningResourceType"},{"@id":"http://schema.org/Order","@type":"rdfs:Class","rdfs:comment":"An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.","rdfs:label":"Order","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/suitableForDiet","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Recipe"},{"@id":"http://schema.org/MenuItem"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/RestrictedDiet"},"rdfs:comment":"Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.","rdfs:label":"suitableForDiet"},{"@id":"http://schema.org/warrantyScope","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/WarrantyPromise"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/WarrantyScope"},"rdfs:comment":"The scope of the warranty promise.","rdfs:label":"warrantyScope"},{"@id":"http://schema.org/valueReference","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/QualitativeValue"},{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/PropertyValue"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Enumeration"},{"@id":"http://schema.org/PropertyValue"},{"@id":"http://schema.org/StructuredValue"},{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/QualitativeValue"}],"rdfs:comment":"A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.","rdfs:label":"valueReference"},{"@id":"http://schema.org/EventScheduled","@type":"http://schema.org/EventStatusType","rdfs:comment":"The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.","rdfs:label":"EventScheduled"},{"@id":"http://schema.org/accessMode","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://github.com/schemaorg/schemaorg/issues/1100"},"http://schema.org/category":"issue-1110","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.","rdfs:label":"accessMode"},{"@id":"http://schema.org/TVClip","@type":"rdfs:Class","rdfs:comment":"A short TV program or a segment/part of a TV program.","rdfs:label":"TVClip","rdfs:subClassOf":{"@id":"http://schema.org/Clip"}},{"@id":"http://schema.org/NailSalon","@type":"rdfs:Class","rdfs:comment":"A nail salon.","rdfs:label":"NailSalon","rdfs:subClassOf":{"@id":"http://schema.org/HealthAndBeautyBusiness"}},{"@id":"http://schema.org/startDate","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Role"},{"@id":"http://schema.org/DatedMoneySpecification"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWorkSeries"},{"@id":"http://schema.org/CreativeWorkSeason"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/DateTime"},{"@id":"http://schema.org/Date"}],"rdfs:comment":"The start date and time of the item (in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>).","rdfs:label":"startDate"},{"@id":"http://schema.org/telephone","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The telephone number.","rdfs:label":"telephone"},{"@id":"http://schema.org/realEstateAgent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/RentAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/RealEstateAgent"},"rdfs:comment":"A sub property of participant. The real estate agent involved in the action.","rdfs:label":"realEstateAgent","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/ContactPoint","@type":"rdfs:Class","rdfs:comment":"A contact point&#x2014;for example, a Customer Complaints department.","rdfs:label":"ContactPoint","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/mainContentOfPage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/WebPageElement"},"rdfs:comment":"Indicates if this web page element is the main subject of the page.","rdfs:label":"mainContentOfPage"},{"@id":"http://schema.org/GeneralContractor","@type":"rdfs:Class","rdfs:comment":"A general contractor.","rdfs:label":"GeneralContractor","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/PreSale","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item is available for ordering and delivery before general availability.","rdfs:label":"PreSale"},{"@id":"http://schema.org/serviceUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ServiceChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"The website to access the service.","rdfs:label":"serviceUrl"},{"@id":"http://schema.org/director","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/Clip"},{"@id":"http://schema.org/MovieSeries"},{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/Movie"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.","rdfs:label":"director"},{"@id":"http://schema.org/InStock","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item is in stock.","rdfs:label":"InStock"},{"@id":"http://schema.org/transcript","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/AudioObject"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"If this MediaObject is an AudioObject or VideoObject, the transcript of that object.","rdfs:label":"transcript"},{"@id":"http://schema.org/TelevisionChannel","@type":"rdfs:Class","rdfs:comment":"A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.","rdfs:label":"TelevisionChannel","rdfs:subClassOf":{"@id":"http://schema.org/BroadcastChannel"}},{"@id":"http://schema.org/softwareVersion","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Version of the software instance.","rdfs:label":"softwareVersion"},{"@id":"http://schema.org/providesBroadcastService","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BroadcastService"},"rdfs:comment":"The BroadcastService offered on this channel.","rdfs:label":"providesBroadcastService"},{"@id":"http://schema.org/superEvent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/inverseOf":{"@id":"http://schema.org/subEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"rdfs:comment":"An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.","rdfs:label":"superEvent"},{"@id":"http://schema.org/material","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Product"}],"rdfs:comment":"A material that something is made from, e.g. leather, wool, cotton, paper.","rdfs:label":"material"},{"@id":"http://schema.org/GovernmentBuilding","@type":"rdfs:Class","rdfs:comment":"A government building.","rdfs:label":"GovernmentBuilding","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/EmergencyService","@type":"rdfs:Class","rdfs:comment":"An emergency service, such as a fire station or ER.","rdfs:label":"EmergencyService","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/issuedBy","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Ticket"},{"@id":"http://schema.org/Permit"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The organization issuing the ticket or permit.","rdfs:label":"issuedBy"},{"@id":"http://schema.org/email","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Email address.","rdfs:label":"email"},{"@id":"http://schema.org/albumRelease","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicAlbum"},"http://schema.org/inverseOf":{"@id":"http://schema.org/releaseOf"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicRelease"},"rdfs:comment":"A release of this album.","rdfs:label":"albumRelease"},{"@id":"http://schema.org/FinancialService","@type":"rdfs:Class","rdfs:comment":"Financial services business.","rdfs:label":"FinancialService","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/VideoObject","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"rdfs:comment":"A video file.","rdfs:label":"VideoObject","rdfs:subClassOf":{"@id":"http://schema.org/MediaObject"}},{"@id":"http://schema.org/potentialAction","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Action"},"rdfs:comment":"Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.","rdfs:label":"potentialAction"},{"@id":"http://schema.org/isFamilyFriendly","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Indicates whether this content is family friendly.","rdfs:label":"isFamilyFriendly"},{"@id":"http://schema.org/weight","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The weight of the product or person.","rdfs:label":"weight"},{"@id":"http://schema.org/Menu","@type":"rdfs:Class","rdfs:comment":"A structured representation of food or drink items available from a FoodEstablishment.","rdfs:label":"Menu","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/Periodical","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://www.w3.org/2002/07/owl#equivalentClass":{"@id":"http://purl.org/ontology/bibo/Periodical"},"rdfs:comment":"A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.</p>\n\n<p>See also <a href=\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\">blog post</a>.","rdfs:label":"Periodical","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWorkSeries"}},{"@id":"http://schema.org/broadcastOfEvent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"rdfs:comment":"The event being broadcast such as a sporting event or awards ceremony.","rdfs:label":"broadcastOfEvent"},{"@id":"http://schema.org/numberOfBeds","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/BedDetails"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.","rdfs:label":"numberOfBeds"},{"@id":"http://schema.org/steps","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/HowToSection"},{"@id":"http://schema.org/HowTo"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ItemList"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The steps in the form of a single item (text, document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.","rdfs:label":"steps"},{"@id":"http://schema.org/Series","@type":"rdfs:Class","rdfs:comment":"A Series in schema.org is a group of related items, typically but not necessarily of the same kind.","rdfs:label":"Series","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/buyer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SellAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A sub property of participant. The participant/person/organization that bought the object.","rdfs:label":"buyer","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/Electrician","@type":"rdfs:Class","rdfs:comment":"An electrician.","rdfs:label":"Electrician","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/depth","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/VisualArtwork"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/Distance"}],"rdfs:comment":"The depth of the item.","rdfs:label":"depth"},{"@id":"http://schema.org/printSection","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NewsArticle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"If this NewsArticle appears in print, this field indicates the print section in which the article appeared.","rdfs:label":"printSection"},{"@id":"http://schema.org/WarrantyScope","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"<p>A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.</p>\n\n<p>Commonly used values:</p>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#Labor-BringIn</li>\n<li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>\n<li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>\n</ul>\n","rdfs:label":"WarrantyScope","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/httpMethod","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EntryPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.","rdfs:label":"httpMethod"},{"@id":"http://schema.org/CollectionPage","@type":"rdfs:Class","rdfs:comment":"Web page type: Collection page.","rdfs:label":"CollectionPage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/PhotographAction","@type":"rdfs:Class","rdfs:comment":"The act of capturing still images of objects using a camera.","rdfs:label":"PhotographAction","rdfs:subClassOf":{"@id":"http://schema.org/CreateAction"}},{"@id":"http://schema.org/vehicleInteriorType","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.","rdfs:label":"vehicleInteriorType"},{"@id":"http://schema.org/performTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/HowTo"},{"@id":"http://schema.org/HowToDirection"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 duration format</a>.","rdfs:label":"performTime"},{"@id":"http://schema.org/HealthAndBeautyBusiness","@type":"rdfs:Class","rdfs:comment":"Health and beauty.","rdfs:label":"HealthAndBeautyBusiness","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/LegislativeBuilding","@type":"rdfs:Class","rdfs:comment":"A legislative building&#x2014;for example, the state capitol.","rdfs:label":"LegislativeBuilding","rdfs:subClassOf":{"@id":"http://schema.org/GovernmentBuilding"}},{"@id":"http://schema.org/exampleOfWork","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/inverseOf":{"@id":"http://schema.org/workExample"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"A creative work that this work is an example/instance/realization/derivation of.","rdfs:label":"exampleOfWork"},{"@id":"http://schema.org/UserCheckins","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserCheckins","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/opens","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/OpeningHoursSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Time"},"rdfs:comment":"The opening hour of the place or service on the given day(s) of the week.","rdfs:label":"opens"},{"@id":"http://schema.org/version","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The version of the CreativeWork embodied by a specified resource.","rdfs:label":"version"},{"@id":"http://schema.org/paymentMethod","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Order"},{"@id":"http://schema.org/Invoice"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/PaymentMethod"},"rdfs:comment":"The name of the credit card or other method of payment for the order.","rdfs:label":"paymentMethod"},{"@id":"http://schema.org/dateModified","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/DataFeedItem"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/DateTime"},{"@id":"http://schema.org/Date"}],"rdfs:comment":"The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.","rdfs:label":"dateModified"},{"@id":"http://schema.org/VideoGameSeries","@type":"rdfs:Class","rdfs:comment":"A video game series.","rdfs:label":"VideoGameSeries","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWorkSeries"}},{"@id":"http://schema.org/BroadcastService","@type":"rdfs:Class","rdfs:comment":"A delivery service through which content is provided via broadcast over the air or online.","rdfs:label":"BroadcastService","rdfs:subClassOf":{"@id":"http://schema.org/Service"}},{"@id":"http://schema.org/associatedArticle","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/NewsArticle"},"rdfs:comment":"A NewsArticle associated with the Media Object.","rdfs:label":"associatedArticle"},{"@id":"http://schema.org/mainEntity","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/inverseOf":{"@id":"http://schema.org/mainEntityOfPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"Indicates the primary entity described in some page or other CreativeWork.","rdfs:label":"mainEntity","rdfs:subPropertyOf":{"@id":"http://schema.org/about"}},{"@id":"http://schema.org/RegisterAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of registering to be a user of a service, product or web page.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/JoinAction\">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, <em>not</em> a group/team of people.</li>\n<li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/SubscribeAction\">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li>\n</ul>\n","rdfs:label":"RegisterAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/productionCompany","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/MovieSeries"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/MediaObject"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/CreativeWorkSeason"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The production company or studio responsible for the item e.g. series, video game, episode etc.","rdfs:label":"productionCompany"},{"@id":"http://schema.org/WearAction","@type":"rdfs:Class","rdfs:comment":"The act of dressing oneself in clothing.","rdfs:label":"WearAction","rdfs:subClassOf":{"@id":"http://schema.org/UseAction"}},{"@id":"http://schema.org/TravelAgency","@type":"rdfs:Class","rdfs:comment":"A travel agency.","rdfs:label":"TravelAgency","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/PerformingGroup","@type":"rdfs:Class","rdfs:comment":"A performance group, such as a band, an orchestra, or a circus.","rdfs:label":"PerformingGroup","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/Hostel","@type":"rdfs:Class","rdfs:comment":"A hostel - cheap accommodation, often in shared dormitories.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Hostel","rdfs:subClassOf":{"@id":"http://schema.org/LodgingBusiness"}},{"@id":"http://schema.org/deliveryMethod","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/OrderAction"},{"@id":"http://schema.org/SendAction"},{"@id":"http://schema.org/ReceiveAction"},{"@id":"http://schema.org/TrackAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DeliveryMethod"},"rdfs:comment":"A sub property of instrument. The method of delivery.","rdfs:label":"deliveryMethod","rdfs:subPropertyOf":{"@id":"http://schema.org/instrument"}},{"@id":"http://schema.org/endorsee","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EndorseAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A sub property of participant. The person/organization being supported.","rdfs:label":"endorsee","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/alignmentType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AlignmentObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'.","rdfs:label":"alignmentType"},{"@id":"http://schema.org/assemblyVersion","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/APIReference"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Associated product/technology version. e.g., .NET Framework 4.5.","rdfs:label":"assemblyVersion"},{"@id":"http://schema.org/branchOf","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LocalBusiness"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/supersededBy":{"@id":"http://schema.org/parentOrganization"},"rdfs:comment":"The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)<a class=\"localLink\" href=\"http://schema.org/branch\">branch</a>.","rdfs:label":"branchOf"},{"@id":"http://schema.org/BankOrCreditUnion","@type":"rdfs:Class","rdfs:comment":"Bank or credit union.","rdfs:label":"BankOrCreditUnion","rdfs:subClassOf":{"@id":"http://schema.org/FinancialService"}},{"@id":"http://schema.org/Quantity","@type":"rdfs:Class","rdfs:comment":"Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.","rdfs:label":"Quantity","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/AllWheelDriveConfiguration","@type":"http://schema.org/DriveWheelConfigurationValue","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"All-wheel Drive is a transmission layout where the engine drives all four wheels.","rdfs:label":"AllWheelDriveConfiguration"},{"@id":"http://schema.org/geo","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/GeoCoordinates"},{"@id":"http://schema.org/GeoShape"}],"rdfs:comment":"The geo coordinates of the place.","rdfs:label":"geo"},{"@id":"http://schema.org/VideoGallery","@type":"rdfs:Class","rdfs:comment":"Web page type: Video gallery page.","rdfs:label":"VideoGallery","rdfs:subClassOf":{"@id":"http://schema.org/CollectionPage"}},{"@id":"http://schema.org/EducationalAudience","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass"},"rdfs:comment":"An EducationalAudience.","rdfs:label":"EducationalAudience","rdfs:subClassOf":{"@id":"http://schema.org/Audience"}},{"@id":"http://schema.org/department","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.","rdfs:label":"department"},{"@id":"http://schema.org/targetUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AlignmentObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"The URL of a node in an established educational framework.","rdfs:label":"targetUrl"},{"@id":"http://schema.org/CityHall","@type":"rdfs:Class","rdfs:comment":"A city hall.","rdfs:label":"CityHall","rdfs:subClassOf":{"@id":"http://schema.org/GovernmentBuilding"}},{"@id":"http://schema.org/ReservationCancelled","@type":"http://schema.org/ReservationStatusType","rdfs:comment":"The status for a previously confirmed reservation that is now cancelled.","rdfs:label":"ReservationCancelled"},{"@id":"http://schema.org/carbohydrateContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of carbohydrates.","rdfs:label":"carbohydrateContent"},{"@id":"http://schema.org/ComedyEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Comedy event.","rdfs:label":"ComedyEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/isSimilarTo","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Service"}],"rdfs:comment":"A pointer to another, functionally similar product (or multiple products).","rdfs:label":"isSimilarTo"},{"@id":"http://schema.org/DonateAction","@type":"rdfs:Class","rdfs:comment":"The act of providing goods, services, or money without compensation, often for philanthropic reasons.","rdfs:label":"DonateAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/closes","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/OpeningHoursSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Time"},"rdfs:comment":"The closing hour of the place or service on the given day(s) of the week.","rdfs:label":"closes"},{"@id":"http://schema.org/Brand","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A brand is a name used by an organization or business person for labeling a product, product group, or similar.","rdfs:label":"Brand","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/MovingCompany","@type":"rdfs:Class","rdfs:comment":"A moving company.","rdfs:label":"MovingCompany","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/Question","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange"},"rdfs:comment":"A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.","rdfs:label":"Question","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/ZoneBoardingPolicy","@type":"http://schema.org/BoardingPolicyType","rdfs:comment":"The airline boards by zones of the plane.","rdfs:label":"ZoneBoardingPolicy"},{"@id":"http://schema.org/storageRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Storage requirements (free space required).","rdfs:label":"storageRequirements"},{"@id":"http://schema.org/BorrowAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/LendAction\">LendAction</a>: Reciprocal of BorrowAction.</li>\n</ul>\n","rdfs:label":"BorrowAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/GardenStore","@type":"rdfs:Class","rdfs:comment":"A garden store.","rdfs:label":"GardenStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/estimatedCost","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/HowTo"},{"@id":"http://schema.org/HowToSupply"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/MonetaryAmount"}],"rdfs:comment":"The estimated cost of the supply or supplies consumed when performing instructions.","rdfs:label":"estimatedCost"},{"@id":"http://schema.org/contactPoint","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ContactPoint"},"rdfs:comment":"A contact point for a person or organization.","rdfs:label":"contactPoint"},{"@id":"http://schema.org/genre","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/BroadcastChannel"},{"@id":"http://schema.org/MusicGroup"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Genre of the creative work, broadcast channel or group.","rdfs:label":"genre"},{"@id":"http://schema.org/volumeNumber","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/PublicationVolume"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Integer"},{"@id":"http://schema.org/Text"}],"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/bibo/volume"},"rdfs:comment":"Identifies the volume of publication or multi-part work; for example, \"iii\" or \"2\".","rdfs:label":"volumeNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/position"}},{"@id":"http://schema.org/requiredGender","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PeopleAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Audiences defined by a person's gender.","rdfs:label":"requiredGender"},{"@id":"http://schema.org/ReviewAction","@type":"rdfs:Class","rdfs:comment":"The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.","rdfs:label":"ReviewAction","rdfs:subClassOf":{"@id":"http://schema.org/AssessAction"}},{"@id":"http://schema.org/maxValue","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/PropertyValueSpecification"},{"@id":"http://schema.org/PropertyValue"},{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/MonetaryAmount"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"The upper value of some characteristic or property.","rdfs:label":"maxValue"},{"@id":"http://schema.org/UserComments","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"http://schema.org/supersededBy":{"@id":"http://schema.org/InteractionCounter"},"rdfs:comment":"UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class=\"localLink\" href=\"http://schema.org/Action\">Action</a>-based vocabulary, alongside types such as <a class=\"localLink\" href=\"http://schema.org/Comment\">Comment</a>.","rdfs:label":"UserComments","rdfs:subClassOf":{"@id":"http://schema.org/UserInteraction"}},{"@id":"http://schema.org/NewCondition","@type":"http://schema.org/OfferItemCondition","rdfs:comment":"Indicates that the item is new.","rdfs:label":"NewCondition"},{"@id":"http://schema.org/parentOrganization","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/inverseOf":{"@id":"http://schema.org/subOrganization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The larger organization that this organization is a <a class=\"localLink\" href=\"http://schema.org/subOrganization\">subOrganization</a> of, if any.","rdfs:label":"parentOrganization"},{"@id":"http://schema.org/PaintAction","@type":"rdfs:Class","rdfs:comment":"The act of producing a painting, typically with paint and canvas as instruments.","rdfs:label":"PaintAction","rdfs:subClassOf":{"@id":"http://schema.org/CreateAction"}},{"@id":"http://schema.org/Blog","@type":"rdfs:Class","rdfs:comment":"A blog.","rdfs:label":"Blog","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/duration","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/MediaObject"},{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/MusicRecording"},{"@id":"http://schema.org/MusicRelease"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"The duration of the item (movie, audio recording, event, etc.) in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>.","rdfs:label":"duration"},{"@id":"http://schema.org/SportsActivityLocation","@type":"rdfs:Class","rdfs:comment":"A sports location, such as a playing field.","rdfs:label":"SportsActivityLocation","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/acceptedAnswer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Question"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Answer"},"rdfs:comment":"The answer that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.","rdfs:label":"acceptedAnswer","rdfs:subPropertyOf":{"@id":"http://schema.org/suggestedAnswer"}},{"@id":"http://schema.org/WarrantyPromise","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.","rdfs:label":"WarrantyPromise","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/fromLocation","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/MoveAction"},{"@id":"http://schema.org/ExerciseAction"},{"@id":"http://schema.org/TransferAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"A sub property of location. The original location of the object or the agent before the action.","rdfs:label":"fromLocation","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/Event","@type":"rdfs:Class","http://www.w3.org/2002/07/owl#equivalentClass":{"@id":"http://purl.org/dc/dcmitype/Event"},"rdfs:comment":"An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class=\"localLink\" href=\"http://schema.org/offers\">offers</a> property. Repeated events may be structured as separate Event objects.","rdfs:label":"Event","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/keywords","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.","rdfs:label":"keywords"},{"@id":"http://schema.org/hostingOrganization","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ProgramMembership"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The organization (airline, travelers' club, etc.) the membership is made with.","rdfs:label":"hostingOrganization"},{"@id":"http://schema.org/arrivalTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TrainTrip"},{"@id":"http://schema.org/BusTrip"},{"@id":"http://schema.org/Flight"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The expected arrival time.","rdfs:label":"arrivalTime"},{"@id":"http://schema.org/CompilationAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"CompilationAlbum.","rdfs:label":"CompilationAlbum"},{"@id":"http://schema.org/StudioAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"StudioAlbum.","rdfs:label":"StudioAlbum"},{"@id":"http://schema.org/hasDigitalDocumentPermission","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DigitalDocument"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DigitalDocumentPermission"},"rdfs:comment":"A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to \"public\".","rdfs:label":"hasDigitalDocumentPermission"},{"@id":"http://schema.org/programmingModel","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/APIReference"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Indicates whether API is managed or unmanaged.","rdfs:label":"programmingModel"},{"@id":"http://schema.org/colleague","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"A colleague of the person.","rdfs:label":"colleague"},{"@id":"http://schema.org/sender","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/ReceiveAction"},{"@id":"http://schema.org/Message"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Audience"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A sub property of participant. The participant who is at the sending end of the action.","rdfs:label":"sender","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/applicationSuite","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The name of the application suite to which the application belongs (e.g. Excel belongs to Office).","rdfs:label":"applicationSuite"},{"@id":"http://schema.org/educationalRole","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EducationalAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An educationalRole of an EducationalAudience.","rdfs:label":"educationalRole"},{"@id":"http://schema.org/encodesCreativeWork","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"The CreativeWork encoded by this media object.","rdfs:label":"encodesCreativeWork"},{"@id":"http://schema.org/seller","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/BuyAction"},{"@id":"http://schema.org/Order"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Flight"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.","rdfs:label":"seller","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/AdultEntertainment","@type":"rdfs:Class","rdfs:comment":"An adult entertainment establishment.","rdfs:label":"AdultEntertainment","rdfs:subClassOf":{"@id":"http://schema.org/EntertainmentBusiness"}},{"@id":"http://schema.org/interactionCount","@type":"rdf:Property","http://schema.org/supersededBy":{"@id":"http://schema.org/interactionStatistic"},"rdfs:comment":"This property is deprecated, alongside the UserInteraction types on which it depended.","rdfs:label":"interactionCount"},{"@id":"http://schema.org/author","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Rating"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.","rdfs:label":"author"},{"@id":"http://schema.org/DriveWheelConfigurationValue","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"A value indicating which roadwheels will receive torque.","rdfs:label":"DriveWheelConfigurationValue","rdfs:subClassOf":{"@id":"http://schema.org/QualitativeValue"}},{"@id":"http://schema.org/Role","@type":"rdfs:Class","rdfs:comment":"Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.</p>\n\n<p>See also <a href=\"http://blog.schema.org/2014/06/introducing-role.html\">blog post</a>.","rdfs:label":"Role","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/LowCalorieDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet focused on reduced calorie intake.","rdfs:label":"LowCalorieDiet"},{"@id":"http://schema.org/RearWheelDriveConfiguration","@type":"http://schema.org/DriveWheelConfigurationValue","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"Real-wheel drive is a transmission layout where the engine drives the rear wheels.","rdfs:label":"RearWheelDriveConfiguration"},{"@id":"http://schema.org/targetName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AlignmentObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The name of a node in an established educational framework.","rdfs:label":"targetName"},{"@id":"http://schema.org/dataset","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DataCatalog"},"http://schema.org/inverseOf":{"@id":"http://schema.org/includedInDataCatalog"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Dataset"},"rdfs:comment":"A dataset contained in this catalog.","rdfs:label":"dataset"},{"@id":"http://schema.org/City","@type":"rdfs:Class","rdfs:comment":"A city or town.","rdfs:label":"City","rdfs:subClassOf":{"@id":"http://schema.org/AdministrativeArea"}},{"@id":"http://schema.org/recipeCuisine","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The cuisine of the recipe (for example, French or Ethiopian).","rdfs:label":"recipeCuisine"},{"@id":"http://schema.org/ConsumeAction","@type":"rdfs:Class","rdfs:comment":"The act of ingesting information/resources/food.","rdfs:label":"ConsumeAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/ScreeningEvent","@type":"rdfs:Class","rdfs:comment":"A screening of a movie or other video.","rdfs:label":"ScreeningEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/legalName","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The official name of the organization, e.g. the registered company name.","rdfs:label":"legalName"},{"@id":"http://schema.org/LimitedAvailability","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item has limited availability.","rdfs:label":"LimitedAvailability"},{"@id":"http://schema.org/specialCommitments","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.","rdfs:label":"specialCommitments"},{"@id":"http://schema.org/ticketToken","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Ticket"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.","rdfs:label":"ticketToken"},{"@id":"http://schema.org/ArriveAction","@type":"rdfs:Class","rdfs:comment":"The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.","rdfs:label":"ArriveAction","rdfs:subClassOf":{"@id":"http://schema.org/MoveAction"}},{"@id":"http://schema.org/cookTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"The time it takes to actually cook the dish, in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 duration format</a>.","rdfs:label":"cookTime","rdfs:subPropertyOf":{"@id":"http://schema.org/performTime"}},{"@id":"http://schema.org/knownVehicleDamages","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A textual description of known damages, both repaired and unrepaired.","rdfs:label":"knownVehicleDamages"},{"@id":"http://schema.org/occupationalCategory","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Category or categories describing the job. Use BLS O*NET-SOC taxonomy: http://www.onetcenter.org/taxonomy.html. Ideally includes textual label and formal code, with the property repeated for each applicable value.","rdfs:label":"occupationalCategory"},{"@id":"http://schema.org/securityScreening","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FlightReservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The type of security screening the passenger is subject to.","rdfs:label":"securityScreening"},{"@id":"http://schema.org/addressRegion","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PostalAddress"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The region. For example, CA.","rdfs:label":"addressRegion"},{"@id":"http://schema.org/EventCancelled","@type":"http://schema.org/EventStatusType","rdfs:comment":"The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).","rdfs:label":"EventCancelled"},{"@id":"http://schema.org/object","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>.","rdfs:label":"object"},{"@id":"http://schema.org/assembly","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/APIReference"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/executableLibraryName"},"rdfs:comment":"Library file name e.g., mscorlib.dll, system.web.dll.","rdfs:label":"assembly"},{"@id":"http://schema.org/CreateAction","@type":"rdfs:Class","rdfs:comment":"The act of deliberately creating/producing/generating/building a result out of the agent.","rdfs:label":"CreateAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/ScheduleAction","@type":"rdfs:Class","rdfs:comment":"<p>Scheduling future actions, events, or tasks.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/ReserveAction\">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li>\n</ul>\n","rdfs:label":"ScheduleAction","rdfs:subClassOf":{"@id":"http://schema.org/PlanAction"}},{"@id":"http://schema.org/Dentist","@type":"rdfs:Class","rdfs:comment":"A dentist.","rdfs:label":"Dentist","rdfs:subClassOf":[{"@id":"http://schema.org/LocalBusiness"},{"@id":"http://schema.org/MedicalOrganization"}]},{"@id":"http://schema.org/DiscoverAction","@type":"rdfs:Class","rdfs:comment":"The act of discovering/finding an object.","rdfs:label":"DiscoverAction","rdfs:subClassOf":{"@id":"http://schema.org/FindAction"}},{"@id":"http://schema.org/TattooParlor","@type":"rdfs:Class","rdfs:comment":"A tattoo parlor.","rdfs:label":"TattooParlor","rdfs:subClassOf":{"@id":"http://schema.org/HealthAndBeautyBusiness"}},{"@id":"http://schema.org/memoryRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"Minimum memory requirements.","rdfs:label":"memoryRequirements"},{"@id":"http://schema.org/numberOfAirbags","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The number or type of airbags in the vehicle.","rdfs:label":"numberOfAirbags"},{"@id":"http://schema.org/Reservoir","@type":"rdfs:Class","rdfs:comment":"A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.","rdfs:label":"Reservoir","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/MusicEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Music event.","rdfs:label":"MusicEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/Store","@type":"rdfs:Class","rdfs:comment":"A retail good store.","rdfs:label":"Store","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/MonetaryAmount","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class=\"localLink\" href=\"http://schema.org/PriceSpecification\">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc.","rdfs:label":"MonetaryAmount","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/paymentMethodId","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Order"},{"@id":"http://schema.org/Invoice"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An identifier for the method of payment used (e.g. the last 4 digits of the credit card).","rdfs:label":"paymentMethodId"},{"@id":"http://schema.org/HairSalon","@type":"rdfs:Class","rdfs:comment":"A hair salon.","rdfs:label":"HairSalon","rdfs:subClassOf":{"@id":"http://schema.org/HealthAndBeautyBusiness"}},{"@id":"http://schema.org/isBasedOnUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/URL"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/isBasedOn"},"rdfs:comment":"A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.","rdfs:label":"isBasedOnUrl"},{"@id":"http://schema.org/webCheckinTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The time when a passenger can check into the flight online.","rdfs:label":"webCheckinTime"},{"@id":"http://schema.org/DaySpa","@type":"rdfs:Class","rdfs:comment":"A day spa.","rdfs:label":"DaySpa","rdfs:subClassOf":{"@id":"http://schema.org/HealthAndBeautyBusiness"}},{"@id":"http://schema.org/ownedThrough","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/OwnershipInfo"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date and time of giving up ownership on the product.","rdfs:label":"ownedThrough"},{"@id":"http://schema.org/mealService","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Description of the meals that will be provided or available for purchase.","rdfs:label":"mealService"},{"@id":"http://schema.org/EngineSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"rdfs:comment":"Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.","rdfs:label":"EngineSpecification","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/printPage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NewsArticle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).","rdfs:label":"printPage"},{"@id":"http://schema.org/discusses","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/UserComments"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"Specifies the CreativeWork associated with the UserComment.","rdfs:label":"discusses"},{"@id":"http://schema.org/messageAttachment","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Message"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"A CreativeWork attached to the message.","rdfs:label":"messageAttachment"},{"@id":"http://schema.org/ActivateAction","@type":"rdfs:Class","rdfs:comment":"The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).","rdfs:label":"ActivateAction","rdfs:subClassOf":{"@id":"http://schema.org/ControlAction"}},{"@id":"http://schema.org/timeRequired","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.","rdfs:label":"timeRequired"},{"@id":"http://schema.org/numberOfPages","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Book"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of pages in the book.","rdfs:label":"numberOfPages"},{"@id":"http://schema.org/RadioEpisode","@type":"rdfs:Class","rdfs:comment":"A radio episode which can be part of a series or season.","rdfs:label":"RadioEpisode","rdfs:subClassOf":{"@id":"http://schema.org/Episode"}},{"@id":"http://schema.org/ElementarySchool","@type":"rdfs:Class","rdfs:comment":"An elementary school.","rdfs:label":"ElementarySchool","rdfs:subClassOf":{"@id":"http://schema.org/EducationalOrganization"}},{"@id":"http://schema.org/translator","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.","rdfs:label":"translator"},{"@id":"http://schema.org/discount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Any discount applied (to an Order).","rdfs:label":"discount"},{"@id":"http://schema.org/ReplaceAction","@type":"rdfs:Class","rdfs:comment":"The act of editing a recipient by replacing an old object with a new object.","rdfs:label":"ReplaceAction","rdfs:subClassOf":{"@id":"http://schema.org/UpdateAction"}},{"@id":"http://schema.org/CreditCard","@type":"rdfs:Class","http://purl.org/dc/terms/source":[{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"}],"rdfs:comment":"<p>A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.</p>\n\n<p>Commonly used values:</p>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#AmericanExpress</li>\n<li>http://purl.org/goodrelations/v1#DinersClub</li>\n<li>http://purl.org/goodrelations/v1#Discover</li>\n<li>http://purl.org/goodrelations/v1#JCB</li>\n<li>http://purl.org/goodrelations/v1#MasterCard</li>\n<li>http://purl.org/goodrelations/v1#VISA</li>\n</ul>\n","rdfs:label":"CreditCard","rdfs:subClassOf":[{"@id":"http://schema.org/PaymentCard"},{"@id":"http://schema.org/LoanOrCredit"}]},{"@id":"http://schema.org/OpeningHoursSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A structured value providing information about the opening hours of a place or a certain service inside a place.</p>\n\n<p>The place is <strong>open</strong> if the <a class=\"localLink\" href=\"http://schema.org/opens\">opens</a> property is specified, and <strong>closed</strong> otherwise.</p>\n\n<p>If the value for the <a class=\"localLink\" href=\"http://schema.org/closes\">closes</a> property is less than the value for the <a class=\"localLink\" href=\"http://schema.org/opens\">opens</a> property then the hour range is assumed to span over the next day.","rdfs:label":"OpeningHoursSpecification","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/valueName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.","rdfs:label":"valueName"},{"@id":"http://schema.org/ItemListUnordered","@type":"http://schema.org/ItemListOrderType","rdfs:comment":"An ItemList ordered with no explicit order.","rdfs:label":"ItemListUnordered"},{"@id":"http://schema.org/servicePhone","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ServiceChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ContactPoint"},"rdfs:comment":"The phone number to use to access the service.","rdfs:label":"servicePhone"},{"@id":"http://schema.org/additionalNumberOfGuests","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/RsvpAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"If responding yes, the number of guests who will attend in addition to the invitee.","rdfs:label":"additionalNumberOfGuests"},{"@id":"http://schema.org/DislikeAction","@type":"rdfs:Class","rdfs:comment":"The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.","rdfs:label":"DislikeAction","rdfs:subClassOf":{"@id":"http://schema.org/ReactAction"}},{"@id":"http://schema.org/PlayAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/ListenAction\">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/WatchAction\">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li>\n</ul>\n","rdfs:label":"PlayAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/programName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ProgramMembership"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The program providing the membership.","rdfs:label":"programName"},{"@id":"http://schema.org/deliveryLeadTime","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.","rdfs:label":"deliveryLeadTime"},{"@id":"http://schema.org/issuedThrough","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Permit"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Service"},"rdfs:comment":"The service through with the permit was granted.","rdfs:label":"issuedThrough"},{"@id":"http://schema.org/TieAction","@type":"rdfs:Class","rdfs:comment":"The act of reaching a draw in a competitive activity.","rdfs:label":"TieAction","rdfs:subClassOf":{"@id":"http://schema.org/AchieveAction"}},{"@id":"http://schema.org/minimumPaymentDue","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Invoice"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/PriceSpecification"},{"@id":"http://schema.org/MonetaryAmount"}],"rdfs:comment":"The minimum payment required at this time.","rdfs:label":"minimumPaymentDue"},{"@id":"http://schema.org/Corporation","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},"rdfs:comment":"Organization: A business corporation.","rdfs:label":"Corporation","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/suggestedGender","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PeopleAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The gender of the person or audience.","rdfs:label":"suggestedGender"},{"@id":"http://schema.org/seatRow","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Seat"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The row location of the reserved seat (e.g., B).","rdfs:label":"seatRow"},{"@id":"http://schema.org/proteinContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of protein.","rdfs:label":"proteinContent"},{"@id":"http://schema.org/wordCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Article"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of words in the text of the Article.","rdfs:label":"wordCount"},{"@id":"http://schema.org/ItemList","@type":"rdfs:Class","rdfs:comment":"A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.","rdfs:label":"ItemList","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/DeliveryMethod","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"<p>A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.</p>\n\n<p>Commonly used values:</p>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>\n<li>http://purl.org/goodrelations/v1#DHL</li>\n<li>http://purl.org/goodrelations/v1#FederalExpress</li>\n<li>http://purl.org/goodrelations/v1#UPS</li>\n</ul>\n","rdfs:label":"DeliveryMethod","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/Winery","@type":"rdfs:Class","rdfs:comment":"A winery.","rdfs:label":"Winery","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/InformAction","@type":"rdfs:Class","rdfs:comment":"The act of notifying someone of information pertinent to them, with no expectation of a response.","rdfs:label":"InformAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/paymentAccepted","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LocalBusiness"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Cash, credit card, etc.","rdfs:label":"paymentAccepted"},{"@id":"http://schema.org/screenshot","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/ImageObject"}],"rdfs:comment":"A link to a screenshot image of the app.","rdfs:label":"screenshot"},{"@id":"http://schema.org/availabilityEnds","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The end of the availability of the product or service included in the offer.","rdfs:label":"availabilityEnds"},{"@id":"http://schema.org/requiredMaxAge","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PeopleAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"Audiences defined by a person's maximum age.","rdfs:label":"requiredMaxAge"},{"@id":"http://schema.org/ReturnAction","@type":"rdfs:Class","rdfs:comment":"The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).","rdfs:label":"ReturnAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/MeetingRoom","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Conference_hall\">http://en.wikipedia.org/wiki/Conference_hall</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"MeetingRoom","rdfs:subClassOf":{"@id":"http://schema.org/Room"}},{"@id":"http://schema.org/sodiumContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of milligrams of sodium.","rdfs:label":"sodiumContent"},{"@id":"http://schema.org/model","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Product"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ProductModel"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.","rdfs:label":"model"},{"@id":"http://schema.org/vehicleSeatingCapacity","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/QuantitativeValue"}],"rdfs:comment":"The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.</p>\n\n<p>Typical unit code(s): C62 for persons.","rdfs:label":"vehicleSeatingCapacity"},{"@id":"http://schema.org/SeatingMap","@type":"http://schema.org/MapCategoryType","rdfs:comment":"A seating map.","rdfs:label":"SeatingMap"},{"@id":"http://schema.org/OrderAction","@type":"rdfs:Class","rdfs:comment":"An agent orders an object/product/service to be delivered/sent.","rdfs:label":"OrderAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/StadiumOrArena","@type":"rdfs:Class","rdfs:comment":"A stadium.","rdfs:label":"StadiumOrArena","rdfs:subClassOf":[{"@id":"http://schema.org/CivicStructure"},{"@id":"http://schema.org/SportsActivityLocation"}]},{"@id":"http://schema.org/JoinAction","@type":"rdfs:Class","rdfs:comment":"<p>An agent joins an event/group with participants/friends at a location.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/RegisterAction\">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/SubscribeAction\">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/FollowAction\">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li>\n</ul>\n","rdfs:label":"JoinAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/OrderInTransit","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing that an order is in transit.","rdfs:label":"OrderInTransit"},{"@id":"http://schema.org/orderDelivery","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Order"},{"@id":"http://schema.org/OrderItem"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ParcelDelivery"},"rdfs:comment":"The delivery of the parcel related to this order or order item.","rdfs:label":"orderDelivery"},{"@id":"http://schema.org/containedInPlace","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/inverseOf":{"@id":"http://schema.org/containsPlace"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The basic containment relation between a place and one that contains it.","rdfs:label":"containedInPlace"},{"@id":"http://schema.org/color","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Product"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The color of the product.","rdfs:label":"color"},{"@id":"http://schema.org/DJMixAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"DJMixAlbum.","rdfs:label":"DJMixAlbum"},{"@id":"http://schema.org/SearchAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of searching for an object.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/FindAction\">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li>\n</ul>\n","rdfs:label":"SearchAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/HVACBusiness","@type":"rdfs:Class","rdfs:comment":"A business that provide Heating, Ventilation and Air Conditioning services.","rdfs:label":"HVACBusiness","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/TaxiStand","@type":"rdfs:Class","rdfs:comment":"A taxi stand.","rdfs:label":"TaxiStand","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/ProductModel","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A datasheet or vendor specification of a product (in the sense of a prototypical description).","rdfs:label":"ProductModel","rdfs:subClassOf":{"@id":"http://schema.org/Product"}},{"@id":"http://schema.org/CatholicChurch","@type":"rdfs:Class","rdfs:comment":"A Catholic church.","rdfs:label":"CatholicChurch","rdfs:subClassOf":{"@id":"http://schema.org/PlaceOfWorship"}},{"@id":"http://schema.org/serviceOperator","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GovernmentService"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.","rdfs:label":"serviceOperator"},{"@id":"http://schema.org/MovieClip","@type":"rdfs:Class","rdfs:comment":"A short segment/part of a movie.","rdfs:label":"MovieClip","rdfs:subClassOf":{"@id":"http://schema.org/Clip"}},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass","@type":"http://schema.org/Organization","rdfs:comment":"This class is derived from the GoodRelations Vocabulary for E-Commerce, created by Martin Hepp. GoodRelations is a data model for sharing e-commerce data on the Web that can be expressed in a variety of syntaxes, including RDFa and HTML5 Microdata. More information about GoodRelations can be found at <a href=\"http://purl.org/goodrelations/\">http://purl.org/goodrelations/</a>.","rdfs:label":"GoodRelationsClass"},{"@id":"http://schema.org/ActionStatusType","@type":"rdfs:Class","rdfs:comment":"The status of an Action.","rdfs:label":"ActionStatusType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/WriteAction","@type":"rdfs:Class","rdfs:comment":"The act of authoring written creative content.","rdfs:label":"WriteAction","rdfs:subClassOf":{"@id":"http://schema.org/CreateAction"}},{"@id":"http://schema.org/MusicAlbumProductionType","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"Classification of the album by it's type of content: soundtrack, live album, studio album, etc.","rdfs:label":"MusicAlbumProductionType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/experienceRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Description of skills and experience needed for the position.","rdfs:label":"experienceRequirements"},{"@id":"http://schema.org/ApplyAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of registering to an organization/service without the guarantee to receive it.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/RegisterAction\">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li>\n</ul>\n","rdfs:label":"ApplyAction","rdfs:subClassOf":{"@id":"http://schema.org/OrganizeAction"}},{"@id":"http://schema.org/countriesSupported","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.","rdfs:label":"countriesSupported"},{"@id":"http://schema.org/foodEstablishment","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CookAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/FoodEstablishment"},{"@id":"http://schema.org/Place"}],"rdfs:comment":"A sub property of location. The specific food establishment where the action occurred.","rdfs:label":"foodEstablishment","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/parents","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/parent"},"rdfs:comment":"A parents of the person.","rdfs:label":"parents"},{"@id":"http://schema.org/foundingDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date that this organization was founded.","rdfs:label":"foundingDate"},{"@id":"http://schema.org/departureGate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Identifier of the flight's departure gate.","rdfs:label":"departureGate"},{"@id":"http://schema.org/isRelatedTo","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Service"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/Product"}],"rdfs:comment":"A pointer to another, somehow related product (or multiple products).","rdfs:label":"isRelatedTo"},{"@id":"http://schema.org/worstRating","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Rating"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.","rdfs:label":"worstRating"},{"@id":"http://schema.org/thumbnailUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"A thumbnail image relevant to the Thing.","rdfs:label":"thumbnailUrl"},{"@id":"http://schema.org/availableChannel","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Service"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ServiceChannel"},"rdfs:comment":"A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).","rdfs:label":"availableChannel"},{"@id":"http://schema.org/hasMenuItem","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/MenuSection"},{"@id":"http://schema.org/Menu"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MenuItem"},"rdfs:comment":"A food or drink item contained in a menu or menu section.","rdfs:label":"hasMenuItem"},{"@id":"http://schema.org/cargoVolume","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.</p>\n\n<p>Typical unit code(s): LTR for liters, FTQ for cubic foot/feet</p>\n\n<p>Note: You can use <a class=\"localLink\" href=\"http://schema.org/minValue\">minValue</a> and <a class=\"localLink\" href=\"http://schema.org/maxValue\">maxValue</a> to indicate ranges.","rdfs:label":"cargoVolume"},{"@id":"http://schema.org/broadcaster","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BroadcastService"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"The organization owning or operating the broadcast service.","rdfs:label":"broadcaster"},{"@id":"http://schema.org/firstPerformance","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"rdfs:comment":"The date and place the work was first performed.","rdfs:label":"firstPerformance"},{"@id":"http://schema.org/Locksmith","@type":"rdfs:Class","rdfs:comment":"A locksmith.","rdfs:label":"Locksmith","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/Landform","@type":"rdfs:Class","rdfs:comment":"A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.","rdfs:label":"Landform","rdfs:subClassOf":{"@id":"http://schema.org/Place"}},{"@id":"http://schema.org/Discontinued","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item has been discontinued.","rdfs:label":"Discontinued"},{"@id":"http://schema.org/seatNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Seat"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The location of the reserved seat (e.g., 27).","rdfs:label":"seatNumber"},{"@id":"http://schema.org/hasPart","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/inverseOf":{"@id":"http://schema.org/isPartOf"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"Indicates a CreativeWork that is (in some sense) a part of this CreativeWork.","rdfs:label":"hasPart"},{"@id":"http://schema.org/Episode","@type":"rdfs:Class","rdfs:comment":"A media episode (e.g. TV, radio, video game) which can be part of a series or season.","rdfs:label":"Episode","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/OceanBodyOfWater","@type":"rdfs:Class","rdfs:comment":"An ocean (for example, the Pacific).","rdfs:label":"OceanBodyOfWater","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/MedicalOrganization","@type":"rdfs:Class","rdfs:comment":"A medical organization (physical or not), such as hospital, institution or clinic.","rdfs:label":"MedicalOrganization","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/employee","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"Someone working for this organization.","rdfs:label":"employee"},{"@id":"http://schema.org/warrantyPromise","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/SellAction"},{"@id":"http://schema.org/BuyAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/WarrantyPromise"},"http://schema.org/supersededBy":{"@id":"http://schema.org/warranty"},"rdfs:comment":"The warranty promise(s) included in the offer.","rdfs:label":"warrantyPromise"},{"@id":"http://schema.org/contactType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ContactPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.","rdfs:label":"contactType"},{"@id":"http://schema.org/productID","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Product"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The product identifier, such as ISBN. For example: <code>meta itemprop=\"productID\" content=\"isbn:123-456-789\"</code>.","rdfs:label":"productID","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/TrainReservation","@type":"rdfs:Class","rdfs:comment":"A reservation for train travel.</p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\"localLink\" href=\"http://schema.org/Offer\">Offer</a>.","rdfs:label":"TrainReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/passengerPriorityStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FlightReservation"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/QualitativeValue"}],"rdfs:comment":"The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).","rdfs:label":"passengerPriorityStatus"},{"@id":"http://schema.org/Online","@type":"http://schema.org/GameServerStatus","rdfs:comment":"Game server status: Online. Server is available.","rdfs:label":"Online"},{"@id":"http://schema.org/MusicVenue","@type":"rdfs:Class","rdfs:comment":"A music venue.","rdfs:label":"MusicVenue","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/transFatContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of trans fat.","rdfs:label":"transFatContent"},{"@id":"http://schema.org/comment","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/RsvpAction"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Comment"},"rdfs:comment":"Comments, typically from users.","rdfs:label":"comment"},{"@id":"http://schema.org/targetCollection","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/UpdateAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"A sub property of object. The collection target of the action.","rdfs:label":"targetCollection","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/nonEqual","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/QualitativeValue"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QualitativeValue"},"rdfs:comment":"This ordering relation for qualitative values indicates that the subject is not equal to the object.","rdfs:label":"nonEqual"},{"@id":"http://schema.org/numberOfEmployees","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/BusinessAudience"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The number of employees in an organization e.g. business.","rdfs:label":"numberOfEmployees"},{"@id":"http://schema.org/naics","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The North American Industry Classification System (NAICS) code for a particular organization or business person.","rdfs:label":"naics"},{"@id":"http://schema.org/hasPOS","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"Points-of-Sales operated by the organization or person.","rdfs:label":"hasPOS"},{"@id":"http://schema.org/Review","@type":"rdfs:Class","rdfs:comment":"A review of an item - for example, of a restaurant, movie, or store.","rdfs:label":"Review","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/dateReceived","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Message"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date/time the message was received if a single recipient exists.","rdfs:label":"dateReceived"},{"@id":"http://schema.org/previousItem","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ListItem"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ListItem"},"rdfs:comment":"A link to the ListItem that preceeds the current one.","rdfs:label":"previousItem"},{"@id":"http://schema.org/PostalAddress","@type":"rdfs:Class","rdfs:comment":"The mailing address.","rdfs:label":"PostalAddress","rdfs:subClassOf":{"@id":"http://schema.org/ContactPoint"}},{"@id":"http://schema.org/totalTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/HowTo"},{"@id":"http://schema.org/HowToDirection"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"The total time required to perform instructions or a direction (including time to prepare the supplies), in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 duration format</a>.","rdfs:label":"totalTime"},{"@id":"http://schema.org/parent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A parent of this person.","rdfs:label":"parent"},{"@id":"http://schema.org/softwareHelp","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"Software application help.","rdfs:label":"softwareHelp"},{"@id":"http://schema.org/entertainmentBusiness","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PerformAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/EntertainmentBusiness"},"rdfs:comment":"A sub property of location. The entertainment business where the action occurred.","rdfs:label":"entertainmentBusiness","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/ClaimReview","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://github.com/schemaorg/schemaorg/issues/1061"},"http://schema.org/category":"issue-1061","rdfs:comment":"A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).","rdfs:label":"ClaimReview","rdfs:subClassOf":{"@id":"http://schema.org/Review"}},{"@id":"http://schema.org/quest","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/Game"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"The task that a player-controlled character, or group of characters may complete in order to gain a reward.","rdfs:label":"quest"},{"@id":"http://schema.org/representativeOfPage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ImageObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Indicates whether this image is representative of the content of the page.","rdfs:label":"representativeOfPage"},{"@id":"http://schema.org/CollegeOrUniversity","@type":"rdfs:Class","rdfs:comment":"A college, university, or other third-level educational institution.","rdfs:label":"CollegeOrUniversity","rdfs:subClassOf":{"@id":"http://schema.org/EducationalOrganization"}},{"@id":"http://schema.org/articleBody","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Article"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The actual body of the article.","rdfs:label":"articleBody"},{"@id":"http://schema.org/previousStartDate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.","rdfs:label":"previousStartDate"},{"@id":"http://schema.org/orderedItem","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/OrderItem"},{"@id":"http://schema.org/Order"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/OrderItem"},{"@id":"http://schema.org/Product"}],"rdfs:comment":"The item ordered.","rdfs:label":"orderedItem"},{"@id":"http://schema.org/expectedArrivalUntil","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ParcelDelivery"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The latest date the package may arrive.","rdfs:label":"expectedArrivalUntil"},{"@id":"http://schema.org/Clip","@type":"rdfs:Class","rdfs:comment":"A short TV or radio program or a segment/part of a program.","rdfs:label":"Clip","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/Seat","@type":"rdfs:Class","rdfs:comment":"Used to describe a seat, such as a reserved seat in an event reservation.","rdfs:label":"Seat","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/OnlineFull","@type":"http://schema.org/GameServerStatus","rdfs:comment":"Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.","rdfs:label":"OnlineFull"},{"@id":"http://schema.org/softwareAddOn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/SoftwareApplication"},"rdfs:comment":"Additional content for a software application.","rdfs:label":"softwareAddOn"},{"@id":"http://schema.org/checkoutTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/LodgingBusiness"},{"@id":"http://schema.org/LodgingReservation"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The latest someone may check out of a lodging establishment.","rdfs:label":"checkoutTime"},{"@id":"http://schema.org/OnlineOnly","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item is available only online.","rdfs:label":"OnlineOnly"},{"@id":"http://schema.org/lodgingUnitType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LodgingReservation"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QualitativeValue"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Textual description of the unit type (including suite vs. room, size of bed, etc.).","rdfs:label":"lodgingUnitType"},{"@id":"http://schema.org/modifiedTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date and time the reservation was modified.","rdfs:label":"modifiedTime"},{"@id":"http://schema.org/encodingFormat","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"mp3, mpeg4, etc.","rdfs:label":"encodingFormat"},{"@id":"http://schema.org/thumbnail","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/ImageObject"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ImageObject"},"rdfs:comment":"Thumbnail image for an image or video.","rdfs:label":"thumbnail"},{"@id":"http://schema.org/WantAction","@type":"rdfs:Class","rdfs:comment":"The act of expressing a desire about the object. An agent wants an object.","rdfs:label":"WantAction","rdfs:subClassOf":{"@id":"http://schema.org/ReactAction"}},{"@id":"http://schema.org/review","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Brand"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Service"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Review"},"rdfs:comment":"A review of the item.","rdfs:label":"review"},{"@id":"http://schema.org/musicArrangement","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicComposition"},"rdfs:comment":"An arrangement derived from the composition.","rdfs:label":"musicArrangement"},{"@id":"http://schema.org/acceptedOffer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Offer"},"rdfs:comment":"The offer(s) -- e.g., product, quantity and price combinations -- included in the order.","rdfs:label":"acceptedOffer"},{"@id":"http://schema.org/ReadAction","@type":"rdfs:Class","rdfs:comment":"The act of consuming written content.","rdfs:label":"ReadAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/Specialty","@type":"rdfs:Class","rdfs:comment":"Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.","rdfs:label":"Specialty","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/TaxiService","@type":"rdfs:Class","rdfs:comment":"A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.","rdfs:label":"TaxiService","rdfs:subClassOf":{"@id":"http://schema.org/Service"}},{"@id":"http://schema.org/geographicArea","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Audience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/AdministrativeArea"},"rdfs:comment":"The geographic area associated with the audience.","rdfs:label":"geographicArea"},{"@id":"http://schema.org/ratingCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AggregateRating"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The count of total number of ratings.","rdfs:label":"ratingCount"},{"@id":"http://schema.org/foundingLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The place where the Organization was founded.","rdfs:label":"foundingLocation"},{"@id":"http://schema.org/OnSitePickup","@type":"http://schema.org/DeliveryMethod","rdfs:comment":"A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.","rdfs:label":"OnSitePickup"},{"@id":"http://schema.org/FailedActionStatus","@type":"http://schema.org/ActionStatusType","rdfs:comment":"An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.","rdfs:label":"FailedActionStatus"},{"@id":"http://schema.org/mainEntityOfPage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/inverseOf":{"@id":"http://schema.org/mainEntity"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/CreativeWork"}],"rdfs:comment":"Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.","rdfs:label":"mainEntityOfPage"},{"@id":"http://schema.org/ItemAvailability","@type":"rdfs:Class","rdfs:comment":"A list of possible product availability options.","rdfs:label":"ItemAvailability","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/publicAccess","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"A flag to signal that the <a class=\"localLink\" href=\"http://schema.org/Place\">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value","rdfs:label":"publicAccess"},{"@id":"http://schema.org/offerCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AggregateOffer"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of offers for the product.","rdfs:label":"offerCount"},{"@id":"http://schema.org/owns","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/OwnershipInfo"}],"rdfs:comment":"Products owned by the organization or person.","rdfs:label":"owns"},{"@id":"http://schema.org/reviewedBy","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"People or organizations that have reviewed the content on this web page for accuracy and/or completeness.","rdfs:label":"reviewedBy"},{"@id":"http://schema.org/totalPaymentDue","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Invoice"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/MonetaryAmount"},{"@id":"http://schema.org/PriceSpecification"}],"rdfs:comment":"The total amount due.","rdfs:label":"totalPaymentDue"},{"@id":"http://schema.org/illustrator","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Book"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"The illustrator of the book.","rdfs:label":"illustrator"},{"@id":"http://schema.org/ArtGallery","@type":"rdfs:Class","rdfs:comment":"An art gallery.","rdfs:label":"ArtGallery","rdfs:subClassOf":{"@id":"http://schema.org/EntertainmentBusiness"}},{"@id":"http://schema.org/primaryImageOfPage","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/ImageObject"},"rdfs:comment":"Indicates the main image on the page.","rdfs:label":"primaryImageOfPage"},{"@id":"http://schema.org/license","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"A license document that applies to this content, typically indicated by URL.","rdfs:label":"license"},{"@id":"http://schema.org/accessibilityControl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Identifies input methods that are sufficient to fully control the described resource (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).","rdfs:label":"accessibilityControl"},{"@id":"http://schema.org/targetPlatform","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/APIReference"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Type of app development: phone, Metro style, desktop, XBox, etc.","rdfs:label":"targetPlatform"},{"@id":"http://schema.org/musicReleaseFormat","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicRelease"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicReleaseFormatType"},"rdfs:comment":"Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).","rdfs:label":"musicReleaseFormat"},{"@id":"http://schema.org/busNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BusTrip"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The unique identifier for the bus.","rdfs:label":"busNumber"},{"@id":"http://schema.org/description","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/dc/terms/description"},"rdfs:comment":"A description of the item.","rdfs:label":"description"},{"@id":"http://schema.org/Plumber","@type":"rdfs:Class","rdfs:comment":"A plumbing service.","rdfs:label":"Plumber","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/Preschool","@type":"rdfs:Class","rdfs:comment":"A preschool.","rdfs:label":"Preschool","rdfs:subClassOf":{"@id":"http://schema.org/EducationalOrganization"}},{"@id":"http://schema.org/OrderCancelled","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing cancellation of an order.","rdfs:label":"OrderCancelled"},{"@id":"http://schema.org/RejectAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of rejecting to/adopting an object.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/AcceptAction\">AcceptAction</a>: The antonym of RejectAction.</li>\n</ul>\n","rdfs:label":"RejectAction","rdfs:subClassOf":{"@id":"http://schema.org/AllocateAction"}},{"@id":"http://schema.org/vehicleTransmission","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/QualitativeValue"}],"rdfs:comment":"The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) (\"gearbox\" for cars).","rdfs:label":"vehicleTransmission"},{"@id":"http://schema.org/encodings","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MediaObject"},"http://schema.org/supersededBy":{"@id":"http://schema.org/encoding"},"rdfs:comment":"A media object that encodes this CreativeWork.","rdfs:label":"encodings"},{"@id":"http://schema.org/GeoCircle","@type":"rdfs:Class","rdfs:comment":"A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape\n          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.\n          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.","rdfs:label":"GeoCircle","rdfs:subClassOf":{"@id":"http://schema.org/GeoShape"}},{"@id":"http://schema.org/dateVehicleFirstRegistered","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date of the first registration of the vehicle with the respective public authorities.","rdfs:label":"dateVehicleFirstRegistered"},{"@id":"http://schema.org/event","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/InformAction"},{"@id":"http://schema.org/LeaveAction"},{"@id":"http://schema.org/JoinAction"},{"@id":"http://schema.org/PlayAction"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/InviteAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Event"},"rdfs:comment":"Upcoming or past event associated with this place, organization, or action.","rdfs:label":"event"},{"@id":"http://schema.org/sport","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SportsOrganization"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"A type of sport (e.g. Baseball).","rdfs:label":"sport"},{"@id":"http://schema.org/reviewBody","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Review"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The actual body of the review.","rdfs:label":"reviewBody"},{"@id":"http://schema.org/purchaseDate","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Vehicle"},{"@id":"http://schema.org/Product"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date the item e.g. vehicle was purchased by the current owner.","rdfs:label":"purchaseDate"},{"@id":"http://schema.org/BusinessFunction","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"<p>The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.</p>\n\n<p>Commonly used values:</p>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>\n<li>http://purl.org/goodrelations/v1#Dispose</li>\n<li>http://purl.org/goodrelations/v1#LeaseOut</li>\n<li>http://purl.org/goodrelations/v1#Maintain</li>\n<li>http://purl.org/goodrelations/v1#ProvideService</li>\n<li>http://purl.org/goodrelations/v1#Repair</li>\n<li>http://purl.org/goodrelations/v1#Sell</li>\n<li>http://purl.org/goodrelations/v1#Buy</li>\n</ul>\n","rdfs:label":"BusinessFunction","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/departureTerminal","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Identifier of the flight's departure terminal.","rdfs:label":"departureTerminal"},{"@id":"http://schema.org/estimatedFlightDuration","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Duration"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The estimated time the flight will take.","rdfs:label":"estimatedFlightDuration"},{"@id":"http://schema.org/Female","@type":"http://schema.org/GenderType","rdfs:comment":"The female gender.","rdfs:label":"Female"},{"@id":"http://schema.org/Energy","@type":"rdfs:Class","rdfs:comment":"Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.","rdfs:label":"Energy","rdfs:subClassOf":{"@id":"http://schema.org/Quantity"}},{"@id":"http://schema.org/FurnitureStore","@type":"rdfs:Class","rdfs:comment":"A furniture store.","rdfs:label":"FurnitureStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/BusStop","@type":"rdfs:Class","rdfs:comment":"A bus stop.","rdfs:label":"BusStop","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/cookingMethod","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The method of cooking, such as Frying, Steaming, ...","rdfs:label":"cookingMethod"},{"@id":"http://schema.org/businessFunction","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/TypeAndQuantityNode"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BusinessFunction"},"rdfs:comment":"The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.","rdfs:label":"businessFunction"},{"@id":"http://schema.org/bookingTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date and time the reservation was booked.","rdfs:label":"bookingTime"},{"@id":"http://schema.org/MotorcycleRepair","@type":"rdfs:Class","rdfs:comment":"A motorcycle repair shop.","rdfs:label":"MotorcycleRepair","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/sampleType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareSourceCode"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/codeSampleType"},"rdfs:comment":"What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.","rdfs:label":"sampleType"},{"@id":"http://schema.org/OrderPaymentDue","@type":"http://schema.org/OrderStatus","rdfs:comment":"OrderStatus representing that payment is due on an order.","rdfs:label":"OrderPaymentDue"},{"@id":"http://schema.org/permitAudience","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Permit"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Audience"},"rdfs:comment":"The target audience for this permit.","rdfs:label":"permitAudience"},{"@id":"http://schema.org/postalCode","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/GeoCoordinates"},{"@id":"http://schema.org/PostalAddress"},{"@id":"http://schema.org/GeoShape"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The postal code. For example, 94043.","rdfs:label":"postalCode"},{"@id":"http://schema.org/resultComment","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CommentAction"},{"@id":"http://schema.org/ReplyAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Comment"},"rdfs:comment":"A sub property of result. The Comment created or sent as a result of this action.","rdfs:label":"resultComment","rdfs:subPropertyOf":{"@id":"http://schema.org/result"}},{"@id":"http://schema.org/GovernmentPermit","@type":"rdfs:Class","rdfs:comment":"A permit issued by a government agency.","rdfs:label":"GovernmentPermit","rdfs:subClassOf":{"@id":"http://schema.org/Permit"}},{"@id":"http://schema.org/InsertAction","@type":"rdfs:Class","rdfs:comment":"The act of adding at a specific location in an ordered collection.","rdfs:label":"InsertAction","rdfs:subClassOf":{"@id":"http://schema.org/AddAction"}},{"@id":"http://schema.org/eligibleCustomerType","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/BusinessEntityType"},"rdfs:comment":"The type(s) of customers for which the given offer is valid.","rdfs:label":"eligibleCustomerType"},{"@id":"http://schema.org/containsPlace","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/inverseOf":{"@id":"http://schema.org/containedInPlace"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"The basic containment relation between a place and another that it contains.","rdfs:label":"containsPlace"},{"@id":"http://schema.org/Resort","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Resort\">http://en.wikipedia.org/wiki/Resort</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Resort","rdfs:subClassOf":{"@id":"http://schema.org/LodgingBusiness"}},{"@id":"http://schema.org/disambiguatingDescription","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.","rdfs:label":"disambiguatingDescription","rdfs:subPropertyOf":{"@id":"http://schema.org/description"}},{"@id":"http://schema.org/AutoWash","@type":"rdfs:Class","rdfs:comment":"A car wash business.","rdfs:label":"AutoWash","rdfs:subClassOf":{"@id":"http://schema.org/AutomotiveBusiness"}},{"@id":"http://schema.org/productSupported","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ContactPoint"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\").","rdfs:label":"productSupported"},{"@id":"http://schema.org/userInteractionCount","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/InteractionCounter"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.","rdfs:label":"userInteractionCount"},{"@id":"http://schema.org/Invoice","@type":"rdfs:Class","rdfs:comment":"A statement of the money due for goods or services; a bill.","rdfs:label":"Invoice","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/Table","@type":"rdfs:Class","rdfs:comment":"A table on a Web page.","rdfs:label":"Table","rdfs:subClassOf":{"@id":"http://schema.org/WebPageElement"}},{"@id":"http://schema.org/language","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/WriteAction"},{"@id":"http://schema.org/CommunicateAction"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Language"},"http://schema.org/supersededBy":{"@id":"http://schema.org/inLanguage"},"rdfs:comment":"A sub property of instrument. The language used on this action.","rdfs:label":"language","rdfs:subPropertyOf":{"@id":"http://schema.org/instrument"}},{"@id":"http://schema.org/itemCondition","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/OfferItemCondition"},"rdfs:comment":"A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.","rdfs:label":"itemCondition"},{"@id":"http://schema.org/elevation","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/GeoCoordinates"},{"@id":"http://schema.org/GeoShape"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The elevation of a location (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).","rdfs:label":"elevation"},{"@id":"http://schema.org/URL","@type":"rdfs:Class","rdfs:comment":"Data type: URL.","rdfs:label":"URL","rdfs:subClassOf":{"@id":"http://schema.org/Text"}},{"@id":"http://schema.org/isBasedOn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.","rdfs:label":"isBasedOn"},{"@id":"http://schema.org/CompoundPriceSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. \"electricity\" or \"final cleaning\").","rdfs:label":"CompoundPriceSpecification","rdfs:subClassOf":{"@id":"http://schema.org/PriceSpecification"}},{"@id":"http://schema.org/PeopleAudience","@type":"rdfs:Class","rdfs:comment":"A set of characteristics belonging to people, e.g. who compose an item's target audience.","rdfs:label":"PeopleAudience","rdfs:subClassOf":{"@id":"http://schema.org/Audience"}},{"@id":"http://schema.org/availableThrough","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DeliveryEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"After this date, the item will no longer be available for pickup.","rdfs:label":"availableThrough"},{"@id":"http://schema.org/employmentType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).","rdfs:label":"employmentType"},{"@id":"http://schema.org/affiliation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"An organization that this person is affiliated with. For example, a school/university, a club, or a team.","rdfs:label":"affiliation","rdfs:subPropertyOf":{"@id":"http://schema.org/memberOf"}},{"@id":"http://schema.org/GovernmentOrganization","@type":"rdfs:Class","rdfs:comment":"A governmental organization or agency.","rdfs:label":"GovernmentOrganization","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/commentTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/UserComments"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Date"},{"@id":"http://schema.org/DateTime"}],"rdfs:comment":"The time at which the UserComment was made.","rdfs:label":"commentTime"},{"@id":"http://schema.org/InStoreOnly","@type":"http://schema.org/ItemAvailability","rdfs:comment":"Indicates that the item is available only at physical locations.","rdfs:label":"InStoreOnly"},{"@id":"http://schema.org/multipleValues","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Whether multiple values are allowed for the property.  Default is false.","rdfs:label":"multipleValues"},{"@id":"http://schema.org/founder","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A person who founded this organization.","rdfs:label":"founder"},{"@id":"http://schema.org/creator","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/UserComments"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.","rdfs:label":"creator"},{"@id":"http://schema.org/FoodEstablishmentReservation","@type":"rdfs:Class","rdfs:comment":"A reservation to dine at a food-related business.Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.","rdfs:label":"FoodEstablishmentReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/fiberContent","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Mass"},"rdfs:comment":"The number of grams of fiber.","rdfs:label":"fiberContent"},{"@id":"http://schema.org/rsvpResponse","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/RsvpAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/RsvpResponseType"},"rdfs:comment":"The response (yes, no, maybe) to the RSVP.","rdfs:label":"rsvpResponse"},{"@id":"http://schema.org/PaymentChargeSpecification","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"The costs of settling the payment using a particular payment method.","rdfs:label":"PaymentChargeSpecification","rdfs:subClassOf":{"@id":"http://schema.org/PriceSpecification"}},{"@id":"http://schema.org/itemOffered","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/Offer"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Service"}],"rdfs:comment":"The item being offered.","rdfs:label":"itemOffered"},{"@id":"http://schema.org/suggestedMinAge","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PeopleAudience"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"Minimal age recommended for viewing content.","rdfs:label":"suggestedMinAge"},{"@id":"http://schema.org/Saturday","@type":"http://schema.org/DayOfWeek","http://schema.org/sameAs":{"@id":"http://www.wikidata.org/entity/Q131"},"rdfs:comment":"The day of the week between Friday and Sunday.","rdfs:label":"Saturday"},{"@id":"http://schema.org/BusReservation","@type":"rdfs:Class","rdfs:comment":"A reservation for bus travel. </p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class=\"localLink\" href=\"http://schema.org/Offer\">Offer</a>.","rdfs:label":"BusReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/DVDFormat","@type":"http://schema.org/MusicReleaseFormatType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"DVDFormat.","rdfs:label":"DVDFormat"},{"@id":"http://schema.org/ticketedSeat","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Ticket"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Seat"},"rdfs:comment":"The seat associated with the ticket.","rdfs:label":"ticketedSeat"},{"@id":"http://schema.org/Taxi","@type":"rdfs:Class","http://schema.org/supersededBy":{"@id":"http://schema.org/TaxiService"},"rdfs:comment":"A taxi.","rdfs:label":"Taxi","rdfs:subClassOf":{"@id":"http://schema.org/Service"}},{"@id":"http://schema.org/calories","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Energy"},"rdfs:comment":"The number of calories.","rdfs:label":"calories"},{"@id":"http://schema.org/pickupLocation","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TaxiReservation"},{"@id":"http://schema.org/RentalCarReservation"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"Where a taxi will pick up a passenger or a rental car can be picked up.","rdfs:label":"pickupLocation"},{"@id":"http://schema.org/lowPrice","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AggregateOffer"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The lowest price of all offers available.","rdfs:label":"lowPrice"},{"@id":"http://schema.org/serviceType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Service"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The type of service being offered, e.g. veterans' benefits, emergency relief, etc.","rdfs:label":"serviceType"},{"@id":"http://schema.org/GroupBoardingPolicy","@type":"http://schema.org/BoardingPolicyType","rdfs:comment":"The airline boards by groups based on check-in time, priority, etc.","rdfs:label":"GroupBoardingPolicy"},{"@id":"http://schema.org/Physician","@type":"rdfs:Class","rdfs:comment":"A doctor's office.","rdfs:label":"Physician","rdfs:subClassOf":{"@id":"http://schema.org/MedicalOrganization"}},{"@id":"http://schema.org/RsvpResponseType","@type":"rdfs:Class","rdfs:comment":"RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.","rdfs:label":"RsvpResponseType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/releaseNotes","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Description of what changed in this version.","rdfs:label":"releaseNotes"},{"@id":"http://schema.org/scheduledTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PlanAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The time the object is scheduled to.","rdfs:label":"scheduledTime"},{"@id":"http://schema.org/carrierRequirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MobileApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).","rdfs:label":"carrierRequirements"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#IIT-CNR.it","@type":"http://schema.org/Organization","rdfs:comment":"This element is based on work by the Web Applications for the Future Internet Lab, Institute of Informatics and Telematics, Pisa, Italy.","rdfs:label":"IITCNRit"},{"@id":"http://schema.org/flightDistance","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Distance"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The distance of the flight.","rdfs:label":"flightDistance"},{"@id":"http://schema.org/OrderItem","@type":"rdfs:Class","rdfs:comment":"An order item is a line of an order. It includes the quantity and shipping details of a bought offer.","rdfs:label":"OrderItem","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/DayOfWeek","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.</p>\n\n<p>Originally, URLs from <a href=\"http://purl.org/goodrelations/v1\">GoodRelations</a> were used (for <a class=\"localLink\" href=\"http://schema.org/Monday\">Monday</a>, <a class=\"localLink\" href=\"http://schema.org/Tuesday\">Tuesday</a>, <a class=\"localLink\" href=\"http://schema.org/Wednesday\">Wednesday</a>, <a class=\"localLink\" href=\"http://schema.org/Thursday\">Thursday</a>, <a class=\"localLink\" href=\"http://schema.org/Friday\">Friday</a>, <a class=\"localLink\" href=\"http://schema.org/Saturday\">Saturday</a>, <a class=\"localLink\" href=\"http://schema.org/Sunday\">Sunday</a> plus a special entry for <a class=\"localLink\" href=\"http://schema.org/PublicHolidays\">PublicHolidays</a>); these have now been integrated directly into schema.org.","rdfs:label":"DayOfWeek","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/courseCode","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Course"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The identifier for the <a class=\"localLink\" href=\"http://schema.org/Course\">Course</a> used by the course <a class=\"localLink\" href=\"http://schema.org/provider\">provider</a> (e.g. CS101 or 6.001).","rdfs:label":"courseCode"},{"@id":"http://schema.org/BusinessEntityType","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"<p>A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.</p>\n\n<p>Commonly used values:</p>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#Business</li>\n<li>http://purl.org/goodrelations/v1#Enduser</li>\n<li>http://purl.org/goodrelations/v1#PublicInstitution</li>\n<li>http://purl.org/goodrelations/v1#Reseller</li>\n</ul>\n","rdfs:label":"BusinessEntityType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/polygon","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoShape"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.","rdfs:label":"polygon"},{"@id":"http://schema.org/TipAction","@type":"rdfs:Class","rdfs:comment":"The act of giving money voluntarily to a beneficiary in recognition of services rendered.","rdfs:label":"TipAction","rdfs:subClassOf":{"@id":"http://schema.org/TradeAction"}},{"@id":"http://schema.org/HowToDirection","@type":"rdfs:Class","rdfs:comment":"A direction indicating a single action to do in the instructions for how to achieve a result.","rdfs:label":"HowToDirection","rdfs:subClassOf":{"@id":"http://schema.org/ListItem"}},{"@id":"http://schema.org/offeredBy","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Offer"},"http://schema.org/inverseOf":{"@id":"http://schema.org/makesOffer"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"A pointer to the organization or person making the offer.","rdfs:label":"offeredBy"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_LRMIClass","@type":"http://schema.org/Organization","rdfs:comment":"This class is based on the work of the LRMI project, see lrmi.net for details.","rdfs:label":"LRMIClass"},{"@id":"http://schema.org/Apartment","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Apartment\">http://en.wikipedia.org/wiki/Apartment</a>).","rdfs:label":"Apartment","rdfs:subClassOf":{"@id":"http://schema.org/Accommodation"}},{"@id":"http://schema.org/NoteDigitalDocument","@type":"rdfs:Class","rdfs:comment":"A file containing a note, primarily for the author.","rdfs:label":"NoteDigitalDocument","rdfs:subClassOf":{"@id":"http://schema.org/DigitalDocument"}},{"@id":"http://schema.org/Service","@type":"rdfs:Class","rdfs:comment":"A service provided by an organization, e.g. delivery service, print services, etc.","rdfs:label":"Service","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/supply","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/HowToDirection"},{"@id":"http://schema.org/HowTo"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/HowToSupply"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"A sub-property of instrument. A supply consumed when performing instructions or a direction.","rdfs:label":"supply","rdfs:subPropertyOf":{"@id":"http://schema.org/instrument"}},{"@id":"http://schema.org/error","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Action"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"For failed actions, more information on the cause of the failure.","rdfs:label":"error"},{"@id":"http://schema.org/Campground","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A camping site, campsite, or campground is a place used for overnight stay in the outdoors. In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or parks a camper; a campground may contain many campsites (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Campsite\">http://en.wikipedia.org/wiki/Campsite</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Campground","rdfs:subClassOf":[{"@id":"http://schema.org/LodgingBusiness"},{"@id":"http://schema.org/CivicStructure"}]},{"@id":"http://schema.org/validIn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Permit"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/AdministrativeArea"},"rdfs:comment":"The geographic area where the permit is valid.","rdfs:label":"validIn"},{"@id":"http://schema.org/PaymentDeclined","@type":"http://schema.org/PaymentStatusType","rdfs:comment":"The payee received the payment, but it was declined for some reason.","rdfs:label":"PaymentDeclined"},{"@id":"http://schema.org/TennisComplex","@type":"rdfs:Class","rdfs:comment":"A tennis complex.","rdfs:label":"TennisComplex","rdfs:subClassOf":{"@id":"http://schema.org/SportsActivityLocation"}},{"@id":"http://schema.org/afterMedia","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/HowToDirection"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MediaObject"},"rdfs:comment":"A media object representing the circumstances after performing this direction.","rdfs:label":"afterMedia"},{"@id":"http://schema.org/Thing","@type":"rdfs:Class","rdfs:comment":"The most generic type of item.","rdfs:label":"Thing"},{"@id":"http://schema.org/duringMedia","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/HowToDirection"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MediaObject"},"rdfs:comment":"A media object representing the circumstances while performing this direction.","rdfs:label":"duringMedia"},{"@id":"http://schema.org/workPresented","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ScreeningEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Movie"},"rdfs:comment":"The movie presented during this event.","rdfs:label":"workPresented","rdfs:subPropertyOf":{"@id":"http://schema.org/workFeatured"}},{"@id":"http://schema.org/SubwayStation","@type":"rdfs:Class","rdfs:comment":"A subway station.","rdfs:label":"SubwayStation","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/supportingData","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DataFeed"},"rdfs:comment":"Supporting data for a SoftwareApplication.","rdfs:label":"supportingData"},{"@id":"http://schema.org/discountCurrency","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The currency (in 3-letter ISO 4217 format) of the discount.","rdfs:label":"discountCurrency"},{"@id":"http://schema.org/availableFrom","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DeliveryEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"When the item is available for pickup from the store, locker, etc.","rdfs:label":"availableFrom"},{"@id":"http://schema.org/highPrice","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AggregateOffer"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The highest price of all offers available.","rdfs:label":"highPrice"},{"@id":"http://schema.org/VenueMap","@type":"http://schema.org/MapCategoryType","rdfs:comment":"A venue map (e.g. for malls, auditoriums, museums, etc.).","rdfs:label":"VenueMap"},{"@id":"http://schema.org/publishingPrinciples","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"The publishingPrinciples property indicates (typically via <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a>) a document describing the editorial principles of an <a class=\"localLink\" href=\"http://schema.org/Organization\">Organization</a> (or individual e.g. a <a class=\"localLink\" href=\"http://schema.org/Person\">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class=\"localLink\" href=\"http://schema.org/CreativeWork\">CreativeWork</a> (e.g. <a class=\"localLink\" href=\"http://schema.org/NewsArticle\">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class=\"localLink\" href=\"http://schema.org/CreativeWork\">CreativeWork</a>.</p>\n\n<p>While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class=\"localLink\" href=\"http://schema.org/funder\">funder</a>) can be expressed using schema.org terminology.","rdfs:label":"publishingPrinciples"},{"@id":"http://schema.org/sponsor","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.","rdfs:label":"sponsor"},{"@id":"http://schema.org/producer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).","rdfs:label":"producer"},{"@id":"http://schema.org/productionDate","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Vehicle"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The date of production of the item, e.g. vehicle.","rdfs:label":"productionDate"},{"@id":"http://schema.org/interactionType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/InteractionCounter"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Action"},"rdfs:comment":"The Action representing the type of interaction. For up votes, +1s, etc. use <a class=\"localLink\" href=\"http://schema.org/LikeAction\">LikeAction</a>. For down votes use <a class=\"localLink\" href=\"http://schema.org/DislikeAction\">DislikeAction</a>. Otherwise, use the most specific Action.","rdfs:label":"interactionType"},{"@id":"http://schema.org/Courthouse","@type":"rdfs:Class","rdfs:comment":"A courthouse.","rdfs:label":"Courthouse","rdfs:subClassOf":{"@id":"http://schema.org/GovernmentBuilding"}},{"@id":"http://schema.org/lyrics","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"The words in the song.","rdfs:label":"lyrics"},{"@id":"http://schema.org/ReservationStatusType","@type":"rdfs:Class","rdfs:comment":"Enumerated status values for Reservation.","rdfs:label":"ReservationStatusType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/jobLocation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"A (typically single) geographic location associated with the job position.","rdfs:label":"jobLocation"},{"@id":"http://schema.org/arrivalTerminal","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Identifier of the flight's arrival terminal.","rdfs:label":"arrivalTerminal"},{"@id":"http://schema.org/mentions","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.","rdfs:label":"mentions"},{"@id":"http://schema.org/Researcher","@type":"http://schema.org/Audience","rdfs:comment":"Researchers.","rdfs:label":"Researcher"},{"@id":"http://schema.org/HardwareStore","@type":"rdfs:Class","rdfs:comment":"A hardware store.","rdfs:label":"HardwareStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/geoMidpoint","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GeoCircle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/GeoCoordinates"},"rdfs:comment":"Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle.","rdfs:label":"geoMidpoint"},{"@id":"http://schema.org/AskAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of posing a question / favor to someone.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/ReplyAction\">ReplyAction</a>: Appears generally as a response to AskAction.</li>\n</ul>\n","rdfs:label":"AskAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/numberOfPlayers","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Game"},{"@id":"http://schema.org/VideoGameSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"Indicate how many people can play this game (minimum, maximum, or range).","rdfs:label":"numberOfPlayers"},{"@id":"http://schema.org/CommentPermission","@type":"http://schema.org/DigitalDocumentPermissionType","rdfs:comment":"Permission to add comments to the document.","rdfs:label":"CommentPermission"},{"@id":"http://schema.org/Barcode","@type":"rdfs:Class","rdfs:comment":"An image of a visual machine-readable code such as a barcode or QR code.","rdfs:label":"Barcode","rdfs:subClassOf":{"@id":"http://schema.org/ImageObject"}},{"@id":"http://schema.org/dateDeleted","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DataFeedItem"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The datetime the item was removed from the DataFeed.","rdfs:label":"dateDeleted"},{"@id":"http://schema.org/isicV4","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.","rdfs:label":"isicV4"},{"@id":"http://schema.org/VisualArtsEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Visual arts event.","rdfs:label":"VisualArtsEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/TrackAction","@type":"rdfs:Class","rdfs:comment":"<p>An agent tracks an object for updates.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/FollowAction\">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/SubscribeAction\">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li>\n</ul>\n","rdfs:label":"TrackAction","rdfs:subClassOf":{"@id":"http://schema.org/FindAction"}},{"@id":"http://schema.org/departureAirport","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Flight"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Airport"},"rdfs:comment":"The airport where the flight originates.","rdfs:label":"departureAirport"},{"@id":"http://schema.org/numAdults","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LodgingReservation"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/Integer"}],"rdfs:comment":"The number of adults staying in the unit.","rdfs:label":"numAdults"},{"@id":"http://schema.org/DanceGroup","@type":"rdfs:Class","rdfs:comment":"A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.","rdfs:label":"DanceGroup","rdfs:subClassOf":{"@id":"http://schema.org/PerformingGroup"}},{"@id":"http://schema.org/BeautySalon","@type":"rdfs:Class","rdfs:comment":"Beauty salon.","rdfs:label":"BeautySalon","rdfs:subClassOf":{"@id":"http://schema.org/HealthAndBeautyBusiness"}},{"@id":"http://schema.org/valueAddedTaxIncluded","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/PriceSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.","rdfs:label":"valueAddedTaxIncluded"},{"@id":"http://schema.org/acquiredFrom","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/OwnershipInfo"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"The organization or person from which the product was acquired.","rdfs:label":"acquiredFrom"},{"@id":"http://schema.org/CommunicateAction","@type":"rdfs:Class","rdfs:comment":"The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.","rdfs:label":"CommunicateAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/MenuItem","@type":"rdfs:Class","rdfs:comment":"A food or drink item listed in a menu or menu section.","rdfs:label":"MenuItem","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/openingHours","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/LocalBusiness"},{"@id":"http://schema.org/CivicStructure"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"<p>The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.</p>\n\n<ul>\n<li>Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>\n<li>Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. </li>\n<li>Here is an example: <code>&lt;time itemprop=\"openingHours\" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.</li>\n<li>If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.</li>\n</ul>\n","rdfs:label":"openingHours"},{"@id":"http://schema.org/CurrencyConversionService","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},"rdfs:comment":"A service to convert funds from one currency to another currency.","rdfs:label":"CurrencyConversionService","rdfs:subClassOf":{"@id":"http://schema.org/FinancialProduct"}},{"@id":"http://schema.org/RoofingContractor","@type":"rdfs:Class","rdfs:comment":"A roofing contractor.","rdfs:label":"RoofingContractor","rdfs:subClassOf":{"@id":"http://schema.org/HomeAndConstructionBusiness"}},{"@id":"http://schema.org/numTracks","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicPlaylist"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of tracks in this album or playlist.","rdfs:label":"numTracks"},{"@id":"http://schema.org/expectsAcceptanceOf","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ConsumeAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Offer"},"rdfs:comment":"An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.","rdfs:label":"expectsAcceptanceOf"},{"@id":"http://schema.org/game","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GameServer"},"http://schema.org/inverseOf":{"@id":"http://schema.org/gameServer"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/VideoGame"},"rdfs:comment":"Video game which is played on this server.","rdfs:label":"game"},{"@id":"http://schema.org/tracks","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/MusicPlaylist"},{"@id":"http://schema.org/MusicGroup"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicRecording"},"http://schema.org/supersededBy":{"@id":"http://schema.org/track"},"rdfs:comment":"A music recording (track)&#x2014;usually a single song.","rdfs:label":"tracks"},{"@id":"http://schema.org/GovernmentService","@type":"rdfs:Class","rdfs:comment":"A service provided by a government organization, e.g. food stamps, veterans benefits, etc.","rdfs:label":"GovernmentService","rdfs:subClassOf":{"@id":"http://schema.org/Service"}},{"@id":"http://schema.org/DeliveryEvent","@type":"rdfs:Class","rdfs:comment":"An event involving the delivery of an item.","rdfs:label":"DeliveryEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/LowSaltDiet","@type":"http://schema.org/RestrictedDiet","rdfs:comment":"A diet focused on reduced sodium intake.","rdfs:label":"LowSaltDiet"},{"@id":"http://schema.org/acceptsReservations","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/FoodEstablishment"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/URL"},{"@id":"http://schema.org/Boolean"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>.","rdfs:label":"acceptsReservations"},{"@id":"http://schema.org/lesserOrEqual","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/QualitativeValue"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QualitativeValue"},"rdfs:comment":"This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.","rdfs:label":"lesserOrEqual"},{"@id":"http://schema.org/requiredQuantity","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/HowToItem"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Number"},{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The required quantity of the item(s).","rdfs:label":"requiredQuantity"},{"@id":"http://schema.org/location","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Action"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Event"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/PostalAddress"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The location of for example where the event is happening, an organization is located, or where an action takes place.","rdfs:label":"location"},{"@id":"http://schema.org/toRecipient","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Message"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Audience"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"A sub property of recipient. The recipient who was directly sent the message.","rdfs:label":"toRecipient","rdfs:subPropertyOf":{"@id":"http://schema.org/recipient"}},{"@id":"http://schema.org/billingIncrement","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/UnitPriceSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Number"},"rdfs:comment":"This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.","rdfs:label":"billingIncrement"},{"@id":"http://schema.org/maps","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"http://schema.org/supersededBy":{"@id":"http://schema.org/hasMap"},"rdfs:comment":"A URL to a map of the place.","rdfs:label":"maps"},{"@id":"http://schema.org/currenciesAccepted","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LocalBusiness"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The currency accepted (in <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217 currency format</a>).","rdfs:label":"currenciesAccepted"},{"@id":"http://schema.org/encodingType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EntryPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The supported encoding type(s) for an EntryPoint request.","rdfs:label":"encodingType"},{"@id":"http://schema.org/FollowAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/BefriendAction\">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is <em>not</em> necessarily reciprocal.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/SubscribeAction\">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/RegisterAction\">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/JoinAction\">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/TrackAction\">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li>\n</ul>\n","rdfs:label":"FollowAction","rdfs:subClassOf":{"@id":"http://schema.org/InteractAction"}},{"@id":"http://schema.org/eligibleDuration","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The duration for which the given offer is valid.","rdfs:label":"eligibleDuration"},{"@id":"http://schema.org/ChildrensEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Children's event.","rdfs:label":"ChildrensEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/exerciseCourse","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ExerciseAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"rdfs:comment":"A sub property of location. The course where this action was taken.","rdfs:label":"exerciseCourse","rdfs:subPropertyOf":{"@id":"http://schema.org/location"}},{"@id":"http://schema.org/RVPark","@type":"rdfs:Class","rdfs:comment":"A place offering space for \"Recreational Vehicles\", Caravans, mobile homes and the like.","rdfs:label":"RVPark","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/TransitMap","@type":"http://schema.org/MapCategoryType","rdfs:comment":"A transit map.","rdfs:label":"TransitMap"},{"@id":"http://schema.org/DateTime","@type":["rdfs:Class","http://schema.org/DataType"],"rdfs:comment":"A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).","rdfs:label":"DateTime"},{"@id":"http://schema.org/ownedFrom","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/OwnershipInfo"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date and time of obtaining the product.","rdfs:label":"ownedFrom"},{"@id":"http://schema.org/SingleFamilyResidence","@type":"rdfs:Class","rdfs:comment":"Residence type: Single-family home.","rdfs:label":"SingleFamilyResidence","rdfs:subClassOf":{"@id":"http://schema.org/House"}},{"@id":"http://schema.org/caption","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/ImageObject"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The caption for this object.","rdfs:label":"caption"},{"@id":"http://schema.org/CompletedActionStatus","@type":"http://schema.org/ActionStatusType","rdfs:comment":"An action that has already taken place.","rdfs:label":"CompletedActionStatus"},{"@id":"http://schema.org/ActiveActionStatus","@type":"http://schema.org/ActionStatusType","rdfs:comment":"An in-progress action (e.g, while watching the movie, or driving to a location).","rdfs:label":"ActiveActionStatus"},{"@id":"http://schema.org/DataCatalog","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass"},"http://www.w3.org/2002/07/owl#equivalentClass":{"@id":"http://www.w3.org/ns/dcat#Catalog"},"rdfs:comment":"A collection of datasets.","rdfs:label":"DataCatalog","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/acceptedPaymentMethod","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/LoanOrCredit"},{"@id":"http://schema.org/PaymentMethod"}],"rdfs:comment":"The payment method(s) accepted by seller for this offer.","rdfs:label":"acceptedPaymentMethod"},{"@id":"http://schema.org/significantLinks","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"http://schema.org/supersededBy":{"@id":"http://schema.org/significantLink"},"rdfs:comment":"The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.","rdfs:label":"significantLinks"},{"@id":"http://schema.org/WholesaleStore","@type":"rdfs:Class","rdfs:comment":"A wholesale store.","rdfs:label":"WholesaleStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/BroadcastEvent","@type":"rdfs:Class","rdfs:comment":"An over the air or online broadcast event.","rdfs:label":"BroadcastEvent","rdfs:subClassOf":{"@id":"http://schema.org/PublicationEvent"}},{"@id":"http://schema.org/servingSize","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NutritionInformation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The serving size, in terms of the number of volume or mass.","rdfs:label":"servingSize"},{"@id":"http://schema.org/RentalCarReservation","@type":"rdfs:Class","rdfs:comment":"A reservation for a rental car.</p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.","rdfs:label":"RentalCarReservation","rdfs:subClassOf":{"@id":"http://schema.org/Reservation"}},{"@id":"http://schema.org/DepartmentStore","@type":"rdfs:Class","rdfs:comment":"A department store.","rdfs:label":"DepartmentStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/recordedIn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/inverseOf":{"@id":"http://schema.org/recordedAt"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CreativeWork"},"rdfs:comment":"The CreativeWork that captured all or part of this Event.","rdfs:label":"recordedIn"},{"@id":"http://schema.org/brand","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Product"},{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Service"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Brand"}],"rdfs:comment":"The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.","rdfs:label":"brand"},{"@id":"http://schema.org/dateCreated","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/DataFeedItem"},{"@id":"http://schema.org/CreativeWork"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Date"},{"@id":"http://schema.org/DateTime"}],"rdfs:comment":"The date on which the CreativeWork was created or the item was added to a DataFeed.","rdfs:label":"dateCreated"},{"@id":"http://schema.org/musicGroupMember","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicGroup"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/member"},"rdfs:comment":"A member of a music group&#x2014;for example, John, Paul, George, or Ringo.","rdfs:label":"musicGroupMember"},{"@id":"http://schema.org/honorificSuffix","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.","rdfs:label":"honorificSuffix"},{"@id":"http://schema.org/OrganizationRole","@type":"rdfs:Class","rdfs:comment":"A subclass of Role used to describe roles within organizations.","rdfs:label":"OrganizationRole","rdfs:subClassOf":{"@id":"http://schema.org/Role"}},{"@id":"http://schema.org/reservationId","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A unique identifier for the reservation.","rdfs:label":"reservationId"},{"@id":"http://schema.org/SkiResort","@type":"rdfs:Class","rdfs:comment":"A ski resort.","rdfs:label":"SkiResort","rdfs:subClassOf":{"@id":"http://schema.org/SportsActivityLocation"}},{"@id":"http://schema.org/AutomatedTeller","@type":"rdfs:Class","rdfs:comment":"ATM/cash machine.","rdfs:label":"AutomatedTeller","rdfs:subClassOf":{"@id":"http://schema.org/FinancialService"}},{"@id":"http://schema.org/Canal","@type":"rdfs:Class","rdfs:comment":"A canal, like the Panama Canal.","rdfs:label":"Canal","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/numberOfRooms","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/House"},{"@id":"http://schema.org/Accommodation"},{"@id":"http://schema.org/Suite"},{"@id":"http://schema.org/SingleFamilyResidence"},{"@id":"http://schema.org/Apartment"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/Number"}],"rdfs:comment":"The number of rooms (excluding bathrooms and closets) of the acccommodation or lodging business.\nTypical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.","rdfs:label":"numberOfRooms"},{"@id":"http://schema.org/NGO","@type":"rdfs:Class","rdfs:comment":"Organization: Non-governmental Organization.","rdfs:label":"NGO","rdfs:subClassOf":{"@id":"http://schema.org/Organization"}},{"@id":"http://schema.org/TVSeries","@type":"rdfs:Class","rdfs:comment":"CreativeWorkSeries dedicated to TV broadcast and associated online delivery.","rdfs:label":"TVSeries","rdfs:subClassOf":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/CreativeWorkSeries"}]},{"@id":"http://schema.org/AdministrativeArea","@type":"rdfs:Class","rdfs:comment":"A geographical region, typically under the jurisdiction of a particular government.","rdfs:label":"AdministrativeArea","rdfs:subClassOf":{"@id":"http://schema.org/Place"}},{"@id":"http://schema.org/vatID","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The Value-added Tax ID of the organization or person.","rdfs:label":"vatID"},{"@id":"http://schema.org/departureTime","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/TrainTrip"},{"@id":"http://schema.org/BusTrip"},{"@id":"http://schema.org/Flight"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The expected departure time.","rdfs:label":"departureTime"},{"@id":"http://schema.org/BarOrPub","@type":"rdfs:Class","rdfs:comment":"A bar or pub.","rdfs:label":"BarOrPub","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/Float","@type":"rdfs:Class","rdfs:comment":"Data type: Floating number.","rdfs:label":"Float","rdfs:subClassOf":{"@id":"http://schema.org/Number"}},{"@id":"http://schema.org/DataType","@type":"rdfs:Class","rdfs:comment":"The basic data types such as Integers, Strings, etc.","rdfs:label":"DataType","rdfs:subClassOf":{"@id":"rdfs:Class"}},{"@id":"http://schema.org/playersOnline","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GameServer"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"Number of players on the server.","rdfs:label":"playersOnline"},{"@id":"http://schema.org/referenceQuantity","@type":"rdf:Property","http://purl.org/dc/terms/source":[{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsProperties"}],"http://schema.org/domainIncludes":{"@id":"http://schema.org/UnitPriceSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QuantitativeValue"},"rdfs:comment":"The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.","rdfs:label":"referenceQuantity"},{"@id":"http://schema.org/nationality","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Country"},"rdfs:comment":"Nationality of the person.","rdfs:label":"nationality"},{"@id":"http://schema.org/SuspendAction","@type":"rdfs:Class","rdfs:comment":"The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).","rdfs:label":"SuspendAction","rdfs:subClassOf":{"@id":"http://schema.org/ControlAction"}},{"@id":"http://schema.org/Distance","@type":"rdfs:Class","rdfs:comment":"Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.","rdfs:label":"Distance","rdfs:subClassOf":{"@id":"http://schema.org/Quantity"}},{"@id":"http://schema.org/MusicPlaylist","@type":"rdfs:Class","rdfs:comment":"A collection of music tracks in playlist form.","rdfs:label":"MusicPlaylist","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/educationalFramework","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/AlignmentObject"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The framework to which the resource being described is aligned.","rdfs:label":"educationalFramework"},{"@id":"http://schema.org/actors","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Movie"},{"@id":"http://schema.org/Episode"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/VideoGame"},{"@id":"http://schema.org/VideoObject"},{"@id":"http://schema.org/Clip"},{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/RadioSeries"},{"@id":"http://schema.org/MovieSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/supersededBy":{"@id":"http://schema.org/actor"},"rdfs:comment":"An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.","rdfs:label":"actors"},{"@id":"http://schema.org/title","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The title of the job.","rdfs:label":"title"},{"@id":"http://schema.org/QuantitativeValue","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A point value or interval for product characteristics and other purposes.","rdfs:label":"QuantitativeValue","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/unitText","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/PropertyValue"},{"@id":"http://schema.org/TypeAndQuantityNode"},{"@id":"http://schema.org/UnitPriceSpecification"},{"@id":"http://schema.org/QuantitativeValue"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.","rdfs:label":"unitText"},{"@id":"http://schema.org/releaseDate","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Product"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"The release date of a product or product model. This can be used to distinguish the exact variant of a product.","rdfs:label":"releaseDate"},{"@id":"http://schema.org/proficiencyLevel","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/TechArticle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Proficiency needed for this content; expected values: 'Beginner', 'Expert'.","rdfs:label":"proficiencyLevel"},{"@id":"http://schema.org/accountId","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Invoice"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The identifier for the account the payment will be applied to.","rdfs:label":"accountId","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/BedDetails","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also <a class=\"localLink\" href=\"http://schema.org/BedType\">BedType</a> (under development).","rdfs:label":"BedDetails","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange","@type":"http://schema.org/Organization","rdfs:comment":"The Question/Answer types were <a href=\"https://www.w3.org/wiki/WebSchemas/QASchemaResearch\">based on</a> the Stack Overflow API.","rdfs:label":"Stack Exchange"},{"@id":"http://schema.org/iswcCode","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The International Standard Musical Work Code for the composition.","rdfs:label":"iswcCode"},{"@id":"http://schema.org/greaterOrEqual","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/QualitativeValue"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/QualitativeValue"},"rdfs:comment":"This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.","rdfs:label":"greaterOrEqual"},{"@id":"http://schema.org/False","@type":"http://schema.org/Boolean","rdfs:comment":"The boolean value false.","rdfs:label":"False"},{"@id":"http://schema.org/OwnershipInfo","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsClass"},"rdfs:comment":"A structured value providing information about when a certain organization or person owned a certain product.","rdfs:label":"OwnershipInfo","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/episode","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/VideoGameSeries"},{"@id":"http://schema.org/TVSeries"},{"@id":"http://schema.org/CreativeWorkSeason"},{"@id":"http://schema.org/RadioSeries"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Episode"},"rdfs:comment":"An episode of a tv, radio or game media within a series or season.","rdfs:label":"episode","rdfs:subPropertyOf":{"@id":"http://schema.org/hasPart"}},{"@id":"http://schema.org/MensClothingStore","@type":"rdfs:Class","rdfs:comment":"A men's clothing store.","rdfs:label":"MensClothingStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/AcceptAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of committing to/adopting an object.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/RejectAction\">RejectAction</a>: The antonym of AcceptAction.</li>\n</ul>\n","rdfs:label":"AcceptAction","rdfs:subClassOf":{"@id":"http://schema.org/AllocateAction"}},{"@id":"http://schema.org/ItemPage","@type":"rdfs:Class","rdfs:comment":"A page devoted to a single item, such as a particular product or hotel.","rdfs:label":"ItemPage","rdfs:subClassOf":{"@id":"http://schema.org/WebPage"}},{"@id":"http://schema.org/Language","@type":"rdfs:Class","rdfs:comment":"Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href=\"https://en.wikipedia.org/wiki/IETF_language_tag\">BCP 47</a> can be used via the <a class=\"localLink\" href=\"http://schema.org/alternateName\">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class=\"localLink\" href=\"http://schema.org/ComputerLanguage\">ComputerLanguage</a>.","rdfs:label":"Language","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/leiCode","@type":"rdf:Property","http://purl.org/dc/terms/source":[{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#FIBO"},{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#GLEIF"}],"http://schema.org/domainIncludes":{"@id":"http://schema.org/Organization"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.","rdfs:label":"leiCode","rdfs:subPropertyOf":{"@id":"http://schema.org/identifier"}},{"@id":"http://schema.org/NewsArticle","@type":"rdfs:Class","http://purl.org/dc/terms/source":[{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_rNews"},{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#TP-draws"}],"rdfs:comment":"A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.</p>\n\n<p>A more detailed overview of <a href=\"/docs/news.html\">schema.org News markup</a> is also available.","rdfs:label":"NewsArticle","rdfs:subClassOf":{"@id":"http://schema.org/Article"}},{"@id":"http://schema.org/TheaterGroup","@type":"rdfs:Class","rdfs:comment":"A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.","rdfs:label":"TheaterGroup","rdfs:subClassOf":{"@id":"http://schema.org/PerformingGroup"}},{"@id":"http://schema.org/ParcelDelivery","@type":"rdfs:Class","rdfs:comment":"The delivery of a parcel either via the postal service or a commercial service.","rdfs:label":"ParcelDelivery","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/permissionType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DigitalDocumentPermission"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DigitalDocumentPermissionType"},"rdfs:comment":"The type of permission granted the person, organization, or audience.","rdfs:label":"permissionType"},{"@id":"http://schema.org/requirements","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"http://schema.org/supersededBy":{"@id":"http://schema.org/softwareRequirements"},"rdfs:comment":"Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).","rdfs:label":"requirements"},{"@id":"http://schema.org/BoardingPolicyType","@type":"rdfs:Class","rdfs:comment":"A type of boarding policy used by an airline.","rdfs:label":"BoardingPolicyType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/addressLocality","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PostalAddress"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The locality. For example, Mountain View.","rdfs:label":"addressLocality"},{"@id":"http://schema.org/roleName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Role"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/URL"}],"rdfs:comment":"A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.","rdfs:label":"roleName"},{"@id":"http://schema.org/composer","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/MusicComposition"},{"@id":"http://schema.org/Event"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The person or organization who wrote a composition, or who is the composer of a work performed at some event.","rdfs:label":"composer"},{"@id":"http://schema.org/Answer","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_QAStackExchange"},"rdfs:comment":"An answer offered to a question; perhaps correct, perhaps opinionated or wrong.","rdfs:label":"Answer","rdfs:subClassOf":{"@id":"http://schema.org/Comment"}},{"@id":"http://schema.org/Brewery","@type":"rdfs:Class","rdfs:comment":"Brewery.","rdfs:label":"Brewery","rdfs:subClassOf":{"@id":"http://schema.org/FoodEstablishment"}},{"@id":"http://schema.org/AllocateAction","@type":"rdfs:Class","rdfs:comment":"The act of organizing tasks/objects/events by associating resources to it.","rdfs:label":"AllocateAction","rdfs:subClassOf":{"@id":"http://schema.org/OrganizeAction"}},{"@id":"http://schema.org/includedDataCatalog","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Dataset"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DataCatalog"},"http://schema.org/supersededBy":{"@id":"http://schema.org/includedInDataCatalog"},"rdfs:comment":"A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').","rdfs:label":"includedDataCatalog"},{"@id":"http://schema.org/countriesNotSupported","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.","rdfs:label":"countriesNotSupported"},{"@id":"http://schema.org/Thursday","@type":"http://schema.org/DayOfWeek","http://schema.org/sameAs":{"@id":"http://www.wikidata.org/entity/Q129"},"rdfs:comment":"The day of the week between Wednesday and Friday.","rdfs:label":"Thursday"},{"@id":"http://schema.org/ParentAudience","@type":"rdfs:Class","rdfs:comment":"A set of characteristics describing parents, who can be interested in viewing some content.","rdfs:label":"ParentAudience","rdfs:subClassOf":{"@id":"http://schema.org/PeopleAudience"}},{"@id":"http://schema.org/Hardcover","@type":"http://schema.org/BookFormatType","rdfs:comment":"Book format: Hardcover.","rdfs:label":"Hardcover"},{"@id":"http://schema.org/RadioChannel","@type":"rdfs:Class","rdfs:comment":"A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.","rdfs:label":"RadioChannel","rdfs:subClassOf":{"@id":"http://schema.org/BroadcastChannel"}},{"@id":"http://schema.org/hasCourseInstance","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Course"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/CourseInstance"},"rdfs:comment":"An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.","rdfs:label":"hasCourseInstance"},{"@id":"http://schema.org/Room","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Room\">http://en.wikipedia.org/wiki/Room</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"Room","rdfs:subClassOf":{"@id":"http://schema.org/Accommodation"}},{"@id":"http://schema.org/PublicSwimmingPool","@type":"rdfs:Class","rdfs:comment":"A public swimming pool.","rdfs:label":"PublicSwimmingPool","rdfs:subClassOf":{"@id":"http://schema.org/SportsActivityLocation"}},{"@id":"http://schema.org/operatingSystem","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Operating systems supported (Windows 7, OSX 10.6, Android 1.6).","rdfs:label":"operatingSystem"},{"@id":"http://schema.org/suggestedAnswer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Question"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Answer"},"rdfs:comment":"An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.","rdfs:label":"suggestedAnswer"},{"@id":"http://schema.org/JobPosting","@type":"rdfs:Class","rdfs:comment":"A listing that describes a job opening in a certain organization.","rdfs:label":"JobPosting","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/ComputerLanguage","@type":"rdfs:Class","rdfs:comment":"This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the <a class=\"localLink\" href=\"http://schema.org/Language\">Language</a> type.","rdfs:label":"ComputerLanguage","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/reservedTicket","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Reservation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Ticket"},"rdfs:comment":"A ticket associated with the reservation.","rdfs:label":"reservedTicket"},{"@id":"http://schema.org/serverStatus","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/GameServer"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/GameServerStatus"},"rdfs:comment":"Status of a game server.","rdfs:label":"serverStatus"},{"@id":"http://schema.org/lender","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/BorrowAction"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A sub property of participant. The person that lends the object being borrowed.","rdfs:label":"lender","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/Date","@type":["http://schema.org/DataType","rdfs:Class"],"rdfs:comment":"A date value in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>.","rdfs:label":"Date"},{"@id":"http://schema.org/mapType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Map"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MapCategoryType"},"rdfs:comment":"Indicates the kind of Map, from the MapCategoryType Enumeration.","rdfs:label":"mapType"},{"@id":"http://schema.org/MusicReleaseFormatType","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).","rdfs:label":"MusicReleaseFormatType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/faxNumber","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Place"},{"@id":"http://schema.org/ContactPoint"},{"@id":"http://schema.org/Organization"},{"@id":"http://schema.org/Person"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The fax number.","rdfs:label":"faxNumber"},{"@id":"http://schema.org/Conversation","@type":"rdfs:Class","rdfs:comment":"One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.","rdfs:label":"Conversation","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/MediaObject","@type":"rdfs:Class","rdfs:comment":"A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).","rdfs:label":"MediaObject","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/datePublished","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Date"},"rdfs:comment":"Date of first broadcast/publication.","rdfs:label":"datePublished"},{"@id":"http://schema.org/Cemetery","@type":"rdfs:Class","rdfs:comment":"A graveyard.","rdfs:label":"Cemetery","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/AccountingService","@type":"rdfs:Class","rdfs:comment":"Accountancy business.</p>\n\n<p>As a <a class=\"localLink\" href=\"http://schema.org/LocalBusiness\">LocalBusiness</a> it can be described as a <a class=\"localLink\" href=\"http://schema.org/provider\">provider</a> of one or more <a class=\"localLink\" href=\"http://schema.org/Service\">Service</a>(s).","rdfs:label":"AccountingService","rdfs:subClassOf":{"@id":"http://schema.org/FinancialService"}},{"@id":"http://schema.org/CheckInAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/CheckOutAction\">CheckOutAction</a>: The antonym of CheckInAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/ArriveAction\">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/ConfirmAction\">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the <em>start</em> of a previously reserved service rather than its validity/existence.</li>\n</ul>\n","rdfs:label":"CheckInAction","rdfs:subClassOf":{"@id":"http://schema.org/CommunicateAction"}},{"@id":"http://schema.org/priceType","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/UnitPriceSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry.","rdfs:label":"priceType"},{"@id":"http://schema.org/distribution","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Dataset"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DataDownload"},"rdfs:comment":"A downloadable form of this dataset, at a specific location, in a specific format.","rdfs:label":"distribution"},{"@id":"http://schema.org/isAccessibleForFree","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Event"},{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/PublicationEvent"},{"@id":"http://schema.org/Place"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"A flag to signal that the item, event, or place is accessible for free.","rdfs:label":"isAccessibleForFree"},{"@id":"http://schema.org/BusinessAudience","@type":"rdfs:Class","rdfs:comment":"A set of characteristics belonging to businesses, e.g. who compose an item's target audience.","rdfs:label":"BusinessAudience","rdfs:subClassOf":{"@id":"http://schema.org/Audience"}},{"@id":"http://schema.org/LodgingBusiness","@type":"rdfs:Class","rdfs:comment":"A lodging business, such as a motel, hotel, or inn.","rdfs:label":"LodgingBusiness","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/House","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/House\">http://en.wikipedia.org/wiki/House</a>).","rdfs:label":"House","rdfs:subClassOf":{"@id":"http://schema.org/Accommodation"}},{"@id":"http://schema.org/Airport","@type":"rdfs:Class","rdfs:comment":"An airport.","rdfs:label":"Airport","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/SinglePlayer","@type":"http://schema.org/GamePlayMode","rdfs:comment":"Play mode: SinglePlayer. Which is played by a lone player.","rdfs:label":"SinglePlayer"},{"@id":"http://schema.org/seasonNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWorkSeason"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Integer"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"Position of the season within an ordered group of seasons.","rdfs:label":"seasonNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/position"}},{"@id":"http://schema.org/orderItemNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/OrderItem"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The identifier of the order item.","rdfs:label":"orderItemNumber"},{"@id":"http://schema.org/EventStatusType","@type":"rdfs:Class","rdfs:comment":"EventStatusType is an enumeration type whose instances represent several states that an Event may be in.","rdfs:label":"EventStatusType","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/Ticket","@type":"rdfs:Class","rdfs:comment":"Used to describe a ticket to an event, a flight, a bus ride, etc.","rdfs:label":"Ticket","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/CreativeWorkSeason","@type":"rdfs:Class","rdfs:comment":"A media season e.g. tv, radio, video game etc.","rdfs:label":"CreativeWorkSeason","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWork"}},{"@id":"http://schema.org/Reservation","@type":"rdfs:Class","rdfs:comment":"Describes a reservation for travel, dining or an event. Some reservations require tickets. </p>\n\n<p>Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use <a class=\"localLink\" href=\"http://schema.org/Offer\">Offer</a>.","rdfs:label":"Reservation","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/pageStart","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_bibex"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/PublicationIssue"},{"@id":"http://schema.org/PublicationVolume"},{"@id":"http://schema.org/Article"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Integer"}],"http://www.w3.org/2002/07/owl#equivalentProperty":{"@id":"http://purl.org/ontology/bibo/pageStart"},"rdfs:comment":"The page on which the work starts; for example \"135\" or \"xiii\".","rdfs:label":"pageStart"},{"@id":"http://schema.org/clipNumber","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Clip"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Integer"}],"rdfs:comment":"Position of the clip within an ordered group of clips.","rdfs:label":"clipNumber","rdfs:subPropertyOf":{"@id":"http://schema.org/position"}},{"@id":"http://schema.org/processingTime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/ServiceChannel"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Duration"},"rdfs:comment":"Estimated processing time for the service using this channel.","rdfs:label":"processingTime"},{"@id":"http://schema.org/FindAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of finding an object.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/SearchAction\">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li>\n</ul>\n","rdfs:label":"FindAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/RecyclingCenter","@type":"rdfs:Class","rdfs:comment":"A recycling center.","rdfs:label":"RecyclingCenter","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/coach","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SportsTeam"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A person that acts in a coaching role for a sports team.","rdfs:label":"coach"},{"@id":"http://schema.org/Hospital","@type":"rdfs:Class","rdfs:comment":"A hospital.","rdfs:label":"Hospital","rdfs:subClassOf":[{"@id":"http://schema.org/MedicalOrganization"},{"@id":"http://schema.org/EmergencyService"},{"@id":"http://schema.org/CivicStructure"}]},{"@id":"http://schema.org/Festival","@type":"rdfs:Class","rdfs:comment":"Event type: Festival.","rdfs:label":"Festival","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/LockerDelivery","@type":"rdfs:Class","rdfs:comment":"A DeliveryMethod in which an item is made available via locker.","rdfs:label":"LockerDelivery","rdfs:subClassOf":{"@id":"http://schema.org/DeliveryMethod"}},{"@id":"http://schema.org/ClothingStore","@type":"rdfs:Class","rdfs:comment":"A clothing store.","rdfs:label":"ClothingStore","rdfs:subClassOf":{"@id":"http://schema.org/Store"}},{"@id":"http://schema.org/yield","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/HowTo"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/QuantitativeValue"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.","rdfs:label":"yield"},{"@id":"http://schema.org/paymentDueDate","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Invoice"},{"@id":"http://schema.org/Order"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DateTime"},"rdfs:comment":"The date that payment is due.","rdfs:label":"paymentDueDate"},{"@id":"http://schema.org/BookmarkAction","@type":"rdfs:Class","rdfs:comment":"An agent bookmarks/flags/labels/tags/marks an object.","rdfs:label":"BookmarkAction","rdfs:subClassOf":{"@id":"http://schema.org/OrganizeAction"}},{"@id":"http://schema.org/fileSize","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.","rdfs:label":"fileSize"},{"@id":"http://schema.org/RadioSeason","@type":"rdfs:Class","rdfs:comment":"Season dedicated to radio broadcast and associated online delivery.","rdfs:label":"RadioSeason","rdfs:subClassOf":{"@id":"http://schema.org/CreativeWorkSeason"}},{"@id":"http://schema.org/containedIn","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Place"},"http://schema.org/supersededBy":{"@id":"http://schema.org/containedInPlace"},"rdfs:comment":"The basic containment relation between a place and one that contains it.","rdfs:label":"containedIn"},{"@id":"http://schema.org/MixtapeAlbum","@type":"http://schema.org/MusicAlbumProductionType","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"rdfs:comment":"MixtapeAlbum.","rdfs:label":"MixtapeAlbum"},{"@id":"http://schema.org/dateline","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/NewsArticle"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"A <a href=\"https://en.wikipedia.org/wiki/Dateline\">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.","rdfs:label":"dateline"},{"@id":"http://schema.org/headline","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Headline of the article.","rdfs:label":"headline"},{"@id":"http://schema.org/hasMenuSection","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Menu"},{"@id":"http://schema.org/MenuSection"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MenuSection"},"rdfs:comment":"A subgrouping of the menu (by dishes, course, serving time period, etc.).","rdfs:label":"hasMenuSection"},{"@id":"http://schema.org/UpdateAction","@type":"rdfs:Class","rdfs:comment":"The act of managing by changing/editing the state of the object.","rdfs:label":"UpdateAction","rdfs:subClassOf":{"@id":"http://schema.org/Action"}},{"@id":"http://schema.org/AggregateRating","@type":"rdfs:Class","rdfs:comment":"The average rating based on multiple ratings or reviews.","rdfs:label":"AggregateRating","rdfs:subClassOf":{"@id":"http://schema.org/Rating"}},{"@id":"http://schema.org/relatedTo","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"The most generic familial relation.","rdfs:label":"relatedTo"},{"@id":"http://schema.org/competitor","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SportsEvent"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/SportsTeam"}],"rdfs:comment":"A competitor in a sports event.","rdfs:label":"competitor"},{"@id":"http://schema.org/runtime","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareSourceCode"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/runtimePlatform"},"rdfs:comment":"Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).","rdfs:label":"runtime"},{"@id":"http://schema.org/alternateName","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Thing"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"An alias for the item.","rdfs:label":"alternateName"},{"@id":"http://schema.org/EmailMessage","@type":"rdfs:Class","rdfs:comment":"An email message.","rdfs:label":"EmailMessage","rdfs:subClassOf":{"@id":"http://schema.org/Message"}},{"@id":"http://schema.org/follows","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"The most generic uni-directional social relation.","rdfs:label":"follows"},{"@id":"http://schema.org/Paperback","@type":"http://schema.org/BookFormatType","rdfs:comment":"Book format: Paperback.","rdfs:label":"Paperback"},{"@id":"http://schema.org/industry","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/JobPosting"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The industry associated with the job position.","rdfs:label":"industry"},{"@id":"http://schema.org/BusStation","@type":"rdfs:Class","rdfs:comment":"A bus station.","rdfs:label":"BusStation","rdfs:subClassOf":{"@id":"http://schema.org/CivicStructure"}},{"@id":"http://schema.org/borrower","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/LendAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A sub property of participant. The person that borrows the object being lent.","rdfs:label":"borrower","rdfs:subPropertyOf":{"@id":"http://schema.org/participant"}},{"@id":"http://schema.org/ingredients","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Recipe"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"http://schema.org/supersededBy":{"@id":"http://schema.org/recipeIngredient"},"rdfs:comment":"A single ingredient used in the recipe, e.g. sugar, flour or garlic.","rdfs:label":"ingredients","rdfs:subPropertyOf":{"@id":"http://schema.org/supply"}},{"@id":"http://schema.org/dayOfWeek","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/OpeningHoursSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/DayOfWeek"},"rdfs:comment":"The day of the week for which these opening hours are valid.","rdfs:label":"dayOfWeek"},{"@id":"http://schema.org/driveWheelConfiguration","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#Automotive_Ontology_Working_Group"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Vehicle"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/DriveWheelConfigurationValue"}],"rdfs:comment":"The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.","rdfs:label":"driveWheelConfiguration"},{"@id":"http://schema.org/BowlingAlley","@type":"rdfs:Class","rdfs:comment":"A bowling alley.","rdfs:label":"BowlingAlley","rdfs:subClassOf":{"@id":"http://schema.org/SportsActivityLocation"}},{"@id":"http://schema.org/eligibleRegion","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"http://schema.org/domainIncludes":[{"@id":"http://schema.org/Offer"},{"@id":"http://schema.org/Demand"},{"@id":"http://schema.org/DeliveryChargeSpecification"}],"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/GeoShape"},{"@id":"http://schema.org/Text"},{"@id":"http://schema.org/Place"}],"rdfs:comment":"The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.</p>\n\n<p>See also <a class=\"localLink\" href=\"http://schema.org/ineligibleRegion\">ineligibleRegion</a>.","rdfs:label":"eligibleRegion","rdfs:subPropertyOf":{"@id":"http://schema.org/areaServed"}},{"@id":"http://schema.org/ItemListOrderAscending","@type":"http://schema.org/ItemListOrderType","rdfs:comment":"An ItemList ordered with lower values listed first.","rdfs:label":"ItemListOrderAscending"},{"@id":"http://schema.org/ImageGallery","@type":"rdfs:Class","rdfs:comment":"Web page type: Image gallery page.","rdfs:label":"ImageGallery","rdfs:subClassOf":{"@id":"http://schema.org/CollectionPage"}},{"@id":"http://schema.org/downvoteCount","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/Question"},{"@id":"http://schema.org/Comment"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Integer"},"rdfs:comment":"The number of downvotes this question, answer or comment has received from the community.","rdfs:label":"downvoteCount"},{"@id":"http://schema.org/valueRequired","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/PropertyValueSpecification"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Boolean"},"rdfs:comment":"Whether the property must be filled in to complete the action.  Default is false.","rdfs:label":"valueRequired"},{"@id":"http://schema.org/candidate","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/VoteAction"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"A sub property of object. The candidate subject of this action.","rdfs:label":"candidate","rdfs:subPropertyOf":{"@id":"http://schema.org/object"}},{"@id":"http://schema.org/Offer","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"rdfs:comment":"An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.</p>\n\n<p>For <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GTIN</a>-related fields, see <a href=\"http://www.gs1.org/barcodes/support/check_digit_calculator\">Check Digit calculator</a> and <a href=\"http://www.gs1us.org/resources/standards/gtin-validation-guide\">validation guide</a> from <a href=\"http://www.gs1.org/\">GS1</a>.","rdfs:label":"Offer","rdfs:subClassOf":{"@id":"http://schema.org/Intangible"}},{"@id":"http://schema.org/DataDownload","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_DatasetClass"},"http://www.w3.org/2002/07/owl#equivalentClass":{"@id":"http://www.w3.org/ns/dcat#Distribution"},"rdfs:comment":"A dataset in downloadable form.","rdfs:label":"DataDownload","rdfs:subClassOf":{"@id":"http://schema.org/MediaObject"}},{"@id":"http://schema.org/Product","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#source_GoodRelationsTerms"},"rdfs:comment":"Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.","rdfs:label":"Product","rdfs:subClassOf":{"@id":"http://schema.org/Thing"}},{"@id":"http://schema.org/accessCode","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/DeliveryEvent"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Password, PIN, or access code needed for delivery (e.g. from a locker).","rdfs:label":"accessCode"},{"@id":"http://schema.org/CampingPitch","@type":"rdfs:Class","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"rdfs:comment":"A camping pitch is an individual place for overnight stay in the outdoors, typically being part of a larger camping site.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.","rdfs:label":"CampingPitch","rdfs:subClassOf":{"@id":"http://schema.org/Accommodation"}},{"@id":"http://schema.org/CivicStructure","@type":"rdfs:Class","rdfs:comment":"A public structure, such as a town hall or concert hall.","rdfs:label":"CivicStructure","rdfs:subClassOf":{"@id":"http://schema.org/Place"}},{"@id":"http://schema.org/homeTeam","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SportsEvent"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/SportsTeam"},{"@id":"http://schema.org/Person"}],"rdfs:comment":"The home team in a sports event.","rdfs:label":"homeTeam","rdfs:subPropertyOf":{"@id":"http://schema.org/competitor"}},{"@id":"http://schema.org/GeoCoordinates","@type":"rdfs:Class","rdfs:comment":"The geographic coordinates of a place or event.","rdfs:label":"GeoCoordinates","rdfs:subClassOf":{"@id":"http://schema.org/StructuredValue"}},{"@id":"http://schema.org/performer","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Event"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/Person"},{"@id":"http://schema.org/Organization"}],"rdfs:comment":"A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.","rdfs:label":"performer"},{"@id":"http://schema.org/MiddleSchool","@type":"rdfs:Class","rdfs:comment":"A middle school (typically for children aged around 11-14, although this varies somewhat).","rdfs:label":"MiddleSchool","rdfs:subClassOf":{"@id":"http://schema.org/EducationalOrganization"}},{"@id":"http://schema.org/AutomotiveBusiness","@type":"rdfs:Class","rdfs:comment":"Car repair, sales, or parts.","rdfs:label":"AutomotiveBusiness","rdfs:subClassOf":{"@id":"http://schema.org/LocalBusiness"}},{"@id":"http://schema.org/permittedUsage","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"https://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#STI_Accommodation_Ontology"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/Accommodation"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Indications regarding the permitted usage of the accommodation.","rdfs:label":"permittedUsage"},{"@id":"http://schema.org/item","@type":"rdf:Property","http://schema.org/domainIncludes":[{"@id":"http://schema.org/DataFeedItem"},{"@id":"http://schema.org/ListItem"}],"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Thing"},"rdfs:comment":"An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’.","rdfs:label":"item"},{"@id":"http://schema.org/LiteraryEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Literary event.","rdfs:label":"LiteraryEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/Pond","@type":"rdfs:Class","rdfs:comment":"A pond.","rdfs:label":"Pond","rdfs:subClassOf":{"@id":"http://schema.org/BodyOfWater"}},{"@id":"http://schema.org/discountCode","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Order"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"Code used to redeem a discount.","rdfs:label":"discountCode"},{"@id":"http://schema.org/SocialEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Social event.","rdfs:label":"SocialEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/knows","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Person"},"rdfs:comment":"The most generic bi-directional social/work relation.","rdfs:label":"knows"},{"@id":"http://schema.org/contentType","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/EntryPoint"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The supported content type(s) for an EntryPoint response.","rdfs:label":"contentType"},{"@id":"http://schema.org/EatAction","@type":"rdfs:Class","rdfs:comment":"The act of swallowing solid objects.","rdfs:label":"EatAction","rdfs:subClassOf":{"@id":"http://schema.org/ConsumeAction"}},{"@id":"http://schema.org/ReservationHold","@type":"http://schema.org/ReservationStatusType","rdfs:comment":"The status of a reservation on hold pending an update like credit card number or flight changes.","rdfs:label":"ReservationHold"},{"@id":"http://schema.org/specialty","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/WebPage"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Specialty"},"rdfs:comment":"One of the domain specialities to which this web page's content applies.","rdfs:label":"specialty"},{"@id":"http://schema.org/TheaterEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Theater performance.","rdfs:label":"TheaterEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/TakeAction","@type":"rdfs:Class","rdfs:comment":"<p>The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.</p>\n\n<p>Related actions:</p>\n\n<ul>\n<li><a class=\"localLink\" href=\"http://schema.org/GiveAction\">GiveAction</a>: The reciprocal of TakeAction.</li>\n<li><a class=\"localLink\" href=\"http://schema.org/ReceiveAction\">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li>\n</ul>\n","rdfs:label":"TakeAction","rdfs:subClassOf":{"@id":"http://schema.org/TransferAction"}},{"@id":"http://schema.org/album","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicGroup"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/MusicAlbum"},"rdfs:comment":"A music album.","rdfs:label":"album"},{"@id":"http://schema.org/replyToUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/UserComments"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"The URL at which a reply may be posted to the specified UserComment.","rdfs:label":"replyToUrl"},{"@id":"http://schema.org/worksFor","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/Person"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Organization"},"rdfs:comment":"Organizations that the person works for.","rdfs:label":"worksFor"},{"@id":"http://schema.org/musicalKey","@type":"rdf:Property","http://purl.org/dc/terms/source":{"@id":"http://www.w3.org/wiki/WebSchemas/SchemaDotOrgSources#MBZ"},"http://schema.org/domainIncludes":{"@id":"http://schema.org/MusicComposition"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/Text"},"rdfs:comment":"The key, mode, or scale this composition uses.","rdfs:label":"musicalKey"},{"@id":"http://schema.org/SportsEvent","@type":"rdfs:Class","rdfs:comment":"Event type: Sports event.","rdfs:label":"SportsEvent","rdfs:subClassOf":{"@id":"http://schema.org/Event"}},{"@id":"http://schema.org/GamePlayMode","@type":"rdfs:Class","rdfs:comment":"Indicates whether this game is multi-player, co-op or single-player.","rdfs:label":"GamePlayMode","rdfs:subClassOf":{"@id":"http://schema.org/Enumeration"}},{"@id":"http://schema.org/installUrl","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/SoftwareApplication"},"http://schema.org/rangeIncludes":{"@id":"http://schema.org/URL"},"rdfs:comment":"URL at which the app may be installed, if different from the URL of the item.","rdfs:label":"installUrl"},{"@id":"http://schema.org/citation","@type":"rdf:Property","http://schema.org/domainIncludes":{"@id":"http://schema.org/CreativeWork"},"http://schema.org/rangeIncludes":[{"@id":"http://schema.org/CreativeWork"},{"@id":"http://schema.org/Text"}],"rdfs:comment":"A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.","rdfs:label":"citation"}],"@id":"http://schema.org/#3.3"};

/***/ }),

/***/ "./src/select.tsx":
/*!************************!*\
  !*** ./src/select.tsx ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _immutable = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.js");

var _fuse = __webpack_require__(/*! fuse.js */ "./node_modules/fuse.js/dist/fuse.js");

var _fuse2 = _interopRequireDefault(_fuse);

var _schema = __webpack_require__(/*! ./schema */ "./src/schema/index.ts");

var _constants = __webpack_require__(/*! ./schema/constants */ "./src/schema/constants.ts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Select = function (_React$Component) {
    (0, _inherits3.default)(Select, _React$Component);

    function Select(props) {
        (0, _classCallCheck3.default)(this, Select);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));

        _this.attachInput = function (input) {
            return _this.input = input;
        };
        // Events
        _this.handleChange = function (event) {
            var value = event.target.value;

            var isEmpty = /^\s*$/.test(value);
            var results = isEmpty ? null : (0, _immutable.List)(_this.state.index.search(value));
            _this.setState({ value: value, results: results, focus: 0 });
        };
        _this.handleSubmit = function (id) {
            _this.setState({ value: "", results: null, focused: false }, function () {
                return _this.input && _this.input.blur();
            });
            _this.props.onSubmit(id);
        };
        _this.onInputFocus = function () {
            return !_this.state.focused && _this.setState({ focused: true });
        };
        _this.onInputBlur = function () {
            return _this.state.focused && _this.setState({ focused: false });
        };
        _this.onKeyDown = function (event) {
            var keyCode = event.keyCode;

            if (_this.keyHandlers[keyCode]) {
                event.preventDefault();
                _this.keyHandlers[keyCode](_this.state);
            }
        };
        _this.keyHandlers = {
            13: function _(_ref) {
                var focus = _ref.focus,
                    results = _ref.results,
                    catalog = _ref.catalog;

                // enter
                var index = results !== null ? results.get(focus) : focus;

                var _catalog$get = catalog.get(index),
                    id = _catalog$get.id;

                _this.handleSubmit(id);
            },
            40: function _(_ref2) {
                var focus = _ref2.focus,
                    results = _ref2.results,
                    catalog = _ref2.catalog;

                // down arrow
                if (results !== null) {
                    _this.setState({ focus: (focus + 1) % results.size });
                } else {
                    var _catalog$get2 = catalog.get(focus),
                        expanded = _catalog$get2.expanded,
                        size = _catalog$get2.size;

                    var delta = expanded ? 1 : size;
                    if (focus + delta < catalog.size) {
                        _this.setState({ focus: focus + delta });
                    }
                }
                // 	const target = this.results.children[0].children[newFocus]
                // 	this.scrollIntoView(target as HTMLDivElement)
            },
            39: function _(_ref3) {
                var focus = _ref3.focus,
                    catalog = _ref3.catalog,
                    results = _ref3.results;

                // right arrow
                if (results === null) {
                    var entry = catalog.get(focus);
                    if (entry.size > 1) {
                        entry.expanded = true;
                        _this.setState({ focus: focus + 1 });
                    }
                }
            },
            38: function _(_ref4) {
                var focus = _ref4.focus,
                    results = _ref4.results,
                    catalog = _ref4.catalog;

                // up arrow
                if (results !== null) {
                    _this.setState({ focus: (results.size + focus - 1) % results.size });
                } else if (focus > 0) {
                    var previous = catalog.get(focus - 1);
                    while (!_this.isExpanded(previous)) {
                        previous = catalog.get(previous.index - 1);
                    }
                    _this.setState({ focus: previous.index });
                }
            },
            37: function _(_ref5) {
                var focus = _ref5.focus,
                    catalog = _ref5.catalog,
                    results = _ref5.results;

                // left arrow
                if (results === null) {
                    var entry = catalog.get(focus);
                    if (entry.index !== entry.parent) {
                        var parent = catalog.get(entry.parent);
                        parent.expanded = false;
                        _this.setState({ focus: parent.index });
                    }
                }
            }
        };
        _this.state = Object.assign({
            catalog: null,
            roots: null,
            index: null,
            // These are true
            value: "",
            focus: 0,
            focused: true,
            results: null
        }, _this.updateIndex());
        _this.input = null;
        return _this;
    }

    (0, _createClass3.default)(Select, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
            if (prevProps.catalog !== this.props.catalog) {
                this.setState(this.updateIndex);
            }
        }
    }, {
        key: "updateIndex",
        value: function updateIndex() {
            var _this2 = this;

            var catalog = [];
            var roots = [];
            this.props.catalog.forEach(function (record) {
                roots.push(catalog.length);
                Select.parseCatalog(record, catalog, 0, _this2.props.inheritance);
            });
            window.catalog = catalog;
            return {
                catalog: (0, _immutable.List)(catalog),
                index: new _fuse2.default(catalog, Select.fuseOptions),
                roots: (0, _immutable.List)(roots)
            };
        }
    }, {
        key: "render",
        value: function render() {
            var _state = this.state,
                focused = _state.focused,
                value = _state.value;

            return _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement("div", { className: "select-header" }, _react2.default.createElement("input", { type: "text", className: "search", placeholder: this.props.placeholder, ref: this.attachInput, autoFocus: true, value: value, onChange: this.handleChange, onFocus: this.onInputFocus, onBlur: this.onInputBlur, onKeyDown: this.onKeyDown }), this.props.children), focused && this.renderContainer());
        }
    }, {
        key: "renderContainer",
        value: function renderContainer() {
            var _this3 = this;

            return _react2.default.createElement(_react.Fragment, null, _react2.default.createElement("div", { className: "select" }, _react2.default.createElement("div", { ref: function ref(div) {
                    return _this3.results = div;
                }, className: "results" }, _react2.default.createElement("div", { className: "scroller" }, this.renderContent())), _react2.default.createElement("div", { className: "description" }, this.renderDescription())), _react2.default.createElement("hr", null));
        }
    }, {
        key: "renderContent",
        value: function renderContent() {
            var _this4 = this;

            var _state2 = this.state,
                roots = _state2.roots,
                results = _state2.results,
                value = _state2.value,
                catalog = _state2.catalog;
            // console.log("roots", roots, "results", results)

            if (!value || !results) return this.renderTrees(roots);
            if (results.size === 0) return Select.emptySearch;else return results.map(function (result, index) {
                return _this4.renderItem(index, catalog.get(result));
            });
        }
    }, {
        key: "renderTrees",
        value: function renderTrees(indices) {
            var _this5 = this;

            var results = [];
            indices.forEach(function (index) {
                return _this5.renderTree(index, results, 0);
            });
            return results;
        }
    }, {
        key: "renderTree",
        value: function renderTree(index, results, depth) {
            // console.log("rendering", index, this.state.catalog.get(index))
            var entry = this.state.catalog.get(index);
            var delta = index - results.length;
            var expanded = this.isExpanded(entry, depth);
            results.push(expanded ? this.renderItem(index, entry, depth) : null);
            var size = this.props.inheritance[entry.id].size;

            for (var i = 0; i < size; i++) {
                this.renderTree(results.length + delta, results, depth + 1);
            }
        }
    }, {
        key: "renderItem",
        value: function renderItem(index, entry, depth) {
            var _this6 = this;

            var className = index === this.state.focus ? "focus mono" : "mono";
            var handleFocus = function handleFocus(event) {
                if (_this6.state.focus !== index) {
                    _this6.setState({ focus: index });
                }
            };
            return _react2.default.createElement("div", { key: index, className: "result", onMouseEnter: handleFocus, onMouseMove: handleFocus, onMouseDown: function onMouseDown(event) {
                    event.preventDefault();
                    _this6.handleSubmit(entry.id);
                } }, !isNaN(depth) && _react2.default.createElement("span", { className: "spacer" }, "  ".repeat(depth)), _react2.default.createElement("span", { className: className }, entry.name));
        }
    }, {
        key: "renderDescription",
        value: function renderDescription() {
            var _state3 = this.state,
                catalog = _state3.catalog,
                focus = _state3.focus,
                results = _state3.results;

            var index = results === null ? focus : results.get(focus);
            var entry = catalog.get(index);
            if (entry) {
                return _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement("h1", { className: "mono" }, entry.name), entry.category && _react2.default.createElement(_react2.default.Fragment, null, _react2.default.createElement("div", null, "Inherited from", " ", _react2.default.createElement("span", { className: "mono" }, _schema.nodes[entry.category][_constants.LABEL]))), this.renderParents(entry), this.renderChildren(entry), _react2.default.createElement("div", null, "Range:", " ", _react2.default.createElement("span", { className: "mono" }, (0, _schema.flattenValues)(_schema.nodes[entry.id][_constants.RANGE]).filter(function (id) {
                    return _schema.nodes[id];
                }).map(function (id) {
                    return _schema.nodes[id][_constants.LABEL];
                }).join(", "))), _react2.default.createElement("hr", null), _react2.default.createElement("div", { dangerouslySetInnerHTML: { __html: entry.description } }));
            }
        }
    }, {
        key: "renderParents",
        value: function renderParents(entry) {
            var _props = this.props,
                parentDescription = _props.parentDescription,
                parentProperty = _props.parentProperty;

            var values = _schema.nodes[entry.id][parentProperty];
            return values ? _react2.default.createElement("div", null, parentDescription, " of", " ", _react2.default.createElement("span", { className: "mono" }, (0, _schema.flattenValues)(values).filter(function (id) {
                return _schema.nodes[id];
            }).map(function (id) {
                return _schema.nodes[id][_constants.LABEL];
            }).join(", "))) : null;
        }
    }, {
        key: "renderChildren",
        value: function renderChildren(entry) {
            var _props2 = this.props,
                childDescription = _props2.childDescription,
                inheritance = _props2.inheritance;

            if (inheritance[entry.id].size > 0) {
                var children = Array.from(inheritance[entry.id]).map(function (id) {
                    return _schema.nodes[id][_constants.LABEL];
                });
                return _react2.default.createElement("div", null, childDescription, ":", " ", _react2.default.createElement("span", { className: "mono" }, children.join(", ")));
            } else return null;
        }
    }, {
        key: "scrollIntoView",
        value: function scrollIntoView(target) {
            var offset = target.offsetTop - this.results.offsetTop;
            var position = offset - this.results.scrollTop;
            var height = this.results.offsetHeight - target.offsetHeight;
            if (position < 0) {
                this.results.scrollTop = offset;
            } else if (position > height) {
                this.results.scrollTop = offset - height;
            }
        }
    }, {
        key: "isExpanded",
        value: function isExpanded(entry, depth) {
            if (isNaN(depth)) depth = Infinity;
            var parent = this.state.catalog.get(entry.parent);
            var expanded = parent.expanded || depth === 0;
            while (parent.index !== parent.parent && --depth > 0) {
                parent = this.state.catalog.get(parent.parent);
                expanded = expanded && parent.expanded;
            }
            return expanded;
        }
    }], [{
        key: "parseCatalog",
        value: function parseCatalog(record, catalog, depth, inheritance) {
            var id = record.get(0);
            var node = _schema.nodes[id];
            var entry = {
                id: id,
                name: node[_constants.LABEL],
                size: null,
                elder: null,
                index: null,
                parent: null,
                parents: (0, _schema.flattenValues)(node[_constants.SUBCLASS]),
                category: record.get(1) || null,
                expanded: depth < 1,
                description: node[_constants.COMMENT]
            };
            var length = catalog.push(entry);
            var index = length - 1;
            entry.index = index;
            entry.parent = index; // Will overwrite except for roots
            // I'm really sorry about all this.
            // I picked the wrong abstractions a while ago and now we all have to suffer.
            inheritance[id].forEach(function (id) {
                // Here `length` is the root of the current subtree,
                // and `index` is the root of the elder == "previous-sibling-or-parent" subtree
                Select.parseCatalog((0, _immutable.List)([id]), catalog, depth + 1, inheritance);
                var root = catalog[length];
                root.parent = entry.index;
                root.elder = index;
                index = length;
                length += root.size;
            });
            // Hackiness aside, this is actually a really fast way to build an index like this.
            // It's a like a doubly-linked list, except it's a triply-linked tree.
            // And we never have to modify it.
            entry.size = catalog.length - entry.index;
        }
    }]);
    return Select;
}(_react2.default.Component);

exports.default = Select;

Select.emptySearch = "No results";
Select.fuseOptions = {
    id: "index",
    shouldSort: true,
    location: 0,
    threshold: 0.3,
    keys: [{ name: "name", weight: 0.8 }, { name: "description", weight: 0.2 }]
};

/***/ }),

/***/ "./src/underground.tsx":
/*!*****************************!*\
  !*** ./src/underground.tsx ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _defineProperty2 = __webpack_require__(/*! babel-runtime/helpers/defineProperty */ "./node_modules/babel-runtime/helpers/defineProperty.js");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _slicedToArray2 = __webpack_require__(/*! babel-runtime/helpers/slicedToArray */ "./node_modules/babel-runtime/helpers/slicedToArray.js");

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _classCallCheck2 = __webpack_require__(/*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(/*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = __webpack_require__(/*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(/*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js");

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

var _immutable = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.js");

var _buffer = __webpack_require__(/*! buffer */ "./node_modules/node-libs-browser/node_modules/buffer/index.js");

var _multihashing = __webpack_require__(/*! multihashing */ "./node_modules/multihashing/src/index.js");

var _multihashing2 = _interopRequireDefault(_multihashing);

var _multihashes = __webpack_require__(/*! multihashes */ "./node_modules/multihashes/src/index.js");

var _multihashes2 = _interopRequireDefault(_multihashes);

var _niceware = __webpack_require__(/*! niceware */ "./node_modules/niceware/lib/main.js");

var _niceware2 = _interopRequireDefault(_niceware);

var _constants = __webpack_require__(/*! ./schema/constants */ "./src/schema/constants.ts");

var _select = __webpack_require__(/*! ./select */ "./src/select.tsx");

var _select2 = _interopRequireDefault(_select);

var _form = __webpack_require__(/*! ./form */ "./src/form.tsx");

var _form2 = _interopRequireDefault(_form);

var _schema = __webpack_require__(/*! ./schema */ "./src/schema/index.ts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Underground = function (_React$Component) {
    (0, _inherits3.default)(Underground, _React$Component);

    function Underground(props) {
        (0, _classCallCheck3.default)(this, Underground);

        var _this = (0, _possibleConstructorReturn3.default)(this, (Underground.__proto__ || Object.getPrototypeOf(Underground)).call(this, props));

        window.location.hash = "new";
        _this.state = {
            hash: location.hash.slice(1),
            graph: (0, _immutable.Map)({}),
            forms: (0, _immutable.Map)({})
        };
        _this.exportNode = _this.exportNode.bind(_this);
        _this.accumulateNode = _this.accumulateNode.bind(_this);
        _this.handleSubmit = _this.handleSubmit.bind(_this);
        if (localStorage.hasOwnProperty(Underground.key)) {
            _this.source = localStorage[Underground.key];
        } else {
            _this.source = _niceware2.default.generatePassphrase(4).join("-");
            localStorage[Underground.key] = _this.source;
        }
        return _this;
    }

    (0, _createClass3.default)(Underground, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            var _this2 = this;

            window.addEventListener("hashchange", function () {
                if (location.hash.indexOf(_this2.state.hash) !== 1) {
                    _this2.setState({ hash: location.hash.slice(1) });
                }
            });
        }
    }, {
        key: "renderFileInput",
        value: function renderFileInput() {
            var _this3 = this;

            return _react2.default.createElement("input", { className: "file-input", type: "file", accept: "application/json", onChange: function onChange(event) {
                    return _this3.readFile(event);
                } });
        }
    }, {
        key: "render",
        value: function render() {
            var _this4 = this;

            var _state = this.state,
                forms = _state.forms,
                graph = _state.graph;

            var disabled = forms.size === 0;
            return _react2.default.createElement(_react.Fragment, null, _react2.default.createElement(_select2.default, { parentDescription: "Subclass", parentProperty: _constants.SUBCLASS, placeholder: "Create a new object by type", catalog: (0, _immutable.List)([(0, _immutable.List)([_constants.thing])]), inheritance: _schema.classInheritance, childDescription: "Children", onSubmit: function onSubmit(type) {
                    return _this4.createNode([type]);
                } }, this.renderFileInput()), _react2.default.createElement("form", { onSubmit: this.handleSubmit }, _react2.default.createElement("div", { className: "container" }, this.state.forms.entrySeq().map(function (_ref) {
                var _ref2 = (0, _slicedToArray3.default)(_ref, 2),
                    id = _ref2[0],
                    form = _ref2[1];

                var formProps = {
                    id: id,
                    graph: graph,
                    form: form,
                    createNode: function createNode(types) {
                        return _this4.createNode(types);
                    },
                    label: "Remove",
                    onClick: function onClick() {
                        return _this4.removeForm(id);
                    },
                    onChange: function onChange(form, newId, newForm) {
                        var forms = _this4.state.forms.set(id, form);
                        if (newId && newForm) {
                            _this4.setState({ forms: forms.set(newId, newForm) });
                        } else {
                            _this4.setState({ forms: forms });
                        }
                    }
                };
                return _react2.default.createElement(_form2.default, Object.assign({ key: id }, formProps));
            })), _react2.default.createElement("input", { disabled: disabled, type: "button", value: "Submit", onClick: function onClick(event) {
                    return _this4.handleSubmit(event, true);
                } }), _react2.default.createElement("input", { disabled: disabled, type: "submit", value: "Download" })));
        }
    }, {
        key: "removeReference",
        value: function removeReference(id, form) {
            var _this5 = this;

            return (0, _immutable.Map)(form.map(function (values) {
                return (0, _immutable.List)(values.map(function (value) {
                    var props = {};
                    if (value.reference === id) {
                        props.reference = null;
                        if (value.value === _form.Reference) {
                            props.value = _form.Inline;
                        }
                    }
                    props.inline = value.inline ? _this5.removeReference(id, value.inline) : (0, _immutable.Map)({});
                    return value.with(props);
                }));
            }));
        }
    }, {
        key: "removeForm",
        value: function removeForm(id) {
            var _this6 = this;

            var graph = this.state.graph.delete(id);
            var slice = this.state.forms.delete(id);
            var forms = slice.map(function (form) {
                return _this6.removeReference(id, form);
            });
            this.setState({ forms: (0, _immutable.Map)(forms), graph: graph });
        }
    }, {
        key: "setHash",
        value: function setHash(hash) {
            this.setState({ hash: hash }, function () {
                return window.location.hash = hash;
            });
        }
    }, {
        key: "createNode",
        value: function createNode(type) {
            var id = Underground.createId();
            var forms = this.state.forms.set(id, (0, _immutable.Map)({}));
            var graph = this.state.graph.set(id, type);
            this.setState({ forms: forms, graph: graph });
            this.setHash(id);
            return id;
        }
    }, {
        key: "accumulateNode",
        value: function accumulateNode(acc, elm) {
            var _this7 = this;

            var _elm = (0, _slicedToArray3.default)(elm, 2),
                property = _elm[0],
                values = _elm[1];

            var objects = values.map(function (formValue) {
                var value = formValue.value,
                    type = formValue.type,
                    constant = formValue.constant,
                    reference = formValue.reference,
                    inline = formValue.inline;

                var node = (0, _defineProperty3.default)({}, _constants.TYPE, type);
                if (value === _form.Constant) {
                    var result = constant ? JSON.parse(constant) : _form2.default.defaultValues.hasOwnProperty(formValue.type) ? _form2.default.defaultValues[formValue.type] : null;
                    node[_constants.VALUE] = result;
                } else if (value === _form.Reference) {
                    node[_constants.ID] = reference || null;
                } else if (value === _form.Inline) {
                    inline.entrySeq().map(function (_ref3) {
                        var _ref4 = (0, _slicedToArray3.default)(_ref3, 2),
                            prop = _ref4[0],
                            vals = _ref4[1];

                        return [prop, vals.toArray()];
                    }).reduce(_this7.accumulateNode, (0, _immutable.Map)()).forEach(function (value, key) {
                        return node[key] = value;
                    });
                }
                return node;
            });
            return acc.set(property, objects);
        }
    }, {
        key: "exportNode",
        value: function exportNode(_ref5) {
            var _Object$assign;

            var _ref6 = (0, _slicedToArray3.default)(_ref5, 2),
                id = _ref6[0],
                props = _ref6[1];

            var type = this.state.graph.get(id);
            var properties = props.reduce(this.accumulateNode, (0, _immutable.Map)({}));
            return Object.assign((_Object$assign = {}, (0, _defineProperty3.default)(_Object$assign, _constants.ID, id), (0, _defineProperty3.default)(_Object$assign, _constants.TYPE, type), _Object$assign), properties.toJS());
        }
    }, {
        key: "handleSubmit",
        value: function handleSubmit(event, download) {
            var _data, _Object$assign2;

            event.preventDefault();
            var date = new Date();
            var time = date.toISOString();
            var data = (_data = {}, (0, _defineProperty3.default)(_data, _constants.TIME, time), (0, _defineProperty3.default)(_data, _constants.SOURCE, this.source), _data);
            var nodes = this.state.forms.map(function (props) {
                return props.entrySeq();
            }).entrySeq();
            var graph = nodes.map(this.exportNode).toJS();
            var assertion = Object.assign((_Object$assign2 = {}, (0, _defineProperty3.default)(_Object$assign2, _constants.CONTEXT, {}), (0, _defineProperty3.default)(_Object$assign2, _constants.GRAPH, graph), _Object$assign2), data);
            var json = JSON.stringify(assertion);
            var bytes = _buffer.Buffer.from(json, "utf8");
            var mhash = (0, _multihashing2.default)(bytes, "sha1");
            var hash = _multihashes2.default.toB58String(mhash);
            this.importAssertion(assertion, hash);
            this.setState({ forms: (0, _immutable.Map)({}), graph: (0, _immutable.Map)({}) });
            if (!download) {
                this.props.onSubmit(assertion, hash);
            }
        }
    }, {
        key: "readFile",
        value: function readFile(event) {
            var _this8 = this;

            event.preventDefault();
            var files = event.target.files;

            console.log(files);
            if (files && files.length > 0) {
                Array.from(files).forEach(function (file) {
                    var test = /^([0-9A-Za-z]+)\.json$/;
                    if (file.type === "application/json" && test.test(file.name)) {
                        var _test$exec = test.exec(file.name),
                            _test$exec2 = (0, _slicedToArray3.default)(_test$exec, 2),
                            match = _test$exec2[0],
                            hash = _test$exec2[1];
                        // if (this.state.assertions.has(hash)) {
                        // 	window.alert("You've already imported this assertion!")
                        // } else {


                        _this8.importFile(hash, file);
                        // }
                    }
                });
            }
        }
    }, {
        key: "importFile",
        value: function importFile(hash, file) {
            var _this9 = this;

            var reader = new FileReader();
            var data = void 0;
            reader.onloadend = function () {
                var text = reader.result;
                try {
                    data = JSON.parse(text);
                } catch (e) {
                    console.error("could not parse text", text, e);
                }
                _this9.importAssertion(data, hash);
            };
            reader.readAsText(file);
        }
    }, {
        key: "importAssertion",
        value: function importAssertion(assertion, hash) {
            // const assertions = this.state.assertions.set(hash, assertion)
            // const graph = assertion[GRAPH].reduce((graph, node) => {
            // 	const { [ID]: id, [TYPE]: type, ...rest } = node
            // 	const props: { [prop: string]: SourcedValues } = {}
            // 	Object.keys(rest).forEach(prop => {
            // 		const values = (Array.isArray(node[prop])
            // 			? node[prop]
            // 			: [node[prop]]) as Values
            // 		props[prop] = values.map(value => ({ ...value, [SOURCE]: hash }))
            // 	})
            // 	if (graph.has(id)) {
            // 		const sourced = graph.get(id)
            // 		Object.keys(props).forEach(prop => {
            // 			if (sourced.hasOwnProperty(prop)) {
            // 				const value = sourced[prop] as SourcedValues
            // 				sourced[prop] = value.concat(props[prop])
            // 			} else {
            // 				sourced[prop] = props[prop]
            // 			}
            // 		})
            // 		return graph.set(id, sourced)
            // 	} else {
            // 		return graph.set(id, { [ID]: id, [TYPE]: type, ...props })
            // 	}
            // }, this.state.graph)
            // this.setState({ graph, assertions })
        }
    }], [{
        key: "createId",
        value: function createId() {
            return _niceware2.default.generatePassphrase(4).join("-");
        }
    }]);
    return Underground;
}(_react2.default.Component);

exports.default = Underground;

Underground.key = "http://underlay.mit.edu";

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

/******/ });
//# sourceMappingURL=bundle.js.map